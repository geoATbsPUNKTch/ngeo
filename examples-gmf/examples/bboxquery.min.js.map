{"version":3,"sources":["webpack:///./src/goog.asserts.prod.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/interaction/Measure.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./src/filters.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/utils.js","webpack:///./src/rule/Rule.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./node_modules/openlayers/src/ol/format/JSONFeature.js","webpack:///./node_modules/openlayers/src/ol/format/GeoJSON.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/query/Querent.js","webpack:///./src/misc/Time.js","webpack:///./src/Attribute.js","webpack:///./src/datasource/OGC.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/download/service.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/query/MapQuerent.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Geometry.js","webpack:///./src/rule/Select.js","webpack:///./src/rule/Text.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./node_modules/openlayers/src/ol/format/WMSCapabilities.js","webpack:///./src/datasource/DataSourcesHelper.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./examples/bboxquery.js","webpack:///./src/query/module.js","webpack:///./src/query/Service.js","webpack:///./src/query/bboxQueryComponent.js"],"names":["exports","condition","opt_message","var_args","value","type","__webpack_require__","d","__webpack_exports__","DEFAULT_WMS_VERSION","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","this","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","prototype","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","assign","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","join","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","detail","arguments","length","_Event2","default","_ol2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","i","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_ngeo","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","name","_createClass","get","set","_ngeo2","module","_Collection2","featureUidToGroupIndex_","groups_","source_","_Vector4","useSpatialIndex","layer_","_Vector2","source","style","styleFunction_","bind","updateWhileAnimating","updateWhileInteracting","addFeature","feature","groupIndex","_asserts2","assert","featureUid","getUid","toString","features","removeFeature","clear","group","_obj2","isEmpty","getLayer","getFeatureOverlay","push","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","map","setMap","setStyle","createFunction","angular","service","requires","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","event","_CustomEvent2","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","layers","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","getSource","refresh","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","view","getView","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","evt","target","_View2","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","manager","index","manager_","features_","index_","setFeatures","unlisten","handleFeatureAdd_","handleFeatureRemove_","$scope","$element","$attrs","mapExpr","recenter","attr","getSize","fit","zoom","setZoom","on","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","controller","ScaleselectorController_","scalesExpr","scales","goog","zoomLevels","keys","newLength","Number","sort","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","e","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","setCoordinates","__WEBPACK_IMPORTED_MODULE_0__index_js__","appendPoint","point","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","slice","clone","multiPoint","setFlatCoordinates","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","ii","j","stride","squaredDistance","getCoordinates","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_POINT","intersectsExtent","setLayout","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XY","setFlatCoordinatesInternal","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","ends_","maxDelta_","maxDeltaRevision_","appendLineString","lineString","multiLineString","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","MULTI_LINE_STRING","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","jj","endss","polygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","__WEBPACK_IMPORTED_MODULE_6__obj_js__","GeometryCollection","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","geometries","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","geometry","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","proj4","projCodes","defs","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","phy0","lat0","lambda0","long0","sinPhy0","sin","semiMajorAxis","a","flattening","rf","e2","pow","R","k0","alpha","cos","b0","asin","k1","log","tan","PI","k2","k3","K","p","Sa1","Sa2","S","b","atan","exp","I","rotI","rotB","y0","x0","Y","X","lambda","phy","prevPhy","iteration","abs","names","DrawEventType","Draw","Pointer","handleDownEvent","handleDownEvent_","handleEvent","handleUpEvent","handleUpEvent_","shouldHandle_","downPx_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","POLYGON","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","CIRCLE","opt_geometry","circle","Circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","POINT","Point","LINE_STRING","LineString","Polygon","concat","geometryFunction_","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","geometryName_","geometryName","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","styles","Style","createDefaultEditing","getGeometry","pass","MapBrowserEventType","POINTERDRAG","addToDrawing_","POINTERDOWN","POINTERMOVE","handlePointerMove_","DBLCLICK","pixel","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","dx","dy","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","getPixelFromCoordinate","Feature","updateSketchFeatures_","setGeometryName","setGeometry","Event","last","ring","getLinearRing","done","pop","removeLastPoint","splice","sketchFeature","extend","shouldStopEvent","sketchFeatures","overlaySource","addFeatures","getMap","active","getActive","createRegularPolygon","opt_sides","opt_angle","radius","createBox","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","node","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadius","getRadiusSquared_","getCenter","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","setCenter","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","ngeo","interaction","MeasureBaseOptions","_Interaction2","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","fill","_Fill2","color","stroke","_Stroke2","width","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","_sphere2","_EPSG2","RADIUS","getFormattedArea","format","geodesicArea","getFormattedCircleArea","getFormattedLength","c1","c2","haversineDistance","getFormattedPoint","opt_template","dragging","helpMsg","_dom2","removeChildren","setPosition","getDrawInteraction","prevMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","classList","add","setOffset","createHelpTooltip_","removeHelpTooltip_","_Overlay2","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","setActive","callback","getTooltipElement","_proj4","epsg21781def","_proj2","setExtent","_proj6","setProj4","Proj","projections","_somerc2","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","us-ft","ignoredChar","match","testkey","lkey","toLowerCase","replace","projString","defData","paramName","paramVal","paramOutname","self","paramObj","split","v","filter","reduce","datum","lat_0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","lon_1","long1","lon_2","long2","lonc","longc","x_0","y_0","k_0","k","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","legalAxis","indexOf","parser","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","text","Error","level","place","root","stack","currentObject","mapit","isArray","unshift","thing","out","newObj","sExpr","shift","convert","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","charAt","apply","EPSG","ESRI","IAU2000","console","WGS84","GOOGLE","lib_defs","codeWords","parseCode","some","destination","property","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","tsfnz","phi","com","phi2z","ts","dphi","eccnth","identity","pt","projs","es","lon","lat","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","error","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","array","checkSanity","checkCoord","num","TypeError","core_wgs84","transformer","from","to","coords","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","accuracy","utm","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","LetterDesignator","getLetterDesignator","LLtoUTM","seasting","snorthing","setParm","get100kSetForZone","setColumn","setRow","column","row","colOrigin","charCodeAt","rowOrigin","rowInt","rollover","colInt","String","fromCharCode","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","mgrsString","testChar","hunK","sb","substring","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C06","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","ds","f","g","temp","h","sinh","r","hypot","max","min","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","sterea","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","krovak","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","APA","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","sinth","costh","gsq","msq","xx","yy","xys","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","doc","homepage","license","main","repository","scripts","build","build:tmerc","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeature","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","readFeatures","readFeaturesFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","writeFeature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","writeGeometryNode","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","_ol_style_Text_","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","Scalify","$filter","numberFilter","filterFn","$locale","formats","NUMBER_FORMATS","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","nb_decimal","factor","str_number","groups","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","_math2","modulo","dms","_string2","xdms","ydms","trustHtmlFilter","$sce","trustAsHtml","read","readFromDocument","readFromNode","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","scope_","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","multiGeom","_MultiPoint2","_MultiLineString2","_MultiPolygon2","navigator","userAgent","hex","rgb","colorZeroPadding","queryString","queryData","pairs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","pair","indexOfEquals","decodeURIComponent","err","return","queryItem","encodeURIComponent","active_","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","operators_","operators","propertyName_","propertyName","listenerKeys","getExpression","setExpression","Observable","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","XLink","readHref","getAttributeNS","unitPrefixFormat","numberFormat","_Measure2","_DrawAzimut2","geom","_GeometryCollection2","line","_LineString2","getFormattedAzimutRadius","getLastCoordinate","formatLength","formatAzimut","getFormattedAzimut","getAzimut","JSONFeature","format_Feature","getObject","object","JSON","FormatType","readFeatureFromObject","getReadOptions","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","format_JSONFeature","GeoJSON","featureProjection","defaultFeatureProjection","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","GEOMETRY_WRITERS","rightHanded","geometryReader","geometryWriter","geoJSONFeature","geometry_name","setId","properties","setProperties","geoJSONFeatures","adaptOptions","getId","getProperties","getGeometryName","objects","_Pointer2","started_","sketchLayer_","_Draw2","finishDrawing_","mapBrowserEvent","_Feature2","_Point2","sketchPointGeom","_Circle2","getLength","_functions2","FALSE","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureType","featureNS_","featureNS","gmlFormat_","gmlFormat","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","schemaLocation_","schemaLocation","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","context","__WEBPACK_IMPORTED_MODULE_9__obj_js__","objectStack","FEATURE_COLLECTION_PARSERS","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","GMLNS","makeArrayPusher","readFeaturesInternal","pushParseAndPop","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","http://www.opengis.net/gml","boundedBy","makeObjectPropertySetter","readGeometryElement","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","getAttribute","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","parseNode","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","makeChildAppender","writeFeature_","gmlVersion","child","createElementNS","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","writeFeatureElement","writeOgcFidFilter_","fid","setAttribute","getTypeName_","featurePrefix","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","values","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","pushSerializeAndPop","hasZ","srsName","TRANSACTION_SERIALIZERS_","makeSimpleNodeFactory","writeProperty_","writeGeometryElement","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","time","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","featureTypes","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","count","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","firstElementChild","nextElementSibling","childNodes","__WEBPACK_IMPORTED_MODULE_10__proj_js__","__WEBPACK_IMPORTED_MODULE_8__xml_js__","GML2","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","readFlatCoordinates_","containerSrs","__WEBPACK_IMPORTED_MODULE_7__proj_js__","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","flatLinearRing","RING_PARSERS","outerBoundaryIsParser_","GEOMETRY_FLAT_COORDINATES_PARSERS_","makeReplacer","FLAT_LINEAR_RINGS_PARSERS_","innerBoundaryIs","outerBoundaryIs","GEOMETRY_PARSERS_","readPoint","readMultiPoint","readLineString","readMultiLineString","LinearRing","readLinearRing","readPolygon","readMultiPolygon","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","nodeName","multiSurface","surface","multiCurve","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","dataProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","namespaceURI","writeCoordinates_","segments","writeCurveSegments_","parts","getCoords_","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","pointMember","lineStringMember","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","polygonMember","lowerCorner","upperCorner","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","featureMember","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","localName","candidate","parsersNS","parsers","readFeatureElement","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","flatLinearRings","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","pointMembers","lineStringMembers","polygonMembers","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","__WEBPACK_IMPORTED_MODULE_26__xml_js__","KML","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","zIndex","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textStyle","textOffset","imageSize","getImageSize","imageScale","foundText","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","hexColor","re","readURI_","baseURI","window","location","href","URL","readVec2_","origin","xunits","yunits","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","imageStyle","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","strokeStyle","PolyStyleParser_","POLY_STYLE_PARSERS_","fillStyle","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","multiGeometry","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","homogeneous","__WEBPACK_IMPORTED_MODULE_2__array_js__","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","readStyle_","STYLE_PARSERS_","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","data","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","makeStructureNS","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeCoordinatesTextNode_","dimension","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","DATA_NODE_FACTORY_","writeIcon_","icon","orderedKeys","ICON_SEQUENCE_","makeSequence","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","getColor","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","getWidth","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","factory","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","getStyleFunction","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","getStride","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","kml","xmlnsUri","xmlSchemaInstanceUri","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","_ol_format_WMTSCapabilities_","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","$http","$q","ngeoRuleHelper","ngeoWMSTime","http_","q_","ngeoRuleHelper_","ngeoWMSTime_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","promises","cancelStillRunningRequests_","queryableDataSources","dataSources","getQueryableDataSources","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","all","then","handleCombinedQueryResult_","isDataSourceQueryable_","supportsWFS","supportsAttributes","ogcLayerNames","getOGCLayerNames","_uri2","assertString","wfsUrl","TYPENAME","response","_WFSDescribeFeatureType2","layerCapabilities","layerName","found","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","layerCapability","wmsFindLayerCapability","baseUrl","opt_cache","cache","promise","_WMSCapabilities2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_WMTSCapabilities2","combinedHash","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","dataSourceIdStr","dataSourceId","limit","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","tooManyFeatures","totalFeatureCount","readAndTypeFeatures_","setUniqueIds_","getSetOlFormatTypes_","wfsFormat","wmsFormat","opt_types","types","setLayers","combinedDataSources","wfsCount","tolerancePx","tolerance","_extent2","createOrUpdateFromCoordinate","_WFS2","xmlSerializer","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_loop","getFeatureCommonOptions","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","wfsFeatureNS","wfsFeaturePrefix","wfsOutputFormat","activeDimensions","getInRangeOGCLayerNames","createFilter","incTime","filterRules","timeRangeValue","getFeatureDefer","defer","handleQueryResult_","countPromise","getCountOptions","featureCountXml","featureCountRequest","canceler","registerCanceler_","post","timeout","resolve","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","FEATURE_COUNT","projCode","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","LAYERS","INFO_FORMAT","activeDimensionsSet","filterString","filtrableLayerName","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmsInfoFormat","wmsUrl","getFiltrableOGCLayerName","createFilterString","timeProperty","formatWMSTimeParam","filterParamValue","filterParamValues","wmsSource","_ImageWMS2","wmsGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","combinableForWFS","combined","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","combinableDataSource","combinableWithDataSourceForWFS","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","combinableForWMS","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","combinableWithDataSourceForWMS","queryable","isAnyOGCLayerInRange","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","CombinedDataSources","_RuleHelper2","_WMSTime2","getOptions","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getTime","localDate","attribute","AttributeType","GEOMETRY","geomType","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","FilterCondition","AND","filterRules_","filtrable_","filtrable","copyable_","copyable","dimensions_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","ogcType_","ogcType","Type","WMS","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeUpperValue_","timeUpperValue","wfsFeatureNS_","WFSFeatureNS","wfsFeaturePrefix_","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","WFSOutputFormat","GML3","wfsUrl_","wmsInfoFormat_","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","ogcLayer","_GML4","_GML2","wfsFormat_","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_inherits","_get","updateGeometryNameFromAttributes_","haveTheSameActiveDimensions","queryableOnly","layerNames","maxRes","minRes","share","myActive","itsActive","range","lower","upper","config","guessServiceTypeByUrl","WMTS","QGISSERVER","geoserver","mapserver","qgisserver","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","$injector","$filter_","decimals_","has","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","getLineStringStyle_","getPointStyle_","RECTANGLE","getPolygonStyle_","TEXT","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","optNumber","attrib","getNumber","opacity","getOpacityProperty","fillColor","azimut","FeatureProperties","AZIMUT","getRadiusLine","getAngleProperty","createEditingStyles","white","blue","opt_incGeomFunc","incGeomFunc","_RegularShape2","innerMultiCoordinates","multiCoordinates","supported","includes","haloSize","getFilteredFeatureValues","ANGLE","getColorProperty","COLOR","_color2","fromString","NAME","OPACITY","SHOW_MEASURE","assertBoolean","SHOW_LABEL","SIZE","STROKE","export","formatType","GPX","exportGPX","exportKML","_GPX2","export_","_KML2","fileName","opt_mimeType","mimeType","clones","writeOptions","_Text2","_MeasureAzimut2","args","_toConsumableArray","IS_TEXT","IS_CIRCLE","IS_RECTANGLE","panMapToFeature","opt_panDuration","panDuration","assertArray","calculateExtent","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","_service2","factory_","content","opt_fileType","fileType","_utils2","isSafari","blob","Blob","saveAs","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","featureReader","gpx","_Time2","formatWMSTimeValue_","opt_toUTC","utc","toISOString","wmsTimeProperty","times","sources","total","pending","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","queryCountFirst_","queryCountFirst","tolerancePx_","dataSourceNames_","issue","handleResult_","queried","tooManyResults","idStr","getDataSource","label","querentResultItem","typeSeparatedFeatures","filteredProperties","alias","unset","featuresByType","_Querent2","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","featureIdentifier_","layerIdentifier_","readFeatures_","toRemove","layerFeatures","gmlFeatures","$q_","$http_","GROUP_KEY","REFRESH_PARAM","createBasicWMSLayer","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","olServerType","serverType","_Image2","createBasicWMSLayerFromDataSource","imageType","setVisible","createWMTSLayerFromCapabilitites","capabilitiesURL","opt_dimensions","_Tile2","preload","_WMTS2","optionsFromCapabilities","setSource","l","find","elt","reject","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","createBasicGroup","opt_layers","_Group2","getGroupFromMap","groupName","getLayerGroup","existingGroup","addLayer","getFlatLayers","getFlatLayers_","getLayerByName","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","LAYER","isLayerVisible","getVisible","currentResolution","getMinResolution","getMaxResolution","refreshWMSLayer","random","updateWMSLayerState","TIME","getQuerySourceIds","gettextCatalog","ngeoFeatureHelper","gettextCatalog_","ngeoFeatureHelper_","opt_isCustom","rules","createRuleFromAttribute","rule","getString","DATE","DATETIME","_Date2","_Rule2","_Geometry2","NUMBER","SELECT","_Select2","choices","optionsList","createRule","selectOptions","sourceRule","destRule","serializeRule","featureProperties","mainFilter","createFilterFromRule_","_filter2","OR","NOT","timeFilter","createTimeFilterFromDataSource_","filterNode","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","momentEnd","startValue","_FeatureHelper2","_Rule","feature_","format_","_GeoJSON2","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","Geometry","handleGeometryChange_","choices_","_XML2","_xml2","readElement_","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","complexType","complexContent","extension","sequence","WMSCapabilities","__WEBPACK_IMPORTED_MODULE_2__format_XML_js__","wmsCapabilityObject","readAttribution_","ATTRIBUTION_PARSERS_","readBoundingBox_","__WEBPACK_IMPORTED_MODULE_3__format_XSD_js__","readEXGeographicBoundingBox_","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","readCapability_","CAPABILITY_PARSERS_","readService_","SERVICE_PARSERS_","readContactInformation_","CONTACT_INFORMATION_PARSERS_","readContactPersonPrimary_","CONTACT_PERSON_PARSERS_","readContactAddress_","CONTACT_ADDRESS_PARSERS_","readException_","EXCEPTION_PARSERS_","readCapabilityLayer_","parentLayerObject","layerObject","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","readDimension_","unitSymbol","multipleValues","nearestValue","readFormatOnlineresource_","FORMAT_ONLINERESOURCE_PARSERS_","readRequest_","REQUEST_PARSERS_","readDCPType_","DCPTYPE_PARSERS_","readHTTP_","readOperationType_","OPERATIONTYPE_PARSERS_","readSizedFormatOnlineresource_","formatOnlineresource","readAuthorityURL_","authorityObject","readMetadataURL_","metadataObject","readKeywordList_","KEYWORDLIST_PARSERS_","Service","Capability","Request","Exception","Name","KeywordList","OnlineResource","__WEBPACK_IMPORTED_MODULE_1__format_XLink_js__","ContactInformation","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","ContactPosition","ContactAddress","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","StateOrProvince","PostCode","CRS","EX_GeographicBoundingBox","BoundingBox","Attribution","AuthorityURL","MetadataURL","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","LogoURL","GetCapabilities","GetMap","GetFeatureInfo","DCPType","StyleSheetURL","StyleURL","Keyword","collection_","cache_","handleDataSourcesRemove_","wfsDescribeFeatureTypeDefer","wfsDescribeFeatureType","ogcLayerName","_WFSAttribute2","setAttributes","_Attribute","complexTypeElements","readFromComplexTypeElement_","required","_Attribute2","setGeometryType","_MapQuerent2","ngeoMapQuerent","elem","clickEventKey_","pointerMoveEventKey_","handleMapClick_","getEventPixel","originalEvent","hit","forEachLayerAtPixel","sourceids","getTargetElement","cursor","cursorHover","app","_module2","_btnComponent2","_module4","queryresultComponent","controllerAs","component","QueryresultController","MainController","queryActive","_OGC2","busStopLayer","informationLayer","_OSM2","_Service2","_mapQueryComponent2","_bboxQueryComponent2","ngeoQueryOptions","ngeoLayerHelper","sourceIdsProperty_","sourceIdsProperty","DEFAULT_SOURCE_IDS_PROPERTY_","featurePrefix_","ngeoLayerHelper_","sources_","addSource","sourceId","infoFormat","QueryInfoFormatType","sourceLabel","resultSource","identifierAttributeField","cacheItem","addSources","clearResult_","removeAllSources","issueIdentifyFeaturesRequests_","issueGetFeatureRequests_","getQueryableSources_","doGetFeatureInfoRequests_","doGetFeatureRequestsWithCoordinate_","updatePendingState_","doGetFeatureRequests_","wfsOnly","wmsItemsByUrl","wfsItemsByUrl","ids","getLayerSourceIds_","validateLayerParams","layerSource","layersFromParams","wfsQuery","urlWfs","pushSourceIfUnique_","isUnique","items","lyrStr","getLayersForItems_","getDimensionsParams_","getQueryBbox_","getLayersForItem_","getFeatures","_this3","meta","_has2","DEVICE_PIXEL_RATIO","pendingSources","getLimit","_DragBox2","_condition2","platformModifierKeyOnly"],"mappings":"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","file":"bboxquery.min.js","sourcesContent":["const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  var multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  var n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  var point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var layout = this.layout;\n  var stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  var points = [];\n  var i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  var midpoints = [];\n  var flatCoordinates = this.flatCoordinates;\n  var offset = 0;\n  var ends = this.ends_;\n  var stride = this.stride;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var midpoint = _ol_geom_flat_interpolate_.lineString(\n        flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var ends = [];\n  var i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    var lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  var multiPolygon = new MultiPolygon(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  var interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nvar GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  var clonedGeometries = [];\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  var geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometries = [];\n    var geometries = this.geometries_;\n    var simplified = false;\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      var geometry = geometries[i];\n      var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      var simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n      GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 7 9 10","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  var projCodes = Object.keys(proj4.defs);\n  var len = projCodes.length;\n  var i, j;\n  for (i = 0; i < len; ++i) {\n    var code = projCodes[i];\n    if (!get(code)) {\n      var def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    var code1 = projCodes[i];\n    var proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      var code2 = projCodes[j];\n      var proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          var transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 73\n// module chunks = 0 1 3 4 5 12 13 17 18","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 74\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport _ol_interaction_Pointer_ from '../interaction/Pointer.js';\nimport _ol_interaction_Property_ from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport _ol_style_Style_ from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nvar Draw = function(options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  var geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        var squaredLength = _ol_coordinate_.squaredDistance(\n            coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      var Constructor;\n      var mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        var geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction()\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n      BaseObject.getChangeEventType(_ol_interaction_Property_.ACTIVE),\n      this.updateState_, this);\n\n};\n\ninherits(Draw, _ol_interaction_Pointer_);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  var styles = _ol_style_Style_.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  _ol_interaction_Pointer_.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  var pass = true;\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (event.type === MapBrowserEventType.POINTERMOVE) {\n    pass = this.handlePointerMove_(event);\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n  return _ol_interaction_Pointer_.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  var pass = true;\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    var downPx = this.downPx_;\n    var clickPx = event.pixel;\n    var dx = downPx[0] - clickPx[0];\n    var dy = downPx[1] - clickPx[1];\n    var squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  var at = false;\n  if (this.sketchFeature_) {\n    var potentiallyDone = false;\n    var potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      var map = event.map;\n      for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        var finishCoordinate = potentiallyFinishCoordinates[i];\n        var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        var pixel = event.pixel;\n        var dx = pixel[0] - finishPixel[0];\n        var dy = pixel[1] - finishPixel[1];\n        var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  var coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  var start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n    if (this.mode_ === Draw.Mode_.CIRCLE) {\n      this.sketchLineCoords_ = this.sketchCoords_;\n    }\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n  }\n  var geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    var sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  var sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    var ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  var coordinate = event.coordinate;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var done;\n  var coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  var coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  var sketchFeature = this.abortDrawing_();\n  var coordinates = this.sketchCoords_;\n  var geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  var sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  var geometry = feature.getGeometry();\n  var lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  var sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  var overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  var map = this.getMap();\n  var active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      var center = coordinates[0];\n      var end = coordinates[1];\n      var radius = Math.sqrt(\n          _ol_coordinate_.squaredDistance(center, end));\n      var geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      var angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nvar XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 79\n// module chunks = 0 1 2 5 10","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  var radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  var circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  var squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    var i;\n    if (squaredDistance === 0) {\n      for (i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      var delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  var flatCoordinates = this.flatCoordinates;\n  var dx = x - flatCoordinates[0];\n  var dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  var circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    var center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  var stride = this.stride;\n  var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  var flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  var i;\n  for (i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = _ol_geom_flat_deflate_.coordinate(\n        flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    var i, ii;\n    for (i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 80\n// module chunks = 0 1 2 6 7 8 9 11 14","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport googAsserts from 'goog/asserts';\nimport olDom from 'ol/dom';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olOverlay from 'ol/Overlay';\nimport olSphere from 'ol/sphere';\nimport olEvents from 'ol/events';\nimport olInteractionInteraction from 'ol/interaction/Interaction';\nimport olLayerVector from 'ol/layer/Vector';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nngeo.interaction.MeasureBaseOptions;\n\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = ol.proj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = ol.proj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  googAsserts.assert(this.changeEventKey_ !== null);\n  googAsserts.assert(this.postcomposeEventKey_ !== null);\n  olEvents.unlistenByKey(this.changeEventKey_);\n  olEvents.unlistenByKey(this.postcomposeEventKey_);\n  this.changeEventKey_ = null;\n  this.postcomposeEventKey_ = null;\n};\n\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport olProj from 'ol/proj';\nimport olProjProj4 from 'ol/proj/proj4';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc';\n\nif (typeof olProjProj4.get() == 'function') {\n  const epsg21781def = [\n    '+proj=somerc',\n    '+lat_0=46.95240555555556',\n    '+lon_0=7.439583333333333',\n    '+k_0=1',\n    '+x_0=600000',\n    '+y_0=200000',\n    '+ellps=bessel',\n    '+towgs84=674.374,15.056,405.346,0,0,0,0',\n    '+units=m',\n    '+no_defs'\n  ].join(' ');\n  const epsg21781extent = [420000, 30000, 900000, 350000];\n\n  olProjProj4.get().defs('EPSG:21781', epsg21781def);\n  olProj.get('EPSG:21781').setExtent(epsg21781extent);\n}\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport olProj from 'ol/proj';\nimport olProjProj4 from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nif (typeof olProjProj4.get() !== 'function' && typeof proj4 === 'function') {\n  olProj.setProj4(proj4);\n}\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 93\n// module chunks = 0 1 3 4 5 12 13 17 18","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nvar XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n    doc, opt_options) {\n  var features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n    doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  var features = [];\n  var n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  var node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  var node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  var node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 97\n// module chunks = 0 1 2 10","/**\n * @module ol/style/Text\n */\nimport _ol_style_Fill_ from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Text_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new _ol_style_Fill_({color: _ol_style_Text_.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\n_ol_style_Text_.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\n_ol_style_Text_.prototype.clone = function() {\n  return new _ol_style_Text_({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\n_ol_style_Text_.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\n_ol_style_Text_.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\n_ol_style_Text_.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\n_ol_style_Text_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\n_ol_style_Text_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\n_ol_style_Text_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\n_ol_style_Text_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\n_ol_style_Text_.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\n_ol_style_Text_.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\n_ol_style_Text_.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\n_ol_style_Text_.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\n_ol_style_Text_.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\n_ol_style_Text_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\n_ol_style_Text_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\n_ol_style_Text_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\n_ol_style_Text_.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\n_ol_style_Text_.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default _ol_style_Text_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 98\n// module chunks = 0 1 2 8 10 19 23","/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olMath from 'ol/math';\nimport olString from 'ol/string';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n *//* @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n *//* @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nvar XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 105\n// module chunks = 0 1 5 24","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon';\nimport olGeomPoint from 'ol/geom/Point';\nimport olGeomPolygon from 'ol/geom/Polygon';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    if (value) {\n      queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n    } else {\n      queryItem.push(encodeURIComponent(key));\n    }\n  }\n  return queryItem.join('&');\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.rule.Rule\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, chaning an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = goog.asserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    ol.Observable.unByKey(this.listenerKeys);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: '>=',\n  DURING: '..',\n  ENDS: '<=',\n  EQUALS: '='\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Rule.js","/**\n * @module ol/format/XLink\n */\nvar XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 123\n// module chunks = 0 1 5","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection';\nimport olGeomLineString from 'ol/geom/LineString';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nol.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), ol.proj.Projection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nvar JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/JSONFeature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nvar GeoJSON = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection(\n      options.defaultDataProjection ?\n        options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nvar GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  var geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ transformWithOptions(\n        geometryReader(object), false, opt_options)\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object.geometries.map(\n      /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n      function(geometry) {\n        return readGeometry(geometry, opt_options);\n      });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = _ol_obj_.assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  var geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  var geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  var feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  var features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    var geoJSONFeatures = geoJSONFeatureCollection.features;\n    var i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n          opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  var crs = geoJSONObject.crs;\n  var projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  var object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  var id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  var properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!_ol_obj_.isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var objects = [];\n  var i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GeoJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olEvents from 'ol/events';\nimport olFunctions from 'ol/functions';\nimport olGeomCircle from 'ol/geom/Circle';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomPoint from 'ol/geom/Point';\nimport olInteractionDraw from 'ol/interaction/Draw';\nimport olInteractionPointer from 'ol/interaction/Pointer';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceVector from 'ol/source/Vector';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nol.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nvar WFS = function(opt_options) {\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  var context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  _ol_obj_.assign(context, this.getReadOptions(node,\n      opt_options ? opt_options : {}));\n  var objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n      'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  var features = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n        GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  var result = {};\n  var value = XSD.readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n      /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n      WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n        XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n        XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n        XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n        WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n        WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n      /** @type {ol.WFSTransactionResponse} */({}),\n      WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  var filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  var child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  var prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = WFS.getTypeName_(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n      if (value !== undefined) {\n        var name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  var name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  var context = objectStack[objectStack.length - 1];\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n            pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n            pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n        featureNS);\n  }\n  var item = /** @type {ol.XmlNodeStackItem} */ (_ol_obj_.assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n      WFS.QUERY_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n      objectStack);\n  var filter = context['filter'];\n  if (filter) {\n    var child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n      [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  var valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  var timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  var begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  var end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var item = {node: node};\n  var conditions = filter.conditions;\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n        WFS.GETFEATURE_SERIALIZERS_,\n        _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n        [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var item = {node: node};\n  var condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  var lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  var upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  var property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  var timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  var timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  var child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var item = /** @type {ol.XmlNodeStackItem} */ (_ol_obj_.assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n      objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  var node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  var filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\n      var bbox = _ol_format_filter_.bbox(\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n      11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n    options) {\n  var objectStack = [];\n  var node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  var version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  var gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  var baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  var obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  var schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation', schemaLocation);\n  var featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    _ol_obj_.assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n        WFS.TRANSACTION_SERIALIZERS_,\n        _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n        objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    _ol_obj_.assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n        WFS.TRANSACTION_SERIALIZERS_,\n        _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n        objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        var objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 140\n// module chunks = 0 1","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nvar GML2 = function(opt_options) {\n  var options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n      'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  var s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  var context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  var containerSrs = context['srsName'];\n  var axisOrientation = 'enu';\n  if (containerSrs) {\n    var proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  var coordsGroups = s.trim().split(/\\s+/);\n  var x, y, z;\n  var flatCoordinates = [];\n  for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n    var coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  var flatCoordinates = _ol_xml_.pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n        GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n        GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var multiSurface = context['multiSurface'];\n  var surface = context['surface'];\n  var multiCurve = context['multiCurve'];\n  var nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  var fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featureNS = context['featureNS'];\n  var geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  var properties = feature.getProperties();\n  var keys = [], values = [];\n  for (var key in properties) {\n    var value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), context.serializers,\n      _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  var context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  var value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), GML2.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    var segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n        geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  var coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  // only 2d for simple features profile\n  var points = value.getCoordinates();\n  var len = points.length;\n  var parts = new Array(len);\n  var point;\n  for (var i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI,\n      'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    var rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        GML2.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    var patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  var linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  var axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    var z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  var point = geometry.getCoordinates();\n  var coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n    objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      GML2.POINTMEMBER_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var keys = ['lowerCorner', 'upperCorner'];\n  var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n        GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n        GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 146\n// module chunks = 0 1","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nvar GMLBase = function(opt_options) {\n  var options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  var localName = node.localName;\n  var features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    var context = objectStack[0];\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    var i, ii, prefix = 'p', defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        var child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          var ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            var key = '';\n            var count = 0;\n            var uri = child.namespaceURI;\n            for (var candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      var ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    var parsersNS = {};\n    var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (var p in featureNS) {\n      var parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        var featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  var context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  var geometry = _ol_xml_.pushParseAndPop(null,\n      this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  var n;\n  var fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  var values = {}, geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      var value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  var feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  var flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  var coordinates = _ol_xml_.pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = _ol_xml_.pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    var multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  var polygons = _ol_xml_.pushParseAndPop([],\n      this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    var multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n      objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  var flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  var ring = _ol_xml_.pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n      objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  var flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  var flatLinearRings = _ol_xml_.pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var polygon = new Polygon(null);\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    var i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n        GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n      objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  var geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  var options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    _ol_obj_.assign(options, this.getReadOptions(node, opt_options));\n  }\n  var features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 147\n// module chunks = 0 1","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_style_Fill_ from '../style/Fill.js';\nimport _ol_style_Icon_ from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport _ol_style_Stroke_ from '../style/Stroke.js';\nimport _ol_style_Style_ from '../style/Style.js';\nimport _ol_style_Text_ from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nvar KML = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new _ol_style_Fill_({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new _ol_style_Icon_({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new _ol_style_Stroke_({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new _ol_style_Stroke_({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new _ol_style_Text_({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new _ol_style_Style_({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  var textStyle = null;\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n  if (foundStyle.getImage()) {\n    var imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      var imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    var foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  var nameStyle = new _ol_style_Style_({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n    defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      var drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      var nameStyle;\n      var name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n              name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        var foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n            sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n              name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n            name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n        sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    var hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  var re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  var m;\n  while ((m = re.exec(s))) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n      KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  var src;\n  var href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  var offset;\n  var x = /** @type {number|undefined} */\n      (IconObject['x']);\n  var y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w = /** @type {number|undefined} */\n      (IconObject['w']);\n  var h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    var imageStyle = new _ol_style_Icon_({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new _ol_style_Text_({\n    fill: new _ol_style_Fill_({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new _ol_style_Stroke_({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  var object = _ol_xml_.pushParseAndPop(\n      {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new _ol_style_Fill_({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  var outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n      KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  var gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  var lineStrings = _ol_xml_.pushParseAndPop([],\n      KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  var multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  var gxTrackObject = _ol_xml_.pushParseAndPop(\n      /** @type {ol.KMLGxTrackObject_} */ ({\n        flatCoordinates: [],\n        whens: []\n      }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var whens = gxTrackObject.whens;\n  var i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  var lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  var iconObject = _ol_xml_.pushParseAndPop(\n      {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n      KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n        [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  var geometries = _ol_xml_.pushParseAndPop([],\n      KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    var layout;\n    var flatCoordinates;\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop({},\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  var properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n      KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n      objectStack);\n  var flatLinearRings = _ol_xml_.pushParseAndPop([null],\n      KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var polygon = new Polygon(null);\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    var i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n        GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  var styleObject = _ol_xml_.pushParseAndPop(\n      {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  var fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  var imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  var textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  var strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  var outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new _ol_style_Style_({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n    geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  var pairObject = _ol_xml_.pushParseAndPop(\n      {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  var key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    var styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    var Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  var styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (name !== null) {\n    var data = XSD.readString(node);\n    var featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  var gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  var whens = gxTrackObject.whens;\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Data': KML.DataParser_,\n      'SchemaData': KML.SchemaDataParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LatLonAltBox': KML.LatLonAltBoxParser_,\n      'Lod': KML.LodParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'innerBoundaryIs': KML.innerBoundaryIsParser_,\n      'outerBoundaryIs': KML.outerBoundaryIsParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'when': KML.whenParser_\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'coord': KML.gxCoordParser_\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n          'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n      'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n      'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n      'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n      'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n      'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n      'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': KML.ExtendedDataParser_,\n      'Region': KML.RegionParser_,\n      'Link': KML.LinkParser_,\n      'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n      'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': KML.ExtendedDataParser_,\n      'Region': KML.RegionParser_,\n      'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n          KML.readMultiGeometry_, 'geometry'),\n      'LineString': _ol_xml_.makeObjectPropertySetter(\n          KML.readLineString_, 'geometry'),\n      'LinearRing': _ol_xml_.makeObjectPropertySetter(\n          KML.readLinearRing_, 'geometry'),\n      'Point': _ol_xml_.makeObjectPropertySetter(\n          KML.readPoint_, 'geometry'),\n      'Polygon': _ol_xml_.makeObjectPropertySetter(\n          KML.readPolygon_, 'geometry'),\n      'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n      'StyleMap': KML.PlacemarkStyleMapParser_,\n      'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n      'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n              KML.readGxMultiTrack_, 'geometry'),\n          'Track': _ol_xml_.makeObjectPropertySetter(\n              KML.readGxTrack_, 'geometry')\n        }\n    ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n      'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n      'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'SimpleData': KML.SimpleDataParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'IconStyle': KML.IconStyleParser_,\n      'LabelStyle': KML.LabelStyleParser_,\n      'LineStyle': KML.LineStyleParser_,\n      'PolyStyle': KML.PolyStyleParser_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Pair': KML.PairDataParser_\n    });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  var parsersNS = _ol_xml_.makeStructureNS(\n      KML.NAMESPACE_URIS_, {\n        'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n  /** @type {Array.<ol.Feature>} */\n  var features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  var object = _ol_xml_.pushParseAndPop({'geometry': null},\n      KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  var feature = new Feature();\n  var id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  var geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    var style = object['Style'];\n    var styleUrl = object['styleUrl'];\n    var styleFunction = KML.createFeatureStyleFunction_(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  var id = node.getAttribute('id');\n  if (id !== null) {\n    var style = KML.readStyle_(node, objectStack);\n    if (style) {\n      var styleUri;\n      var baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        var url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  var id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  var styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var styleUri;\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  var feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  var features;\n  var localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    var feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  var n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      var name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      var name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  var networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  var n, networkLinks = [];\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  var n, networkLinks = [];\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      var obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n          n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  var regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n        /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  var n, regions = [];\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  var n, regions = [];\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      var obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n          n, []);\n      regions.push(obj);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  var rgba = asArray(color);\n  var opacity = (rgba.length == 4) ? rgba[3] : 1;\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  var i;\n  for (i = 0; i < 4; ++i) {\n    var hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n\n  var layout = context['layout'];\n  var stride = context['stride'];\n\n  var dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var d, i;\n  var ii = coordinates.length;\n  var text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n          _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n          _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n      KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n      this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var names = namesAndValues.names, values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n      KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n    var origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  var scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  var scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {node: node};\n  var type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  var geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  var factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n      geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.BOUNDARY_IS_SERIALIZERS_,\n      KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  var filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    var sequence = _ol_xml_.makeSequence(properties, keys);\n    var namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n        KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  var styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction.call(feature, 0);\n    if (styles) {\n      var style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      var textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.POLYGON_SERIALIZERS_,\n      KML.INNER_BOUNDARY_NODE_FACTORY_,\n      linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n      KML.POLYGON_SERIALIZERS_,\n      KML.OUTER_BOUNDARY_NODE_FACTORY_,\n      [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n      KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n      Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  if (imageStyle instanceof _ol_style_Icon_) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'Document', 'Placemark'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n      'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n      'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n      'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'href'\n    ],\n    _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n      'x', 'y', 'w', 'h'\n    ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n    }, _ol_xml_.makeStructureNS(\n        KML.GX_NAMESPACE_URIS_, {\n          'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n          'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n        }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'scale', 'heading', 'Icon', 'hotSpot'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n      'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n      'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'color', 'scale'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n      'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'color', 'width'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n      'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LinearRing': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'LineString': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Point': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n      'GeometryCollection': _ol_xml_.makeChildAppender(\n          KML.writeMultiGeometry_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n      'styleUrl', 'Style'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'ExtendedData': _ol_xml_.makeChildAppender(\n          KML.writeExtendedData_),\n      'MultiGeometry': _ol_xml_.makeChildAppender(\n          KML.writeMultiGeometry_),\n      'LineString': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'LinearRing': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Point': _ol_xml_.makeChildAppender(\n          KML.writePrimitiveGeometry_),\n      'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n      'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n      'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'description': _ol_xml_.makeChildAppender(\n          XSD.writeStringTextNode),\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'phoneNumber': _ol_xml_.makeChildAppender(\n          XSD.writeStringTextNode),\n      'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'visibility': _ol_xml_.makeChildAppender(\n          XSD.writeBooleanTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n      'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'coordinates': _ol_xml_.makeChildAppender(\n          KML.writeCoordinatesTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'outerBoundaryIs': _ol_xml_.makeChildAppender(\n          KML.writeBoundaryIs_),\n      'innerBoundaryIs': _ol_xml_.makeChildAppender(\n          KML.writeBoundaryIs_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, [\n      'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n      'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n      'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n      'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n    });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n      'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n    opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n    opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n        KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  var xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n      KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n      KML.SCHEMA_LOCATION_);\n\n  var /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  var properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  var orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 148\n// module chunks = 0 1 2 10","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nvar OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  var owsObject = _ol_xml_.pushParseAndPop({},\n      OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n      OWS.CONSTRAINT_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  var href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n      OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n      node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  var name = node.getAttribute('name');\n  var value = _ol_xml_.pushParseAndPop({},\n      OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  var object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.OPERATIONS_METADATA_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceIdentification_),\n      'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceProvider_),\n      'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n          OWS.readOperationsMetadata_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n          OWS.readAllowedValues_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n      'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n      'Post': undefined // TODO\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Operation': OWS.readOperation_\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n    OWS.NAMESPACE_URIS_, {\n      'Constraint': _ol_xml_.makeObjectPropertyPusher(\n          OWS.readConstraint_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n        OWS.NAMESPACE_URIS_, {\n          'IndividualName': _ol_xml_.makeObjectPropertySetter(\n              XSD.readString),\n          'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n              OWS.readContactInfo_)\n        });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n        OWS.NAMESPACE_URIS_, {\n          'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n              XSD.readString),\n          'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n        });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n        OWS.NAMESPACE_URIS_, {\n          'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n          'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n          'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n              OWS.readServiceContact_)\n        });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nvar _ol_format_WMTSCapabilities_ = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(_ol_format_WMTSCapabilities_, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\n_ol_format_WMTSCapabilities_.prototype.read;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WMTSCapabilities_.prototype.readFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WMTSCapabilities_.prototype.readFromNode = function(node) {\n  var version = node.getAttribute('version').trim();\n  var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n      _ol_format_WMTSCapabilities_.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\n_ol_format_WMTSCapabilities_.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\n_ol_format_WMTSCapabilities_.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\n_ol_format_WMTSCapabilities_.readStyle_ = function(node, objectStack) {\n  var style = _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  var isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixSetLink_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\n_ol_format_WMTSCapabilities_.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\n_ol_format_WMTSCapabilities_.readResourceUrl_ = function(node, objectStack) {\n  var format = node.getAttribute('format');\n  var template = node.getAttribute('template');\n  var resourceType = node.getAttribute('resourceType');\n  var resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\n_ol_format_WMTSCapabilities_.readWgs84BoundingBox_ = function(node, objectStack) {\n  var coordinates = _ol_xml_.pushParseAndPop([],\n      _ol_format_WMTSCapabilities_.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\n_ol_format_WMTSCapabilities_.readLegendUrl_ = function(node, objectStack) {\n  var legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\n_ol_format_WMTSCapabilities_.readCoordinates_ = function(node, objectStack) {\n  var coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  var x = +coordinates[0];\n  var y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixLimitsList_ = function(node,\n    objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n      _ol_format_WMTSCapabilities_.TMS_LIMITS_LIST_PARSERS_, node,\n      objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\n_ol_format_WMTSCapabilities_.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n      _ol_format_WMTSCapabilities_.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\n_ol_format_WMTSCapabilities_.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\n_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Contents': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readContents_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Layer': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readLayer_),\n      'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrixSet_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Style': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readStyle_),\n      'Format': _ol_xml_.makeObjectPropertyPusher(\n          XSD.readString),\n      'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrixSetLink_),\n      'Dimension': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readDimensions_),\n      'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readResourceUrl_)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Title': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Abstract': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readWgs84BoundingBox_),\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readLegendUrl_)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Title': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readTileMatrixLimitsList_)\n    });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrixLimits_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'Default': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Value': _ol_xml_.makeObjectPropertyPusher(\n          XSD.readString)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'LowerCorner': _ol_xml_.makeArrayPusher(\n          _ol_format_WMTSCapabilities_.readCoordinates_),\n      'UpperCorner': _ol_xml_.makeArrayPusher(\n          _ol_format_WMTSCapabilities_.readCoordinates_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n          _ol_format_WMTSCapabilities_.readTileMatrix_)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WMTSCapabilities_.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n    _ol_format_WMTSCapabilities_.NAMESPACE_URIS_, {\n      'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n          _ol_format_WMTSCapabilities_.readCoordinates_),\n      'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'TileWidth': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'TileHeight': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger)\n    }, _ol_xml_.makeStructureNS(_ol_format_WMTSCapabilities_.OWS_NAMESPACE_URIS_, {\n      'Identifier': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    }));\nexport default _ol_format_WMTSCapabilities_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.query.Querent\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime';\nimport olFormatWFS from 'ol/format/WFS';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport olObj from 'ol/obj';\nimport olUri from 'ol/uri';\nimport olExtent from 'ol/extent';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   *//* @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      goog.asserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = goog.asserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    goog.asserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      goog.asserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      goog.asserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          goog.asserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      goog.asserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      goog.asserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions =\n            /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                resultType: 'hits'\n              },\n              getFeatureCommonOptions\n            )\n          );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions =\n              /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n              olObj.assign(\n                {\n                  maxFeatures\n                },\n                getFeatureCommonOptions\n              )\n            );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          goog.asserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    goog.asserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          goog.asserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          goog.asserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      goog.asserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = goog.asserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/Querent.js","/**\n * @module ngeo.misc.Time\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module ngeo.Attribute\n*/\nconst exports = {};\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeo.AttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Attribute.js","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\nimport olFormatGML2 from 'ol/format/GML2';\nimport olFormatGML3 from 'ol/format/GML3';\nimport olFormatWFS from 'ol/format/WFS';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeo.FilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeo.AttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nvar GML3 = function(opt_options) {\n  var options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = _ol_xml_.pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    var multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  var polygons = _ol_xml_.pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    var multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  var flatLinearRings = _ol_xml_.pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var polygon = new Polygon(null);\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    var i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n        GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  var flatCoordinates = _ol_xml_.pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    var lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  var flatCoordinates = _ol_xml_.pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  var flatCoordinates = [];\n  var m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  var context = objectStack[0];\n  var containerSrs = context['srsName'];\n  var axisOrientation = 'enu';\n  if (containerSrs) {\n    var proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    var i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      var y = flatCoordinates[i];\n      var x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  var len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  var s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  var context = objectStack[0];\n  var containerSrs = context['srsName'];\n  var contextDimension = context['srsDimension'];\n  var axisOrientation = 'enu';\n  if (containerSrs) {\n    var proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  var coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  var dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n        node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  var x, y, z;\n  var flatCoordinates = [];\n  for (var i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n        GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n        GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n        GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n        GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n        GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n        GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n        GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n        GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n        GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n        GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n        GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n        GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  var srsName = context['srsName'];\n  var axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  var point = value.getCoordinates();\n  var coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    var z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  var axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    var z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  var srsName = context['srsName'];\n  // only 2d for simple features profile\n  var points = value.getCoordinates();\n  var len = points.length;\n  var parts = new Array(len);\n  var point;\n  for (var i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var keys = ['lowerCorner', 'upperCorner'];\n  var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    var rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        GML3.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    var patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    var posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    var segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n        geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n    objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  var hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      GML3.POINTMEMBER_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  var linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI,\n      'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  var context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  var value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), GML3.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  var fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featureNS = context['featureNS'];\n  var geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  var properties = feature.getProperties();\n  var keys = [], values = [];\n  for (var key in properties) {\n    var value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), context.serializers,\n      _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n      this.writeFeatureElement, this);\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item),\n      serializers,\n      _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n        GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n        GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var multiSurface = context['multiSurface'];\n  var surface = context['surface'];\n  var curve = context['curve'];\n  var multiCurve = context['multiCurve'];\n  var nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  var context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    _ol_obj_.assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation', this.schemaLocation);\n  var context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    _ol_obj_.assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 165\n// module chunks = 0 1","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nvar Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nvar LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nvar And = function(conditions) {\n  var params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nvar Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nvar Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nvar Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nvar Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nvar ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nvar Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nvar Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nvar Or = function(conditions) {\n  var params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nvar Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nvar _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n      opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.FeatureHelper\n*/\nimport ngeoBase from 'ngeo';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service';\n\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut';\nimport olArray from 'ol/array';\nimport olColor from 'ol/color';\nimport olExtent from 'ol/extent';\nimport olFeature from 'ol/Feature';\nimport olGeomLineString from 'ol/geom/LineString';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint';\nimport olGeomPoint from 'ol/geom/Point';\nimport olGeomPolygon from 'ol/geom/Polygon';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon';\nimport olFormatGPX from 'ol/format/GPX';\nimport olFormatKML from 'ol/format/KML';\nimport olStyleCircle from 'ol/style/Circle';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleRegularShape from 'ol/style/RegularShape';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\nimport olStyleText from 'ol/style/Text';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n *//* @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    goog.asserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoBase.GeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.CIRCLE:\n    case ngeoBase.GeometryType.POLYGON:\n    case ngeoBase.GeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoBase.GeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        offsetY: -(size + 10 / 2 + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return goog.asserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return goog.asserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoBase.FeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4)\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoBase.GeometryType.LINE_STRING,\n    ngeoBase.GeometryType.POLYGON,\n    ngeoBase.GeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoBase.GeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoBase.GeometryType.LINE_STRING:\n    case ngeoBase.GeometryType.CIRCLE:\n    case ngeoBase.GeometryType.POLYGON:\n    case ngeoBase.GeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoBase.GeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoBase.FeatureProperties.ANGLE)));\n  goog.asserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = goog.asserts.assertString(feature.get(ngeoBase.FeatureProperties.COLOR));\n\n  goog.asserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = goog.asserts.assertString(feature.get(ngeoBase.FeatureProperties.NAME));\n  goog.asserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoBase.FeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoBase.FeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoBase.FeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoBase.GeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoBase.FeatureProperties.AZIMUT);\n      goog.asserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoBase.FeatureProperties.IS_TEXT)) {\n      type = ngeoBase.GeometryType.TEXT;\n    } else {\n      type = ngeoBase.GeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoBase.GeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoBase.FeatureProperties.IS_CIRCLE)) {\n      type = ngeoBase.GeometryType.CIRCLE;\n    } else if (feature.get(ngeoBase.FeatureProperties.IS_RECTANGLE)) {\n      type = ngeoBase.GeometryType.RECTANGLE;\n    } else {\n      type = ngeoBase.GeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoBase.GeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoBase.GeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoBase.GeometryType.MULTI_LINE_STRING;\n  }\n\n  goog.asserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  goog.asserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    goog.asserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ngeo.download.service\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoUtils from 'ngeo/utils';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nvar GPX = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar GPX_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'rte': _ol_xml_.makeArrayPusher(readRte),\n      'trk': _ol_xml_.makeArrayPusher(readTrk),\n      'wpt': _ol_xml_.makeArrayPusher(readWpt)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar LINK_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar RTE_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'link': parseLink,\n      'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'extensions': parseExtensions,\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'rtept': parseRtePt\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar TRK_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'link': parseLink,\n      'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'extensions': parseExtensions,\n      'trkseg': parseTrkSeg\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'trkpt': parseTrkPt\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nvar WPT_PARSERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n      'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'link': parseLink,\n      'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n      'extensions': parseExtensions\n    });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'link': _ol_xml_.makeChildAppender(writeLink),\n      'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'ele', 'time'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'link': _ol_xml_.makeChildAppender(writeLink),\n      'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n    });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nvar WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, [\n      'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n      'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n      'ageofdgpsdata', 'dgpsid'\n    ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n      'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'link': _ol_xml_.makeChildAppender(writeLink),\n      'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n      'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n      'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nvar GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n    NAMESPACE_URIS, {\n      'rte': _ol_xml_.makeChildAppender(writeRte),\n      'trk': _ol_xml_.makeChildAppender(writeTrk),\n      'wpt': _ol_xml_.makeChildAppender(writeWpt)\n    });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n      parseFloat(node.getAttribute('lon')),\n      parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    var i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  var values = _ol_xml_.pushParseAndPop(\n      {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    var rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    var layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  var values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    var trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    var layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  var ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  var values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  var geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  var values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  var layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  var options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  var values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (var i = 0, ii = features.length; i < ii; ++i) {\n    var feature = features[i];\n    if (this.readExtensions_) {\n      var extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  var featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    var features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n      LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  var geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  var orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: node, 'properties': properties}),\n      WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  var context = {node: node, 'properties': properties};\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n      RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {node: node, 'properties': properties};\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n      TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n      TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n      lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  var options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  var gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  var xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n      SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 169\n// module chunks = 0 1 2","/**\n * @module ngeo.misc.WMSTime\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMiscTime from 'ngeo/misc/Time';\nimport googAsserts from 'goog/asserts';\nimport olBase from 'ol';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @constructor\n * @struct\n *//* @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * ngeoWMSTime.prototype.formatWMSTimeValue_ - Format time regarding a\n * resolution\n *\n * @param  {number} time (in ms format) timestamp to format\n * @param  {ngeox.TimePropertyResolutionEnum} resolution resolution to use\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string regarding the resolution\n * @private\n */\nexports.prototype.formatWMSTimeValue_ = function(time, resolution, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, 'yyyy', utc);\n    case 'month':\n      return this.$filter_('date')(date, 'yyyy-MM', utc);\n    case 'day':\n      return this.$filter_('date')(date, 'yyyy-MM-dd', utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * ngeoWMSTime.prototype.formatWMSTimeParam - Format time to be used as a\n * WMS Time query parameter\n *\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatWMSTimeValue_(times.start, wmsTimeProperty.resolution, opt_toUTC)}/${\n        this.formatWMSTimeValue_(times.end, wmsTimeProperty.resolution, opt_toUTC)}`\n    );\n  } else {\n    return this.formatWMSTimeValue_(times.start, wmsTimeProperty.resolution, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/WMSTime.js","/**\n * @module ngeo.query.MapQuerent\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoQueryQuerent from 'ngeo/query/Querent';\nimport ngeoDatasourceDataSourcesHelper from 'ngeo/datasource/DataSourcesHelper';\nimport olObj from 'ol/obj';\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nngeoBase.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * NOTE: This will replace the ngeo.Query service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data source objects.\n   * @param {ngeo.datasource.DataSourcesHelper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   *//* @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ngeo.datasource.DataSourcesHelper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.ngeoDataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      goog.asserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = goog.asserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/MapQuerent.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nvar WMSGetFeatureInfo = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  var localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  var features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n      var layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      var context = objectStack[0];\n\n      var toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      var layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      var featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      var parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n          this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      var parsersNS = _ol_xml_.makeStructureNS(\n          [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      var layerFeatures = _ol_xml_.pushParseAndPop(\n          [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    var gmlFeatures = _ol_xml_.pushParseAndPop([],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n        [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  var options = {};\n  if (opt_options) {\n    _ol_obj_.assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 187\n// module chunks = 0 1","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo';\nimport googAsserts from 'goog/asserts';\nimport olArray from 'ol/array';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerImage from 'ol/layer/Image';\nimport olLayerTile from 'ol/layer/Tile';\nimport olObj from 'ol/obj';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\nimport olUri from 'ol/uri';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n *//* @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module ngeo.filter.RuleHelper\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime';\nimport ngeoRuleDate from 'ngeo/rule/Date';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry';\nimport ngeoRuleRule from 'ngeo/rule/Rule';\nimport ngeoRuleSelect from 'ngeo/rule/Select';\nimport ngeoRuleText from 'ngeo/rule/Text';\nimport olFormatWFS from 'ol/format/WFS';\nimport olFormatFilter from 'ol/format/filter';\nimport olArray from 'ol/array';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   *//* @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoBase.AttributeType.DATE:\n      case ngeoBase.AttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoBase.AttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoBase.AttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoBase.AttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoBase.AttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoBase.AttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: goog.asserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoBase.AttributeType.DATE:\n      case ngeoBase.AttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoBase.AttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoBase.AttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        goog.asserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoBase.FilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoBase.FilterCondition.OR ||\n                   condition === ngeoBase.FilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoBase.FilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = olFormatWFS.writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      goog.asserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = goog.asserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = goog.asserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/RuleHelper.js","/**\n * @module ngeo.rule.Date\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeo.AttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Date.js","/**\n * @module ngeo.rule.Geometry\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule';\nimport olEvents from 'ol/events';\nimport olFeature from 'ol/Feature';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeo.AttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        ol.Object.getChangeEventType(this.feature.getGeometryName()),\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = goog.asserts.assertInstanceof(\n      evt.target, ol.geom.Geometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = goog.asserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      ol.Observable.unByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Geometry.js","/**\n * @module ngeo.rule.Select\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeo.AttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Select.js","/**\n * @module ngeo.rule.Text\n*/\nimport ngeoRuleRule from 'ngeo/rule/Rule';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeo.AttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Text.js","/**\n * @module ngeo.WFSDescribeFeatureType\n*/\nimport olBase from 'ol';\nimport olFormatXML from 'ol/format/XML';\nimport olXml from 'ol/xml';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/WFSDescribeFeatureType.js","/**\n * @module ol/format/WMSCapabilities\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nvar WMSCapabilities = function() {\n\n  XML.call(this);\n\n  /**\n   * @type {string|undefined}\n   */\n  this.version = undefined;\n};\n\ninherits(WMSCapabilities, XML);\n\n\n/**\n * Read a WMS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMS capabilities.\n * @api\n */\nWMSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromNode = function(node) {\n  this.version = node.getAttribute('version').trim();\n  var wmsCapabilityObject = _ol_xml_.pushParseAndPop({\n    'version': this.version\n  }, WMSCapabilities.PARSERS_, node, []);\n  return wmsCapabilityObject ? wmsCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMSCapabilities.readAttribution_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.ATTRIBUTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nWMSCapabilities.readBoundingBox_ = function(node, objectStack) {\n  var extent = [\n    XSD.readDecimalString(node.getAttribute('minx')),\n    XSD.readDecimalString(node.getAttribute('miny')),\n    XSD.readDecimalString(node.getAttribute('maxx')),\n    XSD.readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  var resolutions = [\n    XSD.readDecimalString(node.getAttribute('resx')),\n    XSD.readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Extent|undefined} Bounding box object.\n */\nWMSCapabilities.readEXGeographicBoundingBox_ = function(node, objectStack) {\n  var geographicBoundingBox = _ol_xml_.pushParseAndPop(\n      {},\n      WMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_,\n      node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  var westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  var southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  var eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  var northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Capability object.\n */\nWMSCapabilities.readCapability_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.CAPABILITY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Service object.\n */\nWMSCapabilities.readService_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.SERVICE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact information object.\n */\nWMSCapabilities.readContactInformation_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.CONTACT_INFORMATION_PARSERS_,\n      node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact person object.\n */\nWMSCapabilities.readContactPersonPrimary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.CONTACT_PERSON_PARSERS_,\n      node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact address object.\n */\nWMSCapabilities.readContactAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.CONTACT_ADDRESS_PARSERS_,\n      node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<string>|undefined} Format array.\n */\nWMSCapabilities.readException_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      [], WMSCapabilities.EXCEPTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readCapabilityLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readLayer_ = function(node, objectStack) {\n  var parentLayerObject = /**  @type {Object.<string,*>} */\n        (objectStack[objectStack.length - 1]);\n\n  var layerObject = _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  var queryable =\n        XSD.readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  var cascaded = XSD.readNonNegativeIntegerString(\n      node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  var opaque = XSD.readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  var noSubsets =\n        XSD.readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  var fixedWidth =\n        XSD.readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  var fixedHeight =\n        XSD.readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      var childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      var parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nWMSCapabilities.readDimension_ = function(node, objectStack) {\n  var dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': XSD.readBooleanString(\n        node.getAttribute('multipleValues')),\n    'nearestValue': XSD.readBooleanString(\n        node.getAttribute('nearestValue')),\n    'current': XSD.readBooleanString(node.getAttribute('current')),\n    'values': XSD.readString(node)\n  };\n  return dimensionObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readFormatOnlineresource_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_,\n      node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nWMSCapabilities.readRequest_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.REQUEST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nWMSCapabilities.readDCPType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.DCPTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nWMSCapabilities.readHTTP_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.HTTP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nWMSCapabilities.readOperationType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.OPERATIONTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readSizedFormatOnlineresource_ = function(node, objectStack) {\n  var formatOnlineresource =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (formatOnlineresource) {\n    var size = [\n      XSD.readNonNegativeIntegerString(node.getAttribute('width')),\n      XSD.readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nWMSCapabilities.readAuthorityURL_ = function(node, objectStack) {\n  var authorityObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nWMSCapabilities.readMetadataURL_ = function(node, objectStack) {\n  var metadataObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMSCapabilities.readStyle_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, WMSCapabilities.STYLE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Keyword list.\n */\nWMSCapabilities.readKeywordList_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      [], WMSCapabilities.KEYWORDLIST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Service': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readService_),\n      'Capability': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readCapability_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CAPABILITY_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Request': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readRequest_),\n      'Exception': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readException_),\n      'Layer': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readCapabilityLayer_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.SERVICE_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'KeywordList': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readKeywordList_),\n      'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n          XLink.readHref),\n      'ContactInformation': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readContactInformation_),\n      'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'AccessConstraints': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'LayerLimit': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MaxWidth': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger),\n      'MaxHeight': _ol_xml_.makeObjectPropertySetter(\n          XSD.readNonNegativeInteger)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_INFORMATION_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'ContactPersonPrimary': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readContactPersonPrimary_),\n      'ContactPosition': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'ContactAddress': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readContactAddress_),\n      'ContactVoiceTelephone': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'ContactFacsimileTelephone': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'ContactElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_PERSON_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'ContactPerson': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'ContactOrganization': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'AddressType': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'StateOrProvince': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n      'PostCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EXCEPTION_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Format': _ol_xml_.makeArrayPusher(XSD.readString)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'KeywordList': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readKeywordList_),\n      'CRS': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n      'EX_GeographicBoundingBox': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readEXGeographicBoundingBox_),\n      'BoundingBox': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readBoundingBox_),\n      'Dimension': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readDimension_),\n      'Attribution': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readAttribution_),\n      'AuthorityURL': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readAuthorityURL_),\n      'Identifier': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n      'MetadataURL': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readMetadataURL_),\n      'DataURL': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readFormatOnlineresource_),\n      'FeatureListURL': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readFormatOnlineresource_),\n      'Style': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readStyle_),\n      'MinScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'MaxScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'Layer': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readLayer_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.ATTRIBUTION_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n          XLink.readHref),\n      'LogoURL': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readSizedFormatOnlineresource_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'westBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'eastBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'southBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal),\n      'northBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n          XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.REQUEST_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'GetCapabilities': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readOperationType_),\n      'GetMap': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readOperationType_),\n      'GetFeatureInfo': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readOperationType_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.OPERATIONTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Format': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n      'DCPType': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readDCPType_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.DCPTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'HTTP': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readHTTP_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Get': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readFormatOnlineresource_),\n      'Post': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readFormatOnlineresource_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n          WMSCapabilities.readSizedFormatOnlineresource_),\n      'StyleSheetURL': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readFormatOnlineresource_),\n      'StyleURL': _ol_xml_.makeObjectPropertySetter(\n          WMSCapabilities.readFormatOnlineresource_)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'Format': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n          XLink.readHref)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.KEYWORDLIST_PARSERS_ = _ol_xml_.makeStructureNS(\n    WMSCapabilities.NAMESPACE_URIS_, {\n      'Keyword': _ol_xml_.makeArrayPusher(XSD.readString)\n    });\nexport default WMSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSCapabilities.js\n// module id = 206\n// module chunks = 0 1","/**\n * @module ngeo.datasource.DataSourcesHelper\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\nimport ngeoQueryQuerent from 'ngeo/query/Querent';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute';\nimport olEvents from 'ol/events';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     collection.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   *//* @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(ngeoDataSources, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(ngeoDataSources, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeo.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        goog.asserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        goog.asserts.assert(element.name === ogcLayerName);\n        goog.asserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\nngeoBase.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSourcesHelper.js","/**\n * @module ngeo.format.WFSAttribute\n*/\nimport ngeoAttribute from 'ngeo/Attribute';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = goog.asserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      goog.asserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = goog.asserts.assertString(object['type']);\n\n    if (!ngeoAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType') {\n        attribute.type = ngeo.AttributeType.DATETIME;\n      } else if (type === 'double') {\n        attribute.type = ngeo.AttributeType.NUMBER;\n      } else {\n        attribute.type = ngeo.AttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/WFSAttribute.js","/**\n * @module ngeo.query.mapQueryComponent\n*/\nimport ngeoBase from 'ngeo';\n\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent';\n\nimport olEvents from 'ol/events';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'click', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/mapQueryComponent.js","/**\n * @module app.bboxquery\n*/\nconst exports = {};\n\nimport 'examples/bboxquery.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781';\n\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC';\nimport ngeoMapModule from 'ngeo/map/module';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent';\n\nimport ngeoQueryModule from 'ngeo/query/module';\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport olLayerImage from 'ol/layer/Image';\nimport olLayerTile from 'ol/layer/Tile';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceOSM from 'ol/source/OSM';\n\n\n/** @type {!angular.Module} */\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name,\n  ngeoMiscBtnComponent.name,\n  ngeoQueryModule.name\n]);\n\n\napp.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\n\n/**\n * A sample component to display the result.\n *\n * @type {!angular.Component}\n */\napp.queryresultComponent = {\n  controller: 'AppQueryresultController',\n  controllerAs: 'qrCtrl',\n  templateUrl: 'partials/queryresult.html'\n};\n\napp.module.component('appQueryresult', app.queryresultComponent);\n\n\n/**\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query service.\n * @constructor\n *//* @ngInject\n */\napp.QueryresultController = function(ngeoQueryResult) {\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.result = ngeoQueryResult;\n\n};\n\n\napp.module.controller('AppQueryresultController', app.QueryresultController);\n\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n *     data sources objects.\n * @constructor\n *//* @ngInject\n */\napp.MainController = function($scope, ngeoDataSources) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  ngeoDataSources.push(new ngeoDatasourceOGC({\n    id: 1,\n    name: 'bus_stop',\n    visible: true,\n    wfsUrl: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n    ogcLayers: [{\n      name: 'bus_stop',\n      queryable: true\n    }]\n  }));\n  const busStopLayer = new olLayerImage({\n    'source': new olSourceImageWMS({\n      'url': 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n      params: {'LAYERS': 'bus_stop'}\n    })\n  });\n\n  ngeoDataSources.push(new ngeoDatasourceOGC({\n    id: 2,\n    name: 'information',\n    visible: true,\n    wfsUrl: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n    ogcLayers: [{\n      name: 'information',\n      queryable: true\n    }]\n  }));\n  const informationLayer = new olLayerImage({\n    'source': new olSourceImageWMS({\n      'url': 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n      params: {'LAYERS': 'information'}\n    })\n  });\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      informationLayer,\n      busStopLayer\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 0\n    })\n  });\n\n};\n\napp.module.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/bboxquery.js","/**\n * @module ngeo.query.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoQueryService from 'ngeo/query/Service';\nimport ngeoQueryQuerent from 'ngeo/query/Querent';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoQueryModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoQueryService.module.name,\n  ngeoQueryQuerent.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoQueryBboxQueryComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/module.js","/**\n * @module ngeo.query.Service\n*/\n// DEPRECATED\n\n// DEPRECATED\n\nimport ngeoBase from 'ngeo';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper';\nimport olFormatWFS from 'ol/format/WFS';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo';\nimport olObj from 'ol/obj';\nimport olHas from 'ol/has';\nimport olExtent from 'ol/extent';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olLayerImage from 'ol/layer/Image';\nimport olLayerTile from 'ol/layer/Tile';\n\n// Moved to mapquerent.js\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\n//ngeo.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n//  sources: [],\n//  total: 0,\n//  pending: false\n//}));\n\n\n/**\n * The Query service provides a way to send WMS GetFeatureInfo and WFS GetFeature\n * requests from visible layer objects within a map. Those do not necessarily need to have\n * a WMS source. The Query service requires source configuration in order\n * for layers to actually be considered queryable.\n *\n * To know more about the specification of a source configuration, see\n * `ngeox.QuerySource`\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.QueryOptions|undefined} ngeoQueryOptions The options to\n *     configure the ngeo query service with.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @ngdoc service\n * @ngname ngeoQuery\n *//* @ngInject\n */\nconst exports = function($http, $q, ngeoQueryResult, ngeoQueryOptions,\n  ngeoLayerHelper) {\n\n  const options = ngeoQueryOptions !== undefined ? ngeoQueryOptions : {};\n\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  this.dimensions = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n    options.queryCountFirst : false;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.sourceIdsProperty_ = options.sourceIdsProperty !== undefined ?\n    options.sourceIdsProperty : exports.DEFAULT_SOURCE_IDS_PROPERTY_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.tolerancePx_ = options.tolerance !== undefined ?\n    options.tolerance : 3;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.featureNS_ = options.featureNS !== undefined ?\n    options.featureNS : 'http://mapserver.gis.umn.edu/mapserver';\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.featurePrefix_ = options.featurePrefix !== undefined ?\n    options.featurePrefix : 'feature';\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = options.geometryName !== undefined ?\n    options.geometryName : 'geom';\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n\n  /**\n   * @type {Array.<ngeox.QuerySource>}\n   * @private\n   */\n  this.sources_ = [];\n\n  /**\n   * @type {Object.<number|string, ngeo.query.Service.QueryCacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * Promises that can be resolved to cancel started requests.\n   * @type {Array.<angular.$q.Deferred>}\n   * @private\n   */\n  this.requestCancelers_ = [];\n};\n\n\n/**\n * @const\n * @private\n */\nexports.DEFAULT_SOURCE_IDS_PROPERTY_ = 'querySourceIds';\n\n\n/**\n * Adds a new source to the query service.\n *\n * A source must at least have an `id` configured.  That id is then used to\n * associate the corresponding layer object within a map.\n *\n * A source will require a `ol.source.ImageWMS` or `ol.source.TileWMS` object.\n * You can either set it directly in the config, or use the one from a given\n * layer or let the query service create one for you using other source config\n * such as `url` and `params`.\n *\n * A source can be set with either a `format` and/or `infoFormat`, which will\n * determine how the returned features of a query will be read.\n *\n * This method will also create a result entry in the `ngeoQueryResult`\n * value service.\n *\n * @param {ngeox.QuerySource} source The source to add to the query service.\n * @export\n */\nexports.prototype.addSource = function(source) {\n  const sourceId = source.id;\n\n  goog.asserts.assert(sourceId, 'source.id should be thruthy');\n  goog.asserts.assert(!this.cache_[sourceId],\n    'no other source with the same id should be present');\n\n  // == wmsSource ==\n  // if the source doesn't have a wmsSource property set, it must at least have\n  // a layer that has one or have the required configuration options in order\n  // to create one.\n  if (!source.wmsSource) {\n    if (source.layer &&\n        (source.layer instanceof olLayerImage ||\n         source.layer instanceof olLayerTile)) {\n      const wmsSource = source.layer.getSource();\n      if (wmsSource &&\n          (wmsSource instanceof olSourceImageWMS ||\n           wmsSource instanceof olSourceTileWMS)) {\n        source.wmsSource = wmsSource;\n      }\n    } else {\n      goog.asserts.assert(source.url,\n        'url must be set when no layer or wmsSource is set in the source');\n      source.wmsSource = new olSourceImageWMS({\n        url: source.url,\n        params: {'LAYERS': source.layers}\n      });\n      source.getLayers = source.getLayers;\n    }\n  }\n  goog.asserts.assert(source.wmsSource, 'wmsSource should be thruthy');\n\n  // == format ==\n  if (!source.format) {\n    // GML is the default infoFormat if the source doesn't have one defined\n    if (!source.infoFormat) {\n      source.infoFormat = exports.QueryInfoFormatType.GML;\n    }\n\n    if (source.infoFormat === exports.QueryInfoFormatType.GML && source.layers) {\n      source.format = new olFormatWMSGetFeatureInfo({\n        layers: source.layers\n      });\n    }\n  } else if (!source.infoFormat) {\n    // == infoFormat ==\n    const format = source.format;\n    if (format instanceof olFormatWMSGetFeatureInfo) {\n      source.infoFormat = exports.QueryInfoFormatType.GML;\n    }\n  }\n  goog.asserts.assert(source.format, 'format should be thruthy');\n\n  this.sources_.push(source);\n\n  const sourceLabel = source.label !== undefined ? source.label : sourceId;\n\n  const sourceIdentifierAttributeField =\n      source.identifierAttributeField !== undefined ?\n        source.identifierAttributeField : sourceId;\n\n  const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n    'features': [],\n    'id': sourceId,\n    'identifierAttributeField': sourceIdentifierAttributeField,\n    'label': sourceLabel,\n    'pending': false,\n    'queried': false\n  });\n\n  this.result_.sources.push(resultSource);\n\n  const cacheItem = {\n    'source': source,\n    'resultSource': resultSource\n  };\n  this.cache_[sourceId] = cacheItem;\n};\n\n\n/**\n * Add multiple sources at once in the order they are given.\n * @param {!Array.<!ngeox.QuerySource>} sources The sources to add to the query\n *     service.\n * @export\n */\nexports.prototype.addSources = function(sources) {\n  sources.forEach((source) => {\n    this.addSource(source);\n  });\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nexports.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Remove all sources.\n * @export\n */\nexports.prototype.removeAllSources = function() {\n  this.result_.sources.length = 0;\n  this.sources_.length = 0;\n  this.cache_ = {};\n};\n\n\n/**\n * Issue a new request using a given map and a given object, which can be\n * a coordinate or extent.\n *\n * When given a coordinate, WMS GetFeatureInfo or WFS GetFeature requests will\n * be made. If a layer supports WFS, a GetFeature request with a bbox around the\n * coordinate are issued.\n *\n * For an extent, WFS GetFeature is used.\n *\n * @param {ol.Map} map The ol3 map object to fetch the layers from.\n * @param {ol.Coordinate|ol.Extent} object The coordinate or extent to issue\n *     the request with.\n * @export\n */\nexports.prototype.issue = function(map, object) {\n  this.cancelStillRunningRequests_();\n  this.clearResult_();\n\n  if (object.length === 2) {\n    this.issueIdentifyFeaturesRequests_(map, object);\n  } else {\n    goog.asserts.assert(object.length === 4, 'expecting extent');\n    this.issueGetFeatureRequests_(map, object);\n  }\n};\n\n\n/**\n * Issue WMS GetFeatureInfo or WFS GetFeature requests using the given\n * coordinate and map.\n * For each visible layer of the map, if that layer has a source configured\n * within this query service, then a query will be sent and the results\n * will be stocked in the `ngeoQueryResult`.\n *\n * For WMS GetFeatureInfo, gf multiple sources share the same url and use GML\n * as info format, then only one request will be sent for all these sources.\n *\n * NOTE: Only GML info format are currently supported.\n *\n * @param {ol.Map} map The ol3 map object to fetch the layers from.\n * @param {ol.Coordinate} coordinate The coordinate to issue the request with.\n * @private\n */\nexports.prototype.issueIdentifyFeaturesRequests_ = function(map, coordinate) {\n  const sources = this.getQueryableSources_(map, false);\n\n  this.doGetFeatureInfoRequests_(sources.wms, coordinate, map);\n  this.doGetFeatureRequestsWithCoordinate_(sources.wfs, coordinate, map);\n  this.updatePendingState_();\n};\n\n\n/**\n * Issue WFS GetFeature requests using the given extent for each visible layer\n * of the map.\n *\n * @param {ol.Map} map The ol3 map object to fetch the layers from.\n * @param {ol.Extent} extent The coordinate to issue the request with.\n * @private\n */\nexports.prototype.issueGetFeatureRequests_ = function(map, extent) {\n  const sources = this.getQueryableSources_(map, true);\n  this.doGetFeatureRequests_(sources.wfs, extent, map);\n  this.updatePendingState_();\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {boolean} wfsOnly Only get sources queryable via WFS.\n * @return {ngeo.query.Service.QueryableSources} Queryable sources.\n * @private\n */\nexports.prototype.getQueryableSources_ = function(map, wfsOnly) {\n\n  const wmsItemsByUrl =\n      /** @type {!Object.<string, !Array.<!ngeo.query.Service.QueryCacheItem>>} */ ({});\n  const wfsItemsByUrl =\n      /** @type {!Object.<string, !Array.<!ngeo.query.Service.QueryCacheItem>>} */ ({});\n\n  const layers = this.ngeoLayerHelper_.getFlatLayers(map.getLayerGroup());\n\n  layers.forEach(function(layer) {\n\n    // Skip layers that are not visible\n    if (!this.ngeoLayerHelper_.isLayerVisible(layer, map)) {\n      return;\n    }\n\n    // Skip layers that don't have one or more sources configured\n    const ids = this.getLayerSourceIds_(layer);\n    if (ids.length === 0) {\n      return;\n    }\n\n    let infoFormat;\n    let url;\n    let item;\n    for (let i = 0, len = ids.length; i < len; i++) {\n      const id = ids[i];\n      item = this.cache_[id];\n      if (!item) {\n        continue;\n      }\n\n      // If `validateLayerParams` is set, then the source config layer in the\n      // LAYERS params must be in the current LAYERS params of the layer\n      // wms source object.\n      if (item.source.validateLayerParams) {\n        goog.asserts.assert(\n          layer instanceof olLayerImage ||\n            layer instanceof olLayerTile,\n          'The layer should be an Image or Tile when using the ' +\n            'validateLayerParams option.'\n        );\n        const layerSource = layer.getSource();\n        goog.asserts.assert(\n          layerSource instanceof olSourceImageWMS ||\n            layerSource instanceof olSourceTileWMS,\n          'The layer source should be a WMS one when using the ' +\n            'validateLayerParams option.'\n        );\n        const resolution = map.getView().getResolution();\n        goog.asserts.assert(resolution);\n\n        // check if we have at least one child queryable at this resolution\n        if (item.source.getLayers(resolution).length === 0) {\n          continue;\n        }\n        // check if the layer is displayed\n        const layersFromParams = layerSource.getParams()['LAYERS'].split(',');\n        const layerIsOnTheMap = item.source.layers.some(layer => layersFromParams.indexOf(layer) > -1);\n        if (!layerIsOnTheMap) {\n          continue;\n        }\n      }\n\n      if (item.source.wfsQuery) {\n        // use WFS GetFeature\n        url = item.source.urlWfs || item.source.wmsSource.getUrl();\n        goog.asserts.assertString(url);\n        if (!wfsItemsByUrl[url]) {\n          wfsItemsByUrl[url] = [];\n        }\n        this.pushSourceIfUnique_(item, wfsItemsByUrl[url]);\n      } else if (!wfsOnly) {\n        // use WMF GetFeatureInfo\n        infoFormat = item.source.infoFormat;\n\n        // Sources that use GML as info format are combined together if they\n        // share the same server url\n        if (infoFormat === exports.QueryInfoFormatType.GML) {\n          url = item.source.wmsSource.getUrl();\n          goog.asserts.assertString(url);\n          if (!wmsItemsByUrl[url]) {\n            wmsItemsByUrl[url] = [];\n          }\n          this.pushSourceIfUnique_(item, wmsItemsByUrl[url]);\n        } else {\n          // TODO - support other kinds of infoFormats\n        }\n      }\n    }\n  }, this);\n\n  return {\n    wms: wmsItemsByUrl,\n    wfs: wfsItemsByUrl\n  };\n};\n\n\n/**\n * Push source if and only if not already in the array. it aims to add a unicity\n * constraint on sources.\n *\n * The 'id' of a source object is taken from the 'id' property of the\n * node object (in the tree). Under the wood, the 'id' property of a node is filled\n * regarding the layer attached to it. therefore, Two nodes with the same layer ,\n * attached will have the same 'id'. We must avoid multiple identical request.\n * @param  {ngeo.query.Service.QueryCacheItem} item  The QueryCache item to push in the array\n * @param  {Array.<ngeo.query.Service.QueryCacheItem>} array QueryCacheItem array\n * @return {boolean} true if the item has been added, false otherwise.\n * @private\n */\nexports.prototype.pushSourceIfUnique_ = function(item, array) {\n  const isUnique = array.indexOf(item) < 0;\n  if (isUnique) {\n    array.push(item);\n  }\n  return isUnique;\n};\n\n/**\n * @param {Object.<string, Array.<ngeo.query.Service.QueryCacheItem>>} wmsItemsByUrl Queryable\n *    layers for GetFeatureInfo\n * @param {ol.Coordinate} coordinate Query coordinate\n * @param {ol.Map} map Map\n * @private\n */\nexports.prototype.doGetFeatureInfoRequests_ = function(\n  wmsItemsByUrl, coordinate, map) {\n  const view = map.getView();\n  const projCode = view.getProjection().getCode();\n  const resolution = /** @type {number} */(view.getResolution());\n\n  angular.forEach(wmsItemsByUrl, function(items) {\n\n    items.forEach((item) => {\n      item['resultSource'].pending = true;\n      item['resultSource'].queried = true;\n    });\n\n    const layers = this.getLayersForItems_(items);\n    const lyrStr = layers.join(',');\n    const params = {\n      'INFO_FORMAT': items[0].source.infoFormat,\n      'FEATURE_COUNT': this.limit_,\n      'LAYERS': lyrStr,\n      'QUERY_LAYERS': lyrStr\n    };\n\n    Object.assign(params, this.getDimensionsParams_(items[0].source.dimensions));\n\n    const wmsGetFeatureInfoUrl = items[0].source.wmsSource.getGetFeatureInfoUrl(\n      coordinate, resolution, projCode);\n\n    this.$http_.get(wmsGetFeatureInfoUrl, {params: params, timeout: this.registerCanceler_().promise})\n      .then(function(items, response) {\n        items.forEach(function(item) {\n          item['resultSource'].pending = false;\n          const features = [];\n          item.source.format.readFeatures(response.data).forEach((feature) => {\n            goog.asserts.assert(feature);\n            features.push(feature);\n          });\n          this.setUniqueIds_(features, item.source.id);\n          item['resultSource'].features = features;\n          this.result_.total += features.length;\n        }, this);\n        this.updatePendingState_();\n      }.bind(this, items));\n  }, this);\n};\n\n\n/**\n * @param {Object.<string, string>} dimensions Source dimensions\n * @return {Object.<string, string>} Url parameters\n * @private\n */\nexports.prototype.getDimensionsParams_ = function(dimensions) {\n  const params = {};\n  if (dimensions) {\n    for (const key in dimensions) {\n      // get the value from the global dimensions\n      let value = this.dimensions[key];\n      if (value === undefined) {\n        // get the value from the layer default value\n        value = dimensions[key];\n      }\n      if (value !== undefined) {\n        params[key] = value;\n      }\n    }\n  }\n  return params;\n};\n\n\n/**\n * @param {Object.<string, Array.<ngeo.query.Service.QueryCacheItem>>} wfsItemsByUrl Queryable\n *    layers for GetFeature\n * @param {ol.Coordinate} coordinate Query coordinate\n * @param {ol.Map} map Map\n * @private\n */\nexports.prototype.doGetFeatureRequestsWithCoordinate_ = function(\n  wfsItemsByUrl, coordinate, map) {\n  const view = map.getView();\n  const bbox = this.getQueryBbox_(coordinate, view);\n  this.doGetFeatureRequests_(wfsItemsByUrl, bbox, map);\n};\n\n\n/**\n * @param {Object.<string, Array.<ngeo.query.Service.QueryCacheItem>>} wfsItemsByUrl Queryable\n *    layers for GetFeature\n * @param {ol.Extent} bbox Query bbox\n * @param {ol.Map} map Map\n * @private\n */\nexports.prototype.doGetFeatureRequests_ = function(\n  wfsItemsByUrl, bbox, map) {\n  const view = map.getView();\n  const projCode = view.getProjection().getCode();\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n\n  angular.forEach(wfsItemsByUrl, (items, url) => {\n    items.forEach((item) => {\n      const resolution = map.getView().getResolution();\n      goog.asserts.assert(resolution);\n      const layers = this.getLayersForItem_(item, resolution);\n\n      if (layers.length == 0 || layers[0] === '') {\n        // do not query source if no valid layers\n        return;\n      }\n\n      item['resultSource'].pending = true;\n      item['resultSource'].queried = true;\n\n      /** @type {olx.format.WFSWriteGetFeatureOptions} */\n      const getFeatureOptions = {\n        srsName: projCode,\n        featureNS: this.featureNS_,\n        featurePrefix: this.featurePrefix_,\n        featureTypes: layers,\n        outputFormat: 'GML3',\n        bbox: bbox,\n        geometryName: this.geometryName_\n      };\n\n      const sourceFormat = new olFormatWFS({\n        featureType: layers,\n        featureNS: this.featureNS_\n      });\n\n      const params = this.getDimensionsParams_(items[0].source.dimensions);\n\n      const getFeatures = function() {\n        /** @type {olx.format.WFSWriteGetFeatureOptions} */\n        const options = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (olObj.assign({\n          maxFeatures: this.limit_\n        }, getFeatureOptions));\n        const featureRequestXml = wfsFormat.writeGetFeature(options);\n        const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n\n        const canceler = this.registerCanceler_();\n        this.$http_.post(url, featureRequest, {params: params, timeout: canceler.promise})\n          .then((response) => {\n            item['resultSource'].pending = false;\n            const features = [];\n            sourceFormat.readFeatures(response.data).forEach((feature) => {\n              goog.asserts.assert(feature);\n              features.push(feature);\n            });\n            this.setUniqueIds_(features, item.source.id);\n            item['resultSource'].features = features;\n            this.result_.total += features.length;\n            this.updatePendingState_();\n          });\n      }.bind(this);\n\n      if (this.queryCountFirst_) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (olObj.assign({\n          resultType: 'hits'\n        }, getFeatureOptions));\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(featureCountXml);\n\n        const canceler = this.registerCanceler_();\n        this.$http_.post(url, featureCountRequest, {timeout: canceler.promise})\n          .then((response) => {\n            const meta = sourceFormat.readFeatureCollectionMetadata(response.data);\n            if (meta['numberOfFeatures'] > this.limit_) {\n              item['resultSource'].pending = false;\n              item['resultSource'].features = [];\n              item['resultSource'].tooManyResults = true;\n              item['resultSource'].totalFeatureCount = meta['numberOfFeatures'];\n              this.updatePendingState_();\n            } else {\n              getFeatures();\n            }\n          });\n      } else {\n        getFeatures();\n      }\n    });\n  });\n};\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nexports.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n    source.pending = false;\n    source.queried = false;\n    source.tooManyResults = false;\n    source.totalFeatureCount = undefined;\n  }, this);\n  this.result_.pending = false;\n};\n\n\n/**\n * Returns the source ids from an ol3 layer object.\n * @param {ol.layer.Base} layer The ol3 layer object.\n * @return {Array.<number|string>} ids The ids of the sources bound to that\n *     layer.\n * @private\n */\nexports.prototype.getLayerSourceIds_ = function(layer) {\n  const ids = layer.get(this.sourceIdsProperty_) || [];\n  goog.asserts.assertArray(ids);\n  const clone = ids.slice();\n  return clone;\n};\n\n\n/**\n * @param {!ngeo.query.Service.QueryCacheItem} item Cache item\n * @param {number} resolution returns the layers visible at this resolution.\n * @return {!Array.<string>} Layer names\n * @private\n */\nexports.prototype.getLayersForItem_ = function(item, resolution) {\n  if (item.source.getLayers) {\n    return item.source.getLayers(resolution);\n  } else {\n    goog.asserts.assert(item.source.layers);\n    return item.source.layers;\n  }\n};\n\n\n/**\n * @param {!Array.<!ngeo.query.Service.QueryCacheItem>} items Cache items\n * @param {number} resolution returns the layers visible at this resolution.\n * @return {!Array.<string>} Layer names\n * @private\n */\nexports.prototype.getLayersForItems_ = function(items, resolution) {\n  let layers = this.getLayersForItem_(items[0], resolution);\n  for (let i = 1, len = items.length; i < len; i++) {\n    layers = layers.concat(this.getLayersForItem_(items[i], resolution));\n  }\n  return layers;\n};\n\n\n/**\n * Make sure that feature ids are unique, because the same features might\n * be returned for different layers.\n * @param {!Array.<!ol.Feature>} features Features\n * @param {string|number} sourceId Source id.\n * @private\n */\nexports.prototype.setUniqueIds_ = function(features, sourceId) {\n  features.forEach((feature) => {\n    if (feature.getId() !== undefined) {\n      const id = `${sourceId}_${feature.getId()}`;\n      feature.setId(id);\n    }\n  });\n};\n\n\n/**\n * Construct a bbox around a coordinate with a tolerance relative to the\n * current resolution.\n * @param {ol.Coordinate} coordinate Coordinate\n * @param {ol.View} view View\n * @return {ol.Extent} Bbox\n * @private\n */\nexports.prototype.getQueryBbox_ = function(coordinate, view) {\n  const tolerance = this.tolerancePx_ * view.getResolution() * olHas.DEVICE_PIXEL_RATIO;\n\n  return olExtent.buffer(\n    olExtent.createOrUpdateFromCoordinate(coordinate),\n    tolerance);\n};\n\n\n/**\n * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n *    HTTP request.\n * @private\n */\nexports.prototype.registerCanceler_ = function() {\n  const canceler = this.$q_.defer();\n  this.requestCancelers_.push(canceler);\n  return canceler;\n};\n\n\n/**\n * @private\n */\nexports.prototype.cancelStillRunningRequests_ = function() {\n  this.requestCancelers_.forEach((canceler) => {\n    canceler.resolve();\n  });\n  this.requestCancelers_.length = 0;\n};\n\n\nexports.prototype.updatePendingState_ = function() {\n  let pendingSources = 0;\n  this.result_.sources.forEach((source) => {\n    if (source.pending) {\n      pendingSources++;\n    }\n  });\n  this.result_.pending = pendingSources > 0;\n};\n\n\n/**\n * @returns {number} The maximum number of features that are requested.\n * @public\n */\nexports.prototype.getLimit = function() {\n  return this.limit_;\n};\n\n/**\n * @enum {string}\n */\nexports.QueryInfoFormatType = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\n/**\n * @typedef {{\n *     resultSource: (ngeox.QueryResultSource),\n *     source: (ngeox.QuerySource)\n * }}\n */\nexports.QueryCacheItem;\n\n\n/**\n * @typedef {{\n *     wms: (Object.<string, Array.<ngeo.query.Service.QueryCacheItem>>),\n *     wfs: (Object.<string, Array.<ngeo.query.Service.QueryCacheItem>>)\n * }}\n */\nexports.QueryableSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuery', []);\nexports.module.service('ngeoQuery', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/Service.js","/**\n * @module ngeo.query.bboxQueryComponent\n*/\nimport ngeoBase from 'ngeo';\n\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox';\nimport olEventsCondition from 'ol/events/condition';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/bboxQueryComponent.js"],"sourceRoot":""}