{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/interaction/ModifyEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Modify.js","webpack:///./src/CustomEvent.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/datasource/DataSources.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/goog.asserts.prod.js","webpack:///./src/map/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/map/directive.js","webpack:///./src/datasource/SyncDataSourcesMap.js","webpack:///./examples/rotate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_WMS_VERSION","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","ImageBase","call","this","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","Object","ol","prototype","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","forEach","unlistenByKey","ol_Image","ImageWMS","opt_options","options","source_Image","attributions","projection","resolutions","crossOrigin_","url_","url","defaultImageLoadFunction","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","proj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","SERVICE","VERSION","common","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","obj","assign","x","Math","floor","y","getRequestUrl_","getParams","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getRevision","getResolution","getPixelRatio","getExtent","round","listen","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","bbox","axisOrientation","getAxisOrientation","substr","join","uri","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","string","compareVersions","ModifyEventType","_ol_interaction_Modify_","features","Pointer","handleDownEvent","handleDownEvent_","handleDragEvent","handleDragEvent_","handleEvent","handleUpEvent","handleUpEvent_","condition_","condition","primaryAction","defaultDeleteCondition_","mapBrowserEvent","altKeyOnly","singleClick","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","always","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","RBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","Vector","source","source_Vector","useSpatialIndex","wrapX","style","getDefaultStyleFunction","updateWhileAnimating","updateWhileInteracting","SEGMENT_WRITERS_","Point","writePointGeometry_","LineString","writeLineStringGeometry_","LinearRing","Polygon","writePolygonGeometry_","MultiPoint","writeMultiPointGeometry_","MultiLineString","writeMultiLineStringGeometry_","MultiPolygon","writeMultiPolygonGeometry_","Circle","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","source_","Collection","getFeatures","VectorEventType","ADDFEATURE","handleSourceAdd_","REMOVEFEATURE","handleSourceRemove_","Error","features_","addFeature_","bind","CollectionEventType","ADD","handleFeatureAdd_","REMOVE","handleFeatureRemove_","lastPointerEvent_","MODIFY_SEGMENT_CIRCLE_CENTER_INDEX","MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX","feature","geometry","getGeometry","getType","map","getMap","isRendered","getActive","handlePointerAtPixel_","handleFeatureChange_","willModifyFeatures_","evt","dispatchEvent","Event","removeFeature_","removeFeatureSegmentData_","getLength","getSource","removeFeature","unlisten","rBush","nodesToRemove","node","push","i","length","remove","setActive","active","setMap","event","coordinates","getCoordinates","segmentData","segment","insert","ii","points","depth","index","slice","j","jj","lines","rings","k","kk","polygons","getCenter","centerSegmentData","circumferenceSegmentData","featureSegments","geometries","getGeometriesArray","createOrUpdateVertexFeature_","vertexFeature","setCoordinates","Feature","addFeature","compareIndexes_","a","b","pixel","pixelCoordinate","getCoordinateFromPixel","insertVertices","vertex","vertexExtent","segmentDataMatches","getInExtent","componentSegments","sort","segmentDataMatch","uid","Array","GeometryType","CIRCLE","closestVertex","closestOnSegmentData_","equals","LINE_STRING","MULTI_LINE_STRING","insertVertex_","apply","dragSegment","getStride","POINT","MULTI_POINT","POLYGON","MULTI_POLYGON","setCenter","setRadius","distance","setGeometryCoordinates_","update","MapBrowserPointerEvent","getView","getInteracting","type","MapBrowserEventType","POINTERMOVE","handlingDownUpSequence","handlePointerMove_","handled","SINGLECLICK","removePoint","box","nodes","pointDistanceToSegmentDataSquared_","closestSegment","vertexPixel","getPixelFromCoordinate","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDistance","squaredDist2","sqrt","min","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getRadius","squaredDistanceToSegment","getClosestPoint","closestOnSegment","splice","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","POINTERDRAG","removeVertex_","component","left","newIndex","right","dragSegments","segmentsByFeature","deleted","pop","segments","delta","forEachInExtent","array","Style","createDefaultEditing","mapBrowserPointerEvent","exports","detail","arguments","_Event2","default","_ol2","inherits","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","res","key","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","_ngeo","_classCallCheck","inRange_","inRange","visible_","visible","attributes","id_","id","identifierAttribute_","identifierAttribute","maxResolution_","maxResolution","minResolution_","minResolution","name_","name","_createClass","value","get","set","_ngeo2","module","_Collection2","featureUidToGroupIndex_","groups_","_Vector4","layer_","_Vector2","styleFunction_","groupIndex","_asserts2","assert","featureUid","getUid","toString","clear","group","_obj2","isEmpty","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setStyle","createFunction","angular","service","requires","opt_message","var_args","_BackgroundLayerMgr2","_directive2","_FeatureOverlayMgr2","_recenter2","_resizemap2","_scaleselector2","_Observable2","mapUids_","getLayers","item","layer","mapUid","previous","setAt","removeAt","insertAt","_CustomEvent2","current","updateDimensions","dimensions","baseBgLayer","layers","getArray","assertInstanceof","_Layer2","hasUpdates","updatedDimensions","refresh","directive_","$window","ngeoSyncDataSourcesMap","restrict","link","scope","element","attrs","prop","$eval","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","_events2","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","ngeoDataSources","ngeoDataSources_","map_","listenerKeys_","handleDataSourcesAdd_","$inject","view","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","unByKey","target","_View2","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","_DataSource2","unbindMap_","bindMap_","e","code","app","ngeo","_module3","MainController","_Tile2","_OSM2","zoom","polygon","_Polygon2","_Feature2","vectorSource","vectorLayer","styles","fill","_Fill2","color","stroke","_Stroke2","width","_Circle2","text","_Text2","font","concat","interaction","_Rotate2","addInteraction","on","forEachFeatureAtPixel","controller","keyPressListenerKey_","feature_","coordinate_","centerCoordinate_","_Modify2","centerFeatures_","_Pointer2","handleDown_","handleDrag_","handleUp_","document","handleKeyUp_","geom","Geometry","point","_Point2","getCenterCoordinate_","centerFeature","found","f","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","angle","rotate","keyCode","manager","manager_","index_","setFeatures","$scope","$element","$attrs","mapExpr","recenter","attr","getSize","fit","setZoom","$","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","$watch","newVal","oldVal","cancelAnimationFrame","templateUrl","baseModuleTemplateUrl","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","goog","zoomLevels","keys","newLength","Number","_array2","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","_this2","$applyAsync","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","ATTRIBUTION","maxZoom","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","createXYZ","extentFromProjection","minZoom","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","_ol_style_Text_","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","clone","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"mappings":"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","file":"rotate.min.js","sourcesContent":["/**\n * @type {string} Default WMS version.\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar ImageWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = getForViewAndSize(coordinate, resolution, 0,\n      ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = getCenter(extent);\n  var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/ModifyEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature modification start\n   * @event ol.interaction.Modify.Event#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ol.interaction.Modify.Event#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/ModifyEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport _ol_Collection_ from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport _ol_interaction_ModifyEventType_ from '../interaction/ModifyEventType.js';\nimport _ol_interaction_Pointer_ from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport _ol_style_Style_ from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ol.interaction.Modify.Event\n * @api\n */\nvar _ol_interaction_Modify_ = function(options) {\n\n  _ol_interaction_Pointer_.call(this, {\n    handleDownEvent: _ol_interaction_Modify_.handleDownEvent_,\n    handleDragEvent: _ol_interaction_Modify_.handleDragEvent_,\n    handleEvent: _ol_interaction_Modify_.handleEvent,\n    handleUpEvent: _ol_interaction_Modify_.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.primaryAction;\n\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.altKeyOnly(mapBrowserEvent) &&\n      _ol_events_condition_.singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : _ol_events_condition_.always;\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      _ol_interaction_Modify_.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  var features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new _ol_Collection_(this.source_.getFeatures());\n    _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n    _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  _ol_events_.listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n  _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n  /**\n   * @type {ol.MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(_ol_interaction_Modify_, _ol_interaction_Pointer_);\n\n\n/**\n * @define {number} The segment index assigned to a circle's center when\n * breaking up a cicrle into ModifySegmentDataType segments.\n */\n_ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX = 0;\n\n/**\n * @define {number} The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n */\n_ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_interaction_Modify_.prototype.addFeature_ = function(feature) {\n  var geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  var map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  _ol_events_.listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\n_ol_interaction_Modify_.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new _ol_interaction_Modify_.Event(\n        _ol_interaction_ModifyEventType_.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_interaction_Modify_.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_events_.unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\n_ol_interaction_Modify_.prototype.removeFeatureSegmentData_ = function(feature) {\n  var rBush = this.rBush_;\n  var /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n      /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n  for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_Modify_.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_interaction_Pointer_.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_interaction_Modify_.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  _ol_interaction_Pointer_.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {ol.Feature} */ (evt.element));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    var feature = /** @type {ol.Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handleFeatureRemove_ = function(evt) {\n  var feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writePointGeometry_ = function(feature, geometry) {\n  var coordinates = geometry.getCoordinates();\n  var segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  var points = geometry.getCoordinates();\n  var coordinates, i, ii, segmentData;\n  for (i = 0, ii = points.length; i < ii; ++i) {\n    coordinates = points[i];\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  var coordinates = geometry.getCoordinates();\n  var i, ii, segment, segmentData;\n  for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    segment = coordinates.slice(i, i + 2);\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  var lines = geometry.getCoordinates();\n  var coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = lines.length; j < jj; ++j) {\n    coordinates = lines[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  var rings = geometry.getCoordinates();\n  var coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  var polygons = geometry.getCoordinates();\n  var coordinates, i, ii, j, jj, k, kk, rings, segment, segmentData;\n  for (k = 0, kk = polygons.length; k < kk; ++k) {\n    rings = polygons[k];\n    for (j = 0, jj = rings.length; j < jj; ++j) {\n      coordinates = rings[j];\n      for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segment = coordinates.slice(i, i + 2);\n        segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  var coordinates = geometry.getCenter();\n  var centerSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  var circumferenceSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  var featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\n_ol_interaction_Modify_.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  var i, geometries = geometry.getGeometriesArray();\n  for (i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(\n        this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\n_ol_interaction_Modify_.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  var vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    var geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\n_ol_interaction_Modify_.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\n_ol_interaction_Modify_.handleDownEvent_ = function(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  var vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    var insertVertices = [];\n    var geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    var vertex = geometry.getCoordinates();\n    var vertexExtent = boundingExtent([vertex]);\n    var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    var componentSegments = {};\n    segmentDataMatches.sort(_ol_interaction_Modify_.compareIndexes_);\n    for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      var segmentDataMatch = segmentDataMatches[i];\n      var segment = segmentDataMatch.segment;\n      var uid = getUid(segmentDataMatch.feature);\n      var depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        var closestVertex = _ol_interaction_Modify_.closestOnSegmentData_(pixelCoordinate, segmentDataMatch);\n        if (_ol_coordinate_.equals(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (_ol_coordinate_.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (_ol_coordinate_.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (var j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ol.interaction.Modify}\n * @private\n */\n_ol_interaction_Modify_.handleDragEvent_ = function(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  var vertex = evt.coordinate;\n  for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    var dragSegment = this.dragSegments_[i];\n    var segmentData = dragSegment[0];\n    var depth = segmentData.depth;\n    var geometry = segmentData.geometry;\n    var coordinates;\n    var segment = segmentData.segment;\n    var index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(_ol_coordinate_.distance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\n_ol_interaction_Modify_.handleUpEvent_ = function(evt) {\n  var segmentData;\n  var geometry;\n  for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n    segmentData = this.dragSegments_[i][0];\n    geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      var coordinates = geometry.getCenter();\n      var centerSegmentData = segmentData.featureSegments[0];\n      var circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment),\n          segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new _ol_interaction_Modify_.Event(\n        _ol_interaction_ModifyEventType_.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Modify}\n * @api\n */\n_ol_interaction_Modify_.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  var handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return _ol_interaction_Pointer_.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\n_ol_interaction_Modify_.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\n_ol_interaction_Modify_.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  var sortByDistance = function(a, b) {\n    return _ol_interaction_Modify_.pointDistanceToSegmentDataSquared_(pixelCoordinate, a) -\n        _ol_interaction_Modify_.pointDistanceToSegmentDataSquared_(pixelCoordinate, b);\n  };\n\n  var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n  var rBush = this.rBush_;\n  var nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    var node = nodes[0];\n    var closestSegment = node.segment;\n    var vertex = _ol_interaction_Modify_.closestOnSegmentData_(pixelCoordinate, node);\n    var vertexPixel = map.getPixelFromCoordinate(vertex);\n    var dist = _ol_coordinate_.distance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      var vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        var squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n        var squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        var segment;\n        for (var i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((_ol_coordinate_.equals(closestSegment[0], segment[0]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[1]) ||\n              (_ol_coordinate_.equals(closestSegment[0], segment[1]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\n_ol_interaction_Modify_.pointDistanceToSegmentDataSquared_ = function(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {ol.geom.Circle} */ (geometry);\n\n    if (segmentData.index === _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            _ol_coordinate_.squaredDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return _ol_coordinate_.squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n};\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {ol.Coordinate} The point closest to the specified line segment.\n */\n_ol_interaction_Modify_.closestOnSegmentData_ = function(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === _ol_interaction_Modify_.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return _ol_coordinate_.closestOnSegment(pointCoordinates, segmentData.segment);\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} segmentData Segment data.\n * @param {ol.Coordinate} vertex Vertex.\n * @private\n */\n_ol_interaction_Modify_.prototype.insertVertex_ = function(segmentData, vertex) {\n  var segment = segmentData.segment;\n  var feature = segmentData.feature;\n  var geometry = segmentData.geometry;\n  var depth = segmentData.depth;\n  var index = /** @type {number} */ (segmentData.index);\n  var coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  var rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  var newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  var newSegmentData2 = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment),\n      newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\n_ol_interaction_Modify_.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    var evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new _ol_interaction_Modify_.Event(\n        _ol_interaction_ModifyEventType_.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\n_ol_interaction_Modify_.prototype.removeVertex_ = function() {\n  var dragSegments = this.dragSegments_;\n  var segmentsByFeature = {};\n  var deleted = false;\n  var component, coordinates, dragSegment, geometry, i, index, left;\n  var newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      var segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        var newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\n_ol_interaction_Modify_.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\n_ol_interaction_Modify_.prototype.updateSegmentIndices_ = function(\n    geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\n_ol_interaction_Modify_.getDefaultStyleFunction = function() {\n  var style = _ol_style_Style_.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Modify} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.ModifyEvent}\n * @param {ol.interaction.ModifyEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features modified.\n * @param {ol.MapBrowserPointerEvent} mapBrowserPointerEvent Associated\n *     {@link ol.MapBrowserPointerEvent}.\n */\n_ol_interaction_Modify_.Event = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link ol.MapBrowserEvent}.\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\ninherits(_ol_interaction_Modify_.Event, Event);\nexport default _ol_interaction_Modify_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.CustomEvent\n*/\nimport olBase from 'ol';\nimport olEventsEvent from 'ol/events/Event';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar TileWMS = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = getProjection(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 23\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.SyncDataSourcesMap`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ngeo.datasource.DataSources\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo';\nimport olCollection from 'ol/Collection';\n\n\nngeoBase.module.value('ngeoDataSources', new olCollection());\n\n\n/**\n * @typedef {!ol.Collection.<!ngeo.datasource.DataSource>}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olLayerVector from 'ol/layer/Vector';\nimport olObj from 'ol/obj';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleStyle from 'ol/style/Style';\nimport googAsserts from 'goog/asserts';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {};\nexports.assertNumber = function(value, opt_message, var_args) {};\nexports.assertString = function(value, opt_message, var_args) {};\nexports.assertFunction = function(value, opt_message, var_args) {};\nexports.assertObject = function(value, opt_message, var_args) {};\nexports.assertArray = function(value, opt_message, var_args) {};\nexports.assertBoolean = function(value, opt_message, var_args) {};\nexports.assertElement = function(value, opt_message, var_args) {};\nexports.assertInstanceof = function(value, type, opt_message, var_args) {};\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/goog.asserts.prod.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr';\nimport ngeoMapDirective from 'ngeo/map/directive';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr';\nimport ngeoMapRecenter from 'ngeo/map/recenter';\nimport ngeoMapResizemap from 'ngeo/map/resizemap';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapDirective.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport olBase from 'ol';\nimport olObservable from 'ol/Observable';\nimport olLayerGroup from 'ol/layer/Group';\nimport olLayerLayer from 'ol/layer/Layer';\nimport olSourceImageWMS from 'ol/source/ImageWMS';\nimport olSourceTileWMS from 'ol/source/TileWMS';\nimport olSourceWMTS from 'ol/source/WMTS';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.map.directive\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\n\n// TODO Remove me, there should not be a dependency on datasources from the map.\nimport ngeoDatasourceSyncDataSourcesMap from 'ngeo/datasource/SyncDataSourcesMap';\n\nimport olEvents from 'ol/events';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @param {ngeo.datasource.SyncDataSourcesMap} ngeoSyncDataSourcesMap Ngeo sync\n *     data sources map service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n *//* @ngInject\n */\nexports.directive_ = function($window, ngeoSyncDataSourcesMap) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      ngeoSyncDataSourcesMap.map = map;\n\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/directive.js","/**\n * @module ngeo.datasource.SyncDataSourcesMap\n*/\nimport ngeoBase from 'ngeo';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources';\n\nimport olEvents from 'ol/events';\nimport olObservable from 'ol/Observable';\nimport olView from 'ol/View';\nimport googAsserts from 'goog/asserts';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo collection of\n   *     data sources objects.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoSyncDataSourcesMap\n   *//* @ngInject\n   */\n  constructor(ngeoDataSources) {\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.ngeoDataSources_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.ngeoDataSources_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\nngeoBase.module.service(\n  'ngeoSyncDataSourcesMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/SyncDataSourcesMap.js","/**\n * @module app.rotate\n*/\nconst exports = {};\n\nimport 'examples/rotate.css';\nimport './common_dependencies.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate';\n\nimport olCollection from 'ol/Collection';\nimport olFeature from 'ol/Feature';\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport olLayerTile from 'ol/layer/Tile';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceOSM from 'ol/source/OSM';\nimport olSourceVector from 'ol/source/Vector';\nimport olStyleText from 'ol/style/Text';\nimport olStyleStroke from 'ol/style/Stroke';\nimport olStyleStyle from 'ol/style/Style';\nimport olStyleFill from 'ol/style/Fill';\nimport olStyleCircle from 'ol/style/Circle';\nimport olGeomPolygon from 'ol/geom/Polygon';\nimport ngeoMapModule from 'ngeo/map/module';\n\n\n/** @type {!angular.Module} **/\napp.module = angular.module('app', [\n  ngeo.module.name,\n  ngeoMapModule.name\n]);\n\n\n/** @type {!angular.Module} **/\nconst module = angular.module('app', ['ngeo']);\n\n\n/**\n * @constructor\n *//* @ngInject\n */\napp.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-10997148, 4569099],\n      zoom: 4\n    })\n  });\n\n  const map = this.map;\n\n  const polygon = new olGeomPolygon([[\n    [-9e6, 4e6], [-11e6, 4e6], [-11e6, 6e6], [-9e6, 6e6]\n  ]]);\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.features = new olCollection();\n\n  this.features.push(new olFeature({\n    geometry: polygon\n  }));\n\n  const vectorSource = new olSourceVector({\n    features: this.features\n  });\n  const vectorLayer = new olLayerVector({\n    source: vectorSource\n  });\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  vectorLayer.setMap(map);\n\n\n  const style = (function() {\n    const styles = {};\n    styles['Polygon'] = [\n      new olStyleStyle({\n        fill: new olStyleFill({\n          color: [255, 255, 255, 0.5]\n        })\n      }),\n      new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: 5\n        })\n      }),\n      new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [0, 153, 255, 1],\n          width: 3\n        })\n      })\n    ];\n    styles['Point'] = new olStyleStyle({\n      image: new olStyleCircle(),\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#ffffff'\n        })\n      })\n    });\n\n    styles['GeometryCollection'] = styles['Polygon'].concat(styles['Point']);\n\n    return function(feature, resolution) {\n      return styles[feature.getGeometry().getType()];\n    };\n  })();\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @export\n   */\n  this.interaction = new ngeoInteractionRotate(\n    /** @type {olx.interaction.ModifyOptions} */({\n      features: this.features,\n      layers: [vectorLayer],\n      style: style\n    }));\n\n  const interaction = this.interaction;\n  interaction.setActive(false);\n  map.addInteraction(interaction);\n\n  map.on('singleclick', function(evt) {\n    const feature = this.map.forEachFeatureAtPixel(evt.pixel,\n      feature => feature);\n    if (feature) {\n      this.interaction.setActive(true);\n    }\n  }, this);\n};\n\n\nmodule.controller('MainController', app.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/rotate.js","/**\n * @module ngeo.interaction.Rotate\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent';\nimport googAsserts from 'goog/asserts';\nimport olBase from 'ol';\nimport olCollection from 'ol/Collection';\nimport olFeature from 'ol/Feature';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent';\nimport olEvents from 'ol/events';\nimport olInteractionModify from 'ol/interaction/Modify';\nimport olInteractionPointer from 'ol/interaction/Pointer';\nimport olGeomPoint from 'ol/geom/Point';\nimport olLayerVector from 'ol/layer/Vector';\nimport olSourceVector from 'ol/source/Vector';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(this.addFeature_, this);\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olBase.geom.Geometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olBase.geom.LineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olBase.geom.Polygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olBase.extent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Rotate.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo';\nimport olBase from 'ol';\nimport olEvents from 'ol/events';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts';\nimport ngeoBase from 'ngeo';\nimport olMap from 'ol/Map';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo';\nimport olArray from 'ol/array';\nimport olMap from 'ol/Map';\nimport olEvents from 'ol/events';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n *//* @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n *//* @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar OSM = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 48\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nvar XYZ = function(opt_options) {\n  var options = opt_options || {};\n  var projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 49\n// module chunks = 0 1 2 3 4 6 7 8 9 10 11 14 15 16 19 20 21 22 23 25 26 27 28 29 30","/**\n * @module ol/style/Text\n */\nimport _ol_style_Fill_ from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Text_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new _ol_style_Fill_({color: _ol_style_Text_.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\n_ol_style_Text_.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\n_ol_style_Text_.prototype.clone = function() {\n  return new _ol_style_Text_({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\n_ol_style_Text_.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\n_ol_style_Text_.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\n_ol_style_Text_.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\n_ol_style_Text_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\n_ol_style_Text_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\n_ol_style_Text_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\n_ol_style_Text_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\n_ol_style_Text_.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\n_ol_style_Text_.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\n_ol_style_Text_.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\n_ol_style_Text_.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\n_ol_style_Text_.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\n_ol_style_Text_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\n_ol_style_Text_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\n_ol_style_Text_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\n_ol_style_Text_.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\n_ol_style_Text_.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default _ol_style_Text_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 98\n// module chunks = 0 1 2 8 10 19 23"],"sourceRoot":""}