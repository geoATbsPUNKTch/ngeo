{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/statemanager/Service.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/misc/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./node_modules/file-saver/FileSaver.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/btnComponent.js","webpack:///./node_modules/openlayers/src/ol/interaction/ModifyEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Modify.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/map/module.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./src/draw/Controller.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/Menu.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/interaction/Translate.js","webpack:///./node_modules/openlayers/src/ol/interaction/TranslateEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Translate.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./src/draw/component.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/interaction/Modify.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./contribs/gmf/examples/drawfeature.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./src/editing/exportfeaturesComponent.js"],"names":["__WEBPACK_IMPORTED_MODULE_1__string_js__","__webpack_require__","XSD","readBoolean","node","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","exec","undefined","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","call","this","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","prototype","appendLineString","lineString","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","slice","push","length","changed","clone","multiLineString","setFlatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getExtent","getRevision","Math","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","stride","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","getCoordinates","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","index","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","i","ii","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","XY","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","extent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","appendPoint","point","multiPoint","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","olBase","olArray","exports","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","_EventTarget2","default","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","inherits","findGroupByLayerNodeName","themes","name","theme","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","getUid","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","type","gmfLayerWMTS","_asserts2","assert","url","createWMTSLayerFromCapabilitites","then","bind","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","data","promises","background_layers","map","itemType","reverse","all","collection","filter","l","_Collection2","createBasicGroup","layerGroupCreationFn","values","getString","_Tile2","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","window","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","module","angular","_LayerHelper2","value","service","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","indexOf","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","dataSource_","_decorate2","layerLoading","_events2","listen","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeature","source","opt_options","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","features","readFeaturesFromDocument","readFeatures","readFeaturesFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","writeFeature","feature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","geometry","writeGeometryNode","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","key","_loop","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","updateState","updateParams","deleteParam","_Location2","RegExp","options","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","_Condition2","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","return","wfsFormat","supportsWFS","format","_GML4","GML2","_GML2","_WFS2","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_inherits","_DataSource2","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","_AttributeType2","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","active","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","objectStack","localName","namespaceURI","pushParseAndPop","context","prefix","defaultPrefix","ft","nodeName","split","pop","count","uri","candidate","ns","parsersNS","featureTypes","isArray","p","parsers","makeArrayPusher","readFeatureElement","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","XYZ","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","Point","LineString","Polygon","RING_PARSERS","LinearRing","getReadOptions","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","_ImageWMS2","serverType","crossOrigin","_Image2","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_dimensions","parser","_WMTSCapabilities2","preload","Infinity","result","read","_WMTS2","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","_Group2","setLayers","getGroupFromMap","groupName","groups","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","getParams","random","updateWMSLayerState","names","getQuerySourceIds","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","_index2","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","unshift","addGroupByName","_this4","_Themes2","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","_Controller2","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","includes","msg","notify","_Message2","INFORMATION","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this8","_Notification2","_Service2","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","setAttribute","getGeometryName","serializers","getProperties","keys","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","hasZ","parts","getCoords_","line","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","_MultiPoint2","_MultiLineString2","_MultiPolygon2","navigator","userAgent","hex","rgb","r","g","b","Error","colorZeroPadding","queryData","pairs","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","_condition2","noModifierKeys","singleClick","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","ol","getImage","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","projection","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","floor","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","round","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","CARMENTA_SERVER","QGIS","bbox","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","writeOgcFidFilter_","getTypeName_","featurePrefix","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","propertyName","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","clear","VisibilityState","ON","OFF","remove","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","_utils2","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","_index","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","color","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setMap","setStyle","createFunction","GeometryCollection","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","geometries","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","unlisten","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","interaction","assertInstanceof","_Interaction2","defineProperty","getActive","setActive","_Base2","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","element","$applyAsync","ngeoDebounce","ngeoEventHelper","q_","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","gmfTreeManager_","ngeoWfsPermalink_","gmfUser_","map_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","_RegularShape2","_Stroke2","width","radius","radius2","mapTooltip_","featureHashFormat_","_FeatureHash2","encodeStyles","propertiesType","fillColor","_FeatureProperties2","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","extend","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","_Manager2","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","zoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","_Feature2","_Point2","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","class","removeOverlay","_Popover2","position","addOverlay","f","FEATURES","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","view","getGeometry","getSize","fit","_constants2","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","_OGC2","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","evt","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_module2","_features2","_EventHelper2","OpenLayersLayerProperties","regexp","key1","key2","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","html","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","_OGCGroup2","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","apply","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","listenerKeys_","initListenerKey_","NOT","OR","directive_","restrict","link","scope","attrs","prop","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","_TreeManager2","_Event","detail","_Event2","factory_","func","wait","invokeApply","timeout","_len","args","_key","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","featureIdentifier_","layerIdentifier_","readFeatures_","toRemove","layerFeatures","gmlFeatures","http_","mapViewChangePromise_","ensureSnapInteractionsOnTop","removeInteraction","addInteraction","treeCtrlsUnregister_","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","_Snap2","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","loadAllItems_","calculateExtent","projCode","getFeatureOptions","xmlSerializer","featureRequestXml","featureRequest","post","_Permalink2","_Snapping2","_component2","_FeatureOverlayMgr2","manageResize","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","_Overlay","originalEl","closeEl_","contentEl_","_Overlay2","getElement","getMap","popover","contentEl","setTimeout","content","one","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","_TextFeature2","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","_FeatureHashStyleType2","LINE_STRING","POLYGON","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","imageStyle","strokeStyle","textStyle","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","getRadius","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","asArray","fillColorHex","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","readLineStringGeometry_","decodeCoordinates_","_LineString2","_GeometryLayout2","readMultiLineStringGeometry_","readPointGeometry_","readMultiPointGeometry_","readPolygonGeometry_","_Polygon2","readMultiPolygonGeometry_","multipolygon","setStyleInFeature_","getStyleProperties_","_Fill2","_Circle2","_Text2","setStyleProperties_","setProperties","castValue_","numProperties","boolProperties","keyVal","writeLineStringGeometry_","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","shift","dx","dy","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","_Feature4","transformWithOptions","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","getInExtent","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","min","closestOnCircle","closestOnSegment","distance","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","segmentData","insert","k","kk","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","condition_","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","ACTIVE","updateState_","createDefaultEditing","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","setGeometry","last","sketchLineGeom","getLinearRing","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","addFeatures","createRegularPolygon","opt_sides","opt_angle","atan","createBox","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","TileImage","tilePixelRatio","tileUrlFunction","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","getFormattedArea","transform","abs","getFormattedCircleArea","pow","getFormattedLength","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","innerHTML","classList","add","setOffset","_CustomEvent2","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","RECTANGLE","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","olMath","Scalify","$filter","numberFilter","filterFn","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","_string2","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","olExtent","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","_GeometryType2","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","font_size","optNumber","attrib","assertNumber","getNumber","getOpacityProperty","azimut","getRadiusLine","_Measure2","getLastCoordinate","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","fromString","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","_GPX2","export_","_KML2","fileName","opt_mimeType","mimeType","clones","writeOptions","_MeasureAzimut2","getFormattedAzimutRadius","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","_service2","_filters2","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","orderedKeys","makeSequence","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","imageSize","getImageSize","imageScale","foundText","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","hexColor","readURI_","baseURI","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeCoordinatesTextNode_","dimension","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","kml","xmlnsUri","_fileSaver","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","_DrawAzimut2","_GeometryCollection2","_Projection2","formatLength","formatAzimut","output","getFormattedAzimut","getAzimut","acos","__WEBPACK_AMD_DEFINE_RESULT__","get_URL","webkitURL","save_link","can_use_save_link","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","revoke","file","revokeObjectURL","auto_bom","fromCharCode","FileSaver","no_auto_bom","object_url","filesaver","force","dispatch_all","event_types","listener","dispatch","readyState","INIT","createObjectURL","download","MouseEvent","DONE","FileReader","reader","onloadend","readAsDataURL","fs_error","FS_proto","msSaveOrOpenBlob","abort","WRITING","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","self","__webpack_amd_options__","_Observable2","mapUids_","mapUid","previous","setAt","removeAt","insertAt","current","baseBgLayer","_Layer2","hasUpdates","updatedDimensions","olFunctions","_Pointer2","started_","sketchLayer_","_Draw2","finishDrawing_","mapBrowserEvent","sketchPointGeom","getLength","FALSE","toolContext","activePropertyName","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","scope_","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","ModifyEventType","Modify","handleDragEvent","handleDragEvent_","primaryAction","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","RBush","snappedToVertex_","changingFeature_","dragSegments_","Collection","VectorEventType","handleSourceAdd_","handleSourceRemove_","addFeature_","CollectionEventType","lastPointerEvent_","MODIFY_SEGMENT_CIRCLE_CENTER_INDEX","MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX","isRendered","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","closestVertex","closestOnSegmentData_","equals","insertVertex_","dragSegment","setGeometryCoordinates_","update","handled","getInteracting","SINGLECLICK","removePoint","pointDistanceToSegmentDataSquared_","vertexSegments","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getClosestPoint","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","left","newIndex","right","deleted","mapBrowserPointerEvent","registerTool","tool","opt_defaultActivate","entries","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","_BackgroundLayerMgr2","_recenter2","_resizemap2","_scaleselector2","$element","recenter","attr","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","e","ngeoFeatureHelper","ngeoFeatures","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","_FeatureHelper2","br","component_","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","menuOptions","opt_overlayOptions","_OverlayPositioning2","clickOutListenerKey_","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","actions","action","data-name","prepend","cls","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","close","closest","Element","keyPressListenerKey_","feature_","coordinate_","centerCoordinate_","_Modify2","centerFeatures_","handleDown_","handleDrag_","handleUp_","handleKeyUp_","_Geometry2","getCenterCoordinate_","centerFeature","forEachFeatureAtPixel","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","keyCode","featureListenerKeys_","myFeatures_","vectorSource_","_Translate2","setState_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","handleGeometryChange_","getGeometryCenterPoint_","TranslateEventType","Translate","handleMoveEvent","handleMoveEvent_","layerFilter","lastCoordinate_","layerFilter_","hitTolerance_","hitTolerance","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","elem","getViewport","getHitTolerance","setHitTolerance","oldMap","_colorpickerComponent2","handleColorSet_","handleFeatureSet_","newFeature","previousFeature","propName","_Object2","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","_point2","_rectangle2","_text2","_area2","_azimut2","_length2","drawFeatureCtrl","$compile","contMsg","_MeasureArea2","fromCircle","_MeasureLength2","otherFeatures_","circleFeatures_","_ModifyCircle2","rectangleFeatures_","_ModifyRectangle2","TRUE","interactions","getFeatureCollection_","isRectangle","_RBush2","boundingExtent","_coordinate2","vectorPoints_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","nextFeature","initializeParams_","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","_module4","_ToolActivateMgr2","constant","MainController","ngeoToolActivateMgr","_View2","_OSM2","drawFeatureActive","drawFeatureToolActivate","_ToolActivate2","pointerMoveActive","pointerMoveToolActivate","un","tooltip","trigger","_drawFeatureComponent2","_featureStyleComponent2","_exportfeaturesComponent2","_btnComponent2","drawActive","drawToolActivate","mapSelectActive","longPressTimeout_","mapSelectToolActivate","ngeoToolActivateMgr_","selectedFeature","selectedFeatures","modify_","menu_","modifyToolActivate","translate_","rotate_","_Rotate2","initializeInteractions_","rotateToolActivate","translateToolActivate","listSelectionInProgress_","handleActiveChange_","unregisterInteractions_","registerInteractions_","handleMapSelectActiveChange_","nameProperty","drawUid","otherUid","toolMgr","handleTranslateEnd_","handleRotateEnd_","selectFeatureFromList","getFeaturesArray","clearFeatures","confirm","mapDiv","assertElement","handleMapClick_","handleMapContextMenu_","handleMapTouchStart_","handleMapTouchEnd_","ret","getEventPixel","_Menu2","handleMenuActionClick_","element_","items_","$menu","aria-labelledby","$item","handleMenuItemClick_","formats_","handleElementClick_","handleDestroy_","removeClass","parentElement","off"],"mappings":"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","file":"drawfeature.2db0c7930592b6fcc003.js","sourcesContent":["/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 46\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  const length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 147\n// module chunks = 0 1 2 3 4 5 6 7 8 11 13 14","/**\n * @module ngeo.misc.filters\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 165\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 166\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ngeo.download.service\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/file-saver/FileSaver.js\n// module id = 199\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 200\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 201\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/**\n * @module ngeo.interaction.MeasureBaseOptions\n */\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.misc.ToolActivate\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @module ngeo.misc.btnComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ol/interaction/ModifyEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature modification start\n   * @event ol.interaction.Modify.Event#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ol.interaction.Modify.Event#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/ModifyEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport ModifyEventType from '../interaction/ModifyEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ol.interaction.Modify.Event\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Modify.handleDownEvent_,\n    handleDragEvent: Modify.handleDragEvent_,\n    handleEvent: Modify.handleEvent,\n    handleUpEvent: Modify.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.primaryAction;\n\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.altKeyOnly(mapBrowserEvent) &&\n      _ol_events_condition_.singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : _ol_events_condition_.always;\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      Modify.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  _ol_events_.listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {ol.MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * @define {number} The segment index assigned to a circle's center when\n * breaking up a cicrle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX = 0;\n\n/**\n * @define {number} The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  _ol_events_.listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_events_.unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {ol.Feature} */ (evt.element));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {ol.Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  let coordinates, i, ii, segmentData;\n  for (i = 0, ii = points.length; i < ii; ++i) {\n    coordinates = points[i];\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  let i, ii, segment, segmentData;\n  for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    segment = coordinates.slice(i, i + 2);\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = lines.length; j < jj; ++j) {\n    coordinates = lines[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, k, kk, rings, segment, segmentData;\n  for (k = 0, kk = polygons.length; k < kk; ++k) {\n    rings = polygons[k];\n    for (j = 0, jj = rings.length; j < jj; ++j) {\n      coordinates = rings[j];\n      for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segment = coordinates.slice(i, i + 2);\n        segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(\n      this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nModify.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDownEvent_ = function(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(Modify.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = Modify.closestOnSegmentData_(pixelCoordinate, segmentDataMatch);\n        if (_ol_coordinate_.equals(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (_ol_coordinate_.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (_ol_coordinate_.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDragEvent_ = function(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(_ol_coordinate_.distance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleUpEvent_ = function(evt) {\n  let segmentData;\n  let geometry;\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    segmentData = this.dragSegments_[i][0];\n    geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment),\n        segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Modify}\n * @api\n */\nModify.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, a) -\n        Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = Modify.closestOnSegmentData_(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = _ol_coordinate_.distance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n        const squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((_ol_coordinate_.equals(closestSegment[0], segment[0]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[1]) ||\n              (_ol_coordinate_.equals(closestSegment[0], segment[1]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nModify.pointDistanceToSegmentDataSquared_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {ol.geom.Circle} */ (geometry);\n\n    if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            _ol_coordinate_.squaredDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return _ol_coordinate_.squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n};\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {ol.Coordinate} The point closest to the specified line segment.\n */\nModify.closestOnSegmentData_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return _ol_coordinate_.closestOnSegment(pointCoordinates, segmentData.segment);\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} segmentData Segment data.\n * @param {ol.Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment),\n    newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nModify.getDefaultStyleFunction = function() {\n  const style = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Modify} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.ModifyEvent}\n * @param {ol.interaction.ModifyEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features modified.\n * @param {ol.MapBrowserPointerEvent} mapBrowserPointerEvent Associated\n *     {@link ol.MapBrowserPointerEvent}.\n */\nModify.Event = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link ol.MapBrowserEvent}.\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\ninherits(Modify.Event, Event);\nexport default Modify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ngeo.map.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.recenter\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        }, this);\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/Controller.js","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the polygon.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click starting point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureArea.js","/**\n * @module ngeo.misc.colorpickerComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/misc/colorpickerComponent.html`;\n  });\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/colorpickerComponent.js","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Menu.js","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(this.addFeature_, this);\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Rotate.js","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olBase.extent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Translate.js","/**\n * @module ol/interaction/TranslateEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature translation start.\n   * @event ol.interaction.Translate.Event#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event ol.interaction.Translate.Event#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event ol.interaction.Translate.Event#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/TranslateEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport BaseObject from '../Object.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport TranslateEventType from '../interaction/TranslateEventType.js';\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Translate.Event\n * @param {olx.interaction.TranslateOptions=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: Translate.handleDownEvent_,\n    handleDragEvent: Translate.handleDragEvent_,\n    handleMoveEvent: Translate.handleMoveEvent_,\n    handleUpEvent: Translate.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(ol.layer.Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(ol.layer.Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDownEvent_ = function(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleUpEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDragEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleMoveEvent_ = function(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n};\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {ol.Pixel} pixel Pixel coordinate to test for intersection.\n * @param {ol.PluggableMap} map Map to test the intersection on.\n * @return {ol.Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {ol.PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Translate} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.interaction.TranslateEvent}\n * @param {ol.interaction.TranslateEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features translated.\n * @param {ol.Coordinate} coordinate The event coordinate.\n */\nTranslate.Event = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {ol.Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\ninherits(Translate.Event, Event);\nexport default Translate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Translate.js\n// module id = null\n// module chunks = ","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/featureStyleComponent.html`\n  };\n};\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          olObject.getChangeEventType(propName),\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/featureStyleComponent.js","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/component.js","/**\n * @module ngeo.draw.point\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/point.js","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/rectangle.js","/**\n * @module ngeo.draw.text\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/text.js","/**\n * @module ngeo.measure.area\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/area.js","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = olGeomPolygon.fromCircle(circle, 64);\n          event.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/azimut.js","/**\n * @module ngeo.measure.length\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/length.js","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    }, this);\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    }, this);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  }, this);\n\n  if (active && map) {\n    this.features_.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Modify.js","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olCoordinate from 'ol/coordinate.js';\nimport olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      exports.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(this.addFeature_, this);\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry =\n      /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = olGeomPolygon.fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultStyleFunction = function() {\n  const style = olStyleStyle.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyCircle.js","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  // Get the style for the box and the points\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach(this.addFeature_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyRectangle.js","/**\n * @module gmfapp.drawfeature\n */\nconst exports = {};\n\nimport './drawfeature.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfDrawingModule.name,\n  gmfMapComponent.name,\n  ngeoMapModule.name, // for ngeo.map.FeatureOverlay, perhaps remove me\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n *     manager\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureHelper, ngeoFeatures,\n  ngeoToolActivateMgr, ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  const view = new olView({\n    center: [0, 0],\n    zoom: 3\n  });\n\n  ngeoFeatureHelper.setProjection(googAsserts.assert(view.getProjection()));\n\n  const featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  featureOverlay.setFeatures(ngeoFeatures);\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: view\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = true;\n\n  const drawFeatureToolActivate = new ngeoMiscToolActivate(\n    this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', drawFeatureToolActivate, true);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pointerMoveActive = false;\n\n  const pointerMoveToolActivate = new ngeoMiscToolActivate(\n    this, 'pointerMoveActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', pointerMoveToolActivate, false);\n\n  $scope.$watch(\n    () => this.pointerMoveActive,\n    (newVal) => {\n      if (newVal) {\n        this.map.on('pointermove', this.handleMapPointerMove_, this);\n      } else {\n        this.map.un('pointermove', this.handleMapPointerMove_, this);\n        $('#pointermove-feature').html('');\n      }\n    }\n  );\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapPointerMove_ = function(evt) {\n  const pixel = evt.pixel;\n\n  const feature = this.map.forEachFeatureAtPixel(pixel, feature => feature);\n\n  $('#pointermove-feature').html(\n    (feature) ? feature.get(ngeoFormatFeatureProperties.NAME) : 'None'\n  );\n\n  this.scope_.$apply();\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/drawfeature.js","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/module.js","/**\n * @module gmf.drawing.drawFeatureComponent\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/drawFeatureComponent.html`\n  };\n};\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.addInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.removeInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/drawFeatureComponent.js","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    }, this);\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/exportfeaturesComponent.js"],"sourceRoot":""}