{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/misc/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./node_modules/file-saver/FileSaver.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/btnComponent.js","webpack:///./node_modules/openlayers/src/ol/interaction/ModifyEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Modify.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/map/module.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./src/draw/Controller.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/Menu.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/interaction/Translate.js","webpack:///./node_modules/openlayers/src/ol/interaction/TranslateEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Translate.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./src/draw/component.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/interaction/Modify.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./contribs/gmf/examples/drawfeature.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./src/editing/exportfeaturesComponent.js"],"names":["__WEBPACK_IMPORTED_MODULE_1__string_js__","__webpack_require__","XSD","readBoolean","node","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","exec","undefined","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","call","this","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","prototype","appendLineString","lineString","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","slice","push","length","changed","clone","multiLineString","setFlatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getExtent","getRevision","Math","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","stride","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","getCoordinates","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","index","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","i","ii","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","XY","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","extent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","appendPoint","point","multiPoint","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","olBase","olArray","exports","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","_EventTarget2","default","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","inherits","findGroupByLayerNodeName","themes","name","theme","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","getUid","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","type","gmfLayerWMTS","_asserts2","assert","url","createWMTSLayerFromCapabilitites","then","bind","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","data","promises","background_layers","map","itemType","reverse","all","collection","filter","l","_Collection2","createBasicGroup","layerGroupCreationFn","values","getString","_Tile2","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","window","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","module","angular","_LayerHelper2","value","service","requires","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","indexOf","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","dataSource_","_decorate2","layerLoading","_events2","listen","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","_index2","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeature","source","opt_options","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","features","readFeaturesFromDocument","readFeatures","readFeaturesFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","writeFeature","feature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","geometry","writeGeometryNode","options","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","_Condition2","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","wfsFormat","supportsWFS","format","_GML4","GML2","_GML2","_WFS2","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_inherits","_DataSource2","_createClass","key","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","_AttributeType2","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","active","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","objectStack","localName","namespaceURI","pushParseAndPop","context","prefix","defaultPrefix","ft","nodeName","split","pop","count","uri","candidate","ns","parsersNS","featureTypes","isArray","p","parsers","makeArrayPusher","readFeatureElement","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","XYZ","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","Point","LineString","Polygon","RING_PARSERS","LinearRing","getReadOptions","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","_ImageWMS2","serverType","crossOrigin","updateParams","_Image2","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_dimensions","parser","_WMTSCapabilities2","preload","Infinity","result","read","_WMTS2","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","_Group2","setLayers","getGroupFromMap","groupName","groups","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","getParams","random","updateWMSLayerState","names","getQuerySourceIds","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","unshift","addGroupByName","_this4","_Themes2","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","_Controller2","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","includes","msg","notify","_Message2","INFORMATION","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this8","_Notification2","_Service2","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","_Location2","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","setAttribute","getGeometryName","serializers","getProperties","keys","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","hasZ","parts","getCoords_","line","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","_MultiPoint2","_MultiLineString2","_MultiPolygon2","navigator","userAgent","hex","rgb","r","g","b","Error","colorZeroPadding","queryData","pairs","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","_condition2","noModifierKeys","singleClick","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","ol","getImage","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","projection","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","floor","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","round","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","CARMENTA_SERVER","QGIS","bbox","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","writeOgcFidFilter_","getTypeName_","featurePrefix","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","propertyName","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","clear","VisibilityState","ON","OFF","remove","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","_utils2","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","_index","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","color","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setMap","setStyle","createFunction","GeometryCollection","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","geometries","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","unlisten","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","interaction","assertInstanceof","_Interaction2","defineProperty","getActive","setActive","_Base2","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","element","$applyAsync","ngeoDebounce","ngeoEventHelper","q_","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","gmfTreeManager_","ngeoWfsPermalink_","gmfUser_","map_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","_RegularShape2","_Stroke2","width","radius","radius2","mapTooltip_","featureHashFormat_","_FeatureHash2","encodeStyles","propertiesType","fillColor","_FeatureProperties2","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","extend","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","_Manager2","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","zoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","_Feature2","_Point2","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","class","removeOverlay","_Popover2","position","addOverlay","f","FEATURES","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","view","getGeometry","getSize","fit","_constants2","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","_OGC2","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","evt","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_module2","_features2","_EventHelper2","OpenLayersLayerProperties","regexp","key1","key2","_index4","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","html","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","_OGCGroup2","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","apply","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","listenerKeys_","initListenerKey_","NOT","OR","directive_","restrict","link","scope","attrs","prop","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","_TreeManager2","_Event","detail","_Event2","factory_","func","wait","invokeApply","timeout","_len","args","_key","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","featureIdentifier_","layerIdentifier_","readFeatures_","toRemove","layerFeatures","gmlFeatures","http_","mapViewChangePromise_","ensureSnapInteractionsOnTop","removeInteraction","addInteraction","treeCtrlsUnregister_","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","_Snap2","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","loadAllItems_","calculateExtent","projCode","getFeatureOptions","xmlSerializer","featureRequestXml","featureRequest","post","_Permalink2","_Snapping2","_component2","_FeatureOverlayMgr2","manageResize","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","_Overlay","originalEl","closeEl_","contentEl_","_Overlay2","getElement","getMap","popover","contentEl","setTimeout","content","one","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","_TextFeature2","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","_FeatureHashStyleType2","LINE_STRING","POLYGON","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","imageStyle","strokeStyle","textStyle","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","getRadius","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","asArray","fillColorHex","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","readLineStringGeometry_","decodeCoordinates_","_LineString2","_GeometryLayout2","readMultiLineStringGeometry_","readPointGeometry_","readMultiPointGeometry_","readPolygonGeometry_","_Polygon2","readMultiPolygonGeometry_","multipolygon","setStyleInFeature_","getStyleProperties_","_Fill2","_Circle2","_Text2","setStyleProperties_","setProperties","castValue_","numProperties","boolProperties","keyVal","writeLineStringGeometry_","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","shift","dx","dy","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","_Feature4","transformWithOptions","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","getInExtent","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","min","closestOnCircle","closestOnSegment","distance","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","segmentData","insert","k","kk","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","condition_","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","ACTIVE","updateState_","createDefaultEditing","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","setGeometry","last","sketchLineGeom","getLinearRing","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","addFeatures","createRegularPolygon","opt_sides","opt_angle","atan","createBox","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","TileImage","tilePixelRatio","tileUrlFunction","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","getFormattedArea","transform","abs","getFormattedCircleArea","pow","getFormattedLength","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","innerHTML","classList","add","setOffset","_CustomEvent2","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","RECTANGLE","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","olMath","Scalify","$filter","numberFilter","filterFn","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","_string2","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","olExtent","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","_GeometryType2","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","font_size","optNumber","attrib","assertNumber","getNumber","getOpacityProperty","azimut","getRadiusLine","_Measure2","getLastCoordinate","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","fromString","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","_GPX2","export_","_KML2","fileName","opt_mimeType","mimeType","clones","writeOptions","_MeasureAzimut2","getFormattedAzimutRadius","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","_service2","_filters2","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","orderedKeys","makeSequence","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","imageSize","getImageSize","imageScale","foundText","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","hexColor","readURI_","baseURI","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeCoordinatesTextNode_","dimension","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","kml","xmlnsUri","_fileSaver","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","_DrawAzimut2","_GeometryCollection2","_Projection2","formatLength","formatAzimut","output","getFormattedAzimut","getAzimut","acos","__WEBPACK_AMD_DEFINE_RESULT__","get_URL","webkitURL","save_link","can_use_save_link","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","revoke","file","revokeObjectURL","auto_bom","fromCharCode","FileSaver","no_auto_bom","object_url","filesaver","force","dispatch_all","event_types","listener","dispatch","readyState","INIT","createObjectURL","download","MouseEvent","DONE","FileReader","reader","onloadend","readAsDataURL","fs_error","FS_proto","msSaveOrOpenBlob","abort","WRITING","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","self","__webpack_amd_options__","_Observable2","mapUids_","mapUid","previous","setAt","removeAt","insertAt","current","baseBgLayer","_Layer2","hasUpdates","updatedDimensions","olFunctions","_Pointer2","started_","sketchLayer_","_Draw2","finishDrawing_","mapBrowserEvent","sketchPointGeom","getLength","FALSE","toolContext","activePropertyName","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","scope_","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","ModifyEventType","Modify","handleDragEvent","handleDragEvent_","primaryAction","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","RBush","snappedToVertex_","changingFeature_","dragSegments_","Collection","VectorEventType","handleSourceAdd_","handleSourceRemove_","addFeature_","CollectionEventType","lastPointerEvent_","MODIFY_SEGMENT_CIRCLE_CENTER_INDEX","MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX","isRendered","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","closestVertex","closestOnSegmentData_","equals","insertVertex_","dragSegment","setGeometryCoordinates_","update","handled","getInteracting","SINGLECLICK","removePoint","pointDistanceToSegmentDataSquared_","vertexSegments","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getClosestPoint","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","left","newIndex","right","deleted","mapBrowserPointerEvent","registerTool","tool","opt_defaultActivate","entries","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","_BackgroundLayerMgr2","_recenter2","_resizemap2","_scaleselector2","$element","recenter","attr","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","e","ngeoFeatureHelper","ngeoFeatures","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","_FeatureHelper2","br","component_","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","menuOptions","opt_overlayOptions","_OverlayPositioning2","clickOutListenerKey_","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","actions","action","data-name","prepend","cls","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","close","closest","Element","keyPressListenerKey_","feature_","coordinate_","centerCoordinate_","_Modify2","centerFeatures_","handleDown_","handleDrag_","handleUp_","handleKeyUp_","_Geometry2","getCenterCoordinate_","centerFeature","forEachFeatureAtPixel","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","keyCode","featureListenerKeys_","myFeatures_","vectorSource_","_Translate2","setState_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","handleGeometryChange_","getGeometryCenterPoint_","TranslateEventType","Translate","handleMoveEvent","handleMoveEvent_","layerFilter","lastCoordinate_","layerFilter_","hitTolerance_","hitTolerance","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","elem","getViewport","getHitTolerance","setHitTolerance","oldMap","_colorpickerComponent2","handleColorSet_","handleFeatureSet_","newFeature","previousFeature","propName","_Object2","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","_point2","_rectangle2","_text2","_area2","_azimut2","_length2","drawFeatureCtrl","$compile","contMsg","_MeasureArea2","fromCircle","_MeasureLength2","otherFeatures_","circleFeatures_","_ModifyCircle2","rectangleFeatures_","_ModifyRectangle2","TRUE","interactions","getFeatureCollection_","isRectangle","_RBush2","boundingExtent","_coordinate2","vectorPoints_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","nextFeature","initializeParams_","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","_module4","_ToolActivateMgr2","constant","MainController","ngeoToolActivateMgr","_View2","_OSM2","drawFeatureActive","drawFeatureToolActivate","_ToolActivate2","pointerMoveActive","pointerMoveToolActivate","un","tooltip","trigger","_drawFeatureComponent2","_featureStyleComponent2","_exportfeaturesComponent2","_btnComponent2","drawActive","drawToolActivate","mapSelectActive","longPressTimeout_","mapSelectToolActivate","ngeoToolActivateMgr_","selectedFeature","selectedFeatures","modify_","menu_","modifyToolActivate","translate_","rotate_","_Rotate2","initializeInteractions_","rotateToolActivate","translateToolActivate","listSelectionInProgress_","handleActiveChange_","unregisterInteractions_","registerInteractions_","handleMapSelectActiveChange_","nameProperty","drawUid","otherUid","toolMgr","handleTranslateEnd_","handleRotateEnd_","selectFeatureFromList","getFeaturesArray","clearFeatures","confirm","mapDiv","assertElement","handleMapClick_","handleMapContextMenu_","handleMapTouchStart_","handleMapTouchEnd_","ret","getEventPixel","_Menu2","handleMenuActionClick_","element_","items_","$menu","aria-labelledby","$item","handleMenuItemClick_","formats_","handleElementClick_","handleDestroy_","removeClass","parentElement","off"],"mappings":"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","file":"drawfeature.94a2ba3ef41a7145ba40.js","sourcesContent":["/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  const length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 147\n// module chunks = 0 1 2 3 4 5 6 7 8 11 13 14","/**\n * @module ngeo.misc.filters\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 165\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 166\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ngeo.download.service\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/file-saver/FileSaver.js\n// module id = 199\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 200\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 201\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/**\n * @module ngeo.interaction.MeasureBaseOptions\n */\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.misc.ToolActivate\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @module ngeo.misc.btnComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ol/interaction/ModifyEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature modification start\n   * @event ol.interaction.Modify.Event#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ol.interaction.Modify.Event#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/ModifyEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport ModifyEventType from '../interaction/ModifyEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ol.interaction.Modify.Event\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Modify.handleDownEvent_,\n    handleDragEvent: Modify.handleDragEvent_,\n    handleEvent: Modify.handleEvent,\n    handleUpEvent: Modify.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.primaryAction;\n\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.altKeyOnly(mapBrowserEvent) &&\n      _ol_events_condition_.singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : _ol_events_condition_.always;\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      Modify.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  _ol_events_.listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {ol.MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * @define {number} The segment index assigned to a circle's center when\n * breaking up a cicrle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX = 0;\n\n/**\n * @define {number} The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  _ol_events_.listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_events_.unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {ol.Feature} */ (evt.element));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {ol.Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  let coordinates, i, ii, segmentData;\n  for (i = 0, ii = points.length; i < ii; ++i) {\n    coordinates = points[i];\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  let i, ii, segment, segmentData;\n  for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    segment = coordinates.slice(i, i + 2);\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = lines.length; j < jj; ++j) {\n    coordinates = lines[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, k, kk, rings, segment, segmentData;\n  for (k = 0, kk = polygons.length; k < kk; ++k) {\n    rings = polygons[k];\n    for (j = 0, jj = rings.length; j < jj; ++j) {\n      coordinates = rings[j];\n      for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segment = coordinates.slice(i, i + 2);\n        segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(\n      this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nModify.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDownEvent_ = function(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(Modify.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = Modify.closestOnSegmentData_(pixelCoordinate, segmentDataMatch);\n        if (_ol_coordinate_.equals(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (_ol_coordinate_.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (_ol_coordinate_.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDragEvent_ = function(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(_ol_coordinate_.distance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleUpEvent_ = function(evt) {\n  let segmentData;\n  let geometry;\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    segmentData = this.dragSegments_[i][0];\n    geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment),\n        segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Modify}\n * @api\n */\nModify.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, a) -\n        Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = Modify.closestOnSegmentData_(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = _ol_coordinate_.distance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n        const squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((_ol_coordinate_.equals(closestSegment[0], segment[0]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[1]) ||\n              (_ol_coordinate_.equals(closestSegment[0], segment[1]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nModify.pointDistanceToSegmentDataSquared_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {ol.geom.Circle} */ (geometry);\n\n    if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            _ol_coordinate_.squaredDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return _ol_coordinate_.squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n};\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {ol.Coordinate} The point closest to the specified line segment.\n */\nModify.closestOnSegmentData_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return _ol_coordinate_.closestOnSegment(pointCoordinates, segmentData.segment);\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} segmentData Segment data.\n * @param {ol.Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment),\n    newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nModify.getDefaultStyleFunction = function() {\n  const style = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Modify} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.ModifyEvent}\n * @param {ol.interaction.ModifyEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features modified.\n * @param {ol.MapBrowserPointerEvent} mapBrowserPointerEvent Associated\n *     {@link ol.MapBrowserPointerEvent}.\n */\nModify.Event = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link ol.MapBrowserEvent}.\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\ninherits(Modify.Event, Event);\nexport default Modify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ngeo.map.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.recenter\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        }, this);\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/Controller.js","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the polygon.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click starting point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureArea.js","/**\n * @module ngeo.misc.colorpickerComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/misc/colorpickerComponent.html`;\n  });\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/colorpickerComponent.js","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Menu.js","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(this.addFeature_, this);\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Rotate.js","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olBase.extent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Translate.js","/**\n * @module ol/interaction/TranslateEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature translation start.\n   * @event ol.interaction.Translate.Event#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event ol.interaction.Translate.Event#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event ol.interaction.Translate.Event#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/TranslateEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport BaseObject from '../Object.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport TranslateEventType from '../interaction/TranslateEventType.js';\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Translate.Event\n * @param {olx.interaction.TranslateOptions=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: Translate.handleDownEvent_,\n    handleDragEvent: Translate.handleDragEvent_,\n    handleMoveEvent: Translate.handleMoveEvent_,\n    handleUpEvent: Translate.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(ol.layer.Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(ol.layer.Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDownEvent_ = function(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleUpEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDragEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleMoveEvent_ = function(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n};\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {ol.Pixel} pixel Pixel coordinate to test for intersection.\n * @param {ol.PluggableMap} map Map to test the intersection on.\n * @return {ol.Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {ol.PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Translate} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.interaction.TranslateEvent}\n * @param {ol.interaction.TranslateEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features translated.\n * @param {ol.Coordinate} coordinate The event coordinate.\n */\nTranslate.Event = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {ol.Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\ninherits(Translate.Event, Event);\nexport default Translate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Translate.js\n// module id = null\n// module chunks = ","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/featureStyleComponent.html`\n  };\n};\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          olObject.getChangeEventType(propName),\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/featureStyleComponent.js","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/component.js","/**\n * @module ngeo.draw.point\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/point.js","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/rectangle.js","/**\n * @module ngeo.draw.text\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/text.js","/**\n * @module ngeo.measure.area\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/area.js","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = olGeomPolygon.fromCircle(circle, 64);\n          event.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/azimut.js","/**\n * @module ngeo.measure.length\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/length.js","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    }, this);\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    }, this);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  }, this);\n\n  if (active && map) {\n    this.features_.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Modify.js","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olCoordinate from 'ol/coordinate.js';\nimport olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      exports.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(this.addFeature_, this);\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry =\n      /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = olGeomPolygon.fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultStyleFunction = function() {\n  const style = olStyleStyle.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyCircle.js","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  // Get the style for the box and the points\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach(this.addFeature_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyRectangle.js","/**\n * @module gmfapp.drawfeature\n */\nconst exports = {};\n\nimport './drawfeature.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name, // Change me when gmf.Theme and other dependencies are in a module\n  gmfDrawingModule.name,\n  gmfMapComponent.name,\n  ngeoMapModule.name, // for ngeo.map.FeatureOverlay, perhaps remove me\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n *     manager\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureHelper, ngeoFeatures,\n  ngeoToolActivateMgr, ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  const view = new olView({\n    center: [0, 0],\n    zoom: 3\n  });\n\n  ngeoFeatureHelper.setProjection(googAsserts.assert(view.getProjection()));\n\n  const featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  featureOverlay.setFeatures(ngeoFeatures);\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: view\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = true;\n\n  const drawFeatureToolActivate = new ngeoMiscToolActivate(\n    this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', drawFeatureToolActivate, true);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pointerMoveActive = false;\n\n  const pointerMoveToolActivate = new ngeoMiscToolActivate(\n    this, 'pointerMoveActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', pointerMoveToolActivate, false);\n\n  $scope.$watch(\n    () => this.pointerMoveActive,\n    (newVal) => {\n      if (newVal) {\n        this.map.on('pointermove', this.handleMapPointerMove_, this);\n      } else {\n        this.map.un('pointermove', this.handleMapPointerMove_, this);\n        $('#pointermove-feature').html('');\n      }\n    }\n  );\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapPointerMove_ = function(evt) {\n  const pixel = evt.pixel;\n\n  const feature = this.map.forEachFeatureAtPixel(pixel, feature => feature);\n\n  $('#pointermove-feature').html(\n    (feature) ? feature.get(ngeoFormatFeatureProperties.NAME) : 'None'\n  );\n\n  this.scope_.$apply();\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/drawfeature.js","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/module.js","/**\n * @module gmf.drawing.drawFeatureComponent\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/drawFeatureComponent.html`\n  };\n};\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.addInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.removeInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/drawFeatureComponent.js","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nngeoBase.module.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    }, this);\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/exportfeaturesComponent.js"],"sourceRoot":""}