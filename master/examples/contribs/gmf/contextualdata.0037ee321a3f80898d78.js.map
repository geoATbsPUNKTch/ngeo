{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./src/misc/filters.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/statemanager/Service.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/contextualdata.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","_events2","default","unlistenByKey","module","angular","service","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","_asserts2","assertInstanceof","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","name","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","_TreeManager2","_Service2","value","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","_Collection2","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","olBase","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","_Themes2","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","_Controller2","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","_Snap2","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","_WFS2","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","_Permalink2","_Snapping2","_component2","_FeatureOverlayMgr2","manageResize","controller","bindToController","templateUrl","_index2","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","_Overlay2","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","_TextFeature2","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","_FeatureHashStyleType2","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","_utils2","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","_LineString2","setFlatCoordinates","_GeometryLayout2","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","_MultiLineString2","readPointGeometry_","point","_Point2","readMultiPointGeometry_","multiPoint","_MultiPoint2","readPolygonGeometry_","rings","polygon","_Polygon2","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","_MultiPolygon2","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","_Fill2","color","_Stroke2","width","_Circle2","fill","stroke","_Text2","_Style2","image","setStyleProperties_","getGeometry","_FeatureProperties2","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","_Feature2","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","_Feature4","transformWithOptions","_Location2","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","_proj4","defs","register","get","setExtent","Proj","projections","add","_somerc2","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","olMath","Scalify","$filter","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","Infinity","sign","abs","nb_decimal","log","factor","pow","decimal","unit","str_number","groups","str_unit","unshift","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","opt_template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","_string2","padNumber","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","_EventTarget2","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","_Tile2","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","_LayerHelper2","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","dataSource_","_decorate2","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","gmfRasterUrl","url_","getRaster","opt_params","Param","X","Y","handleGetRaster_","resp","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","updateParams","deleteParam","RegExp","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","_Condition2","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","return","supportsWFS","format","_GML4","GML2","_GML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_inherits","_DataSource2","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","_AttributeType2","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","_module2","_filters2","constant","MainController","_OSM2","_View2","resolutions","center","zoom","onRasterData","elelvation_diff","_component","olObj","_RasterService2","$compile","gmfRaster","overlay_","$compile_","$scope_","gmfRaster_","on","hidePopover","preparePopover_","mapDiv","getTargetElement","assertElement","handleMapContextMenu_","event","$apply","getEventPixel","setContent_","preventDefault","showPopover","setPosition","$new","content_","mapProjection","proj","coord","transform","getRasterSuccess","assign","container","document","createElement","classList","css","arrow","stopEvent","autoPan","autoPanAnimation","duration","positioning","addOverlay","contentDirective_","gmfContextualdatacontentTemplateUrl","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","FORMAT","LAYERS","olServerType","_ImageWMS2","serverType","_Image2","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","_WMTSCapabilities2","preload","read","_WMTS2","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","_Group2","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","toggleNodeCheck_","childNode","isChecked","msg","notify","_Message2","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","_Notification2","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","_condition2","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","_Vector4","useSpatialIndex","layer_","_Vector2","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","_FeatureOverlay2","createFunction","proj4","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","adjust_lon","tsfnz","phi","com","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","e","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","_Interaction2","defineProperty","getActive","setActive","_Base2","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","_RegularShape2","radius2","angle","mapTooltip_","featureHashFormat_","_FeatureHash2","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","_Manager2","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","_Popover2","position","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","_constants2","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","_OGC2","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_features2","_EventHelper2","OpenLayersLayerProperties","regexp","key1","key2","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","_OGCGroup2","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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","file":"contextualdata.0037ee321a3f80898d78.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ngeo.misc.filters\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filters.js","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module gmf.raster.RasterService\n */\nimport gmfBase from 'gmf/index.js';\n\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/RasterService.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.contextualdata\n */\nconst exports = {};\n\nimport './contextualdata.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\n\nimport gmfMapComponent from 'gmf/map/component.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfContextualdataModule.name,\n  gmfMapComponent.name,\n  ngeoMiscFilters.name,\n]);\n\n\nexports.module.value(\n  'gmfRasterUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/raster');\n\nexports.module.value(\n  'gmfContextualdatacontentTemplateUrl',\n  'partials/contextualdata.html');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 3\n    })\n  });\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate The coordinate for the right-clicked\n *     point.\n * @param {Object} data The data received from the raster service.\n * @return {Object} The additional data to add to the scope for the\n *     contextualdata popover.\n */\nexports.MainController.prototype.onRasterData = function(coordinate, data) {\n  return {\n    'elelvation_diff': data['srtm'] - data['aster']\n  };\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/contextualdata.js","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/contextualdata/module.js","/**\n * @module gmf.contextualdata.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $scope, gmfRaster) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n    this.overlay_.setPosition(coordinate);\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/contextualdata/component.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 46\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}