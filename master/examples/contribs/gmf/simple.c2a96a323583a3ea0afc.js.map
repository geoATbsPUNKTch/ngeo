{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./contribs/gmf/examples/simple.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","_events2","default","unlistenByKey","module","angular","service","_index2","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","_asserts2","assertInstanceof","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","_TreeManager2","_Service2","value","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","_Collection2","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","olBase","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","_Themes2","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","_Controller2","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","_Snap2","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","_WFS2","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","_Permalink2","_Snapping2","_component2","_FeatureOverlayMgr2","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","_Overlay2","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","_TextFeature2","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","_FeatureHashStyleType2","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","_utils2","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","_LineString2","setFlatCoordinates","_GeometryLayout2","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","_MultiLineString2","readPointGeometry_","point","_Point2","readMultiPointGeometry_","multiPoint","_MultiPoint2","readPolygonGeometry_","rings","polygon","_Polygon2","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","_MultiPolygon2","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","_Fill2","color","_Stroke2","width","_Circle2","fill","stroke","_Text2","_Style2","image","setStyleProperties_","getGeometry","_FeatureProperties2","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","_Feature2","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","_Feature4","transformWithOptions","_Location2","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","_EventTarget2","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","_Tile2","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","_LayerHelper2","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","dataSource_","_decorate2","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","_Condition2","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","supportsWFS","format","_GML4","GML2","_GML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_inherits","_DataSource2","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","_AttributeType2","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","_ImageWMS2","serverType","updateParams","_Image2","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","_WMTSCapabilities2","preload","Infinity","read","_WMTS2","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","_Group2","getGroupFromMap","groupName","groups","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","_Message2","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","_Notification2","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","constant","MainController","_OSM2","_View2","center","zoom","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","event","_condition2","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","_Vector4","useSpatialIndex","layer_","_Vector2","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","_FeatureOverlay2","createFunction","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","_Interaction2","defineProperty","getActive","setActive","_Base2","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","_RegularShape2","radius2","angle","mapTooltip_","featureHashFormat_","_FeatureHash2","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","_Manager2","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","_Popover2","position","addOverlay","f","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","_constants2","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","_OGC2","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_module2","_features2","_EventHelper2","OpenLayersLayerProperties","regexp","key1","key2","_index4","container","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","_OGCGroup2","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"wHAeA,MAAAA,EAAA,SAAAC,GAMAC,KAAAC,SAAAF,GAOAD,EAAAI,UAAAC,WAAA,WACA,OAAAH,KAAAC,UAGA,IAAAG,EAAA,ECdA,MAAAC,EAAA,SAAAN,EAAAO,GAEAF,EAAAG,KAAAP,KAAAD,GAMAC,KAAAM,WAAAE,MAAAN,UAAAO,MAAAF,KAAAG,UAAA,GACAC,OAAAC,EAAA,EAAAD,CAAAX,KAAAM,WAAAO,QAAA,OAGAF,OAAAG,EAAA,SAAAH,CAAAN,EAAAD,GACA,IAAAW,EAAA,EChBA,MAAAC,EAAA,SAAAV,GACA,MAAAW,GAAA,OAAAC,OAAAV,MAAAN,UAAAO,MAAAF,KAAAG,YACAK,EAAAI,MAAAnB,KAAAiB,IAGAN,OAAAG,EAAA,SAAAH,CAAAK,EAAAD,GAEA,IAAAK,EAAA,ECHA,MAAAC,EAAA,SAAAC,EAAAC,EAAAC,GAEApB,EAAAG,KAAAP,KAAA,QAMAA,KAAAsB,eAMAtB,KAAAuB,SAMAvB,KAAAyB,QAAAD,GAGAb,OAAAG,EAAA,SAAAH,CAAAU,EAAAjB,GAEA,IAAAsB,EAAA,ECvBA,MAAAC,EAAA,SAAA5B,EAAAuB,EAAAM,EAAAJ,GAEApB,EAAAG,KAAAP,KAAAD,GAMAC,KAAAsB,gBAAA,WAMAtB,KAAA4B,WAMA5B,KAAAyB,QAAAD,GAGAb,OAAAG,EAAA,SAAAH,CAAAgB,EAAAvB,GAEA,IAAAyB,EAAA,EC3BA,MAAAC,EAAA,SAAAR,EAAAM,EAAAJ,GAEAK,EAAAtB,KAAAP,KAAA,WAAAsB,EAAAM,EAAAJ,IAIAb,OAAAG,EAAA,SAAAH,CAAAmB,EAAAD,GACA,IAAAE,EAAA,ECTA,MAAAC,EAAA,SAAAjC,EAAAkC,GAEA7B,EAAAG,KAAAP,KAAAD,GAMAC,KAAAiC,gBAGAtB,OAAAG,EAAA,SAAAH,CAAAqB,EAAA5B,GAEA,IAAA8B,EAAA,ECbA,MAAAC,EAAA,SAAAF,EAAAG,EAAAC,GACAH,EAAA3B,KAAAP,KAAA,SAAAiC,GAMAjC,KAAAoC,QAMApC,KAAAqC,OAGA1B,OAAAG,EAAA,SAAAH,CAAAwB,EAAAD,GACA,IAAAI,EAAA,ECfA,MAAAC,EAAA,SAAAxC,EAAAkC,EAAAO,EAAAC,GAEAP,EAAA3B,KAAAP,KAAAD,EAAAkC,GAMAjC,KAAAwC,aAMAxC,KAAA0C,UAAAD,GAGA9B,OAAAG,EAAA,SAAAH,CAAA4B,EAAAL,GACA,IAAAS,EAAA,ECpBA,MAAAC,EAAA,SAAAX,EAAAO,EAAAC,GACAE,EAAApC,KAAAP,KAAA,oBAAAiC,EAAAO,EAAAC,IAGA9B,OAAAG,EAAA,SAAAH,CAAAiC,EAAAD,GACA,IAAAE,EAAA,ECNA,MAAAC,EAAA,SAAAb,EAAAO,GACAG,EAAApC,KAAAP,KAAA,wBAAAiC,EAAAO,IAGA7B,OAAAG,EAAA,SAAAH,CAAAmC,EAAAH,GACA,IAAAI,EAAA,ECLA,MAAAC,EAAA,SAAAf,EAAAO,GACAG,EAAApC,KAAAP,KAAA,iCAAAiC,EAAAO,IAGA7B,OAAAG,EAAA,SAAAH,CAAAqC,EAAAL,GACA,IAAAM,EAAA,ECFA,MAAAC,EAAA,SAAA5B,EAAAM,EAAAJ,GAEAK,EAAAtB,KAAAP,KAAA,aAAAsB,EAAAM,EAAAJ,IAIAb,OAAAG,EAAA,SAAAH,CAAAuC,EAAArB,GACA,IAAAsB,EAAA,ECTA,MAAAC,EAAA,SAAAnB,EAAAoB,EAAAC,GACApB,EAAA3B,KAAAP,KAAA,oBAAAiC,GAMAjC,KAAAqD,gBAMArD,KAAAsD,iBAGA3C,OAAAG,EAAA,SAAAH,CAAAyC,EAAAlB,GACA,IAAAqB,EAAA,ECXA,MAAAC,EAAA,SAAAvB,EAAAwB,EAAAC,EAAAC,EAAAC,EAAAnB,GACAP,EAAA3B,KAAAP,KAAA,iBAAAiC,GAMAjC,KAAAyD,UAMAzD,KAAA6D,cAAAC,IAAAJ,IAAA,IAMA1D,KAAA+D,gBAAAD,IAAAH,IAAA,IAMA3D,KAAAgE,gBAAAF,IAAAF,IAAA,IAMA5D,KAAA0C,UAAAD,GAGA9B,OAAAG,EAAA,SAAAH,CAAA6C,EAAAtB,GACA,IAAA+B,EAAA,EC3CA,MAAAC,EAAA,SAAAjC,GACAC,EAAA3B,KAAAP,KAAA,iBAAAiC,IAGAtB,OAAAG,EAAA,SAAAH,CAAAuD,EAAAhC,GACA,IAAAiC,EAAA,ECJA,MAAAC,EAAA,SAAAnC,EAAAO,GACAG,EAAApC,KAAAP,KAAA,qBAAAiC,EAAAO,IAGA7B,OAAAG,EAAA,SAAAH,CAAAyD,EAAAzB,GACA,IAAA0B,EAAA,ECLA,MAAAC,EAAA,SAAArC,EAAAO,GACAG,EAAApC,KAAAP,KAAA,8BAAAiC,EAAAO,IAGA7B,OAAAG,EAAA,SAAAH,CAAA2D,EAAA3B,GACA,IAAA4B,EAAA,ECNA,MAAAC,EAAA,SAAAC,GAEArE,EAAAG,KAAAP,KAAA,OAMAA,KAAAyE,aAGA9D,OAAAG,EAAA,SAAAH,CAAA6D,EAAApE,GACA,IAAAsE,EAAA,ECVA,MAAAC,EAAA,SAAA1C,EAAAO,EAAAC,GACAE,EAAApC,KAAAP,KAAA,uBAAAiC,EAAAO,EAAAC,IAGA9B,OAAAG,EAAA,SAAAH,CAAAgE,EAAAhC,GACA,IAAAiC,EAAA,ECPA,MAAAC,EAAA,SAAAvE,GACA,MAAAW,GAAA,MAAAC,OAAAV,MAAAN,UAAAO,MAAAF,KAAAG,YACAK,EAAAI,MAAAnB,KAAAiB,IAGAN,OAAAG,EAAA,SAAAH,CAAAkE,EAAA9D,GACA,IAAA+D,EAAA,ECFA,MAAAC,EAAA,SAAAzD,EAAAM,EAAAJ,GAEAK,EAAAtB,KAAAP,KAAA,SAAAsB,EAAAM,EAAAJ,IAIAb,OAAAG,EAAA,SAAAH,CAAAoE,EAAAlD,GACA,IAAAmD,EAAA,ECNA,MAAAC,GAUAC,IAAA,SAAA5E,GACA,MAAAW,GAAA,MAAAC,OAAAV,MAAAN,UAAAO,MAAAF,KAAAG,YACA,WAAAyE,SAAAjF,UAAAkF,KAAAjE,MAAAC,EAAAH,KAWAoE,GAAA,SAAA/E,GACA,MAAAW,GAAA,MAAAC,OAAAV,MAAAN,UAAAO,MAAAF,KAAAG,YACA,WAAAyE,SAAAjF,UAAAkF,KAAAjE,MAAA2D,EAAA7D,KAWAqE,IAAA,SAAAb,GACA,WAAAC,EAAAD,IAeAc,KAAA,SAAAjE,EAAAC,EAAAC,GACA,WAAAE,EAAAJ,EAAAC,EAAAC,IAcAgE,SAAA,SAAAlE,EAAAM,EAAAJ,GACA,WAAAO,EAAAT,EAAAM,EAAAJ,IAcAiE,WAAA,SAAAnE,EAAAM,EAAAJ,GACA,WAAA2B,EAAA7B,EAAAM,EAAAJ,IAcAkE,OAAA,SAAApE,EAAAM,EAAAJ,GACA,WAAAwD,EAAA1D,EAAAM,EAAAJ,IAaAmE,QAAA,SAAA1D,EAAAO,EAAAC,GACA,WAAAI,EAAAZ,EAAAO,EAAAC,IAaAmD,WAAA,SAAA3D,EAAAO,EAAAC,GACA,WAAAmC,EAAA3C,EAAAO,EAAAC,IAYAoD,SAAA,SAAA5D,EAAAO,GACA,WAAA6B,EAAApC,EAAAO,IAYAsD,kBAAA,SAAA7D,EAAAO,GACA,WAAA+B,EAAAtC,EAAAO,IAYAuD,YAAA,SAAA9D,EAAAO,GACA,WAAAO,EAAAd,EAAAO,IAYAwD,qBAAA,SAAA/D,EAAAO,GACA,WAAAS,EAAAhB,EAAAO,IAYAyD,OAAA,SAAAhE,GACA,WAAAkC,EAAAlC,IAcAiE,QAAA,SAAAjE,EAAAoB,EAAAC,GACA,WAAAC,EAAAtB,EAAAoB,EAAAC,IAoBA6C,KAAA,SAAAlE,EAAAwB,EACAC,EAAAC,EAAAC,EAAAnB,GACA,WAAAwB,EAAAhC,EAAAwB,EACAC,EAAAC,EAAAC,EAAAnB,IAaA2D,OAAA,SAAAnE,EAAAG,EAAAC,GACA,WAAAC,EAAAL,EAAAG,EAAAC,KAEAgE,EAAA,6FCtQA,QAAAC,EAAA,QACAA,EAAA,uDAWA,IAAMC,EAAU,WAMdvG,KAAKwG,kBAYPD,EAAQrG,UAAUuG,eAAiB,SAASC,EAAKC,GAC1C3G,KAAKwG,cAAcE,IACtB1G,KAAK4G,iBAAiBF,GAExB1G,KAAKwG,cAAcE,GAAKG,KAAkCF,IAS5DJ,EAAQrG,UAAU4G,iBAAmB,SAASJ,GAC5C1G,KAAK4G,iBAAiBF,IAaxBH,EAAQrG,UAAU0G,iBAAmB,SAASF,GACvC1G,KAAKwG,cAAcE,GAGlB1G,KAAKwG,cAAcE,GAAK7F,SAC1Bb,KAAKwG,cAAcE,GAAKK,QAAQC,EAAAC,QAASC,eACzClH,KAAKwG,cAAcE,GAAK7F,OAAS,GAJnCb,KAAKwG,cAAcE,QAavBH,EAAQY,OAASC,QAAQD,OAAO,uBACjBE,QAAQ,kBAAmBd,GAC1Ce,EAAAL,QAASE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG9BjB,gGCpEbkB,IAAK,KAKLC,IAAK,IAKLC,GAAI,yFCnBN,QAAArB,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,wDAKA,IAAMC,EAAUa,QAAQD,OAAO,cAE/BG,EAAAL,QAASE,OAAOI,SAASV,KAAKN,EAAQiB,MAgCtCjB,EAAQqB,WAAa,SAASC,GAC5B,OACEC,SAAU,IAMVC,KAAM,SAACC,EAAOC,EAASC,GAErB,IACMC,EAAOD,EAAA,QAEPE,EAAMJ,EAAMK,MAAMF,GACxBG,EAAArB,QAAYsB,iBAAiBH,EAA7BI,EAAAvB,SAEAmB,EAAIK,UAAUR,EAAQ,IAOtB,IACMS,EAAmBR,EAAA,oBAGzB,GAFqBF,EAAMK,MAAMK,GAEf,CAChB,IACMC,EAAuBT,EAAA,wBAEvBU,EACJZ,EAAMK,MAAMM,GAEd3B,EAAAC,QAAS4B,OACPhB,EACA,SACA,WACE,GAAIe,EAAkB,CAEpB,IAAME,EAAQC,KAAKC,MACfC,GAAO,GACQ,SAAbC,IACJd,EAAIe,aACJf,EAAIgB,aACAH,GACFpB,EAAQwB,sBAAsBH,GAE5BH,KAAKC,MAAQF,EAAQF,IACvBK,GAAO,GAGXC,QAGAd,EAAIe,mBAvDlB5C,EAAQqB,+BAiERrB,EAAQ+C,UAAU,UAAW/C,EAAQqB,sBAGtBrB,qFC9Gf,QAAAD,EAAA,QACAA,EAAA,UACAA,EAAA,OACAA,EAAA,yDAyBA,IAAMC,EAAU,SAASgD,EAAYC,EAAWC,EAC9CC,EAAgBC,GAMhB3J,KAAK4J,YAAcL,EAMnBvJ,KAAK6J,WAAaL,EAMlBxJ,KAAK8J,UAAYL,EAMjBzJ,KAAK+J,gBAAkBL,EAMvB1J,KAAKgK,kBAAoBL,EAMzB3J,KAAKiK,WAAa,0MAYpB1D,EAAQrG,UAAUgK,SAAW,SAASC,EAAOC,GACvCpK,KAAK8J,WACP9J,KAAKgK,kBAAkBK,aACrBF,MAASA,EAAM3C,OAEjBxH,KAAKsK,aAAaH,EAAM3C,MACxBxH,KAAK+J,gBAAgBQ,oBAAoBJ,EAAMK,WAE/CxK,KAAK+J,gBAAgBU,oBAAoBN,EAAMK,UAAU,EAAOJ,IASpE7D,EAAQrG,UAAUwK,aAAe,WAC/B,OAAO1K,KAAKiK,YAQd1D,EAAQrG,UAAUyK,UAAY,WAC5B,OAAQ3K,KAAK6J,WAAWe,QAO1BrE,EAAQrG,UAAUoK,aAAe,SAAS9C,EAAM4C,GAC9CpK,KAAKiK,WAAazC,EACb4C,GACHpK,KAAK4J,YAAYiB,MAAMtE,EAAQuE,UAAUC,eAAgBvD,IAS7DjB,EAAQrG,UAAU8K,UAAY,WAC5BhL,KAAK+J,gBAAgBiB,aAOvBzE,EAAQuE,WAINC,eAAgB,oCAOlBxE,EAAQY,OAASC,QAAQD,OAAO,mBAC9B8D,EAAAhE,QAAwBE,OAAOK,KAC/B0D,EAAAjE,QAAwBE,OAAOK,QAMlB2D,MAAM,2BAA2B,GAEhD5E,EAAQY,OAAOE,QAAQ,kBAAmBd,GAC1Ce,EAAAL,QAAQE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG7BjB,qFC5Jf,MAAA6E,EAAA9E,EAAA,uCAKA,IAAMC,EAAUa,QAAQD,OAAO,mBAE/BG,EAAAL,QAASE,OAAOI,SAASV,KAAKN,EAAQiB,MActCjB,EAAQ8E,SAAW,SAASC,GAC1B,gBASWC,EAAMC,EAAMC,GAInB,IAAIC,EAAU,KACd,OACE,WAAkB,QAAAC,EAAAjL,UAAAG,OAAN+K,EAAMpL,MAAAmL,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,GAAAnL,UAAAmL,GAChB,IAAMC,EAAU9L,KAKA,OAAZ0L,GACFJ,EAASS,OAAOL,GAElBA,EAAUJ,EAPI,WACZI,EAAU,KACVH,EAAKpK,MAAM2K,EAASF,IAKIJ,EAAMC,MAzB1ClF,EAAQ8E,8BA8BR9E,EAAQyF,QAAQ,eAAgBzF,EAAQ8E,oBAGzB9E,qFCtDf,QAAAD,EAAA,QACAA,EAAA,wDAKA,IAAMC,EAAUa,QAAQD,OAAO,mBAE/BG,EAAAL,QAASE,OAAOI,SAASV,KAAKN,EAAQiB,MAEtCjB,EAAQ4E,MAAM,eAAgB,IAAAc,EAAAhF,mBAGfV,qFCbf,QAAAD,EAAA,sJACAA,EAAA,MACAA,EAAA,wDAOA,IAAMC,EAAU,SAAS2F,EAASC,GAMhCnM,KAAKoM,SAAWF,EAMhBlM,KAAKqM,UAAY,KAMjBrM,KAAKsM,OAASH,GAShB5F,EAAQrG,UAAUqM,WAAa,SAASC,GACtCxM,KAAKoM,SAASG,WAAWC,EAASxM,KAAKsM,SASzC/F,EAAQrG,UAAUuM,cAAgB,SAASD,GACzCxM,KAAKoM,SAASK,cAAcD,EAASxM,KAAKsM,SAQ5C/F,EAAQrG,UAAUwM,MAAQ,WACxB1M,KAAKoM,SAASM,MAAM1M,KAAKsM,SAa3B/F,EAAQrG,UAAUyM,YAAc,SAASC,GAChB,OAAnB5M,KAAKqM,YACPrM,KAAKqM,UAAUK,QACf1F,EAAAC,QAAS4F,SAAS7M,KAAKqM,UAAW,MAAOrM,KAAK8M,kBAAmB9M,MACjEgH,EAAAC,QAAS4F,SAAS7M,KAAKqM,UAAW,SAAUrM,KAAK+M,qBAAsB/M,OAExD,OAAb4M,IACFA,EAAS7F,QAAQ,SAASyF,GACxBxM,KAAKuM,WAAWC,IACfxM,MACHgH,EAAAC,QAAS4B,OAAO+D,EAAU,MAAO5M,KAAK8M,kBAAmB9M,MACzDgH,EAAAC,QAAS4B,OAAO+D,EAAU,SAAU5M,KAAK+M,qBAAsB/M,OAEjEA,KAAKqM,UAAYO,GAUnBrG,EAAQrG,UAAU8M,SAAW,SAASC,GACpCjN,KAAKoM,SAASY,SAASC,EAAOjN,KAAKsM,SAQrC/F,EAAQrG,UAAU4M,kBAAoB,SAASI,GAC7C,IAAMV,EAAqCU,EAAIjF,QAC/CjI,KAAKuM,WAAWC,IAQlBjG,EAAQrG,UAAU6M,qBAAuB,SAASG,GAChD,IAAMV,EAAqCU,EAAIjF,QAC/CjI,KAAKyM,cAAcD,IAMrBjG,EAAQY,OAASC,QAAQD,OAAO,yBAChCG,EAAAL,QAASE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG9BjB,8HC9Hf4G,EAAA7G,EAAA,GAoBA,MAAA8G,EAAA,SAAAC,GAEA,MAAAC,EAAAD,MAMArN,KAAAuN,WAAA,yCAOAvN,KAAAwN,WAAA,IAAAC,EAAA,QAOAzN,KAAA0N,QAAAJ,EAAAK,OAAAL,EAAAK,OAAA,KAEAC,EAAA,EAAArN,KAAAP,OAGAW,OAAAkN,EAAA,SAAAlN,CAAAyM,EAAAQ,EAAA,GAQAR,EAAAU,mBAAA,WAQAV,EAAAW,iBAAA,SAMAX,EAAAlN,UAAA8N,UAAA,WACA,OAAAhO,KAAA0N,SAOAN,EAAAlN,UAAA+N,UAAA,SAAAN,GACA3N,KAAA0N,QAAAC,GAUAP,EAAAlN,UAAAgO,cAAA,SAAAC,EAAAC,GACAD,EAAAE,aAAA,eAAArO,KAAAuN,YACA,MAAAe,EAAAH,EAAAG,UAEA,IAAA1B,KACA,OAAAuB,EAAAI,WAAA1N,OACA,OAAA+L,EAEA,kBAAA0B,EACA,QAAAE,EAAA,EAAAC,EAAAN,EAAAI,WAAA1N,OAAgD2N,EAAAC,EAAQD,IAAA,CACxD,MAAAE,EAAAP,EAAAI,WAAAC,GACA,GAAAE,EAAAC,WAAAC,KAAAC,aACA,SAEA,MAAA/C,EAAAsC,EAAA,GAEAU,EAAA1B,EAAAW,iBACAgB,EAAAL,EAAAJ,UAAAU,QAAAF,EAAA,IAEA,GAAA9O,KAAA0N,UAAA/M,OAAAsO,EAAA,SAAAtO,CAAAX,KAAA0N,QAAAqB,GACA,SAGA,MAAAG,EAAAH,EACA3B,EAAAU,mBAEAhC,EAAA,YAAAoD,EACApD,EAAA,UAAA9L,KAAAuN,WAEA,MAAA4B,KACAA,EAAAD,GAAA/B,EAAA,QAAAiC,gBACApP,KAAAwN,WAAA6B,mBAAArP,KAAAwN,YACA,MAAA8B,EAAAnC,EAAA,QAAAoC,iBACAzD,EAAA,gBAAAqD,GACAT,EAAAL,aAAA,eAAArO,KAAAuN,YACA,MAAAiC,EAAArC,EAAA,QAAAsC,mBACAH,EAAAZ,EAAAN,EAAApO,KAAAwN,YACAgC,GACA7O,OAAAsO,EAAA,OAAAtO,CAAAiM,EAAA4C,GAIA,wBAAAlB,EAAA,CACA,MAAAoB,EAAAvC,EAAA,QAAAsC,mBACAzP,KAAAwN,WAAAmC,2BAAAxB,OACSnO,KAAAwN,YACTkC,IACA9C,EAAA8C,GAGA,OAAA9C,GAaAQ,EAAAlN,UAAA0P,aAMAxC,EAAAlN,UAAA2P,qBAAA,SAAA1B,EAAAd,GACA,MAAAC,KAIA,OAHAD,GACA1M,OAAAmP,EAAA,OAAAnP,CAAA2M,EAAAtN,KAAA+P,eAAA5B,EAAAd,IAEArN,KAAAkO,cAAAC,GAAAb,KAQAF,EAAAlN,UAAA8P,iBAAA,SAAAxD,EAAAa,KAOAD,EAAAlN,UAAA+P,kBAAA,SAAArD,EAAAS,KAOAD,EAAAlN,UAAAgQ,kBAAA,SAAAtO,EAAAyL,KACAhH,EAAA,6FCtLA,QAAAC,EAAA,SACAA,EAAA,OACAA,EAAA,UACAA,EAAA,QACAA,EAAA,KACY6J,0JAAZ7J,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDAwBA,IAAMC,EAAU,SAAS6J,EAAOC,EAAI9G,EAAY+B,EAAU9B,EACxDE,GAQA1J,KAAKsQ,MAAQF,EAMbpQ,KAAKuQ,GAAKF,EAMVrQ,KAAKwQ,WAAajH,EAMlBvJ,KAAKyQ,SAAWnF,EAMhBtL,KAAK6J,WAAaL,EAMlBxJ,KAAK+J,gBAAkBL,EAWvB1J,KAAK0Q,UAML1Q,KAAKwG,iBAMLxG,KAAK2Q,KAAO,KASZ3Q,KAAK4Q,sBAAwB,KAO7B5Q,KAAK6Q,YAAc,kKAcrBtK,EAAQrG,UAAU4Q,4BAA8B,WAC9C,IAAM1I,EAAMpI,KAAK2Q,KACjBrI,EAAArB,QAAY8J,OAAO3I,GAEnB,IAAI4I,SACJ,IAAK,IAAMtK,KAAO1G,KAAK0Q,QACrBM,EAAOhR,KAAK0Q,QAAQhK,IACXuK,SACP3I,EAAArB,QAAY8J,OAAOC,EAAKE,aACxB9I,EAAI+I,kBAAkBH,EAAKE,aAC3B9I,EAAIgJ,eAAeJ,EAAKE,eAW9B3K,EAAQrG,UAAUmR,OAAS,SAASjJ,GAAK,IAAAkJ,EAAAtR,KAEjCuR,EAAOvR,KAAKwG,cAEdxG,KAAK2Q,OACP3Q,KAAKwR,uBACLxR,KAAKyR,yBACLF,EAAKxK,QAAQC,EAAAC,QAASC,eACtBqK,EAAK1Q,OAAS,GAGhBb,KAAK2Q,KAAOvI,EAERA,IACFpI,KAAKwR,qBAAuBxR,KAAKwQ,WAAWkB,iBAAiB,WAC3D,GAAIJ,EAAKvH,gBAAgB4H,SACvB,OAAOL,EAAKvH,gBAAgB4H,SAASnH,UAEtC,SAACW,GAGFmG,EAAKb,SAAS,WACRtF,IACFmG,EAAKG,yBACLH,EAAKvH,gBAAgB4H,SAASC,mBAAmBN,EAAKO,kBAAkBzM,KAAvBkM,MAElD,KAGLC,EAAK1K,KACHG,EAAAC,QAAS4B,OAAO7I,KAAK6J,WAAY,SAAU7J,KAAK8R,oBAAqB9R,MACrEgH,EAAAC,QAAS4B,OAAOT,EAAK,UAAWpI,KAAK+R,kBAAmB/R,SAW9DuG,EAAQrG,UAAU4R,oBAAsB,WAAW,IAAAE,EAAAhS,KACjDA,KAAK6Q,YAAc,KACnB7Q,KAAK6J,WAAWoI,sBAAsBC,KAAK,SAACC,GAC1CH,EAAKnB,YAAcsB,KAavB5L,EAAQrG,UAAU2R,kBAAoB,SAASO,GAG7C,IAAIjE,EAA6DiE,EAASjE,KAC1E,IAAIA,EAAK3D,SAAT,CAMA2D,EAA0CiE,EAASjE,KACnD,IAAMkE,EAAiBC,EAAArL,QAAesL,kBAAkBpE,GACxD,GAAIkE,EAAgB,CAClB,IAAMG,EAAYxS,KAAKyS,cAAcL,GACrC,GAAII,EAAW,CACb,IAAM9L,EAAMyJ,EAAOuC,OAAON,GAEpBO,EAAyB3S,KAAKwQ,WAAWoC,OAC7C,kBAAMR,EAASS,YACf7S,KAAK8S,2BAA2B1N,KAAKpF,KAAMoS,IAK7CpS,KAAK0Q,OAAOhK,IACVuK,QAAQ,EACR8B,UAAW,yCACXC,cAAe,UACfpG,SAAU,IAAAX,EAAAhF,QACV3F,aAAc,OACd4P,YAAa,KACb+B,YAAa,GACbC,gBAAiB,KACjBb,eAAgBA,EAChBD,SAAUA,EACVI,UAAWA,EACXG,uBAAwBA,GAI1B3S,KAAK8S,2BAA2BV,EAAUA,EAASS,gBAYzDtM,EAAQrG,UAAUuR,uBAAyB,WACzC,IAAK,IAAM/K,KAAO1G,KAAK0Q,OAAQ,CAC7B,IAAMM,EAAOhR,KAAK0Q,QAAQhK,GACtBsK,IACFA,EAAK2B,yBACL3S,KAAKmT,gBAAgBnC,UACdhR,KAAK0Q,QAAQhK,MA0B1BH,EAAQrG,UAAUuS,cAAgB,SAASL,GAGzC,GAAyB,OAArBpS,KAAK6Q,YACP,OAAO,KAGT,IAAMuC,EAA8ChB,EAASjE,KAG7D,GAAIiF,EAASC,OAASf,EAAArL,QAAeqM,SAASC,IAC5C,OAAO,KAOT,IAJA,IAAMC,EAAoDJ,EAGpDK,KACGjF,EAAI,EAAGC,EAAK+E,EAAYE,YAAY7S,OAAQ2N,EAAIC,EAAID,IACvDgF,EAAYE,YAAYlF,GAAGmF,WAC7BF,EAAa5M,KAAK2M,EAAYE,YAAYlF,GAAGhH,MAGjD,IAAKiM,EAAa5S,OAChB,OAAO,KAIT,IAAI+S,SACgDxB,EAASyB,OAAO1F,KACvD2F,MACXF,EAAgBJ,EAAYO,UAI5BH,EAFsBI,EAAA/M,QAAwBgN,mBAAmB7B,GACEjE,KACzC4F,UAE5B,IAAKH,EACH,OAAO,KAIT,IAAMG,EAAY/T,KAAK6Q,YAAY+C,GACnC,IAAKG,EAAUG,WACb,OAAO,KAKT,IAAMC,EAASJ,EAAUI,OAGzB,OAFA7L,EAAArB,QAAY8J,OAAOoD,EAAQ,8BAGzBV,aAAcA,EAAaW,KAAK,KAChCC,IAAKF,IAUT5N,EAAQrG,UAAU4S,2BAA6B,SAASV,EAAUkC,GAEhE,IAAM5N,EAAMyJ,EAAOuC,OAAON,GACpBpB,EAAOhR,KAAK0Q,OAAOhK,GAIV,OAAX4N,EACFtU,KAAKuU,cAAcvD,GAEnBhR,KAAKmT,gBAAgBnC,IAYzBzK,EAAQrG,UAAUqU,cAAgB,SAASvD,GAGzC,IAAIA,EAAKC,OAAT,CAIA,IAAM7I,EAAMpI,KAAK2Q,KACjBrI,EAAArB,QAAY8J,OAAO3I,GAEnB,IAAM8I,EAAc,IAAAsD,EAAAvN,SAClBwN,KAAMzD,EAAKqB,eAAeoC,KAC1B7H,SAAUoE,EAAKpE,SACf8H,eAAgB1D,EAAKqB,eAAesC,UACpCC,OAAQ5D,EAAKqB,eAAeuC,SAG9BxM,EAAIgJ,eAAeF,GAEnBF,EAAKE,YAAcA,EACnBF,EAAKC,QAAS,EAGdjR,KAAK6U,kBAAkB7D,KAWzBzK,EAAQrG,UAAUiT,gBAAkB,SAASnC,GAG3C,GAAKA,EAAKC,OAAV,CAIA,IAAM7I,EAAMpI,KAAK2Q,KACjBrI,EAAArB,QAAY8J,OAAO3I,GAEnB,IAAM8I,EAAcF,EAAKE,YACzB9I,EAAI+I,kBAAkBD,GAEtBF,EAAKE,YAAc,KACnBF,EAAKpE,SAASF,QAGVsE,EAAKkC,kBACPlC,EAAKkC,gBAAgB4B,UACrB9D,EAAKkC,gBAAkB,MAGzBlC,EAAKC,QAAS,IAOhB1K,EAAQrG,UAAU6U,cAAgB,WAChC/U,KAAK4Q,sBAAwB,KAC7B,IAAII,SACJ,IAAK,IAAMtK,KAAO1G,KAAK0Q,QACrBM,EAAOhR,KAAK0Q,QAAQhK,IACXuK,QACPjR,KAAK6U,kBAAkB7D,IAc7BzK,EAAQrG,UAAU2U,kBAAoB,SAAS7D,GAGzCA,EAAKkC,iBACPlC,EAAKkC,gBAAgB4B,UAGvB,IAAM1M,EAAMpI,KAAK2Q,KACjBrI,EAAArB,QAAY8J,OAAO3I,GAEnB,IAAM4M,EAAO5M,EAAI6M,UACXC,EAAO9M,EAAI+M,UACjB7M,EAAArB,QAAY8J,OAAOmE,GAEnB,IAAM3T,EAASyT,EAAKI,gBAAgBF,GAC9BG,EAAWL,EAAKM,gBAAgBC,UAChC9B,EAAezC,EAAKwB,UAAUiB,aAAa+B,MAAM,KAEjDC,GACJhU,QAAS4T,EACTtC,UAAW/B,EAAK+B,UAChBC,cAAehC,EAAKgC,cACpBS,aAAcA,EACdiC,aAAc,OACdnQ,KAAMhE,EACND,aAAc0P,EAAK1P,aACnB2R,YAAajC,EAAKiC,aAGd0C,EAAY,IAAAC,EAAA3O,QACZ4O,EAAgB,IAAIC,cACpBC,EAAoBJ,EAAUK,gBAAgBP,GAC9CQ,EAAiBJ,EAAcK,kBAAkBH,GACjD1B,EAAMrD,EAAKwB,UAAU6B,IAE3BrD,EAAKkC,gBAAkBlT,KAAKuQ,GAAG4F,QAE/BnW,KAAKsQ,MAAM8F,KAAK/B,EAAK4B,GAAiBvK,QAASsF,EAAKkC,gBAAgBmD,UACjEnE,KAAK,SAACoE,GAELtF,EAAKkC,gBAAkB,KAGvBlC,EAAKpE,SAASF,QAGd,IAAMkD,GAAe,IAAAgG,EAAA3O,SAAkB2I,aAAa0G,EAASC,MACzD3G,GACFoB,EAAKpE,SAAS4J,OAAO5G,MAY7BrJ,EAAQrG,UAAU6R,kBAAoB,WAChC/R,KAAK4Q,uBACP5Q,KAAKyQ,SAAS1E,OAAO/L,KAAK4Q,uBAE5B5Q,KAAK4Q,sBAAwB5Q,KAAKyQ,SAChCzQ,KAAK+U,cAAc3P,KAAKpF,MACxB,OA0CJuG,EAAQY,OAASC,QAAQD,OAAO,eAC9BmL,EAAArL,QAAeE,OAAOK,KACtBwM,EAAA/M,QAAwBE,OAAOK,QAElBH,QAAQ,cAAed,GACtCe,EAAAL,QAAQE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG7BjB,qFC7jBf,QAAAD,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,OACAA,EAAA,wDAKA,IAAMC,EAAUa,QAAQD,OAAO,mBAC7BsP,EAAAxP,QAAsBE,OAAOK,KAC7BkP,EAAAzP,QAAmBE,OAAOK,KAC1BmP,EAAA1P,QAAiBO,KACjBoP,EAAA3P,QAAyBE,OAAOK,OAGlCF,EAAAL,QAAQE,OAAOI,SAASV,KAAKN,EAAQiB,MAsBrCjB,EAAQqB,WAAa,WACnB,OACEI,OACEI,IAAO,aACPyO,aAAgB,sBAChBjO,iBAAoB,2BAEtBkO,WAAY,2BACZC,kBAAkB,EAClBC,YAAgB1P,EAAAL,QAAQgQ,sBAAxB,wBAIJ1Q,EAAQ+C,UAAU,SAAU/C,EAAQqB,YAapCrB,EAAQ2Q,YAAc,SAASC,EAAuBC,EAAcC,GAQlErX,KAAKoI,IAMLpI,KAAK6W,aAML7W,KAAK4I,iBASL5I,KAAKsX,uBAAyBH,EAM9BnX,KAAKuX,cAAgBH,EAMrBpX,KAAKwX,aAAeH,GAzCtB9Q,EAAQ2Q,2EAgDR3Q,EAAQ2Q,YAAYhX,UAAUuX,QAAU,WACtCzX,KAAKsX,uBAAuBI,KAAK1X,KAAKoI,KACtCpI,KAAKuX,cAAclG,OAAOrR,KAAKoI,KAC/BpI,KAAKwX,aAAanG,OAAOrR,KAAKoI,MAIhC7B,EAAQuQ,WAAW,mBAAoBvQ,EAAQ2Q,uBAGhC3Q,kGC3Hf,MAAY4J,0JAAZ7J,EAAA,IACAqR,EAAArR,EAAA,yCAWA,IAAMC,EAAU,SAAS8G,GAEvB,IAAMC,OAA0BxJ,IAAhBuJ,EAA4BA,KAExCuK,SACAtK,EAAQrF,SACV2P,EAAatK,EAAQrF,eACdqF,EAAQrF,SAEf2P,EAAaC,EAAE,WAAW,GAO5B7X,KAAK8X,SAAWD,EAAE,YAChBE,MAAS,QACTC,KAAQ,YAOVhY,KAAKiY,WAAaJ,EAAE,UACjBK,OAAOlY,KAAK8X,UACZI,OAAON,GAEVtK,EAAQrF,QAAU4P,EAAE,WAAW,GAE/BM,EAAAlR,QAAU1G,KAAKP,KAAMsN,IAIvB6C,EAAOiI,SAAS7R,EAAhB4R,EAAAlR,SAMAV,EAAQrG,UAAUmR,OAAS,SAASjJ,GAAK,IAAAkJ,EAAAtR,KAEjCiI,EAAUjI,KAAKqY,aASrB,GAPmBrY,KAAKsY,UAEtBT,EAAE5P,GAASsQ,QAAQ,WAGrBJ,EAAAlR,QAAU/G,UAAUmR,OAAO9Q,KAAKP,KAAMoI,GAElCA,EAAK,CACP,IAAMoQ,EAAYxY,KAAKiY,WAEvBQ,OAAOC,WAAW,WAChBb,EAAE5P,GACCsQ,SACCI,QAAWH,EACXR,MAAQ,EACRY,UAAa,MACbC,UACE,oDACA,8BACA,oCACA,wCACA,UACAzE,KAAK,MAERmE,QAAQ,SACV,GAEHvY,KAAK8X,SAASgB,IAAI,QAAS,WACzB,IAAM1Q,EAAMkJ,EAAKgH,SACblQ,GACFA,EAAI2Q,cAAJzH,iBAOO/K,qGC9Ff,IAAMA,GAMNA,kBAKEyS,QAAS,aAKTC,IAAK,SAKLC,IAAK,SAKLC,UAAW,eAKXC,QAAS,aAKTC,MAAO,WAKPC,OAAQ,kBAIK/S,qFC7Cf,QAAAD,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,KACY6J,IAAZ7J,EAAA,QACAA,EAAA,KACYiT,IAAZjT,EAAA,KACYkT,IAAZlT,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,OACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iNA0BA,IAAMC,EAAU,SAAVA,EAAmB8G,GAEvBoM,EAAAxS,QAAoB1G,KAAKP,MAEzB,IAAMsN,OAA0BxJ,IAAhBuJ,EAA4BA,KAM5CrN,KAAK0Z,eAAiC5V,IAArBwJ,EAAQqM,SACvBrM,EAAQqM,SAAWpT,EAAQqT,UAM7B5Z,KAAK6Z,mBAAyC/V,IAAzBwJ,EAAQwM,cAC3BxM,EAAQwM,aAMV9Z,KAAK+Z,yBAA6CjW,IAAvBwJ,EAAQ0M,WACjC1M,EAAQ0M,WAAazT,EAAQ0T,2BAM/Bja,KAAKka,eAAiCpW,IAArBwJ,EAAQN,UAAyBM,EAAQN,SAM1DhN,KAAKma,OAAS,EAMdna,KAAKoa,OAAS,EAMd7T,EAAQ8T,uBAAgDvW,IAA3BwJ,EAAQgN,gBAAkChN,EAAQgN,gBAIjFnK,EAAOiI,SAAS7R,EAAhBkT,EAAAxS,SAOAV,EAAQgU,aACNC,WAAcC,EAAAxT,QAA+ByT,YAC7CC,MAASF,EAAAxT,QAA+B2T,MACxCC,QAAWJ,EAAAxT,QAA+B6T,QAC1CC,gBAAmBN,EAAAxT,QAA+ByT,YAClDM,WAAcP,EAAAxT,QAA+B2T,MAC7CK,aAAgBR,EAAAxT,QAA+B6T,SAOjDvU,EAAQ8T,qBAMR9T,EAAQrG,UAAUgb,YAMlB3U,EAAQrG,UAAU0P,aAMlBrJ,EAAQrG,UAAUib,aAMlB5U,EAAQrG,UAAUkb,aAMlB7U,EAAQrG,UAAUmb,cAMlB9U,EAAQrG,UAAUob,cAUlB/U,EAAQgV,QACJ,mEAOJhV,EAAQqT,UAAY,GAUpBrT,EAAQ0T,2BAA6B,SAASzN,GAC5C,OAAOA,EAAQgP,iBAUjBjV,EAAQkV,oBAAsB,SAASC,GACrC,IAAIC,EAAYD,GAAO,EAIvB,OAHIA,EAAM,IACRC,GAAcA,GAETpV,EAAQqV,cAAcD,IAU/BpV,EAAQqV,cAAgB,SAASF,GAE/B,IADA,IAAIG,EAAgB,GACbH,GAAO,IACZG,GAAiBtV,EAAQgV,QAAQO,OAC/B,GAAc,GAANJ,GACVA,IAAQ,EAGV,OADAG,GAAiBtV,EAAQgV,QAAQO,OAAOJ,IAc1CnV,EAAQsT,cAAgB,SAASkC,EAAQC,EAAcC,GACrD,IAAMC,EAAY3V,EAAQgU,YAAYyB,GACtC1T,EAAArB,QAAY8J,YAAqBjN,IAAdoY,GACnB,IAAK,IAAI1N,EAAI,EAAGA,EAAIuN,EAAOlb,SAAU2N,EAAG,CACtC,IAAMvB,EAAQ8O,EAAOvN,GACf2N,EAAYlP,EAAMmP,UAClBC,EAAapP,EAAMqP,WACnBC,EAActP,EAAMuP,YACpBC,EAAYxP,EAAMyP,UACpBR,GAAazB,EAAAxT,QAA+B6T,QAC5B,OAAdqB,GACF5V,EAAQoW,oBACNR,EAAWI,EAAaN,GAEnBC,GAAazB,EAAAxT,QAA+ByT,YACjC,OAAhB6B,GACFhW,EAAQqW,iBAAiBL,EAAaN,GAE/BC,GAAazB,EAAAxT,QAA+B2T,OAClC,OAAfyB,GACF9V,EAAQsW,kBAAkBR,EAAYJ,GAGxB,OAAdQ,GACFlW,EAAQuW,iBAAiBL,EAAWR,KAa1C1V,EAAQqW,iBAAmB,SAASL,EAAaN,GAC/C1V,EAAQwW,mBAAmBR,EAAaN,IAW1C1V,EAAQsW,kBAAoB,SAASR,EAAYJ,GAC/C,GAAII,uBAAqC,CACvC,IAAMW,EAASX,EAAWY,YACtBhB,EAAcpb,OAAS,GACzBob,EAAcpV,KAAK,KAErBoV,EAAcpV,KAAKqW,kCAAkCF,IACrD,IAAMb,EAAYE,EAAWD,UACX,OAAdD,GACF5V,EAAQ4W,iBAAiBhB,EAAWF,GAEtC,IAAMM,EAAcF,EAAWG,YACX,OAAhBD,GACFhW,EAAQwW,mBAAmBR,EAAaN,KAe9C1V,EAAQoW,oBAAsB,SAASR,EAAWI,EAAaN,GAC7D1V,EAAQ4W,iBAAiBhB,EAAWF,GAChB,OAAhBM,GACFhW,EAAQwW,mBAAmBR,EAAaN,IAc5C1V,EAAQ4W,iBAAmB,SAAShB,EAAWF,EAAemB,GAC5D,IAAMnb,OAAoC6B,IAArBsZ,EACnBA,EAAmB,YACfC,EAAYlB,EAAUmB,WAC5B,GAAkB,OAAdD,EAAoB,CACtB/U,EAAArB,QAAY8J,OAAOvQ,MAAM+c,QAAQF,GAAY,+BAC7C,IAAMG,EAAgBjE,EAAQkE,QAAQJ,GACtC/U,EAAArB,QAAY8J,OAAOvQ,MAAM+c,QAAQC,GAAgB,+BACjD,IAAME,EAAeC,EAAA1W,QAAU2W,cAAcJ,GACzCvB,EAAcpb,OAAS,GACzBob,EAAcpV,KAAK,KAErBoV,EAAcpV,KACZqW,mBAAsBjb,EAAtB,IAAsCyb,MAY5CnX,EAAQwW,mBAAqB,SAASR,EAAaN,GACjD,IAAM4B,EAActB,EAAYe,WAChC,GAAoB,OAAhBO,EAAsB,CACxBvV,EAAArB,QAAY8J,OAAOvQ,MAAM+c,QAAQM,IACjC,IAAMC,EAAkBvE,EAAQkE,QAAQI,GACxCvV,EAAArB,QAAY8J,OAAOvQ,MAAM+c,QAAQO,GAAkB,iCACnD,IAAMC,EAAiBJ,EAAA1W,QAAU2W,cAAcE,GAC3C7B,EAAcpb,OAAS,GACzBob,EAAcpV,KAAK,KAErBoV,EAAcpV,KAAKqW,kCAAkCa,IAEvD,IAAMC,EAAczB,EAAY0B,gBACZna,IAAhBka,IACE/B,EAAcpb,OAAS,GACzBob,EAAcpV,KAAK,KAErBoV,EAAcpV,KAAKqW,kCAAkCc,MAYzDzX,EAAQuW,iBAAmB,SAASL,EAAWR,GAC7C,IAAMiC,EAAYzB,EAAU0B,UAC5B,QAAkBra,IAAdoa,EAAyB,CAC3B,IAAME,EAAOF,EAAU1I,MAAM,KACzB4I,EAAKvd,QAAU,IACbob,EAAcpb,OAAS,GACzBob,EAAcpV,KAAK,KAErBoV,EAAcpV,KAAKqW,+BAA+BkB,EAAK,MAG3D,IAAMjC,EAAYM,EAAUL,UACV,OAAdD,GACF5V,EAAQ4W,iBACNhB,EAAWF,EAAe,cAahC1V,EAAQ8X,wBAA0B,SAASC,GACzChW,EAAArB,QAAY8J,OAAgC,OAAzBuN,EAAKC,UAAU,EAAG,IACrCjW,EAAArB,QAAY8J,OAAgC,KAAzBuN,EAAKA,EAAKzd,OAAS,IACtCyd,EAAOA,EAAKC,UAAU,EAAGD,EAAKzd,OAAS,GACvC,IAAM2d,EAAkBxe,KAAKye,mBAAmBH,GAC1CI,EAAa,IAAAC,EAAA1X,QAAqB,MAExC,OADAyX,EAAWE,mBAAmBC,EAAA5X,QAAqB6X,GAAIN,GAChDE,GAYTnY,EAAQwY,6BAA+B,SAAST,GAC9ChW,EAAArB,QAAY8J,OAAgC,OAAzBuN,EAAKC,UAAU,EAAG,IACrCjW,EAAArB,QAAY8J,OAAgC,KAAzBuN,EAAKA,EAAKzd,OAAS,IAKtC,IAHA,IAAI2d,KACEQ,KACAC,GAHNX,EAAOA,EAAKC,UAAU,EAAGD,EAAKzd,OAAS,IAGd2U,MAAM,KACtBhH,EAAI,EAAGC,EAAKwQ,EAAYpe,OAAQ2N,EAAIC,IAAMD,EACjDgQ,EAAkBxe,KAAKye,mBAAmBQ,EAAYzQ,GAAIgQ,GAC1DQ,EAAKxQ,GAAKgQ,EAAgB3d,OAE5B,IAAMqe,EAAkB,IAAAC,EAAAlY,QAA0B,MAGlD,OAFAiY,EAAgBN,mBACdC,EAAA5X,QAAqB6X,GAAIN,EAAiBQ,GACrCE,GAYT3Y,EAAQ6Y,mBAAqB,SAASd,GACpChW,EAAArB,QAAY8J,OAAgC,OAAzBuN,EAAKC,UAAU,EAAG,IACrCjW,EAAArB,QAAY8J,OAAgC,KAAzBuN,EAAKA,EAAKzd,OAAS,IACtCyd,EAAOA,EAAKC,UAAU,EAAGD,EAAKzd,OAAS,GACvC,IAAM2d,EAAkBxe,KAAKye,mBAAmBH,GAChDhW,EAAArB,QAAY8J,OAAkC,IAA3ByN,EAAgB3d,QACnC,IAAMwe,EAAQ,IAAAC,EAAArY,QAAgB,MAE9B,OADAoY,EAAMT,mBAAmBC,EAAA5X,QAAqB6X,GAAIN,GAC3Ca,GAYT9Y,EAAQgZ,wBAA0B,SAASjB,GACzChW,EAAArB,QAAY8J,OAAgC,OAAzBuN,EAAKC,UAAU,EAAG,IACrCjW,EAAArB,QAAY8J,OAAgC,KAAzBuN,EAAKA,EAAKzd,OAAS,IACtCyd,EAAOA,EAAKC,UAAU,EAAGD,EAAKzd,OAAS,GACvC,IAAM2d,EAAkBxe,KAAKye,mBAAmBH,GAC1CkB,EAAa,IAAAC,EAAAxY,QAAqB,MAExC,OADAuY,EAAWZ,mBAAmBC,EAAA5X,QAAqB6X,GAAIN,GAChDgB,GAYTjZ,EAAQmZ,qBAAuB,SAASpB,GACtChW,EAAArB,QAAY8J,OAAgC,OAAzBuN,EAAKC,UAAU,EAAG,IACrCjW,EAAArB,QAAY8J,OAAgC,KAAzBuN,EAAKA,EAAKzd,OAAS,IAKtC,IAHA,IAAI2d,KACEQ,KACAW,GAHNrB,EAAOA,EAAKC,UAAU,EAAGD,EAAKzd,OAAS,IAGpB2U,MAAM,KAChBhH,EAAI,EAAGC,EAAKkR,EAAM9e,OAAQ2N,EAAIC,IAAMD,EAAG,CAE9C,IAAInM,GADJmc,EAAkBxe,KAAKye,mBAAmBkB,EAAMnR,GAAIgQ,IAC1B3d,OAChB,IAAN2N,GACFgQ,EAAgBnc,KAASmc,EAAgB,GACzCA,EAAgBnc,KAASmc,EAAgB,KAEzCA,EAAgBnc,KAASmc,EAAgBQ,EAAKxQ,EAAI,IAClDgQ,EAAgBnc,KAASmc,EAAgBQ,EAAKxQ,EAAI,GAAK,IAEzDwQ,EAAKxQ,GAAKnM,EAEZ,IAAMud,EAAU,IAAAC,EAAA5Y,QAAkB,MAElC,OADA2Y,EAAQhB,mBAAmBC,EAAA5X,QAAqB6X,GAAIN,EAAiBQ,GAC9DY,GAYTrZ,EAAQuZ,0BAA4B,SAASxB,GAC3ChW,EAAArB,QAAY8J,OAAgC,OAAzBuN,EAAKC,UAAU,EAAG,IACrCjW,EAAArB,QAAY8J,OAAgC,KAAzBuN,EAAKA,EAAKzd,OAAS,IAKtC,IAHA,IAAI2d,KACEuB,KACAC,GAHN1B,EAAOA,EAAKC,UAAU,EAAGD,EAAKzd,OAAS,IAGjB2U,MAAM,MACnBhH,EAAI,EAAGC,EAAKuR,EAASnf,OAAQ2N,EAAIC,IAAMD,EAG9C,IAFA,IAAMmR,EAAQK,EAASxR,GAAGgH,MAAM,KAC1BwJ,EAAOe,EAAMvR,MACVyR,EAAI,EAAGC,EAAKP,EAAM9e,OAAQof,EAAIC,IAAMD,EAAG,CAE9C,IAAI5d,GADJmc,EAAkBxe,KAAKye,mBAAmBkB,EAAMM,GAAIzB,IAC1B3d,OAChB,IAANof,GACFzB,EAAgBnc,KAASmc,EAAgB,GACzCA,EAAgBnc,KAASmc,EAAgB,KAEzCA,EAAgBnc,KAASmc,EAAgBQ,EAAKiB,EAAI,IAClDzB,EAAgBnc,KAASmc,EAAgBQ,EAAKiB,EAAI,GAAK,IAEzDjB,EAAKiB,GAAK5d,EAGd,IAAM8d,EAAe,IAAAC,EAAAnZ,QAAuB,MAG5C,OAFAkZ,EAAavB,mBACXC,EAAA5X,QAAqB6X,GAAIN,EAAiBuB,GACrCI,GAcT5Z,EAAQ8Z,mBAAqB,SAAS/B,EAAM9R,GAC1C,GAAY,IAAR8R,EAAJ,CAGA,IAAMtE,EAAazT,EAAQ+Z,oBAAoBhC,EAAM9R,GAC/C6Q,EAAYrD,EAAA,UACZuG,EAAWvG,EAAA,SACXwG,EAAYxG,EAAA,UACZyG,EAAczG,EAAA,YACd6D,EAAc7D,EAAA,YACdgE,EAAchE,EAAA,YAEhBmC,EAAY,UACErY,IAAduZ,IACFlB,EAAY,IAAAuE,EAAAzZ,SACV0Z,MAA4CtD,KAGhD,IAAId,EAAc,UACEzY,IAAhB+Z,QAA6C/Z,IAAhBka,IAC/BzB,EAAc,IAAAqE,EAAA3Z,SACZ0Z,MAA4C9C,EAC5CgD,MAA8B7C,KAGlC,IAAI3B,EAAa,UACGvY,IAAhB2c,IACFpE,EAAa,IAAAyE,EAAA7Z,SACX+V,OAA+ByD,EAC/BM,KAAM5E,EACN6E,OAAQzE,IAEVJ,EAAYI,EAAc,MAE5B,IAAIE,EAAY,UACC3Y,IAAbyc,QAAwCzc,IAAd0c,IAC5B/D,EAAY,IAAAwE,EAAAha,SACVmX,KAASmC,EAAT,cACAQ,KAAM,IAAAL,EAAAzZ,SACJ0Z,MAA4CH,OAIlD,IAAMvT,EAAQ,IAAAiU,EAAAja,SACZ8Z,KAAM5E,EACNgF,MAAO9E,EACP2E,OAAQzE,EACR+B,KAAM7B,IAERjQ,EAAQQ,SAASC,KAYnB1G,EAAQ6a,oBAAsB,SAAS9C,EAAM9R,GAE3C,IAAMwN,EAAazT,EAAQ+Z,oBAAoBhC,EAAM9R,GAC/C5K,EAAW4K,EAAQ6U,cAsBzB,GAnBIzf,uBACEoY,EAAA,SACAA,EAAWsH,EAAAra,QAA4Bsa,iBAClCvH,EAAA,mBACAA,EAAA,mBAEAA,EAAA,iBACAA,EAAA,kBAGFA,EAAA,UAEHpY,gCACKoY,EAAA,iBACAA,EAAA,cAKPA,EAAA,SAAwB,CAC1B,IAAIuG,EAAWiB,WAAWxH,EAAA,WACoB,IAA1CA,EAAA,SAAuByH,QAAQ,QACjClB,EAAWmB,KAAKC,MAAMpB,EAAW,WAEnCvG,EAAA,SAAyBuG,EAI3B,IAAMqB,KACN,IAAK,IAAMjb,KAAOqT,EAAY,CAC5B,IAAM7O,EAAQ6O,EAAWrT,GACrBJ,EAAQ8T,kBAAkB1T,GAC5Bib,EAAMrb,EAAQ8T,kBAAkB1T,IAAQwE,EAExCyW,EAAMjb,GAAOwE,EAIjBqB,EAAQqV,cAAcD,IAWxBrb,EAAQub,WAAa,SAASnb,EAAKwE,GACjC,IAAM4W,GACJT,EAAAra,QAA4B+a,MAC5BV,EAAAra,QAA4Bgb,QAC5BX,EAAAra,QAA4Bib,KAC5BZ,EAAAra,QAA4Bkb,OAC5B,cACA,eAEIC,GACJd,EAAAra,QAA4Bob,UAC5Bf,EAAAra,QAA4Bqb,aAC5BhB,EAAAra,QAA4Bsa,QAC5BD,EAAAra,QAA4Bsb,aAC5BjB,EAAAra,QAA4Bub,WAC5B,WACA,cACA,UACA,cACA,aAGF,OAAIhJ,EAAQiJ,SAASV,EAAepb,IAC1BwE,EACCqO,EAAQiJ,SAASL,EAAgBzb,GACxB,SAAVwE,EAEDA,GAgBX5E,EAAQ+Z,oBAAsB,SAAShC,EAAM9R,GAI3C,IAHA,IAAMkW,EAAQpE,EAAK9I,MAAM,KACnBwE,KAEGxL,EAAI,EAAGA,EAAIkU,EAAM7hB,SAAU2N,EAAG,CACrC,IACMmU,EADOC,mBAAmBF,EAAMlU,IAClBgH,MAAM,KAC1BlN,EAAArB,QAAY8J,OAAyB,IAAlB4R,EAAO9hB,QAC1B,IAAM8F,EAAMgc,EAAO,GACbE,EAAMF,EAAO,GAEnB3I,EAAWrT,GAAOJ,EAAQub,WAAWnb,EAAKkc,GAG5C,OAAO7I,GAYTzT,EAAQuc,yBAA2B,SAASlhB,GAC1C0G,EAAArB,QAAYsB,iBAAiB3G,EAA7B+c,EAAA1X,SACA,IAAMuX,EAAkB5c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YAClB5gB,EAAMmc,EAAgB3d,OAC5B,WAAYb,KAAKkjB,mBAAmB1E,EAAiBwE,EAAQ,EAAG3gB,GAAhE,KAYFkE,EAAQ4c,8BAAgC,SAASvhB,GAC/C0G,EAAArB,QAAYsB,iBAAiB3G,EAA7Bud,EAAAlY,SAOA,IANA,IAAM+X,EAAOpd,EAASwhB,UAChBC,EAAkBrE,EAAKne,OACvB2d,EAAkB5c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YACpBK,EAAS,EACPC,GAAa,MACV/U,EAAI,EAAGA,EAAI6U,IAAmB7U,EAAG,CACxC,IAAMnM,EAAM2c,EAAKxQ,GACX8P,EAAOte,KAAKkjB,mBAAmB1E,EAAiBwE,EAAQM,EAAQjhB,GAC5D,IAANmM,GACF+U,EAAU1c,KAAK,KAEjB0c,EAAU1c,KAAKyX,GACfgF,EAASjhB,EAGX,OADAkhB,EAAU1c,KAAK,KACR0c,EAAUnP,KAAK,KAYxB7N,EAAQid,oBAAsB,SAAS5hB,GACrC0G,EAAArB,QAAYsB,iBAAiB3G,EAA7B0d,EAAArY,SACA,IAAMuX,EAAkB5c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YAClB5gB,EAAMmc,EAAgB3d,OAC5B,WAAYb,KAAKkjB,mBAAmB1E,EAAiBwE,EAAQ,EAAG3gB,GAAhE,KAYFkE,EAAQkd,yBAA2B,SAAS7hB,GAC1C0G,EAAArB,QAAYsB,iBAAiB3G,EAA7B6d,EAAAxY,SACA,IAAMuX,EAAkB5c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YAClB5gB,EAAMmc,EAAgB3d,OAC5B,WAAYb,KAAKkjB,mBAAmB1E,EAAiBwE,EAAQ,EAAG3gB,GAAhE,KAeFkE,EAAQmd,aAAe,SAASlF,EAAiBwE,EAAQM,EAAQtE,EAAMuE,GAErE,IADA,IAAMI,EAAkB3E,EAAKne,OACpB2N,EAAI,EAAGA,EAAImV,IAAmBnV,EAAG,CAExC,IAAMnM,EAAM2c,EAAKxQ,GAAKwU,EAChB1E,EAAOte,KAAKkjB,mBAAmB1E,EAAiBwE,EAAQM,EAAQjhB,GAC5D,IAANmM,GACF+U,EAAU1c,KAAK,KAEjB0c,EAAU1c,KAAKyX,GACfgF,EAAStE,EAAKxQ,GAEhB,OAAO8U,GAYT/c,EAAQqd,sBAAwB,SAAShiB,GACvC0G,EAAArB,QAAYsB,iBAAiB3G,EAA7Bie,EAAA5Y,SACA,IAAMuX,EAAkB5c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YAClBjE,EAAOpd,EAASwhB,UAEhBG,GAAa,MAInB,OAHAhd,EAAQmd,aAAanjB,KAAKP,KACxBwe,EAAiBwE,EAHJ,EAGoBhE,EAAMuE,GACzCA,EAAU1c,KAAK,KACR0c,EAAUnP,KAAK,KAYxB7N,EAAQsd,2BAA6B,SAASjiB,GAC5C0G,EAAArB,QAAYsB,iBAAiB3G,EAA7Bwe,EAAAnZ,SAOA,IANA,IAAMuX,EAAkB5c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YAClBlD,EAAQne,EAASkiB,WACjBC,EAAehE,EAAMlf,OACvByiB,EAAS,EACPC,GAAa,KACV/U,EAAI,EAAGA,EAAIuV,IAAgBvV,EAAG,CACrC,IAAMwQ,EAAOe,EAAMvR,GACnB+U,EAAU1c,KAAK,KACfyc,EAAS/c,EAAQmd,aAAanjB,KAAKP,KACjCwe,EAAiBwE,EAAQM,EAAQtE,EAAMuE,GACzCA,EAAU1c,KAAK,KAEjB,OAAO0c,EAAUnP,KAAK,KASxB7N,EAAQyd,mBACNC,EAAK1d,EAAQgZ,wBACb2E,EAAK3d,EAAQwY,6BACboF,EAAK5d,EAAQuZ,0BACbsE,EAAK7d,EAAQ8X,wBACbgG,EAAK9d,EAAQ6Y,mBACbkF,EAAK/d,EAAQmZ,sBASfnZ,EAAQge,mBACNxJ,gBAAmBxU,EAAQ4c,8BAC3BnI,WAAczU,EAAQkd,yBACtBxI,aAAgB1U,EAAQsd,2BACxBrJ,WAAcjU,EAAQuc,yBACtBnI,MAASpU,EAAQid,oBACjB3I,QAAWtU,EAAQqd,uBAcrBrd,EAAQrG,UAAUue,mBAAqB,SAASH,EAAMkG,GAMpD,IALA,IAAMC,EAAMnG,EAAKzd,OACbsL,EAAQ,EACNqS,OAA0C1a,IAAxB0gB,EACtBA,KACEhW,EAAIgQ,EAAgB3d,OACjBsL,EAAQsY,GAAK,CAClB,IAAIC,SACAC,EAAQ,EACRC,EAAS,EACb,GAEEA,IAAe,IADfF,EAAIne,EAAQgV,QAAQkG,QAAQnD,EAAKxC,OAAO3P,SAChBwY,EACxBA,GAAS,QACFD,GAAK,IACd,IAAMG,EAAgB,EAATD,IAAgBA,GAAU,GAAMA,GAAU,EACvD5kB,KAAKma,QAAU0K,EACfF,EAAQ,EACRC,EAAS,EACT,GAEEA,IAAe,IADfF,EAAIne,EAAQgV,QAAQkG,QAAQnD,EAAKxC,OAAO3P,SAChBwY,EACxBA,GAAS,QACFD,GAAK,IACd,IAAMI,EAAgB,EAATF,IAAgBA,GAAU,GAAMA,GAAU,EACvD5kB,KAAKoa,QAAU0K,EACftG,EAAgBhQ,KAAOxO,KAAKma,OAASna,KAAK0Z,UAC1C8E,EAAgBhQ,KAAOxO,KAAKoa,OAASpa,KAAK0Z,UAE5C,OAAO8E,GAeTjY,EAAQrG,UAAUgjB,mBAAqB,SAAS1E,EAAiBwE,EAAQM,EAAQjhB,GAE/E,IADA,IAAI0iB,EAAqB,GAChBvW,EAAI8U,EAAQ9U,EAAInM,EAAKmM,GAAKwU,EAAQ,CACzC,IAAIgC,EAAIxG,EAAgBhQ,GACpByW,EAAIzG,EAAgBhQ,EAAI,GAC5BwW,EAAItD,KAAKwD,MAAMF,EAAIhlB,KAAK0Z,WACxBuL,EAAIvD,KAAKwD,MAAMD,EAAIjlB,KAAK0Z,WACxB,IAAMmL,EAAKG,EAAIhlB,KAAKma,OACd2K,EAAKG,EAAIjlB,KAAKoa,OACpBpa,KAAKma,OAAS6K,EACdhlB,KAAKoa,OAAS6K,EACdF,GAAsBxe,EAAQkV,oBAAoBoJ,GAC9Cte,EAAQkV,oBAAoBqJ,GAElC,OAAOC,GAYTxe,EAAQrG,UAAUilB,oBAAsB,SAAS7G,EAAMjR,GACrD/E,EAAArB,QAAY8J,OAAOuN,EAAKzd,OAAS,GACjCyH,EAAArB,QAAY8J,OAAmB,MAAZuN,EAAK,IACxBhW,EAAArB,QAAY8J,OAAiC,MAA1BuN,EAAKA,EAAKzd,OAAS,IACtC,IAAIukB,EAAa9G,EAAKmD,QAAQ,KACxB4D,EAAeD,GAAc,EAC9B9G,EAAKC,UAAU,EAAG6G,GADF,IACmB9G,EAClC1c,EAAW5B,KAAKslB,qBAAqBD,EAAchY,GACnDb,EAAU,IAAA+Y,EAAAte,QAAcrF,GAC9B,GAAIwjB,GAAc,EAAG,CACnB,IAAMI,EAA0BlH,EAAKC,UACnC6G,EAAa,EAAG9G,EAAKzd,OAAS,GAE1B4kB,GADNL,EAAaI,EAAwB/D,QAAQ,OACR,EACnC+D,EAAwBjH,UAAU,EAAG6G,GACrCI,EACF,GAAsB,IAAlBC,EAEF,IADA,IAAM/C,EAAQ+C,EAAejQ,MAAM,KAC1BhH,EAAI,EAAGA,EAAIkU,EAAM7hB,SAAU2N,EAAG,CACrC,IACMmU,EADOC,mBAAmBF,EAAMlU,IAClBgH,MAAM,KAC1BlN,EAAArB,QAAY8J,OAAyB,IAAlB4R,EAAO9hB,QAC1B,IAAI8F,EAAMgc,EAAO,GACXxX,EAAQwX,EAAO,IAChB3iB,KAAKka,WAAa3T,EAAQ8T,kBAAkB1T,KAC/CA,EAAMJ,EAAQ8T,kBAAkB1T,IAElC6F,EAAQkZ,IAAI/e,EAAKJ,EAAQub,WAAWnb,EAAKwE,IAG7C,GAAIia,GAAc,EAAG,CACnB,IAAMO,EAAaH,EAAwBjH,UAAU6G,EAAa,GAC9DplB,KAAKka,UACP3T,EAAQ8Z,mBAAmBsF,EAAYnZ,GAEvCjG,EAAQ6a,oBAAoBuE,EAAYnZ,IAI9C,OAAOA,GAYTjG,EAAQrG,UAAU0lB,qBAAuB,SAAStH,EAAMjR,GACtD/E,EAAArB,QAAY8J,OAAmB,MAAZuN,EAAK,IAExB,IAAM1R,KAEN,IADA0R,EAAOA,EAAKC,UAAU,GACfD,EAAKzd,OAAS,GAAG,CACtB,IAAMsL,EAAQmS,EAAKmD,QAAQ,KAC3BnZ,EAAArB,QAAY8J,OAAO5E,GAAS,GAC5B,IAAMK,EAAUxM,KAAKmlB,oBACnB7G,EAAKC,UAAU,EAAGpS,EAAQ,GAAIkB,GAChCT,EAAS/F,KAAK2F,GACd8R,EAAOA,EAAKC,UAAUpS,EAAQ,GAEhC,OAAOS,GAYTrG,EAAQrG,UAAUolB,qBAAuB,SAAShH,EAAMjR,GACtD,IAAMwY,EAAiBtf,EAAQyd,kBAAkB1F,EAAK,IAItD,OAHAhW,EAAArB,QAAY8J,YAA0BjN,IAAnB+hB,GACnB7lB,KAAKma,OAAS,EACdna,KAAKoa,OAAS,EACPyL,EAAetlB,KAAKP,KAAMse,IAYnC/X,EAAQrG,UAAU4lB,iBAAmB,SAAStZ,EAASa,GACrD,IAAoC0Y,KAIhCC,EAAkB,GAChBpkB,EAAW4K,EAAQ6U,cACrBzf,IACFokB,EAAkBhmB,KAAKimB,kBAAkBrkB,EAAUyL,IAGjD2Y,EAAgBnlB,OAAS,IAE3ByH,EAAArB,QAAY8J,OAAuD,MAAhDiV,EAAgBA,EAAgBnlB,OAAS,IAC5DmlB,EAAkBA,EAAgBzH,UAAU,EAAGyH,EAAgBnlB,OAAS,GACxEklB,EAAalf,KAAKmf,IAKpB,IAAoCE,KAC9BC,EAAenmB,KAAK+Z,oBAAoBvN,GAC9C,IAAK,IAAM7F,KAAOwf,EAAc,CAC9B,IAAMhb,EAAQgb,EAAaxf,GAC3B,GAAIwE,SAAyCxE,IAAQ6F,EAAQ4Z,kBAAmB,CAC7C,IAA7BF,EAAkBrlB,QACpBqlB,EAAkBrf,KAAK,KAEzB,IAAMwf,EAAUnJ,mBACXvW,EAAIqI,QAAQ,UAAW,KADZ,IAEZ7D,EAAMmb,WAAWtX,QAAQ,UAAW,MACxCkX,EAAkBrf,KAAKwf,IAW3B,GAPIH,EAAkBrlB,OAAS,IAC7BklB,EAAalf,KAAK,KAClBrG,MAAMN,UAAU2G,KAAK1F,MAAM4kB,EAAcG,IAKvClmB,KAAK6Z,cAAe,CACtB,IAAM0M,EAAgB/Z,EAAQga,mBAC9B,QAAsB1iB,IAAlByiB,EAA6B,CAC/B,IAAIxK,EAASwK,EAAchmB,KAAKiM,EAAS,GACzC,GAAe,OAAXuP,EAAiB,CACnB,IAAME,KACNF,EAASvb,MAAM+c,QAAQxB,GAAUA,GAAUA,GAC3CxV,EAAQsT,cACNkC,EAAQna,EAAS6kB,UAAWxK,GAC1BA,EAAcpb,OAAS,IACzBklB,EAAalf,KAAK,KAClBrG,MAAMN,UAAU2G,KAAK1F,MAAM4kB,EAAc9J,MASjD,OADA8J,EAAalf,KAAK,KACXkf,EAAa3R,KAAK,KAY3B7N,EAAQrG,UAAUwmB,kBAAoB,SAAS9Z,EAAUS,GACvD,IAAMkW,KACN,GAAI3W,EAAS/L,OAAS,EAAG,CACvB0iB,EAAU1c,KAAK,KACf,IAAK,IAAI2H,EAAI,EAAGC,EAAK7B,EAAS/L,OAAQ2N,EAAIC,IAAMD,EAC9C+U,EAAU1c,KAAK7G,KAAK8lB,iBAAiBlZ,EAAS4B,GAAInB,IAGtD,OAAOkW,EAAUnP,KAAK,KAYxB7N,EAAQrG,UAAU+lB,kBAAoB,SAASrkB,EAAUyL,GACvD,IAAMsZ,EAAiBpgB,EAAQge,kBAC7B3iB,EAAS6kB,WACXne,EAAArB,QAAY8J,YAA0BjN,IAAnB6iB,GACnB,IAAMC,EACDC,EAAA5f,QAAgB6f,qBAAqBllB,GAAU,EAAMyL,GAG1D,OAFArN,KAAKma,OAAS,EACdna,KAAKoa,OAAS,EACPuM,EAAepmB,KAAKP,KAAM4mB,cAIpBrgB,gGClrCbmU,YAAa,aACbE,MAAO,QACPE,QAAS,8FCPX,QAAAxU,EAAA,QACAA,EAAA,SACAA,EAAA,wDAKA,IAAMC,EAAUa,QAAQD,OAAO,0BAC7BG,EAAAL,QAASE,OAAOK,KAChBuf,EAAA9f,QAAyBE,OAAOK,KAChC0D,EAAAjE,QAAwBE,OAAOK,iBAIlBjB,wMCjBfygB,EAAA1gB,EAAA,KAyCA,MAAA2gB,EAAA,SAAA5Z,GAEA6Z,EAAA,QAAA3mB,KAAAP,MACAmnB,YAAAF,EAAAG,aACAC,gBAAAC,EAAA,KACAC,cAAAN,EAAAO,iBAGA,MAAAla,EAAAD,MAMArN,KAAAynB,QAAAna,EAAAoa,OAAApa,EAAAoa,OAAA,KAMA1nB,KAAA2nB,aAAA7jB,IAAAwJ,EAAAsH,QAAAtH,EAAAsH,OAMA5U,KAAA4nB,WAAA9jB,IAAAwJ,EAAAmH,MAAAnH,EAAAmH,KAMAzU,KAAAqM,UAAAiB,EAAAV,SAAAU,EAAAV,SAAA,KAMA5M,KAAA6nB,yBAMA7nB,KAAA8nB,8BAQA9nB,KAAA+nB,2BASA/nB,KAAAgoB,oBAOAhoB,KAAAioB,iBAAA,KAMAjoB,KAAAkoB,qBAAApkB,IAAAwJ,EAAAoH,eACApH,EAAAoH,eAAA,GAMA1U,KAAAmoB,gBAAAlB,EAAAmB,eAAAhjB,KAAApF,MAQAA,KAAAqoB,OAAA,IAAArB,EAAA,QAQAhnB,KAAAsoB,kBACA3N,MAAA3a,KAAAwjB,oBACAhJ,WAAAxa,KAAA8iB,yBACAyF,WAAAvoB,KAAA8iB,yBACAjI,QAAA7a,KAAA4jB,sBACA5I,WAAAhb,KAAAyjB,yBACA1I,gBAAA/a,KAAAmjB,8BACAlI,aAAAjb,KAAA6jB,2BACA2E,mBAAAxoB,KAAAyoB,iCACAC,OAAA1oB,KAAA2oB,uBAIAhoB,OAAAkN,EAAA,SAAAlN,CAAAsmB,EAAAC,EAAA,SAUAD,EAAA/mB,UAAAqM,WAAA,SAAAC,EAAAoc,GACA,MAAA/f,OAAA/E,IAAA8kB,KACAC,EAAAloB,OAAAkN,EAAA,OAAAlN,CAAA6L,GACA5K,EAAA4K,EAAA6U,cACA,GAAAzf,EAAA,CACA,MAAAknB,EAAA9oB,KAAAsoB,iBAAA1mB,EAAA6kB,WACAqC,IACA9oB,KAAA+nB,wBAAAc,GAAAjnB,EAAAmnB,UAAApoB,OAAAqoB,EAAA,YAAAroB,IACAmoB,EAAAvoB,KAAAP,KAAAwM,EAAA5K,IAIAiH,IACA7I,KAAA8nB,2BAAAe,GAAAI,EAAA,QAAApgB,OACA2D,EACA0c,EAAA,EAAAC,OACAnpB,KAAAopB,qBAAAppB,QASAinB,EAAA/mB,UAAAmpB,mBAAA,SAAA7c,GACAxM,KAAAuM,WAAAC,IAQAya,EAAA/mB,UAAAopB,sBAAA,SAAA9c,GACAxM,KAAAyM,cAAAD,IAQAya,EAAA/mB,UAAAqpB,aAAA,WACA,IAAA3c,EAMA,OALA5M,KAAAqM,UACAO,EAAA5M,KAAAqM,UACGrM,KAAAynB,UACH7a,EAAA5M,KAAAynB,QAAA+B,eAEoE,GAQpEvC,EAAA/mB,UAAA4M,kBAAA,SAAAI,GACA,IAAAV,EACAU,aAAAuc,EAAA,QAAAC,MACAld,EAAAU,EAAAV,QACGU,aAAAyc,EAAA,QAAAD,QACHld,EAAAU,EAAAjF,SAEAjI,KAAAuM,WAAwC,IAQxC0a,EAAA/mB,UAAA6M,qBAAA,SAAAG,GACA,IAAAV,EACAU,aAAAuc,EAAA,QAAAC,MACAld,EAAAU,EAAAV,QACGU,aAAAyc,EAAA,QAAAD,QACHld,EAAAU,EAAAjF,SAEAjI,KAAAyM,cAA2C,IAQ3Cwa,EAAA/mB,UAAAkpB,qBAAA,SAAAlc,GACA,MAAAV,EAAwCU,EAAA,OACxC,GAAAlN,KAAA4pB,uBAAA,CACA,MAAAljB,EAAA/F,OAAAkN,EAAA,OAAAlN,CAAA6L,GACA9F,KAAA1G,KAAAgoB,mBACAhoB,KAAAgoB,iBAAAthB,GAAA8F,QAGAxM,KAAA6pB,eAAArd,IAYAya,EAAA/mB,UAAAuM,cAAA,SAAAD,EAAAsd,GACA,MAAAjd,OAAA/I,IAAAgmB,KACAjB,EAAAloB,OAAAkN,EAAA,OAAAlN,CAAA6L,GACAjL,EAAAvB,KAAA+nB,wBAAAc,GACA,GAAAtnB,EAAA,CACA,MAAAwoB,EAAA/pB,KAAAqoB,OACA2B,KACAD,EAAAE,gBAAA1oB,EAAA,SAAA4M,GACA3B,IAAA2B,EAAA3B,SACAwd,EAAAnjB,KAAAsH,KAGA,QAAAK,EAAAwb,EAAAnpB,OAAA,EAA0C2N,GAAA,IAAQA,EAClDub,EAAAG,OAAAF,EAAAxb,IAIA3B,IACAoc,EAAA,QAAA/hB,cAAAlH,KAAA8nB,2BAAAe,WACA7oB,KAAA8nB,2BAAAe,KAQA5B,EAAA/mB,UAAAmR,OAAA,SAAAjJ,GACA,MAAA+hB,EAAAnqB,KAAAsY,SACA/G,EAAAvR,KAAA6nB,sBACAjb,EAAA5M,KAAAupB,eAEAY,IACA5Y,EAAAxK,QAAAkiB,EAAA,QAAA/hB,eACAqK,EAAA1Q,OAAA,EACA+L,EAAA7F,QAAA/G,KAAAspB,sBAAAlkB,KAAApF,QAEAknB,EAAA,QAAAhnB,UAAAmR,OAAA9Q,KAAAP,KAAAoI,GAEAA,IACApI,KAAAqM,UACAkF,EAAA1K,KACAoiB,EAAA,QAAApgB,OAAA7I,KAAAqM,UAAA+d,EAAA,EAAAC,IACArqB,KAAA8M,kBAAA9M,MACAipB,EAAA,QAAApgB,OAAA7I,KAAAqM,UAAA+d,EAAA,EAAAE,OACAtqB,KAAA+M,qBAAA/M,OAEKA,KAAAynB,SACLlW,EAAA1K,KACAoiB,EAAA,QAAApgB,OAAA7I,KAAAynB,QAAA8C,EAAA,EAAAC,WACAxqB,KAAA8M,kBAAA9M,MACAipB,EAAA,QAAApgB,OAAA7I,KAAAynB,QAAA8C,EAAA,EAAAE,cACAzqB,KAAA+M,qBAAA/M,OAGA4M,EAAA7F,QAAA/G,KAAAqpB,mBAAAjkB,KAAApF,SAQAinB,EAAA/mB,UAAAwqB,gBAAApD,EAAA,MASAL,EAAA/mB,UAAAyqB,OAAA,SAAAC,EAAAC,EAAAziB,GAEA,MAAA0iB,EAAA1iB,EAAA2iB,wBACAH,EAAA,GAAA5qB,KAAAkoB,gBAAA0C,EAAA,GAAA5qB,KAAAkoB,kBACA8C,EAAA5iB,EAAA2iB,wBACAH,EAAA,GAAA5qB,KAAAkoB,gBAAA0C,EAAA,GAAA5qB,KAAAkoB,kBACA+C,EAAAtqB,OAAAqoB,EAAA,eAAAroB,EAAAmqB,EAAAE,IAEA,IAAAE,EAAAlrB,KAAAqoB,OAAA8C,YAAAF,GAGAjrB,KAAA2nB,UAAA3nB,KAAA4nB,QACAsD,IAAAE,OAAA,SAAAC,GACA,OAAAA,EAAA7e,QAAA6U,cAAAoF,YACA6E,EAAA,QAAAC,UAIA,IAIAC,EAAAC,EAAAC,EAAAC,EAAAC,EAJAC,GAAA,EACAC,GAAA,EACAlX,EAAA,KACAmX,EAAA,KAEA,GAAAb,EAAArqB,OAAA,GACAb,KAAAioB,iBAAA4C,EACAK,EAAAc,KAAAhsB,KAAAmoB,iBACA,MAAA8D,EAAAf,EAAA,GAAAG,QACAa,EAAAhB,EAAA,GAAA1e,QAAA6U,cAAAoF,YACA6E,EAAA,QAAAC,OACAvrB,KAAA2nB,UAAA3nB,KAAA4nB,OACA6D,EAAArjB,EAAA+jB,uBAAAF,EAAA,IACAP,EAAAtjB,EAAA+jB,uBAAAF,EAAA,IACAN,EAAAS,EAAA,QAAAC,gBAAAzB,EAAAa,GACAG,EAAAQ,EAAA,QAAAC,gBAAAzB,EAAAc,IAEAG,GADAL,EAAA9J,KAAA4K,KAAA5K,KAAA6K,IAAAZ,EAAAC,MACA5rB,KAAAkoB,mBAEA4D,GAAA,EACAlX,EAAA+W,EAAAC,EACAK,EAAA,GAAAA,EAAA,GACAF,EAAA3jB,EAAA+jB,uBAAAvX,KAEK5U,KAAA4nB,QAELhT,EADAsX,EACAE,EAAA,QAAAI,gBAAA3B,EACoCK,EAAA,GAAA1e,QAAA6U,eAEpC+K,EAAA,QAAAK,iBAAA5B,EACAoB,GAEAF,EAAA3jB,EAAA+jB,uBAAAvX,GACAwX,EAAA,QAAAM,SAAA9B,EAAAmB,IAAA/rB,KAAAkoB,kBACA4D,GAAA,EACA9rB,KAAA2nB,UAAAuE,IACAT,EAAArjB,EAAA+jB,uBAAAF,EAAA,IACAP,EAAAtjB,EAAA+jB,uBAAAF,EAAA,IACAN,EAAAS,EAAA,QAAAC,gBAAAN,EAAAN,GACAG,EAAAQ,EAAA,QAAAC,gBAAAN,EAAAL,IAEAG,GADAL,EAAA9J,KAAA4K,KAAA5K,KAAA6K,IAAAZ,EAAAC,MACA5rB,KAAAkoB,mBAEAtT,EAAA+W,EAAAC,EACAK,EAAA,GAAAA,EAAA,GACAF,EAAA3jB,EAAA+jB,uBAAAvX,OAKAkX,IACAC,GAAArK,KAAAC,MAAAoK,EAAA,IAAArK,KAAAC,MAAAoK,EAAA,MAGA,OACAD,UACAlX,SACAmX,gBASA9E,EAAA/mB,UAAA2pB,eAAA,SAAArd,GACAxM,KAAAyM,cAAAD,GAAA,GACAxM,KAAAuM,WAAAC,GAAA,IASAya,EAAA/mB,UAAAyoB,qBAAA,SAAAnc,EAAA5K,GACA,MACA+qB,EADAhsB,OAAAisB,EAAA,WAAAjsB,CAAAiB,GACAirB,iBAAA,GACA,QAAAre,EAAA,EAAAC,EAAAke,EAAA9rB,OAAA,EAA8C2N,EAAAC,IAAQD,EAAA,CACtD,MAAA6c,EAAAsB,EAAAlsB,MAAA+N,IAAA,GACAse,GACAtgB,UACA6e,WAEArrB,KAAAqoB,OAAA0E,OAAApsB,OAAAqoB,EAAA,eAAAroB,CAAA0qB,GAAAyB,KAUA7F,EAAA/mB,UAAAuoB,iCAAA,SAAAjc,EAAA5K,GACA,MAAAorB,EAAAprB,EAAAqrB,qBACA,QAAAze,EAAA,EAAiBA,EAAAwe,EAAAnsB,SAAuB2N,EAAA,CACxC,MAAAsa,EAAA9oB,KAAAsoB,iBAAA0E,EAAAxe,GAAAiY,WACAqC,GACAA,EAAAvoB,KAAAP,KAAAwM,EAAAwgB,EAAAxe,MAWAyY,EAAA/mB,UAAA4iB,yBAAA,SAAAtW,EAAA5K,GACA,MAAA+qB,EAAA/qB,EAAAirB,iBACA,QAAAre,EAAA,EAAAC,EAAAke,EAAA9rB,OAAA,EAA8C2N,EAAAC,IAAQD,EAAA,CACtD,MAAA6c,EAAAsB,EAAAlsB,MAAA+N,IAAA,GACAse,GACAtgB,UACA6e,WAEArrB,KAAAqoB,OAAA0E,OAAApsB,OAAAqoB,EAAA,eAAAroB,CAAA0qB,GAAAyB,KAUA7F,EAAA/mB,UAAAijB,8BAAA,SAAA3W,EAAA5K,GACA,MAAAsrB,EAAAtrB,EAAAirB,iBACA,QAAA5M,EAAA,EAAAC,EAAAgN,EAAArsB,OAAoCof,EAAAC,IAAQD,EAAA,CAC5C,MAAA0M,EAAAO,EAAAjN,GACA,QAAAzR,EAAA,EAAAC,EAAAke,EAAA9rB,OAAA,EAAgD2N,EAAAC,IAAQD,EAAA,CACxD,MAAA6c,EAAAsB,EAAAlsB,MAAA+N,IAAA,GACAse,GACAtgB,UACA6e,WAEArrB,KAAAqoB,OAAA0E,OAAApsB,OAAAqoB,EAAA,eAAAroB,CAAA0qB,GAAAyB,MAWA7F,EAAA/mB,UAAAujB,yBAAA,SAAAjX,EAAA5K,GACA,MAAAurB,EAAAvrB,EAAAirB,iBACA,QAAAre,EAAA,EAAAC,EAAA0e,EAAAtsB,OAAqC2N,EAAAC,IAAQD,EAAA,CAC7C,MAAAme,EAAAQ,EAAA3e,GACAse,GACAtgB,UACA6e,SAAAsB,MAEA3sB,KAAAqoB,OAAA0E,OAAAnrB,EAAAmnB,YAAA+D,KAUA7F,EAAA/mB,UAAA2jB,2BAAA,SAAArX,EAAA5K,GACA,MAAAoe,EAAApe,EAAAirB,iBACA,QAAAO,EAAA,EAAAC,EAAArN,EAAAnf,OAAuCusB,EAAAC,IAAQD,EAAA,CAC/C,MAAAzN,EAAAK,EAAAoN,GACA,QAAAnN,EAAA,EAAAC,EAAAP,EAAA9e,OAAsCof,EAAAC,IAAQD,EAAA,CAC9C,MAAA0M,EAAAhN,EAAAM,GACA,QAAAzR,EAAA,EAAAC,EAAAke,EAAA9rB,OAAA,EAAkD2N,EAAAC,IAAQD,EAAA,CAC1D,MAAA6c,EAAAsB,EAAAlsB,MAAA+N,IAAA,GACAse,GACAtgB,UACA6e,WAEArrB,KAAAqoB,OAAA0E,OAAApsB,OAAAqoB,EAAA,eAAAroB,CAAA0qB,GAAAyB,OAYA7F,EAAA/mB,UAAAsjB,oBAAA,SAAAhX,EAAA5K,GACA,MAAA+qB,EAAA/qB,EAAAirB,iBACAC,GACAtgB,UACA6e,SAAAsB,MAEA3sB,KAAAqoB,OAAA0E,OAAAnrB,EAAAmnB,YAAA+D,IASA7F,EAAA/mB,UAAA0jB,sBAAA,SAAApX,EAAA5K,GACA,MAAA+d,EAAA/d,EAAAirB,iBACA,QAAA5M,EAAA,EAAAC,EAAAP,EAAA9e,OAAoCof,EAAAC,IAAQD,EAAA,CAC5C,MAAA0M,EAAAhN,EAAAM,GACA,QAAAzR,EAAA,EAAAC,EAAAke,EAAA9rB,OAAA,EAAgD2N,EAAAC,IAAQD,EAAA,CACxD,MAAA6c,EAAAsB,EAAAlsB,MAAA+N,IAAA,GACAse,GACAtgB,UACA6e,WAEArrB,KAAAqoB,OAAA0E,OAAApsB,OAAAqoB,EAAA,eAAAroB,CAAA0qB,GAAAyB,MAaA7F,EAAAG,aAAA,SAAAla,GACA,MAAA0X,EAAA5kB,KAAA2qB,OAAAzd,EAAA0d,MAAA1d,EAAAogB,WAAApgB,EAAA9E,KAKA,OAJAwc,EAAAkH,UACA5e,EAAAogB,WAAA1I,EAAAhQ,OAAAnU,MAAA,KACAyM,EAAA0d,MAAAhG,EAAAmH,aAEA7E,EAAA,QAAAC,YAAA5mB,KAAAP,KAAAkN,IAUA+Z,EAAAO,eAAA,SAAAta,GACA,MAAAqgB,EAAA5sB,OAAA6sB,EAAA,UAAA7sB,CAAAX,KAAAgoB,kBAKA,OAJAuF,EAAA1sB,SACA0sB,EAAAxmB,QAAA/G,KAAA6pB,eAAAzkB,KAAApF,OACAA,KAAAgoB,sBAEA,GAWAf,EAAAmB,eAAA,SAAA9D,EAAAI,GACA,OAAA0H,EAAA,QAAAqB,yBACAztB,KAAAioB,iBAAA3D,EAAA+G,SACAe,EAAA,QAAAqB,yBACAztB,KAAAioB,iBAAAvD,EAAA2G,UAEAhlB,EAAA,0HCxlBA,MAAAqnB,EAAA,SAAArgB,GACA,MAAAC,EAAAD,MACAsgB,OAAA7pB,IAAAwJ,EAAAqgB,WACArgB,EAAAqgB,WAAA,YAEAC,OAAA9pB,IAAAwJ,EAAAsgB,SAAAtgB,EAAAsgB,SACAC,EAAA,EAAAC,WACAvsB,OAAAssB,EAAA,EAAAE,qBAAAJ,GACAK,QAAA1gB,EAAA0gB,QACAC,QAAA3gB,EAAA2gB,QACAC,SAAA5gB,EAAA4gB,WAGAC,EAAA,EAAA5tB,KAAAP,MACAouB,aAAA9gB,EAAA8gB,aACAC,UAAA/gB,EAAA+gB,UACAC,YAAAhhB,EAAAghB,YACAC,OAAAjhB,EAAAihB,OACAZ,aACAa,2BAAAlhB,EAAAkhB,2BACAZ,WACAa,iBAAAnhB,EAAAmhB,iBACAC,eAAAphB,EAAAohB,eACAC,gBAAArhB,EAAAqhB,gBACAta,IAAA/G,EAAA+G,IACAua,KAAAthB,EAAAshB,KACAC,WAAA/qB,IAAAwJ,EAAAuhB,OAAAvhB,EAAAuhB,MACAC,WAAAxhB,EAAAwhB,cAKAnuB,OAAAG,EAAA,SAAAH,CAAA+sB,EAAAS,EAAA,GACA,IAAAY,EAAA,EC/CA,MAAAC,EAAA,SAAA3hB,GAEA,MAAAC,EAAAD,MAEA,IAAA+gB,EAEAA,OADAtqB,IAAAwJ,EAAA8gB,aACA9gB,EAAA8gB,cAEAY,EAAAC,aAGA,MAAAX,OAAAxqB,IAAAwJ,EAAAghB,YACAhhB,EAAAghB,YAAA,YAEAja,OAAAvQ,IAAAwJ,EAAA+G,IACA/G,EAAA+G,IAAA,uDAEA0a,EAAAxuB,KAAAP,MACAouB,eACAC,UAAA/gB,EAAA+gB,UACAC,cACAC,YAAAzqB,IAAAwJ,EAAAihB,QAAAjhB,EAAAihB,OACAP,aAAAlqB,IAAAwJ,EAAA0gB,QAAA1gB,EAAA0gB,QAAA,GACAQ,2BAAAlhB,EAAAkhB,2BACAC,iBAAAnhB,EAAAmhB,iBACApa,MACAwa,MAAAvhB,EAAAuhB,SAKAluB,OAAAG,EAAA,SAAAH,CAAAquB,EAAAD,GAUAC,EAAAC,YAAA,2FAGA5oB,EAAA,sDC3DA6oB,EAAA5oB,EAAA,IAKA,MAAA6oB,GAOAC,YAAA,SAAAjhB,GACA,MAAAkhB,EAAAC,EAAA,QAAAC,kBAAAphB,GAAA,GACA,OAAAghB,EAAAK,kBAAAH,IAQAG,kBAAA,SAAAC,GACA,MAAAC,EAAA,6BAAAC,KAAAF,GACA,OAAAC,OACA5rB,IAAA4rB,EAAA,YAEA,GASAE,aAAA,SAAAzhB,GACA,MAAAkhB,EAAAC,EAAA,QAAAC,kBAAAphB,GAAA,GACA0hB,EAAA9mB,KAAA+mB,MAAAT,GACA,OAAAU,MAAAF,QAAA/rB,EAAA+rB,EAAA,KAQAG,YAAA,SAAA7hB,GACA,MAAAkhB,EAAAC,EAAA,QAAAC,kBAAAphB,GAAA,GACA,OAAAghB,EAAAc,kBAAAZ,IAQAY,kBAAA,SAAAR,GAEA,MAAAC,EAAA,4CAAAC,KAAAF,GACA,OAAAC,EACAlO,WAAAkO,EAAA,SAEA,GASAQ,uBAAA,SAAA/hB,GACA,MAAAkhB,EAAAC,EAAA,QAAAC,kBAAAphB,GAAA,GACA,OAAAghB,EAAAgB,6BAAAd,IAQAc,6BAAA,SAAAV,GACA,MAAAC,EAAA,gBAAAC,KAAAF,GACA,OAAAC,EACAU,SAAAV,EAAA,YAEA,GASAW,WAAA,SAAAliB,GACA,OAAAmhB,EAAA,QAAAC,kBAAAphB,GAAA,GAAAmiB,QAQAC,qBAAA,SAAApiB,EAAAqiB,GACArB,EAAAsB,oBAAAtiB,EAAA,YAQAuiB,kBAAA,SAAAviB,EAAAshB,GACAthB,EAAAwiB,YAAArB,EAAA,QAAAsB,SAAAC,mBAAApB,KAQAqB,sBAAA,SAAA3iB,EAAA0hB,GACA,MAAAkB,EAAA,IAAAhoB,KAAA,IAAA8mB,GACAJ,EAAAsB,EAAAC,iBAAA,IACA9B,EAAA,QAAA+B,UAAAF,EAAAG,cAAA,SACAhC,EAAA,QAAA+B,UAAAF,EAAAI,aAAA,OACAjC,EAAA,QAAA+B,UAAAF,EAAAK,cAAA,OACAlC,EAAA,QAAA+B,UAAAF,EAAAM,gBAAA,OACAnC,EAAA,QAAA+B,UAAAF,EAAAO,gBAAA,OACAnjB,EAAAwiB,YAAArB,EAAA,QAAAsB,SAAAW,eAAA9B,KAQA+B,qBAAA,SAAArjB,EAAAsjB,GACA,MAAAhC,EAAAgC,EAAAC,cACAvjB,EAAAwiB,YAAArB,EAAA,QAAAsB,SAAAW,eAAA9B,KAQAkC,gCAAA,SAAAxjB,EAAAyjB,GACA,MAAAnC,EAAAmC,EAAAtL,WACAnY,EAAAwiB,YAAArB,EAAA,QAAAsB,SAAAW,eAAA9B,KAQAgB,oBAAA,SAAAtiB,EAAAshB,GACAthB,EAAAwiB,YAAArB,EAAA,QAAAsB,SAAAW,eAAA9B,MAEAppB,EAAA,yLClKAwrB,EAAAvrB,EAAA,IA2BA,MAAAyU,EAAA,SAAA4R,EAAAmF,GAEAC,EAAA,QAAAxxB,KAAAP,MAMAA,KAAAgyB,SAMAhyB,KAAAiyB,WAAA,EAMAjyB,KAAAkyB,mBAAA,EAEAlyB,KAAAmyB,eAAAxF,EAAAmF,IAIAnxB,OAAAkN,EAAA,SAAAlN,CAAAoa,EAAAgX,EAAA,SAQAhX,EAAA7a,UAAAkyB,iBAAA,SAAA1T,GACA1e,KAAAwe,gBAGA7d,OAAAsO,EAAA,OAAAtO,CAAAX,KAAAwe,gBAAAE,EAAAqE,qBAAAtiB,SAFAT,KAAAwe,gBAAAE,EAAAqE,qBAAAtiB,QAIAT,KAAAgyB,MAAAnrB,KAAA7G,KAAAwe,gBAAA3d,QACAb,KAAAqyB,WAUAtX,EAAA7a,UAAA0hB,MAAA,WACA,MAAA1C,EAAA,IAAAnE,EAAA,MAGA,OAFAmE,EAAAN,mBACA5e,KAAAsyB,OAAAtyB,KAAAwe,gBAAA/d,QAAAT,KAAAgyB,MAAAvxB,SACAye,GAOAnE,EAAA7a,UAAAqyB,eAAA,SAAAvN,EAAAC,EAAAuN,EAAAC,GACA,OAAAA,EAAA9xB,OAAA+xB,EAAA,yBAAA/xB,CAAAX,KAAA+oB,YAAA/D,EAAAC,GACAwN,GAEAzyB,KAAAkyB,mBAAAlyB,KAAA2yB,gBACA3yB,KAAAiyB,UAAAvQ,KAAA4K,KAAAsG,EAAA,EAAAC,oBACA7yB,KAAAwe,gBAAA,EAAAxe,KAAAgyB,MAAAhyB,KAAAgjB,OAAA,IACAhjB,KAAAkyB,kBAAAlyB,KAAA2yB,eAEAC,EAAA,EAAAE,iBACA9yB,KAAAwe,gBAAA,EAAAxe,KAAAgyB,MAAAhyB,KAAAgjB,OACAhjB,KAAAiyB,WAAA,EAAAjN,EAAAC,EAAAuN,EAAAC,KA0BA1X,EAAA7a,UAAA6yB,iBAAA,SAAArD,EAAAsD,EAAAC,GACA,GAAAjzB,KAAAsyB,QAAAY,EAAA,QAAAC,KACAnzB,KAAAsyB,QAAAY,EAAA,QAAAE,MACA,IAAApzB,KAAAwe,gBAAA3d,OACA,YAEA,MAAAwyB,OAAAvvB,IAAAkvB,KACAM,OAAAxvB,IAAAmvB,KACA,OAAAM,EAAA,EAAAC,yBAAAxzB,KAAAwe,gBAAA,EACAxe,KAAAgyB,MAAAhyB,KAAAgjB,OAAA0M,EAAA2D,EAAAC,IAUAvY,EAAA7a,UAAA2sB,eAAA,WACA,OAAA4G,EAAA,EAAAC,aACA1zB,KAAAwe,gBAAA,EAAAxe,KAAAgyB,MAAAhyB,KAAAgjB,SAOAjI,EAAA7a,UAAAkjB,QAAA,WACA,OAAApjB,KAAAgyB,OAUAjX,EAAA7a,UAAAyzB,cAAA,SAAAxnB,GACA,GAAAA,EAAA,GAAAnM,KAAAgyB,MAAAnxB,QAAAsL,EACA,YAEA,MAAAuS,EAAA,IAAAkV,EAAA,cAGA,OAFAlV,EAAAE,mBAAA5e,KAAAsyB,OAAAtyB,KAAAwe,gBAAA/d,MACA,IAAA0L,EAAA,EAAAnM,KAAAgyB,MAAA7lB,EAAA,GAAAnM,KAAAgyB,MAAA7lB,KACAuS,GASA3D,EAAA7a,UAAA2zB,eAAA,WACA,MAAArV,EAAAxe,KAAAwe,gBACAQ,EAAAhf,KAAAgyB,MACAM,EAAAtyB,KAAAsyB,OAEArT,KACA,IACAzQ,EAAAC,EADA6U,EAAA,EAEA,IAAA9U,EAAA,EAAAC,EAAAuQ,EAAAne,OAA+B2N,EAAAC,IAAQD,EAAA,CACvC,MAAAnM,EAAA2c,EAAAxQ,GACAkQ,EAAA,IAAAkV,EAAA,cACAlV,EAAAE,mBAAA0T,EAAA9T,EAAA/d,MAAA6iB,EAAAjhB,IACA4c,EAAApY,KAAA6X,GACA4E,EAAAjhB,EAEA,OAAA4c,GAOAlE,EAAA7a,UAAA4zB,iBAAA,WACA,MAAAC,KACAvV,EAAAxe,KAAAwe,gBACA,IAAA8E,EAAA,EACA,MAAAtE,EAAAhf,KAAAgyB,MACAhP,EAAAhjB,KAAAgjB,OACA,IAAAxU,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAuQ,EAAAne,OAA+B2N,EAAAC,IAAQD,EAAA,CACvC,MAAAnM,EAAA2c,EAAAxQ,GACAwlB,EAAAT,EAAA,EAAA7U,WACAF,EAAA8E,EAAAjhB,EAAA2gB,EAAA,IACAriB,OAAAsO,EAAA,OAAAtO,CAAAozB,EAAAC,GACA1Q,EAAAjhB,EAEA,OAAA0xB,GAOAhZ,EAAA7a,UAAA+zB,8BAAA,SAAAC,GACA,MAAAC,KACAC,KACAD,EAAAtzB,OAAAgxB,EAAA,EAAAwC,gBACAr0B,KAAAwe,gBAAA,EAAAxe,KAAAgyB,MAAAhyB,KAAAgjB,OAAAkR,EACAC,EAAA,EAAAC,GACA,MAAAE,EAAA,IAAAvZ,EAAA,MAGA,OAFAuZ,EAAA1V,mBACAsU,EAAA,QAAApU,GAAAqV,EAAAC,GACAE,GAQAvZ,EAAA7a,UAAAumB,QAAA,WACA,OAAA8N,EAAA,QAAAC,mBAQAzZ,EAAA7a,UAAAu0B,iBAAA,SAAAlzB,GACA,OAAAmzB,EAAA,EAAAzV,YACAjf,KAAAwe,gBAAA,EAAAxe,KAAAgyB,MAAAhyB,KAAAgjB,OAAAzhB,IAWAwZ,EAAA7a,UAAAiyB,eAAA,SAAAxF,EAAAmF,GACA,GAAAnF,EAEG,CACH3sB,KAAA20B,UAAA7C,EAAAnF,EAAA,GACA3sB,KAAAwe,kBACAxe,KAAAwe,oBAEA,MAAAQ,EAAA4V,EAAA,EAAAlB,aACA1zB,KAAAwe,gBAAA,EAAAmO,EAAA3sB,KAAAgjB,OAAAhjB,KAAAgyB,OACAhyB,KAAAwe,gBAAA3d,OAAA,IAAAme,EAAAne,OAAA,EAAAme,IAAAne,OAAA,GACAb,KAAAqyB,eATAryB,KAAA4e,mBAAAsU,EAAA,QAAApU,GAAA,KAAA9e,KAAAgyB,QAmBAjX,EAAA7a,UAAA0e,mBAAA,SAAA0T,EAAA9T,EAAAQ,GACAhf,KAAA60B,2BAAAvC,EAAA9T,GACAxe,KAAAgyB,MAAAhT,EACAhf,KAAAqyB,WAOAtX,EAAA7a,UAAA40B,eAAA,SAAA7V,GACA,IAAAqT,EAAAtyB,KAAA+0B,YACA,MAAAvW,KACAQ,KACA,IAAAxQ,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAwQ,EAAApe,OAAsC2N,EAAAC,IAAQD,EAAA,CAC9C,MAAAkQ,EAAAO,EAAAzQ,GACA,IAAAA,IACA8jB,EAAA5T,EAAAqW,aAEAp0B,OAAAsO,EAAA,OAAAtO,CAAA6d,EAAAE,EAAAqE,sBACA/D,EAAAnY,KAAA2X,EAAA3d,QAEAb,KAAA4e,mBAAA0T,EAAA9T,EAAAQ,IAEA3Y,EAAA,qKCrTA2uB,EAAA1uB,EAAA,IAwBA,MAAA0U,EAAA,SAAA2R,EAAAmF,GACAC,EAAA,QAAAxxB,KAAAP,MACAA,KAAAmyB,eAAAxF,EAAAmF,IAGAnxB,OAAAkN,EAAA,SAAAlN,CAAAqa,EAAA+W,EAAA,SAQA/W,EAAA9a,UAAA+0B,YAAA,SAAA5V,GACArf,KAAAwe,gBAGA7d,OAAAsO,EAAA,OAAAtO,CAAAX,KAAAwe,gBAAAa,EAAA0D,sBAFA/iB,KAAAwe,gBAAAa,EAAA0D,qBAAAtiB,QAIAT,KAAAqyB,WAUArX,EAAA9a,UAAA0hB,MAAA,WACA,MAAApC,EAAA,IAAAxE,EAAA,MAEA,OADAwE,EAAAZ,mBAAA5e,KAAAsyB,OAAAtyB,KAAAwe,gBAAA/d,SACA+e,GAOAxE,EAAA9a,UAAAqyB,eAAA,SAAAvN,EAAAC,EAAAuN,EAAAC,GACA,GAAAA,EAAA9xB,OAAA+xB,EAAA,yBAAA/xB,CAAAX,KAAA+oB,YAAA/D,EAAAC,GACA,OAAAwN,EAEA,MAAAjU,EAAAxe,KAAAwe,gBACAwE,EAAAhjB,KAAAgjB,OACA,IAAAxU,EAAAC,EAAAwR,EACA,IAAAzR,EAAA,EAAAC,EAAA+P,EAAA3d,OAA0C2N,EAAAC,EAAQD,GAAAwU,EAAA,CAClD,MAAAqJ,EAAA1rB,OAAAq0B,EAAA,gBAAAr0B,CACAqkB,EAAAC,EAAAzG,EAAAhQ,GAAAgQ,EAAAhQ,EAAA,IACA,GAAA6d,EAAAoG,EAAA,CAEA,IADAA,EAAApG,EACApM,EAAA,EAAiBA,EAAA+C,IAAY/C,EAC7BuS,EAAAvS,GAAAzB,EAAAhQ,EAAAyR,GAEAuS,EAAA3xB,OAAAmiB,GAGA,OAAAyP,GAUAzX,EAAA9a,UAAA2sB,eAAA,WACA,OAAAqI,EAAA,EAAAvI,YACA3sB,KAAAwe,gBAAA,EAAAxe,KAAAwe,gBAAA3d,OAAAb,KAAAgjB,SAUAhI,EAAA9a,UAAAi1B,SAAA,SAAAhpB,GACA,MAAAipB,EAAAp1B,KAAAwe,gBACAxe,KAAAwe,gBAAA3d,OAAAb,KAAAgjB,OAAA,EACA,GAAA7W,EAAA,GAAAipB,GAAAjpB,EACA,YAEA,MAAAkT,EAAA,IAAAgW,EAAA,cAGA,OAFAhW,EAAAT,mBAAA5e,KAAAsyB,OAAAtyB,KAAAwe,gBAAA/d,MACA0L,EAAAnM,KAAAgjB,QAAA7W,EAAA,GAAAnM,KAAAgjB,SACA3D,GASArE,EAAA9a,UAAAo1B,UAAA,WACA,MAAA9W,EAAAxe,KAAAwe,gBACA8T,EAAAtyB,KAAAsyB,OACAtP,EAAAhjB,KAAAgjB,OAEAmK,KACA,IAAA3e,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA+P,EAAA3d,OAA0C2N,EAAAC,EAAQD,GAAAwU,EAAA,CAClD,MAAA3D,EAAA,IAAAgW,EAAA,cACAhW,EAAAT,mBAAA0T,EAAA9T,EAAA/d,MAAA+N,IAAAwU,IACAmK,EAAAtmB,KAAAwY,GAEA,OAAA8N,GAQAnS,EAAA9a,UAAAumB,QAAA,WACA,OAAA8N,EAAA,QAAAgB,aAQAva,EAAA9a,UAAAu0B,iBAAA,SAAAlzB,GACA,MAAAid,EAAAxe,KAAAwe,gBACAwE,EAAAhjB,KAAAgjB,OACA,IAAAxU,EAAAC,EAAAuW,EAAAC,EACA,IAAAzW,EAAA,EAAAC,EAAA+P,EAAA3d,OAA0C2N,EAAAC,EAAQD,GAAAwU,EAGlD,GAFAgC,EAAAxG,EAAAhQ,GACAyW,EAAAzG,EAAAhQ,EAAA,GACA7N,OAAA+xB,EAAA,WAAA/xB,CAAAY,EAAAyjB,EAAAC,GACA,SAGA,UAWAjK,EAAA9a,UAAAiyB,eAAA,SAAAxF,EAAAmF,GACAnF,GAGA3sB,KAAA20B,UAAA7C,EAAAnF,EAAA,GACA3sB,KAAAwe,kBACAxe,KAAAwe,oBAEAxe,KAAAwe,gBAAA3d,OAAA20B,EAAA,EAAA7I,YACA3sB,KAAAwe,gBAAA,EAAAmO,EAAA3sB,KAAAgjB,QACAhjB,KAAAqyB,WARAryB,KAAA4e,mBAAAsU,EAAA,QAAApU,GAAA,OAiBA9D,EAAA9a,UAAA0e,mBAAA,SAAA0T,EAAA9T,GACAxe,KAAA60B,2BAAAvC,EAAA9T,GACAxe,KAAAqyB,WAEAhsB,EAAA,2OCnMAovB,EAAAnvB,EAAA,IAgCA,MAAA2U,EAAA,SAAA0R,EAAAmF,GAEA4D,EAAA,QAAAn1B,KAAAP,MAMAA,KAAA21B,UAMA31B,KAAA41B,6BAAA,EAMA51B,KAAA61B,oBAAA,KAMA71B,KAAAiyB,WAAA,EAMAjyB,KAAAkyB,mBAAA,EAMAlyB,KAAA81B,mBAAA,EAMA91B,KAAA+1B,yBAAA,KAEA/1B,KAAAmyB,eAAAxF,EAAAmF,IAIAnxB,OAAAkN,EAAA,SAAAlN,CAAAsa,EAAAya,EAAA,SAQAza,EAAA/a,UAAA81B,cAAA,SAAApW,GAEA,IAAAZ,EACA,GAAAhf,KAAAwe,gBAIG,CACH,MAAA8E,EAAAtjB,KAAAwe,gBAAA3d,OAGA,IAAA2N,EAAAC,EACA,IAHA9N,OAAAsO,EAAA,OAAAtO,CAAAX,KAAAwe,gBAAAoB,EAAAmD,sBACA/D,EAAAY,EAAAwD,UAAA3iB,QAEA+N,EAAA,EAAAC,EAAAuQ,EAAAne,OAAiC2N,EAAAC,IAAQD,EACzCwQ,EAAAxQ,IAAA8U,OATAtjB,KAAAwe,gBAAAoB,EAAAmD,qBAAAtiB,QACAue,EAAAY,EAAAwD,UAAA3iB,QACAT,KAAA21B,OAAA9uB,OAUA7G,KAAA21B,OAAA9uB,KAAAmY,GACAhf,KAAAqyB,WAUApX,EAAA/a,UAAA0hB,MAAA,WACA,MAAAqU,EAAA,IAAAhb,EAAA,MAEAwJ,EAAAzkB,KAAA21B,OAAA90B,OACAq1B,EAAA,IAAA11B,MAAAikB,GACA,QAAAjW,EAAA,EAAiBA,EAAAiW,IAASjW,EAC1B0nB,EAAA1nB,GAAAxO,KAAA21B,OAAAnnB,GAAA/N,QAKA,OAFAw1B,EAAArX,mBACA5e,KAAAsyB,OAAAtyB,KAAAwe,gBAAA/d,QAAAy1B,GACAD,GAOAhb,EAAA/a,UAAAqyB,eAAA,SAAAvN,EAAAC,EAAAuN,EAAAC,GACA,OAAAA,EAAA9xB,OAAA+xB,EAAA,yBAAA/xB,CAAAX,KAAA+oB,YAAA/D,EAAAC,GACAwN,GAEAzyB,KAAAkyB,mBAAAlyB,KAAA2yB,gBACA3yB,KAAAiyB,UAAAvQ,KAAA4K,KAAA6J,EAAA,EAAAC,qBACAp2B,KAAAwe,gBAAA,EAAAxe,KAAA21B,OAAA31B,KAAAgjB,OAAA,IACAhjB,KAAAkyB,kBAAAlyB,KAAA2yB,eAEAwD,EAAA,EAAAE,kBACAr2B,KAAAs2B,6BAAA,EAAAt2B,KAAA21B,OAAA31B,KAAAgjB,OACAhjB,KAAAiyB,WAAA,EAAAjN,EAAAC,EAAAuN,EAAAC,KAOAxX,EAAA/a,UAAAq2B,WAAA,SAAAvR,EAAAC,GACA,OAAAuR,EAAA,EAAAC,uBACAz2B,KAAAs2B,6BAAA,EAAAt2B,KAAA21B,OAAA31B,KAAAgjB,OAAAgC,EAAAC,IASAhK,EAAA/a,UAAAw2B,QAAA,WACA,OAAAC,EAAA,EAAAC,aACA52B,KAAAs2B,6BAAA,EAAAt2B,KAAA21B,OAAA31B,KAAAgjB,SAkBA/H,EAAA/a,UAAA2sB,eAAA,SAAAgK,GACA,IAAArY,EASA,YARA1a,IAAA+yB,GACArY,EAAAxe,KAAAs2B,6BAAA71B,QACAq2B,EAAA,EAAAC,mBACAvY,EAAA,EAAAxe,KAAA21B,OAAA31B,KAAAgjB,OAAA6T,IAEArY,EAAAxe,KAAAwe,gBAGAwY,EAAA,EAAAC,cACAzY,EAAA,EAAAxe,KAAA21B,OAAA31B,KAAAgjB,SAOA/H,EAAA/a,UAAA4jB,SAAA,WACA,OAAA9jB,KAAA21B,QAOA1a,EAAA/a,UAAAg3B,sBAAA,WACA,GAAAl3B,KAAA41B,6BAAA51B,KAAA2yB,cAAA,CACA,MAAAwE,EAAAC,EAAA,EAAAR,aACA52B,KAAAwe,gBAAA,EAAAxe,KAAA21B,OAAA31B,KAAAgjB,QACAhjB,KAAA61B,oBAAAwB,EAAA,EAAAT,aACA52B,KAAAs2B,6BAAA,EAAAt2B,KAAA21B,OAAA31B,KAAAgjB,OACAmU,GACAn3B,KAAA41B,4BAAA51B,KAAA2yB,cAEA,OAAA3yB,KAAA61B,qBAUA5a,EAAA/a,UAAAo3B,kBAAA,WACA,MAAAC,EAAA,IAAAC,EAAA,cAGA,OAFAD,EAAA3Y,mBAAAsU,EAAA,QAAAC,IACAnzB,KAAAk3B,wBAAAz2B,SACA82B,GAOAtc,EAAA/a,UAAAo2B,2BAAA,WACA,GAAAt2B,KAAA81B,mBAAA91B,KAAA2yB,cAAA,CACA,MAAAnU,EAAAxe,KAAAwe,gBACAsY,EAAA,EAAAW,wBACAjZ,EAAA,EAAAxe,KAAA21B,OAAA31B,KAAAgjB,QACAhjB,KAAA+1B,yBAAAvX,GAEAxe,KAAA+1B,yBAAAvX,EAAA/d,QACAT,KAAA+1B,yBAAAl1B,OACAi2B,EAAA,EAAAC,mBACA/2B,KAAA+1B,yBAAA,EAAA/1B,KAAA21B,OAAA31B,KAAAgjB,SAEAhjB,KAAA81B,kBAAA91B,KAAA2yB,cAEA,OAAA3yB,KAAA+1B,0BAOA9a,EAAA/a,UAAA+zB,8BAAA,SAAAC,GACA,MAAAC,KACAuD,KACAvD,EAAAtzB,OAAA40B,EAAA,EAAAkC,WACA33B,KAAAwe,gBAAA,EAAAxe,KAAA21B,OAAA31B,KAAAgjB,OACAtB,KAAA4K,KAAA4H,GACAC,EAAA,EAAAuD,GACA,MAAAE,EAAA,IAAA3c,EAAA,MAGA,OAFA2c,EAAAhZ,mBACAsU,EAAA,QAAApU,GAAAqV,EAAAuD,GACAE,GAUA3c,EAAA/a,UAAA23B,WAAA,SAAA1rB,GACA,GAAAA,EAAA,GAAAnM,KAAA21B,OAAA90B,QAAAsL,EACA,YAEA,IAAAmX,EACA,OAAAnX,EACAmX,EAAA,MACG,CACH,MAAAwU,EAAA93B,KAAA21B,OAAAxpB,EAAA,GACAmX,EAAAwU,IAAAj3B,OAAA,GAEA,MAAAme,EAAAhf,KAAA21B,OAAAxpB,GAAA1L,QACA4B,EAAA2c,IAAAne,OAAA,GACA,OAAAyiB,EAAA,CACA,IAAA9U,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAuQ,EAAAne,OAAiC2N,EAAAC,IAAQD,EACzCwQ,EAAAxQ,IAAA8U,EAGA,MAAA1D,EAAA,IAAAmY,EAAA,cAGA,OAFAnY,EAAAhB,mBACA5e,KAAAsyB,OAAAtyB,KAAAwe,gBAAA/d,MAAA6iB,EAAAjhB,GAAA2c,GACAY,GASA3E,EAAA/a,UAAA83B,YAAA,WACA,MAAA1F,EAAAtyB,KAAAsyB,OACA9T,EAAAxe,KAAAwe,gBACAuB,EAAA/f,KAAA21B,OACA3V,KACA,IACAxR,EAAAC,EAAAwR,EAAAC,EADAoD,EAAA,EAEA,IAAA9U,EAAA,EAAAC,EAAAsR,EAAAlf,OAAgC2N,EAAAC,IAAQD,EAAA,CACxC,MAAAwQ,EAAAe,EAAAvR,GAAA/N,QACA4B,EAAA2c,IAAAne,OAAA,GACA,OAAAyiB,EACA,IAAArD,EAAA,EAAAC,EAAAlB,EAAAne,OAAmCof,EAAAC,IAAQD,EAC3CjB,EAAAiB,IAAAqD,EAGA,MAAA1D,EAAA,IAAAmY,EAAA,cACAnY,EAAAhB,mBACA0T,EAAA9T,EAAA/d,MAAA6iB,EAAAjhB,GAAA2c,GACAgB,EAAAnZ,KAAA+Y,GACA0D,EAAAjhB,EAEA,OAAA2d,GAQA/E,EAAA/a,UAAAumB,QAAA,WACA,OAAA8N,EAAA,QAAA0D,eAQAhd,EAAA/a,UAAAu0B,iBAAA,SAAAlzB,GACA,OAAA22B,EAAA,EAAAtB,aACA52B,KAAAs2B,6BAAA,EAAAt2B,KAAA21B,OAAA31B,KAAAgjB,OAAAzhB,IAWA0Z,EAAA/a,UAAAiyB,eAAA,SAAAxF,EAAAmF,GACA,GAAAnF,EAEG,CACH3sB,KAAA20B,UAAA7C,EAAAnF,EAAA,GACA3sB,KAAAwe,kBACAxe,KAAAwe,oBAEA,MAAAuB,EAAAoY,EAAA,EAAAlB,cACAj3B,KAAAwe,gBAAA,EAAAmO,EAAA3sB,KAAAgjB,OAAAhjB,KAAA21B,QACA,OAAA5V,EAAAlf,OACAb,KAAAwe,gBAAA3d,OAAA,MACK,CACL,MAAAu3B,EAAArY,IAAAlf,OAAA,GACAb,KAAAwe,gBAAA3d,OAAA,IAAAu3B,EAAAv3B,OACA,EAAAu3B,IAAAv3B,OAAA,GAEAb,KAAAqyB,eAfAryB,KAAA4e,mBAAAsU,EAAA,QAAApU,GAAA,KAAA9e,KAAA21B,SAyBA1a,EAAA/a,UAAA0e,mBAAA,SAAA0T,EAAA9T,EAAAuB,GACA/f,KAAA60B,2BAAAvC,EAAA9T,GACAxe,KAAA21B,OAAA5V,EACA/f,KAAAqyB,WAOApX,EAAA/a,UAAAm4B,YAAA,SAAArY,GACA,IAAAsS,EAAAtyB,KAAA+0B,YACA,MAAAvW,KACAuB,KACA,QAAAvR,EAAA,EAAAC,EAAAuR,EAAAnf,OAAuC2N,EAAAC,IAAQD,EAAA,CAC/C,MAAAoR,EAAAI,EAAAxR,GACA,IAAAA,IACA8jB,EAAA1S,EAAAmV,aAEA,MAAAzR,EAAA9E,EAAA3d,OACAme,EAAAY,EAAAwD,UACA,QAAAnD,EAAA,EAAAC,EAAAlB,EAAAne,OAAqCof,EAAAC,IAAQD,EAC7CjB,EAAAiB,IAAAqD,EAEA3iB,OAAAsO,EAAA,OAAAtO,CAAA6d,EAAAoB,EAAAmD,sBACAhD,EAAAlZ,KAAAmY,GAEAhf,KAAA4e,mBAAA0T,EAAA9T,EAAAuB,IAGA1Z,EAAA,4FCjaA,QAAAC,EAAA,SACAA,EAAA,MACAA,EAAA,MACY6J,IAAZ7J,EAAA,IACYkT,IAAZlT,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,iNAoBA,IAAMC,EAAU,SAAS6J,EAAOkoB,EAAWjoB,EAAIkoB,EAAiBC,EAAgBC,GAE9EC,EAAAzxB,QAAoB1G,KAAKP,MAMzBA,KAAK24B,0BAA2B,OACiB70B,IAA7C20B,EAAiBG,0BACnB54B,KAAK24B,yBAA2BF,EAAiBG,yBAOnD54B,KAAK64B,IAAMxoB,EAMXrQ,KAAK84B,OAAS1oB,EAMdpQ,KAAK+4B,cAAWj1B,EACZw0B,EAAUU,IAAI,gBAChBh5B,KAAK+4B,SAAWT,EAAUW,IAAI,eAGhCj5B,KAAKk5B,cAAgB,IACjBZ,EAAUU,IAAI,kBAChBh5B,KAAKk5B,cAAgBZ,EAAUW,IAAI,iBAOrCj5B,KAAKm5B,cAAgB,KACjBb,EAAUU,IAAI,kBAChBh5B,KAAKm5B,cAAgBb,EAAUW,IAAI,iBAOrCj5B,KAAKo5B,aAAeb,EAMpBv4B,KAAKw4B,eAAiBA,EAMtBx4B,KAAKq5B,UAAYhpB,EAAG8F,QAMpBnW,KAAKs5B,SAAWt5B,KAAKq5B,UAAUhjB,QAK/BrW,KAAK4K,QAAS,EAMd5K,KAAKu5B,gBAAkB,4LAGzBppB,EAAOiI,SAAS7R,EAAhBmyB,EAAAzxB,SAQAV,EAAQizB,yBAA2B,SAASC,EAAQjyB,GAClD,IAAK,IAAIgH,EAAI,EAAGC,EAAKgrB,EAAO54B,OAAQ2N,EAAIC,EAAID,IAE1C,IADA,IAAMrE,EAAQsvB,EAAOjrB,GACZyR,EAAI,EAAGC,EAAK/V,EAAMK,SAAS3J,OAAQof,EAAIC,EAAID,IAAK,CACvD,IAAMyZ,EAAQvvB,EAAMK,SAASyV,GACvB1R,KAEN,GADAhI,EAAQozB,aAAaD,EAAOnrB,GACxBhI,EAAQqzB,iBAAiBrrB,EAAY/G,GACvC,OAAOkyB,EAIb,OAAO,MASTnzB,EAAQszB,gBAAkB,SAASJ,EAAQjyB,GACzC,IAAK,IAAIgH,EAAI,EAAGC,EAAKgrB,EAAO54B,OAAQ2N,EAAIC,EAAID,IAE1C,IADA,IAAMrE,EAAQsvB,EAAOjrB,GACZyR,EAAI,EAAGC,EAAK/V,EAAMK,SAAS3J,OAAQof,EAAIC,EAAID,IAAK,CACvD,IAAMyZ,EAAQvvB,EAAMK,SAASyV,GACvB6Z,KAEN,GADAvzB,EAAQwzB,qBAAqBL,EAAOI,GAChCvzB,EAAQqzB,iBAAiBE,EAAetyB,GAC1C,OAAOkyB,EAIb,OAAO,MAWTnzB,EAAQqzB,iBAAmB,SAASI,EAASC,GAC3C,OAAOzgB,EAAQ0gB,KAAKF,EAAS,SAAAG,GAAA,OAAUA,EAAA,OAAmBF,KAU5D1zB,EAAQ6zB,gBAAkB,SAASX,EAAQY,GACzC,OAAO9zB,EAAQqzB,iBAAiBH,EAAQY,IAW1C9zB,EAAQwzB,qBAAuB,SAAS5rB,EAAMmsB,GAC5C,IAAM9vB,EAAW2D,EAAK3D,SACtB,QAAiB1G,IAAb0G,EAAwB,CAC1B8vB,EAAMzzB,KAAKsH,GACX,IAAK,IAAIK,EAAI,EAAGA,EAAIhE,EAAS3J,OAAQ2N,IACnCjI,EAAQwzB,qBAAqBvvB,EAASgE,GAAI8rB,KAYhD/zB,EAAQozB,aAAe,SAASxrB,EAAMmsB,GACpC,IAAI9rB,SACEhE,EAAW2D,EAAK3D,SACtB,QAAiB1G,IAAb0G,EACF,IAAKgE,EAAI,EAAGA,EAAIhE,EAAS3J,OAAQ2N,IAC/BjI,EAAQozB,aAAanvB,EAASgE,GAAI8rB,QAGpCA,EAAMzzB,KAAKsH,IAUf5H,EAAQrG,UAAUq6B,YAAc,SAASC,GAAe,IAAAlpB,EAAAtR,KAChDw4B,EAAiBx4B,KAAKw4B,eAC5B,GAAIx4B,KAAKu5B,gBACP,OAAOv5B,KAAKu5B,gBAEd,IAAMlpB,EAAKrQ,KAAK64B,IACV4B,EAAcz6B,KAAKo5B,aAmBnBsB,EAAW,SAAS1pB,EAAMtC,GAC9BA,EAAMgX,IAAI,QAAS1U,EAAKxJ,MACxBkH,EAAMgX,IAAI,WAAY1U,EAAK2pB,UAC3BjsB,EAAMgX,IAAI,aAAc1U,EAAK4pB,YAC7B,IAAMC,KAGN,OApBa,SAATC,EAAkB9pB,EAAM+pB,GAC5BA,EAAMl0B,KAAKsJ,EAAOuC,OAAO1B,KACRA,EAAKxG,cACbzD,QAAQ,SAACi0B,GAChBF,EAAOE,EAAOD,KAchBD,CAAO9pB,EAAM6pB,GACbnsB,EAAMgX,IAAI,iBAAkBmV,GACrBnsB,GAQHusB,EAAuB,SAAS9oB,EAAYiB,GAChD,GAAsB,SAAlBA,EAASC,KAAiB,CAC5B,IAAM6nB,EAAoD9nB,EAE1D,OADA9K,EAAArB,QAAY8J,OAAOmqB,EAAa7mB,IAAK,yBAC9BomB,EAAYU,iCACjBD,EAAa7mB,IACb6mB,EAAaxsB,OAAS,GACtB0E,EAASwnB,YACT1oB,KAAKwoB,EAASt1B,KAAK,KAAMgO,IAAWlB,KAAK,KAAM,SAACoE,GAChD,IAAI8kB,4BAAoCF,EAAaxsB,MAAjD,4BAAkFwsB,EAAa7mB,IAA/F,KAIJ,OAHA+mB,2BAAmC9kB,EAAA,QACnC+kB,QAAQC,MAAMF,GAEP/qB,EAAGyE,aAAQhR,KAEf,GAAsB,QAAlBsP,EAASC,KAAgB,CAClC,IAAMG,EAAkDJ,EACxD9K,EAAArB,QAAY8J,OAAOyC,EAAYO,UAAW,6BAC1C,IAAMwnB,EAASppB,EAAWqB,EAAYO,WAItC,OAHAzL,EAAArB,QAAY8J,OAAOwqB,EAAQ,gCAC3BjzB,EAAArB,QAAY8J,OAAOwqB,EAAOlnB,IAAK,8BAC/B/L,EAAArB,QAAY8J,OAAOwqB,EAAOC,UAAW,qCAC9Bd,EAAStnB,EAAUqnB,EAAYgB,oBACpCF,EAAOlnB,IACPb,EAAY7F,QAAU,GACtB4tB,EAAOC,UACPD,EAAOloB,UACPvP,EACAsP,EAASwnB,WACTW,EAAOG,WAAa,kBAAoB,cAG5CpzB,EAAArB,QAAY00B,KAAZ,qBAAsCvoB,EAASC,OA6B3CuoB,EAAmB,SAASrlB,GAChC,IAAMslB,EAAWtlB,EAAKulB,kBAAkB1zB,IAAI,SAAC4I,GAC3C,IAAM+qB,EAAW/qB,EAAKqC,KACtB,MAAiB,SAAb0oB,GAAoC,QAAbA,EAClBd,EAAqB1kB,EAAKpE,WAAYnB,GACpCA,EAAKxG,SA1BS,SAAS2H,EAAYnB,GAEhD,IACM6qB,EADkB7qB,EAAKxG,SAASpC,IAAI,SAAA4c,GAAA,OAAKA,IAAGgX,UACjB5zB,IAAI6yB,EAAqB71B,KAAK,KAAM+M,IACrE,OAAO9B,EAAG4rB,IAAIJ,GAAU3pB,KAAK,SAACvE,GAC5B,IAAIuuB,SACAvuB,IACFA,EAASA,EAAOyd,OAAO,SAAAhH,GAAA,OAAKA,IAC5B8X,EAAa,IAAAjwB,EAAAhF,QAAiB0G,IAEhC,IAAM+rB,EAAQe,EAAY0B,iBAAiBD,GAE3C,OADAxB,EAAS1pB,EAAM0oB,GACRA,IAgBE0C,CAAqB7lB,EAAKpE,WAAYnB,QAE7C,GAEDhR,MACH,OAAOqQ,EAAG4rB,IAAIJ,IACdz2B,KAAKpF,MAwBP,OAtBAA,KAAKu5B,gBAAkBv5B,KAAKs5B,SAASpnB,KAAK0pB,GAAkB1pB,KAAK,SAACmqB,GAChE,IAAM1uB,KAkBN,OAfI2D,EAAKqnB,2BAEPH,EAAe8D,UAAU,SACzB3uB,EAAO9G,KAAK,IAAA01B,EAAAt1B,SACVu1B,MAAS,QACT7B,UAAa8B,UAAa,QAK9BJ,EAAOt1B,QAAQ,SAAC2H,GACVA,GACFf,EAAO9G,KAAK6H,KAGTf,IAGF3N,KAAKu5B,iBAUdhzB,EAAQrG,UAAUw8B,eAAiB,SAASrC,GAC1C,OAAOr6B,KAAKs5B,SAASpnB,KAOnB,SAAAqE,GAAA,OAAQhQ,EAAQ6zB,gBAAgB7jB,EAAKkjB,OAAQY,MASjD9zB,EAAQrG,UAAUy8B,gBAAkB,WAClC,OAAO38B,KAAKs5B,SAASpnB,KAMnB,SAAAqE,GAAA,OAAQA,EAAKkjB,UAQjBlzB,EAAQrG,UAAU08B,0BAA4B,WAE5C,OADAt0B,EAAArB,QAAY8J,OAAyB,OAAlB/Q,KAAKs5B,UACjBt5B,KAAKs5B,SAASpnB,KAMnB,SAAAqE,GAAA,OAAQA,EAAKulB,qBAUjBv1B,EAAQrG,UAAU+R,oBAAsB,WAEtC,OADA3J,EAAArB,QAAY8J,OAAyB,OAAlB/Q,KAAKs5B,UACjBt5B,KAAKs5B,SAASpnB,KAMnB,SAAAqE,GAAA,OAAQA,EAAKpE,cAQjB5L,EAAQrG,UAAU28B,kBAAoB,WAEpC,OADAv0B,EAAArB,QAAY8J,OAAyB,OAAlB/Q,KAAKs5B,UACjBt5B,KAAKs5B,SAASpnB,KAAKlS,KAAK88B,mBAAmB13B,KAAKpF,QASzDuG,EAAQrG,UAAU48B,mBAAqB,SAASvmB,GAAM,IAAAvE,EAAAhS,KACpD,OAAOuW,EAAKkjB,OAAOsD,KAAK,SAAC5yB,GAEvB,OAD0BA,EAAMK,SAASuyB,KAAK/qB,EAAKgrB,uBAAuB53B,KAA5B4M,OAUlDzL,EAAQrG,UAAU88B,uBAAyB,SAAS7uB,GAClD,GAAIA,EAAK8uB,SACP,OAAO,EAGT,IAAIJ,GAAoB,EAClBryB,EAAW2D,EAAK3D,SAItB,OAHIA,GAAYA,EAAS3J,SACvBg8B,EAAoBryB,EAASuyB,KAAK/8B,KAAKg9B,uBAAuB53B,KAAKpF,QAE9D68B,GAUTt2B,EAAQgM,kBAAoB,SAASpE,GAGnC,OAFgBA,EAAKwsB,eAA6C72B,IAAjCqK,EAAKwsB,SAAStoB,eAC7ClE,EAAKwsB,SAAStoB,eAAiB,MAcnC9L,EAAQ22B,qBAAuB,SAAS9pB,GACtC,IAAMunB,EAAWvnB,EAASunB,SACtBwC,EAAgB/pB,EAASgqB,kBAI7B,YAHsBt5B,IAAlBq5B,QAA4Cr5B,IAAb62B,IACjCwC,EAAgBxC,EAASwC,eAEpBA,GAaT52B,EAAQ82B,qBAAuB,SAASjqB,GACtC,IAAMunB,EAAWvnB,EAASunB,SACtB2C,EAAgBlqB,EAASmqB,kBAI7B,YAHsBz5B,IAAlBw5B,QAA4Cx5B,IAAb62B,IACjC2C,EAAgB3C,EAAS2C,eAEpBA,GAST/2B,EAAQrG,UAAUs9B,WAAa,SAASC,GAAY,IAAAC,EAAA19B,KAElDsI,EAAArB,QAAY8J,OAAO/Q,KAAK+4B,SAAU,iCAE9B/4B,KAAK4K,SAEP5K,KAAKq5B,UAAYr5B,KAAK64B,IAAI1iB,QAC1BnW,KAAKs5B,SAAWt5B,KAAKq5B,UAAUhjB,QAC/BrW,KAAKu5B,gBAAkB,KACvBv5B,KAAK4K,QAAS,GAGhB5K,KAAK84B,OAAOG,IAAIj5B,KAAK+4B,UACnB93B,YAAuB6C,IAAf25B,GACNE,KAAQF,EACRG,cAAiB59B,KAAKk5B,gBAEtB0E,cAAiB59B,KAAKk5B,eAExB2E,OAAO,EACPC,iBAAiB,IAChB5rB,KAAK,SAACoE,GACP,GAAmC,GAA/BA,EAASC,KAAKwnB,OAAOl9B,OAAa,CACpC,IAAMu6B,sCACJ9kB,EAASC,KAAKwnB,OAAO3pB,KAAK,MAC5BinB,QAAQC,MAAMF,GACa,OAAvBsC,EAAKvE,eAA0BuE,EAAKvE,cAAc6E,SAAS,UAC7DvlB,OAAOwlB,MAAM7C,GAGjBsC,EAAKrE,UAAUvkB,QAAQwB,EAASC,MAChCmnB,EAAKQ,cAAc,UACnBR,EAAK9yB,QAAS,GACb,SAAC0L,GACFonB,EAAKrE,UAAU8E,OAAO7nB,MAQ1B/P,EAAQ+M,UACN8qB,YAAa,aACbC,gBAAiB,gBACjBC,KAAM,OACN/qB,IAAK,QAOPhN,EAAQY,OAASC,QAAQD,OAAO,aAC9Bo3B,EAAAt3B,QAAmBE,OAAOK,QAEb2D,MAAM,uBACrB5E,EAAQY,OAAOE,QAAQ,YAAad,GACpCA,EAAQY,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG7BjB,oFC7kBf,QAAAD,EAAA,QACAA,EAAA,QACAA,EAAA,KACY6J,0JAAZ7J,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,wDAcA,IAAMC,EAAU,SAASi4B,EAAQj1B,EAAYk1B,GAAQ,IAAAntB,EAAAtR,KAE7C0+B,OAA4C56B,IAAnC26B,EAAA,qBAMfz+B,KAAK0+B,OAASA,EAEd,IAAMC,EAAWF,EAAA,cAMjBz+B,KAAKwQ,WAAajH,EAMlBvJ,KAAKga,cAMLha,KAAK4+B,OAAS,MAMd5+B,KAAKmO,KAEDuwB,EACFF,EAAO5rB,OAAO+rB,EAAU,SAACrqB,EAAQuqB,GAC/BvtB,EAAKnD,KAAOmG,KAGdtU,KAAKmO,KAA+BqwB,EAAOn2B,MAAMs2B,GACjDr2B,EAAArB,QAAY8J,YAAqBjN,IAAd9D,KAAKmO,OAG1B,IAAM2wB,EAAUL,EAAA,iBACVr2B,EAA6Bo2B,EAAOn2B,MAAMy2B,GAChDx2B,EAAArB,QAAY8J,YAAejN,IAARsE,GAMnBpI,KAAK6T,OAAS2qB,EAAOO,QAAP,cAMd/+B,KAAKwK,YAEDxK,KAAK6T,QACP7T,KAAK6T,OAAOrJ,SAAS3D,KAAK7G,MAG5Bw+B,EAAOQ,IAAI,WAAY,WACrB,GAAI1tB,EAAKuC,OAAQ,CACf,IAAM1H,EAAQmF,EAAKuC,OAAOrJ,SAASiX,QAArBnQ,GACdhJ,EAAArB,QAAY8J,OAAO5E,GAAS,GAC5BmF,EAAKuC,OAAOrJ,SAASy0B,OAAO9yB,EAAO,MAQvCnM,KAAK0G,IAAMyJ,EAAOuC,OAAO1S,MAMzBA,KAAKk/B,MAAQR,EAAS,EAAI1+B,KAAK6T,OAAOqrB,MAAQ,EAK9CV,EAAA,IAAgBx+B,KAAK0G,IACrB83B,EAAA,MAAkBx+B,KAAKk/B,MAMvBl/B,KAAKoI,IAAMA,EAEX,IAAI+2B,EAAgBV,EAAA,uBACpB,QAAsB36B,IAAlBq7B,EAA6B,CAC/B,IAAMC,EAAoBX,EAAA,2BACpBY,EAAmBb,EAAOn2B,MAAM+2B,GACtC92B,EAAArB,QAAYq4B,aAAaD,GACzBF,EAAgBE,EAelB,GAbA/2B,EAAArB,QAAY8J,YAAyBjN,IAAlBq7B,GAMnBn/B,KAAKm/B,cAAgBA,EAMrBn/B,KAAK0O,MAAQ,MACRgwB,EAAQ,CACX,IAAMhwB,EAAQ8vB,EAAOn2B,MAAM82B,GAAgB/sB,SAAYpS,QAAU,KAC7D0O,IACFpG,EAAArB,QAAY8J,OACVrC,wBAAiCA,wBAEnC1O,KAAK0O,MAAQA,GAQjB1O,KAAKu/B,YAAc,KAEfv/B,KAAK0O,QACP8wB,EAAAv4B,QAAiBw4B,aAAaz/B,KAAK0O,MAAO8vB,GAC1CgB,EAAAv4B,QAAiByH,MAAM1O,KAAK0O,OAE5B1H,EAAAC,QAAS4B,OAAO7I,KAAK0O,MAAO,iBAAkB,WAC5C4C,EAAKd,WAAWkvB,WAAW,yBAA3BpuB,MAIJ,IAAIquB,EAAgBlB,EAAA,uBACpB,QAAsB36B,IAAlB67B,EAA6B,CAC/B,IAAMC,EAAoBnB,EAAA,2BAC1BkB,EAAgBnB,EAAOn2B,MAAMu3B,QAGT97B,IAAlB67B,GACFr3B,EAAArB,QAAYq4B,aAAaK,GAO3B3/B,KAAK2/B,cAAgBA,EAGjBA,GACFnB,EAAOn2B,MAAMs3B,GAAgBE,UAAarB,EAAQpsB,SAAYpS,OAGhEw+B,EAAA,cAA0Bx+B,4FAS5BuG,EAAQrG,UAAU2S,SAAW,WAC3B,OAAO7S,KAAK4+B,QAWdr4B,EAAQrG,UAAU4/B,SAAW,SAASC,EAAOC,GAAe,IAAAhuB,EAAAhS,KAC1D,GAAI+/B,IAAU//B,KAAK4+B,OAAnB,CAGA5+B,KAAKigC,kBAAkBF,GAGnB//B,KAAK6T,QACP7T,KAAK6T,OAAOqsB,eAGd,IAAMC,EAAengC,KAAK0+B,OAAS1+B,KAAKwK,UAAYjE,EAAQ0N,mBAAmBjU,aAEzD8D,IAAlBk8B,GAA+BA,IACjCG,EAAap5B,QAAQ,SAACq5B,GACpBpuB,EAAKxB,WAAWkvB,WAAW,uBAA3B1tB,EAAyDouB,OAS/D75B,EAAQrG,UAAU+/B,kBAAoB,SAASF,GAE7C//B,KAAK4+B,OAAmB,OAAVmB,EAAiB,KAAO,MAEtC//B,KAAKwK,SAASzD,QAAQ,SAASi0B,GAC7BA,EAAMiF,kBAAkBjgC,KAAK4+B,SAC5B5+B,OASLuG,EAAQrG,UAAUggC,aAAe,WAC/B,IAAMG,EAAWrgC,KAAKsgC,oBAClBtgC,KAAK4+B,SAAWyB,IAGpBrgC,KAAK4+B,OAASyB,EACVrgC,KAAK6T,QACP7T,KAAK6T,OAAOqsB,iBAUhB35B,EAAQrG,UAAUogC,kBAAoB,WACpC,QAA2Bx8B,IAAvB9D,KAAKmO,KAAK3D,SACZ,OAAOxK,KAAK4+B,OAEd,IAAI2B,SACAC,SAUJ,OATAxgC,KAAKwK,SAASuyB,KAAK,SAAC/B,GAElB,GADAuF,EAAavF,EAAMsF,oBACfE,GACEA,IAAuBD,EACzB,OAAOA,EAAa,gBAGxBC,EAAqBD,IAEhBA,GASTh6B,EAAQrG,UAAUugC,aAAe,SAAS5d,GACxC,IAAMnU,EAAQ1O,KAAK0O,MACbtG,EAAMpI,KAAKoI,IACjB,GAAKsG,EAGL,YAAY5K,IAAR+e,EAOKza,EAAI4F,YAAY0yB,WAAWjf,QAAQ/S,IAAU,OAN/CmU,EAGHza,EAAIu4B,SAASjyB,GAFbtG,EAAIw4B,YAAYlyB,KAetBnI,EAAQrG,UAAU2gC,cAAgB,WAChC,OAAO7gC,KAAKu/B,aAQdh5B,EAAQrG,UAAU4gC,cAAgB,SAASC,GACzC/gC,KAAKu/B,YAAcwB,GAWrBx6B,EAAQ0N,mBAAqB,SAAS7B,GAEpC,IADA,IAAI4uB,EAAO5uB,GACH4uB,EAAKntB,OAAO6qB,QAClBsC,EAAOA,EAAKntB,OAEd,OAAOmtB,GAOTz6B,EAAQ06B,iBACNC,KAAM,OACNC,KAAM,OACNC,QAAS,WAkBX76B,EAAQrG,UAAU0R,mBAAqB,SAASyvB,GAI9C,OAFiBA,EAAQrhC,OAASuG,EAAQ06B,gBAAgBG,SAGxD,KAAK76B,EAAQ06B,gBAAgBC,KAC3B,OAAO,EACT,KAAK36B,EAAQ06B,gBAAgBE,KAC3B,OAAO,EACT,KAAK56B,EAAQ06B,gBAAgBG,QAC3B,IAAK,IAAI5yB,EAAI,EAAGA,EAAIxO,KAAKwK,SAAS3J,SAAU2N,EAAG,CAG7C,GAFcxO,KAAKwK,SAASgE,GACToD,mBAAmByvB,GAEpC,OAAO,EAGX,OAAO,EACT,QACE/4B,EAAArB,QAAY00B,KAAK,qBAQvBp1B,EAAQY,OAASC,QAAQD,OAAO,+BACjB2P,WAAW,0BAA2BvQ,GACrDe,EAAAL,QAASE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG9BjB,sEC5Yf+6B,EAAAh7B,EAAA,GAmBA,MAAAi7B,EAAA,WAMAvhC,KAAAwhC,eAAA,IAAA1rB,cAEA2rB,EAAA,QAAAlhC,KAAAP,OAGAW,OAAAkN,EAAA,SAAAlN,CAAA4gC,EAAAE,EAAA,SAMAF,EAAArhC,UAAAumB,QAAA,WACA,OAAAib,EAAA,EAAAC,KAOAJ,EAAArhC,UAAAgb,YAAA,SAAAwM,EAAAra,GACA,GAAAi0B,EAAA,QAAAM,WAAAla,GACA,OAAA1nB,KAAA6hC,wBAC0B,EAAAx0B,GACvB,GAAAi0B,EAAA,QAAAQ,OAAApa,GACH,OAAA1nB,KAAA+hC,oBAAoD,EAAA10B,GACjD,oBAAAqa,EAAA,CACH,MAAAsa,EAAAV,EAAA,QAAAxR,MAAApI,GACA,OAAA1nB,KAAA6hC,wBAAAG,EAAA30B,GAEA,aAUAk0B,EAAArhC,UAAA2hC,wBAAA,SACAG,EAAA30B,GACA,MAAAT,EAAA5M,KAAAiiC,yBAAAD,EAAA30B,GACA,OAAAT,EAAA/L,OAAA,EACA+L,EAAA,GAEA,MAUA20B,EAAArhC,UAAA6hC,oBAAA,SAAA5zB,EAAAd,GACA,aAOAk0B,EAAArhC,UAAA0P,aAAA,SAAA8X,EAAAra,GACA,GAAAi0B,EAAA,QAAAM,WAAAla,GACA,OAAA1nB,KAAAiiC,yBAC0B,EAAA50B,GACvB,GAAAi0B,EAAA,QAAAQ,OAAApa,GACH,OAAA1nB,KAAA6P,qBAAqD,EAAAxC,GAClD,oBAAAqa,EAAA,CACH,MAAAsa,EAAAV,EAAA,QAAAxR,MAAApI,GACA,OAAA1nB,KAAAiiC,yBAAAD,EAAA30B,GAEA,UAWAk0B,EAAArhC,UAAA+hC,yBAAA,SACAD,EAAA30B,GAEA,MAAAT,KACA,IAAAwoB,EACA,IAAAA,EAAA4M,EAAAE,WAA0B9M,EAAGA,IAAA+M,YAC7B/M,EAAAzmB,UAAAC,KAAAC,cACAlO,OAAAsO,EAAA,OAAAtO,CAAAiM,EAAA5M,KAAA6P,qBAAAulB,EAAA/nB,IAGA,OAAAT,GAWA20B,EAAArhC,UAAA2P,qBAAA,SAAA1B,EAAAd,KAMAk0B,EAAArhC,UAAAib,aAAA,SAAAuM,EAAAra,GACA,GAAAi0B,EAAA,QAAAM,WAAAla,GACA,OAAA1nB,KAAAoiC,yBAC0B,EAAA/0B,GACvB,GAAAi0B,EAAA,QAAAQ,OAAApa,GACH,OAAA1nB,KAAAqiC,qBAAqD,EAAAh1B,GAClD,oBAAAqa,EAAA,CACH,MAAAsa,EAAAV,EAAA,QAAAxR,MAAApI,GACA,OAAA1nB,KAAAoiC,yBAAAJ,EAAA30B,GAEA,aAWAk0B,EAAArhC,UAAAkiC,yBAAA,SAAAJ,EAAA30B,GACA,aAUAk0B,EAAArhC,UAAAmiC,qBAAA,SAAAl0B,EAAAd,GACA,aAOAk0B,EAAArhC,UAAAoiC,eAAA,SAAA5a,GACA,GAAA4Z,EAAA,QAAAM,WAAAla,GACA,OAAA1nB,KAAAuiC,2BAA+D,GAC5D,GAAAjB,EAAA,QAAAQ,OAAApa,GACH,OAAA1nB,KAAAwiC,uBAAuD,GACpD,oBAAA9a,EAAA,CACH,MAAAsa,EAAAV,EAAA,QAAAxR,MAAApI,GACA,OAAA1nB,KAAAuiC,2BAAAP,GAEA,aAUAT,EAAArhC,UAAAqiC,2BAAA,SAAAP,GACA,OAAAhiC,KAAAyiC,uBASAlB,EAAArhC,UAAAsiC,uBAAA,SAAAr0B,GACA,OAAAnO,KAAAyiC,uBAOAlB,EAAArhC,UAAAkb,aAAA,SAAA5O,EAAAa,GACA,MAAAc,EAAAnO,KAAAgQ,iBAAAxD,EAAAa,GACA,OAAArN,KAAAwhC,eAAAtrB,kBAAA/H,IAUAozB,EAAArhC,UAAA8P,iBAAA,SAAAxD,EAAAa,GACA,aAOAk0B,EAAArhC,UAAAmb,cAAA,SAAAzO,EAAAS,GACA,MAAAc,EAAAnO,KAAAiQ,kBAAArD,EAAAS,GACA,OAAArN,KAAAwhC,eAAAtrB,kBAAA/H,IASAozB,EAAArhC,UAAA+P,kBAAA,SAAArD,EAAAS,GACA,aAOAk0B,EAAArhC,UAAAob,cAAA,SAAA1Z,EAAAyL,GACA,MAAAc,EAAAnO,KAAAkQ,kBAAAtO,EAAAyL,GACA,OAAArN,KAAAwhC,eAAAtrB,kBAAA/H,IASAozB,EAAArhC,UAAAgQ,kBAAA,SAAAtO,EAAAyL,GACA,aAEAhH,EAAA,+kBCvQAC,EAAA,SACAA,EAAA,MACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDAKA,IAAMC,cAiBJ,SAAAA,EAAY+G,gGAASo1B,CAAA1iC,KAAAuG,GAAA,IAAA+K,mKAAAqxB,CAAA3iC,MAAAuG,EAAAq8B,WAAAjiC,OAAAkiC,eAAAt8B,IAAAhG,KAAAP,KAEbsN,IASNgE,EAAKwxB,kBAAoBx1B,EAAQy1B,kBAAoB,KAOrDzxB,EAAK0xB,iBAAmB11B,EAAQ21B,iBAAmBC,EAAAj8B,QAAoBQ,IAQvE6J,EAAK6xB,aAAe71B,EAAQ81B,aAAe,KAU3C9xB,EAAK+xB,WAAa/1B,EAAQg2B,WAAa,KAWvChyB,EAAKiyB,WAAiC,IAArBj2B,EAAQk2B,SAOzBlyB,EAAKmyB,YAAcn2B,EAAQstB,YAAc,KAOzCtpB,EAAKoyB,cAAgBp2B,EAAQhM,cAC3BiF,EAAQo9B,uBAOVryB,EAAKsyB,cAAgBt2B,EAAQu2B,cAAgB,YAS7CvyB,EAAKwyB,WAAax2B,EAAQy2B,WAAa,KAOvCzyB,EAAK0yB,eAAiB12B,EAAQ22B,eAC5B19B,EAAQ29B,WAAWC,UAOrB7yB,EAAK8yB,SAAW92B,EAAQ+2B,SAAW99B,EAAQ+9B,KAAK/wB,IAShDjC,EAAKizB,YAAmC,IAAtBj3B,EAAQk3B,UAS1BlzB,EAAKmzB,kBAA+C,IAA5Bn3B,EAAQo3B,gBAShCpzB,EAAKqzB,oBAAmD,IAA9Br3B,EAAQs3B,kBAOlCtzB,EAAKuzB,wBAAmD/gC,IAA9BwJ,EAAQw3B,kBAChCx3B,EAAQw3B,kBAAoB,GAO9BxzB,EAAKyzB,mBAAqBz3B,EAAQ03B,kBAMlC1zB,EAAK2zB,gBAAkB33B,EAAQ43B,eAM/B5zB,EAAK6zB,mBAAyCrhC,IAAzBwJ,EAAQ83B,aAC3B93B,EAAQ83B,aAAe,KAMzB9zB,EAAK+zB,gBAAkB/3B,EAAQg4B,eAO/Bh0B,EAAKi0B,cAAgBj4B,EAAQk4B,cAC3Bj/B,EAAQk/B,aAAan0B,EAAK0yB,gBAO5B1yB,EAAKo0B,kBAAoBp4B,EAAQq4B,kBAC/Bp/B,EAAQq/B,iBAAiBC,QAO3Bv0B,EAAKw0B,iBAAmBx4B,EAAQy4B,iBAC9Bx/B,EAAQy/B,gBAAgBC,KAO1B30B,EAAK40B,QAAU54B,EAAQ64B,OAOvB70B,EAAK80B,eAAiB94B,EAAQ+4B,eAC5B9/B,EAAQ+/B,cAAcC,IAQxBj1B,EAAKk1B,kBAA+C,IAA5Bl5B,EAAQm5B,gBAOhCn1B,EAAKo1B,QAAUp5B,EAAQq5B,OAOvBr1B,EAAKs1B,WAAat5B,EAAQu5B,UAO1Bv1B,EAAKw1B,SAAWx5B,EAAQy5B,QAMxB,IAAMp5B,KACN,GAAI2D,EAAKqC,WAAarC,EAAKyyB,UAAW,KAAAiD,GAAA,EAAAC,GAAA,EAAAC,OAAApjC,EAAA,IACpC,QAAAqjC,EAAAC,EAAuB91B,EAAKyyB,UAA5BsD,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAuC,KAA5BS,EAA4BN,EAAAh8B,MACjCs8B,EAAS9zB,WACXhG,EAAO9G,KAAK4gC,EAASjgC,OAHW,MAAAkgC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,IAQtC,IAAIvxB,EAAY,KAChB,GAAIrE,EAAKs2B,aAAej6B,EAAO9M,OAAQ,CACrC,IAAIgnC,OAAS/jC,EACTwN,EAAKw0B,mBAAqBv/B,EAAQy/B,gBAAgBC,KACpD4B,EAAS,IAAAC,EAAA7gC,QACAqK,EAAKw0B,mBAAqBv/B,EAAQy/B,gBAAgB+B,OAC3DF,EAAS,IAAAG,EAAA/gC,SAEXqB,EAAArB,QAAY8J,OAAO82B,GACnBlyB,EAAY,IAAAC,EAAA3O,SACV8L,UAAWzB,EAAKk0B,aAChBt2B,YAAavB,EACbs6B,UAAWJ,IAQfv2B,EAAK42B,WAAavyB,EAElB,IAAIwyB,EAAY,KAnQG,OAoQf72B,EAAK82B,aAAez6B,EAAO9M,QACzByQ,EAAK+0B,gBAAkB9/B,EAAQ+/B,cAAcC,MAC/C4B,EAAY,IAAAE,EAAAphC,SACV0G,YAUN2D,EAAKg3B,WAAaH,EAjRC72B,EAjBjB,gUAAAi3B,CAAAhiC,EAAAiiC,EAAAvhC,SAAAwhC,EAAAliC,IAAAI,IAAA,gBAAAwE,MAAA,WAgaF,OAAAu9B,EAAAniC,EAAArG,UAAA0iC,WAAAjiC,OAAAkiC,eAAAt8B,EAAArG,WAAA,aAAAF,SAhaE2G,IAAA,gBAAAwE,MAAA,SAsaUw9B,GACZD,EAAAniC,EAAArG,UAAA0iC,WAAAjiC,OAAAkiC,eAAAt8B,EAAArG,WAAA,gBAAAF,MAAAO,KAAAP,KAAoB2oC,GACpB3oC,KAAK4oC,uCAxaHjiC,IAAA,iCAAAwE,MAAA,SAkwB2B41B,GAC7B,OAAO/gC,KAAK6oC,kBAAoB9H,EAAW8H,kBACzC7oC,KAAK4nC,aAAe7G,EAAW6G,aAC/B5nC,KAAK2T,WAAaotB,EAAWptB,WAC7B3T,KAAKmmC,SAAWpF,EAAWoF,QAC3BnmC,KAAK8oC,4BAA4B/H,MAvwBjCp6B,IAAA,iCAAAwE,MAAA,SAixB2B41B,GAC7B,OAAO/gC,KAAK+oC,kBAAoBhI,EAAWgI,kBACzC/oC,KAAKooC,aAAerH,EAAWqH,aAC/BpoC,KAAK2T,WAAaotB,EAAWptB,WAC7B3T,KAAK2mC,SAAW5F,EAAW4F,QAC3B3mC,KAAK8oC,4BAA4B/H,MAtxBjCp6B,IAAA,uBAAAwE,MAAA,SAiyBiB69B,GAA4B,IAAvBC,EAAuBvoC,UAAAG,OAAA,QAAAiD,IAAApD,UAAA,IAAAA,UAAA,GAC/C,QAAUV,KAAKkpC,wBAAwBF,EAAKC,GAAepoC,UAlyBzD8F,IAAA,0BAAAwE,MAAA,SA8yBoB69B,GAA4B,IAAvBC,EAAuBvoC,UAAAG,OAAA,QAAAiD,IAAApD,UAAA,IAAAA,UAAA,GAE5CyoC,KAEN,GAAInpC,KAAK+jC,UAAW,KAAAqF,GAAA,EAAAC,GAAA,EAAAC,OAAAxlC,EAAA,IAClB,QAAAylC,EAAAC,EAAuBxpC,KAAK+jC,UAA5BsD,OAAAC,cAAA8B,GAAAG,EAAAC,EAAAjC,QAAAC,MAAA4B,GAAA,EAAuC,KAA5B3B,EAA4B8B,EAAAp+B,MAC/Bs+B,EAAShC,EAAStK,cAClBuM,EAASjC,EAASnK,sBACMx5B,IAAX4lC,GAAwBV,GAAOU,UACpB5lC,IAAX2lC,GAAwBT,GAAOS,KAGjCR,IAAiBxB,EAAS9zB,WACzCw1B,EAAWtiC,KAAK4gC,EAASjgC,OATX,MAAAkgC,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,aAAA0B,GAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,IAcpB,OAAOH,KAh0BLxiC,IAAA,mBAAAwE,MAAA,WA00BoC,IAAvB89B,EAAuBvoC,UAAAG,OAAA,QAAAiD,IAAApD,UAAA,IAAAA,UAAA,GAEhCyoC,KAEN,GAAInpC,KAAK+jC,UAAW,KAAA4F,GAAA,EAAAC,GAAA,EAAAC,OAAA/lC,EAAA,IAClB,QAAAgmC,EAAAC,EAAuB/pC,KAAK+jC,UAA5BsD,OAAAC,cAAAqC,GAAAG,EAAAC,EAAAxC,QAAAC,MAAAmC,GAAA,EAAuC,KAA5BlC,EAA4BqC,EAAA3+B,MAChC89B,IAAiBxB,EAAS9zB,WAC7Bw1B,EAAWtiC,KAAK4gC,EAASjgC,OAHX,MAAAkgC,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,aAAAiC,GAAAI,EAAApC,QAAAoC,EAAApC,SAAA,WAAAiC,EAAA,MAAAC,IAQpB,OAAOV,KAt1BLxiC,IAAA,2BAAAwE,MAAA,WAg2BF7C,EAAArB,QAAY8J,OAAO/Q,KAAKsjC,WACxB,IAAM6F,EAAanpC,KAAKgqC,mBAExB,OADA1hC,EAAArB,QAAY8J,OAA6B,IAAtBo4B,EAAWtoC,QACvBsoC,EAAW,MAn2BhBxiC,IAAA,oCAAAwE,MAAA,WA62BF,IAAI7J,EAAeiF,EAAQo9B,uBAE3B,GAAI3jC,KAAK2oC,WAAY,KAAAsB,GAAA,EAAAC,GAAA,EAAAC,OAAArmC,EAAA,IACnB,QAAAsmC,EAAAC,EAAwBrqC,KAAK2oC,WAA7BtB,OAAAC,cAAA2C,GAAAG,EAAAC,EAAA9C,QAAAC,MAAAyC,GAAA,EAAyC,KAA9BK,EAA8BF,EAAAj/B,MACvC,GAAIm/B,EAAUj3B,OAASk3B,EAAAtjC,QAAwBujC,SAAU,CACvDlpC,EAAegpC,EAAU9iC,KACzB,QAJe,MAAAkgC,GAAAwC,GAAA,EAAAC,EAAAzC,EAAA,aAAAuC,GAAAI,EAAA1C,QAAA0C,EAAA1C,SAAA,WAAAuC,EAAA,MAAAC,IASrBnqC,KAAK0jC,cAAgBpiC,KAx3BnBqF,IAAA,8BAAAwE,MAAA,SAo4BwB41B,GAC1B,IAAI0J,GAAQ,EAENC,EAAW1qC,KAAK2qC,iBAChBC,EAAY7J,EAAW4J,iBAE7B,IAAK,IAAMhkC,KAAO+jC,EAChB,GAAIA,EAAS/jC,KAASikC,EAAUjkC,GAAM,CACpC8jC,GAAQ,EACR,MAIJ,GAAIA,EACF,IAAK,IAAM9jC,KAAOikC,EAChB,GAAIA,EAAUjkC,KAAS+jC,EAAS/jC,GAAM,CACpC8jC,GAAQ,EACR,MAKN,OAAOA,KA15BL9jC,IAAA,mBAAAsyB,IAAA,WA8SF,OAAOj5B,KAAK8iC,mBA9SVpd,IAAA,SAqTiBqd,GACnB/iC,KAAK8iC,kBAAoBC,KAtTvBp8B,IAAA,kBAAAsyB,IAAA,WA8TF,OAAOj5B,KAAKgjC,kBA9TVtd,IAAA,SAqUgBud,GAClBjjC,KAAKgjC,iBAAmBC,KAtUtBt8B,IAAA,cAAAsyB,IAAA,WA8UF,OAAOj5B,KAAKmjC,cA9UVzd,IAAA,SAqVY0d,GACdpjC,KAAKmjC,aAAeC,KAtVlBz8B,IAAA,iBAAAsyB,IAAA,WA8VF,OAAOj5B,KAAKilC,iBA9VVvf,IAAA,SAqWemlB,GACjB7qC,KAAKilC,gBAAkB4F,KAtWrBlkC,IAAA,iBAAAsyB,IAAA,WA8WF,IAAI6R,EAAQ,KACNC,EAAQ/qC,KAAKklC,eACb8F,EAAQhrC,KAAKslC,eAOnB,YANcxhC,IAAVinC,IACFD,GACEzoC,IAAK2oC,EACLliC,MAAOiiC,IAGJD,GAvXLplB,IAAA,SA8XeolB,GACbA,GACF9qC,KAAKslC,eAAiBwF,EAAMzoC,IAC5BrC,KAAKklC,eAAiB4F,EAAMhiC,QAE5B9I,KAAKslC,oBAAiBxhC,EACtB9D,KAAKklC,oBAAiBphC,MApYtB6C,IAAA,iBAAAsyB,IAAA,WA6YF,OAAOj5B,KAAKqlC,iBA7YV3f,IAAA,SAoZemlB,GACjB7qC,KAAKqlC,gBAAkBwF,KArZrBlkC,IAAA,WAAAsyB,IAAA,WAgbF,OAAOj5B,KAAKujC,aAhbV58B,IAAA,YAAAsyB,IAAA,WAwbF,OAAOj5B,KAAKqjC,YAxbV3d,IAAA,SA+bU4d,GACZtjC,KAAKqjC,WAAaC,KAhchB38B,IAAA,eAAAsyB,IAAA,WAwcF,OAAOj5B,KAAK0jC,iBAxcV/8B,IAAA,eAAAsyB,IAAA,WAgdF,OAAOj5B,KAAK4jC,iBAhdVj9B,IAAA,YAAAsyB,IAAA,WAwdF,OAAOj5B,KAAK8jC,cAxdVn9B,IAAA,gBAAAsyB,IAAA,WAgeF,OAAOj5B,KAAKgkC,kBAheVr9B,IAAA,UAAAsyB,IAAA,WAweF,OAAOj5B,KAAKokC,YAxeVz9B,IAAA,YAAAsyB,IAAA,WAgfF,OAAOj5B,KAAKukC,cAhfV59B,IAAA,kBAAAsyB,IAAA,WAwfF,OAAOj5B,KAAKykC,oBAxfV99B,IAAA,oBAAAsyB,IAAA,WAggBF,OAAOj5B,KAAK2kC,sBAhgBVh+B,IAAA,oBAAAsyB,IAAA,WAwgBF,OAAOj5B,KAAK6kC,sBAxgBVl+B,IAAA,oBAAAsyB,IAAA,WAghBF,OAAOj5B,KAAK+kC,sBAhhBVp+B,IAAA,eAAAsyB,IAAA,WAwhBF,OAAOj5B,KAAKmlC,iBAxhBVx+B,IAAA,eAAAsyB,IAAA,WAgiBF,OAAOj5B,KAAKulC,iBAhiBV5+B,IAAA,mBAAAsyB,IAAA,WAwiBF,OAAOj5B,KAAK0lC,qBAxiBV/+B,IAAA,kBAAAsyB,IAAA,WAgjBF,OAAOj5B,KAAK8lC,oBAhjBVn/B,IAAA,SAAAsyB,IAAA,WAwjBF,OAAOj5B,KAAKkmC,WAxjBVv/B,IAAA,gBAAAsyB,IAAA,WAgkBF,OAAOj5B,KAAKomC,kBAhkBVz/B,IAAA,kBAAAsyB,IAAA,WAwkBF,OAAOj5B,KAAKwmC,oBAxkBV7/B,IAAA,SAAAsyB,IAAA,WAilBF,OAAOj5B,KAAK0mC,WAjlBV//B,IAAA,YAAAsyB,IAAA,WAylBF,OAAOj5B,KAAK4mC,cAzlBVjgC,IAAA,UAAAsyB,IAAA,WAkmBF,OAAOj5B,KAAK8mC,YAlmBVngC,IAAA,mBAAAsyB,IAAA,WA8mBF,IAAMhoB,KACA2pB,EAAa56B,KAAKyjC,gBAClBwH,EAASjrC,KAAK+iC,qBAEpB,IAAK,IAAMp8B,KAAOskC,EACI,OAAhBA,EAAOtkC,QACe7C,IAApB82B,EAAWj0B,IAA0C,OAApBi0B,EAAWj0B,KAC9CsK,EAAOtK,GAAOi0B,EAAWj0B,IAG3BsK,EAAOtK,GAAOskC,EAAOtkC,GAIzB,OAAOsK,KA5nBLtK,IAAA,mBAAAsyB,IAAA,WA4oBF,OAA6B,OAAtBj5B,KAAKmjC,cACc,OAAxBnjC,KAAKkrC,kBA7oBLvkC,IAAA,mBAAAsyB,IAAA,WA6pBF,OAA6B,OAAtBj5B,KAAKmjC,cACc,OAAxBnjC,KAAKkrC,kBA9pBLvkC,IAAA,YAAAsyB,IAAA,WAwqBF,IAAItlB,GAAY,EAEhB,IAD2B3T,KAAKooC,aAAepoC,KAAK4nC,cAC1B5nC,KAAK+jC,UAAW,KAAAoH,GAAA,EAAAC,GAAA,EAAAC,OAAAvnC,EAAA,IACxC,QAAAwnC,EAAAC,EAAuBvrC,KAAK+jC,UAA5BsD,OAAAC,cAAA6D,GAAAG,EAAAC,EAAAhE,QAAAC,MAAA2D,GAAA,EAAuC,CACrC,IAA2B,IADUG,EAAAngC,MACxBwI,UAAoB,CAC/BA,GAAY,EACZ,QAJoC,MAAA+zB,GAAA0D,GAAA,EAAAC,EAAA3D,EAAA,aAAAyD,GAAAI,EAAA5D,QAAA4D,EAAA5D,SAAA,WAAAyD,EAAA,MAAAC,IAQ1C,OAAO13B,KAlrBLhN,IAAA,cAAAsyB,IAAA,WA4rBF,YAAuBn1B,IAAhB9D,KAAKmmC,UA5rBVx/B,IAAA,qBAAAsyB,IAAA,WA4sBF,OAA2B,OAApBj5B,KAAK2oC,YACV3oC,KAAK4nC,aACc,OAAnB5nC,KAAK+jC,WACqB,IAA1B/jC,KAAK+jC,UAAUljC,SACiB,IAAhCb,KAAK+jC,UAAU,GAAGpwB,aAhtBlBhN,IAAA,cAAAsyB,IAAA,WA2tBF,YAAuBn1B,IAAhB9D,KAAK2mC,UA3tBVhgC,IAAA,eAAAsyB,IAAA,WAouBF,YAAwBn1B,IAAjB9D,KAAK+mC,WApuBVpgC,IAAA,YAAAsyB,IAAA,WA4uBF,OAAOj5B,KAAKkoC,cA5uBVvhC,IAAA,YAAAsyB,IAAA,WAovBF,OAAOj5B,KAAKsoC,eApvBV/hC,KAq6BNA,EAAQilC,sBAAwB,SAASn3B,GASvC,MANI,UAAUo3B,KAAKp3B,GACV9N,EAAQ+9B,KAAKhG,KAEb/3B,EAAQ+9B,KAAK/wB,KAYxBhN,EAAQo9B,uBAAyB,WAOjCp9B,EAAQ29B,YACNwH,UAAW,YACXvH,UAAW,YACXwH,WAAY,cAQdplC,EAAQ+9B,MACN/wB,IAAK,MACL+qB,KAAM,QAQR/3B,EAAQk/B,cACNmG,UAAa,iCACbC,UAAa,yCACbC,WAAc,2BAQhBvlC,EAAQq/B,kBACNC,QAAS,WAQXt/B,EAAQy/B,iBACN+B,KAAM,OACN9B,KAAM,QAQR1/B,EAAQ+/B,eACNC,IAAK,qCAIQhgC,+FC3/BbwlC,QAAS,UAITC,KAAM,OAINC,SAAU,WAIVC,KAAM,OAIN1B,SAAU,WAIV2B,OAAQ,SAIRC,OAAQ,SAIRC,KAAM,kKCvCRC,EAAAhmC,EAAA,GAsCA,MAAAimC,EAAA,SAAAl/B,GACA,MAAAC,EACAD,MAMArN,KAAAkP,YAAA5B,EAAA4B,YAMAlP,KAAA+S,UAAAzF,EAAAyF,UAMA/S,KAAAyB,QAAA6L,EAAA7L,QAMAzB,KAAAwsC,eAAA,GAKAxsC,KAAA2P,8BACA3P,KAAA2P,2BAAA48B,EAAAE,QACAC,cAAAJ,EAAA,QAAAK,aACAJ,EAAArsC,UAAA0sC,sBACAC,eAAAP,EAAA,QAAAK,aACAJ,EAAArsC,UAAA0sC,uBAGAE,EAAA,EAAAvsC,KAAAP,OAGAW,OAAAkN,EAAA,SAAAlN,CAAA4rC,EAAAO,EAAA,GAOAP,EAAAE,MAAA,6BAeAF,EAAAQ,oBAAA,cAQAR,EAAArsC,UAAA0sC,qBAAA,SAAAz+B,EAAAC,GACA,MAAAE,EAAAH,EAAAG,UACA,IAAA1B,EAAA,KACA,wBAAA0B,EAEA1B,EADA,+BAAAuB,EAAA6+B,aACAV,EAAA,QAAA78B,mBACAzP,KAAA2P,2BAAAxB,EACAC,EAAApO,MAEAssC,EAAA,QAAA78B,gBAAA,KACAzP,KAAA2P,2BAAAxB,EACAC,EAAApO,WAEG,qBAAAsO,GAAA,iBAAAA,EAAA,CACH,MAAAxC,EAAAsC,EAAA,GACA,IAEAI,EAAAC,EAFAS,EAAApD,EAAA,YACAiH,EAAAjH,EAAA,UAEA,MAAAmhC,EAAA,IACAC,EAAA,KACA,IAAAh+B,GAAAf,EAAAI,WAAA,CAEA,IADAW,KAAA6D,KACAvE,EAAA,EAAAC,EAAAN,EAAAI,WAAA1N,OAA8C2N,EAAAC,IAAQD,EAAA,CACtD,MAAAwsB,EAAA7sB,EAAAI,WAAAC,GACA,OAAAwsB,EAAArsB,SAAA,CACA,MAAAw+B,EAAAnS,EAAAoS,SAAA53B,MAAA,KAAA63B,MACA,QAAAn+B,EAAAuS,QAAA0rB,GAAA,CACA,IAAAxmC,EAAA,GACA2mC,EAAA,EACA,MAAAC,EAAAvS,EAAAgS,aACA,UAAAQ,KAAAz6B,EAAA,CACA,GAAAA,EAAAy6B,KAAAD,EAAA,CACA5mC,EAAA6mC,EACA,QAEAF,EAEA3mC,IAEAoM,EADApM,EAAAsmC,EAAAK,GACAC,GAEAr+B,EAAArI,KAAAF,EAAA,IAAAwmC,KAIA,iBAAA7+B,IAEAxC,EAAA,YAAAoD,EACApD,EAAA,UAAAiH,GAGA,oBAAAA,EAAA,CACA,MAAA06B,EAAA16B,GACAA,MACAm6B,GAAAO,EAEA,MAAAn+B,KACAmE,EAAAjT,MAAA+c,QAAArO,SACA,UAAAmV,KAAAtR,EAAA,CACA,MAAA5D,KACA,IAAAX,EAAA,EAAAC,EAAAgF,EAAA5S,OAA2C2N,EAAAC,IAAQD,EAAA,GACnD,IAAAiF,EAAAjF,GAAAiT,QAAA,KACAyrB,EAAAz5B,EAAAjF,GAAAgH,MAAA,WACA6O,IACAlV,EAAAsE,EAAAjF,GAAAgH,MAAA,KAAA63B,OACA,kBAAA/+B,EACAg+B,EAAA,QAAAl9B,gBAAApP,KAAAqP,mBAAArP,MACAssC,EAAA,QAAAK,aAAA3sC,KAAAqP,mBAAArP,OAGAsP,EAAAyD,EAAAsR,IAAAlV,EAGAvC,EADA,iBAAA0B,EACAg+B,EAAA,QAAA78B,qBAAA3L,EAAAwL,EAAAnB,EAAAC,GAEAk+B,EAAA,QAAA78B,mBAAAH,EAAAnB,EAAAC,GAMA,OAHA,OAAAxB,IACAA,MAEAA,GASA2/B,EAAArsC,UAAAwtC,oBAAA,SAAAv/B,EAAAC,GACA,MAAAtC,EAAoCsC,EAAA,GACpCtC,EAAA,QAAAqC,EAAAw/B,kBAAAC,aAAA,WACA9hC,EAAA,aAAAqC,EAAAw/B,kBAAAC,aAAA,gBAEA,MAAAhsC,EAAA0qC,EAAA,QAAA78B,gBAAA,KACAzP,KAAA6tC,kBAAA1/B,EAAAC,EAAApO,MACA,OAAA4B,EAEkCjB,OAAAmtC,EAAA,qBADlC,CACkClsC,GAAA,EAAAkK,QAGlC,GAUAygC,EAAArsC,UAAAmP,mBAAA,SAAAlB,EAAAC,GACA,IAAAgnB,EACA,MAAA2Y,EAAA5/B,EAAAy/B,aAAA,QACAtB,EAAA,QAAA0B,eAAA7/B,EAAAo+B,EAAAE,MAAA,MACApQ,KACA,IAAA/6B,EACA,IAAA8zB,EAAAjnB,EAAAw/B,kBAAkCvY,EAAGA,IAAA6Y,mBAAA,CACrC,MAAA3/B,EAAA8mB,EAAA9mB,UAIA,OAAA8mB,EAAA7mB,WAAA1N,QACA,IAAAu0B,EAAA7mB,WAAA1N,SACA,IAAAu0B,EAAA8M,WAAAvzB,UAAA,IAAAymB,EAAA8M,WAAAvzB,UAAA,CACA,IAAAxD,EAAAmhC,EAAA,QAAA/c,kBAAA6F,GAAA,GACAmX,EAAAQ,oBAAAtB,KAAAtgC,KACAA,OAAArH,GAEAu4B,EAAA/tB,GAAAnD,MAGA,cAAAmD,IACAhN,EAAAgN,GAEA+tB,EAAA/tB,GAAAtO,KAAA0tC,oBAAAtY,EAAAhnB,GAGA,MAAA5B,EAAA,IAAA0hC,EAAA,QAAA7R,GAOA,OANA/6B,GACAkL,EAAA2hC,gBAAA7sC,GAEAysC,GACAvhC,EAAA4hC,MAAAL,GAEAvhC,GASA+/B,EAAArsC,UAAAmuC,UAAA,SAAAlgC,EAAAC,GACA,MAAAoQ,EACAxe,KAAAsuC,6BAAAngC,EAAAC,GACA,GAAAoQ,EAAA,CACA,MAAAa,EAAA,IAAAkvB,EAAA,cAEA,OADAlvB,EAAAT,mBAAA4vB,EAAA,QAAA9gB,IAAAlP,GACAa,IAUAktB,EAAArsC,UAAAuuC,eAAA,SAAAtgC,EAAAC,GAEA,MAAAue,EAAA2f,EAAA,QAAA78B,mBACAzP,KAAA0uC,oBAAAvgC,EAAAC,EAAApO,MACA,OAAA2sB,EACA,IAAAgiB,EAAA,QAAAhiB,QAEA,GAUA4f,EAAArsC,UAAA0uC,oBAAA,SAAAzgC,EAAAC,GAEA,MAAA6Q,EAAAqtB,EAAA,QAAA78B,mBACAzP,KAAA6uC,yBAAA1gC,EAAAC,EAAApO,MACA,GAAAif,EAAA,CACA,MAAAC,EAAA,IAAA4vB,EAAA,cAEA,OADA5vB,EAAA4V,eAAA7V,GACAC,IAYAqtB,EAAArsC,UAAA6uC,iBAAA,SAAA5gC,EAAAC,GAEA,MAAA4R,EAAAssB,EAAA,QAAA78B,mBACAzP,KAAAgvC,sBAAA7gC,EAAAC,EAAApO,MACA,GAAAggB,EAAA,CACA,MAAAiW,EAAA,IAAAgZ,EAAA,cAEA,OADAhZ,EAAAoC,YAAArY,GACAiW,IAYAsW,EAAArsC,UAAAgvC,mBAAA,SAAA/gC,EAAAC,GACAk+B,EAAA,QAAA6C,UAAAnvC,KAAAovC,qBACAjhC,EAAAC,EAAApO,OASAusC,EAAArsC,UAAAmvC,wBAAA,SAAAlhC,EAAAC,GACAk+B,EAAA,QAAA6C,UAAAnvC,KAAAsvC,0BACAnhC,EAAAC,EAAApO,OASAusC,EAAArsC,UAAAqvC,qBAAA,SAAAphC,EAAAC,GACAk+B,EAAA,QAAA6C,UAAAnvC,KAAAwvC,uBAAArhC,EACAC,EAAApO,OASAusC,EAAArsC,UAAAuvC,eAAA,SAAAthC,EAAAC,GACA,MAAAoQ,EACAxe,KAAAsuC,6BAAAngC,EAAAC,GACA,GAAAoQ,EAAA,CACA,MAAAE,EAAA,IAAAgxB,EAAA,cAEA,OADAhxB,EAAAE,mBAAA4vB,EAAA,QAAA9gB,IAAAlP,GACAE,IAaA6tB,EAAArsC,UAAAyvC,oBAAA,SAAAxhC,EAAAC,GACA,MAAAwhC,EAAAtD,EAAA,QAAA78B,gBAAA,KACAzP,KAAA6vC,mCAAA1hC,EACAC,EAAApO,MACA,OAAA4vC,QAGA,GAUArD,EAAArsC,UAAA4vC,eAAA,SAAA3hC,EAAAC,GACA,MAAAoQ,EACAxe,KAAAsuC,6BAAAngC,EAAAC,GACA,GAAAoQ,EAAA,CACA,MAAAoxB,EAAA,IAAAG,EAAA,QAEA,OADAH,EAAAhxB,mBAAA4vB,EAAA,QAAA9gB,IAAAlP,GACAoxB,IAYArD,EAAArsC,UAAA8vC,YAAA,SAAA7hC,EAAAC,GAEA,MAAA6hC,EAAA3D,EAAA,QAAA78B,iBAAA,MACAzP,KAAAkwC,2BAAA/hC,EAAAC,EAAApO,MACA,GAAAiwC,KAAA,IACA,MAAArwB,EAAA,IAAAuwB,EAAA,cACA3xB,EAAAyxB,EAAA,GACAjxB,GAAAR,EAAA3d,QACA,IAAA2N,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAwhC,EAAApvC,OAA4C2N,EAAAC,IAAQD,EACpD7N,OAAAsO,EAAA,OAAAtO,CAAA6d,EAAAyxB,EAAAzhC,IACAwQ,EAAAnY,KAAA2X,EAAA3d,QAIA,OAFA+e,EAAAhB,mBACA4vB,EAAA,QAAA9gB,IAAAlP,EAAAQ,GACAY,IAaA2sB,EAAArsC,UAAAouC,6BAAA,SAAAngC,EAAAC,GACA,OAAAk+B,EAAA,QAAA78B,gBAAA,KACAzP,KAAA6vC,mCAAA1hC,EACAC,EAAApO,OASAusC,EAAArsC,UAAAwuC,qBACA0B,8BACAC,YAAA/D,EAAA,QAAAl9B,gBACAm9B,EAAArsC,UAAAgvC,oBACAoB,aAAAhE,EAAA,QAAAl9B,gBACAm9B,EAAArsC,UAAAgvC,sBAUA3C,EAAArsC,UAAA2uC,0BACAuB,8BACAG,iBAAAjE,EAAA,QAAAl9B,gBACAm9B,EAAArsC,UAAAmvC,yBACAmB,kBAAAlE,EAAA,QAAAl9B,gBACAm9B,EAAArsC,UAAAmvC,2BAUA9C,EAAArsC,UAAA8uC,uBACAoB,8BACAK,cAAAnE,EAAA,QAAAl9B,gBACAm9B,EAAArsC,UAAAqvC,sBACAmB,eAAApE,EAAA,QAAAl9B,gBACAm9B,EAAArsC,UAAAqvC,wBAUAhD,EAAArsC,UAAAkvC,sBACAgB,8BACAz1B,MAAA2xB,EAAA,QAAAl9B,gBACAm9B,EAAArsC,UAAAouC,gCAUA/B,EAAArsC,UAAAovC,2BACAc,8BACA51B,WAAA8xB,EAAA,QAAAl9B,gBACAm9B,EAAArsC,UAAAuvC,kBAUAlD,EAAArsC,UAAAsvC,wBACAY,8BACAv1B,QAAAyxB,EAAA,QAAAl9B,gBACAm9B,EAAArsC,UAAA8vC,eAUAzD,EAAArsC,UAAAywC,cACAP,8BACA7nB,WAAA+jB,EAAA,QAAAK,aACAJ,EAAArsC,UAAAyvC,uBAQApD,EAAArsC,UAAAmiC,qBAAA,SAAAl0B,EAAAd,GACA,MAAAzL,EAAA5B,KAAA0tC,oBAAAv/B,GACAnO,KAAA+P,eAAA5B,EAAAd,SACA,OAAAzL,GAAA,MAaA2qC,EAAArsC,UAAA0P,aAMA28B,EAAArsC,UAAA2P,qBAAA,SAAA1B,EAAAd,GACA,MAAAC,GACA4B,YAAAlP,KAAAkP,YACA6D,UAAA/S,KAAA+S,WAMA,OAJA1F,GACA1M,OAAAiwC,EAAA,OAAAjwC,CAAA2M,EAAAtN,KAAA+P,eAAA5B,EAAAd,IAEArN,KAAA4sC,qBAAAz+B,GAAAb,SAQAi/B,EAAArsC,UAAAsiC,uBAAA,SAAAr0B,GACA,OAAAxN,OAAAkwC,EAAA,IAAAlwC,CAAAX,KAAAyB,QAAAzB,KAAAyB,QACA0M,EAAAw/B,kBAAAC,aAAA,aAEAvnC,EAAA,sFCrlBA,QAAAC,EAAA,QACAA,EAAA,IACYkT,IAAZlT,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,KACYwqC,IAAZxqC,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,MACYyqC,IAAZzqC,EAAA,iNAYA,IAAMC,EAAU,SAAS8J,EAAID,GAM3BpQ,KAAK64B,IAAMxoB,EAMXrQ,KAAK84B,OAAS1oB,qDAOhB7J,EAAQyqC,UAAY,YAMpBzqC,EAAQ0qC,cAAgB,SAkBxB1qC,EAAQrG,UAAUu7B,oBAAsB,SAASyV,EAC/CC,EAAkBC,EAAcC,EAAgBC,EAAUC,EAAYC,GAEtE,IAAMvwC,GACJwwC,OAAUL,EACVM,OAAUP,GAERQ,SACAL,IACFrwC,EAAA,KAAiBqwC,GAEfD,IACFpwC,EAAA,WAAuBowC,EAEvBM,EAAeN,EAAeriC,QAAQ,aAAc,SAEtD,IAAM0Y,EAAS,IAAAkqB,EAAA3qC,SACboN,IAAK68B,EACLjwC,OAAQA,EACR4wC,WAAYF,EACZrjB,YAAakjB,IAMf,OAJID,GACF7pB,EAAOoqB,aAAaP,GAGf,IAAAQ,EAAA9qC,SAAkBygB,YAY3BnhB,EAAQrG,UAAU8xC,kCAAoC,SACpDjR,EAAYyQ,GAEZ,IAAMn9B,EAAM0sB,EAAW4F,OACvBr+B,EAAArB,QAAY8J,OAAOsD,GAEnB,IAAM80B,EAAapI,EAAWiJ,mBAAmB51B,KAAK,KAChDy9B,EAAa9Q,EAAWkD,cACxBzI,EAAYuF,EAAW8C,aAGvBn1B,EAAQ1O,KAAKy7B,oBACjBpnB,EACA80B,EACA3N,EACAqW,OACA/tC,OACAA,EACA0tC,GASF,OALA9iC,EAAMujC,WAAWlR,EAAWmR,SAG5BxjC,EAAMgX,IAAI,kBAAmBqb,EAAWoR,KAEjCzjC,GAkBTnI,EAAQrG,UAAUi7B,iCAAmC,SAASiX,EAAiBrjC,EAAWsjC,GACxF,IAAMC,EAAS,IAAAC,EAAAtrC,QACTyH,EAAQ,IAAA6tB,EAAAt1B,SACZurC,QAASC,MAELpiC,EAAKrQ,KAAK64B,IAEhB,OAAO74B,KAAK84B,OAAOG,IAAImZ,GAAkBvU,OAAO,IAAO3rB,KAAK,SAACoE,GAC3D,IAAIsO,SAIJ,GAHItO,EAASC,OACXqO,EAAS0tB,EAAOI,KAAKp8B,EAASC,OAE5BqO,EAAQ,CACV,IAAMtX,EAAUqlC,EAAA1rC,QAAa2rC,wBAAwBhuB,GACnD0J,YAAa,YACb5f,MAAOK,IAETzG,EAAArB,QAAY8J,OAAOzD,GACnB,IAAMoa,EAAS,IAAAirB,EAAA1rC,QAAwDqG,GACnE+kC,IAAmBvB,EAAM+B,QAAQR,IACnC3qB,EAAOorB,iBAAiBT,GAE1B3jC,EAAMqkC,UAAUrrB,GAGhB,IAAM/Z,EAASiX,EAAA,eACTR,EAAI5K,EAAQ0gB,KAAKvsB,EAAQ,SAACqlC,EAAK7mC,EAAO4uB,GAAb,OAAuBiY,EAAA,YAAqBjkC,IAG3E,OAFAL,EAAMgX,IAAI,qBAAsBtB,EAAA,OAEzB/T,EAAGyE,QAAQpG,GAEpB,OAAO2B,EAAG8tB,OAAH,wCAAkDiU,MAe7D7rC,EAAQrG,UAAU+yC,oCAAsC,SACtDC,EAAcC,EAAUd,GAGxB,IAAM/kC,EAAUqlC,EAAA1rC,QAAa2rC,wBAAwBM,GACnD5kB,YAAa,YACb5f,MAAOykC,EAAA,aAGT7qC,EAAArB,QAAY8J,OAAOzD,GACnB,IAAMoa,EAAS,IAAAirB,EAAA1rC,QAC0BqG,GAMzC,OAJI+kC,IAAmBvB,EAAM+B,QAAQR,IACnC3qB,EAAOorB,iBAAiBT,GAGnB,IAAA9V,EAAAt1B,SACLmsC,mBAAsBD,EAAA,MACtBX,QAASC,IACT/qB,OAAQA,KAaZnhB,EAAQrG,UAAUi8B,iBAAmB,SAASkX,GAC5C,IAAM3Z,EAAQ,IAAA4Z,EAAArsC,QAId,OAHIosC,GACF3Z,EAAMzrB,UAAUolC,GAEX3Z,GAcTnzB,EAAQrG,UAAUqzC,gBAAkB,SAASnrC,EAAKorC,GAChD,IAAMC,EAASrrC,EAAIsrC,gBAAgB1lC,YAC/B0rB,SAcJ,OAbA+Z,EAAO/S,WAAW3D,KAAK,SAAC4W,GACtB,OAAIA,EAAc1a,IAAI1yB,EAAQyqC,aAAewC,IAC3C9Z,EAAuCia,GAChC,KAKNja,KACHA,EAAQ15B,KAAKm8B,oBACPzW,IAAInf,EAAQyqC,UAAWwC,GAC7BprC,EAAIu4B,SAASjH,IAERA,GAWTnzB,EAAQrG,UAAU0zC,cAAgB,SAASllC,GACzC,OAAO1O,KAAK6zC,eAAenlC,OAY7BnI,EAAQrG,UAAU2zC,eAAiB,SAASnlC,EAAOqsB,GAC7CrsB,uBACgBA,EAAMV,YACdjH,QAAQ,SAASqd,GACzBpkB,KAAK6zC,eAAezvB,EAAG2W,IACtB/6B,MAEC+6B,EAAMtZ,QAAQ/S,GAAS,GACzBqsB,EAAMl0B,KAAK6H,GAGf,OAAOqsB,GAaTx0B,EAAQrG,UAAU4zC,eAAiB,SAAS/kC,EAAWpB,GACrD,IAAIomC,EAAQ,KAWZ,OAVApmC,EAAOovB,KAAK,SAASruB,GACnB,GAAIA,uBAA+B,CACjC,IAAMslC,EAAYtlC,EAAMV,YAAY0yB,WACpCqT,EAAQ/zC,KAAK8zC,eAAe/kC,EAAWilC,QAC9BtlC,EAAMuqB,IAAI,mBAAqBlqB,IACxCglC,EAAQrlC,GAEV,QAASqlC,GACR/zC,MAEI+zC,GAWTxtC,EAAQrG,UAAU+zC,iBAAmB,SAASvlC,GAE5C,IAAI2F,SACE0H,EAASrN,EAAMuqB,IAAI,sBACzB,QAAen1B,IAAXiY,EAAsB,CACxB,IAAMm4B,EAAYn4B,EAAO,GAAP,eACAjY,IAAdowC,IACF7/B,EAAM6/B,EAAU,GAAV,MAGV,OAAO7/B,GAaT9N,EAAQrG,UAAUi0C,gBAAkB,SAAS9/B,EAC3CtF,EAAWqlC,EAAWC,GACtB,GAAKhgC,EAAL,CAGA,IAAMigC,GACJ7C,OAAU,YACV8C,aAAe,EACfC,QAAW,MACXC,QAAW,QACXC,QAAW,mBACXC,MAAS5lC,GAQX,YANkBjL,IAAdswC,IACFE,EAAA,MAAuBF,QAEFtwC,IAAnBuwC,IACFC,EAAA,KAAsBD,GAEjBtD,EAAM6D,aAAavgC,EAAKigC,KAUjC/tC,EAAQrG,UAAU20C,eAAiB,SAASnmC,EAAOtG,GACjD,IAAKsG,EAAMomC,aACT,OAAO,EAGT,IAAMC,EAAoB3sC,EAAI6M,UAAU+/B,gBACxC,OAAOD,EAAoBrmC,EAAMumC,oBAC7BF,EAAoBrmC,EAAMwmC,oBAQhC3uC,EAAQrG,UAAUi1C,gBAAkB,SAASzmC,GAC3C,IAAM+Y,EAAU/Y,EAAM0mC,YACtB9sC,EAAArB,QAAY8J,OACV0W,wBACAA,wBAEF,IAAMC,EAA8DD,EAC9DxmB,EAASymB,EAAO2tB,YACtBp0C,EAAOsF,EAAQ0qC,eAAiBvvB,KAAK4zB,SACrC5tB,EAAOoqB,aAAa7wC,IActBsF,EAAQrG,UAAUq1C,oBAAsB,SAAS7mC,EAAO8mC,EAAOlE,GAE7D,GAAIkE,EAAM30C,QAAU,EAClB6N,EAAMujC,YAAW,OACZ,CACLvjC,EAAMujC,YAAW,GACjB,IAAMvqB,EAA4ChZ,EAAM0mC,YACpD9D,EACF5pB,EAAOoqB,cAAcJ,OAAU8D,EAAOtJ,KAAQoF,IAE9C5pB,EAAOoqB,cAAcJ,OAAU8D,MAYrCjvC,EAAQrG,UAAUu1C,kBAAoB,SAAS/mC,GAC7C,OACEA,EAAMuqB,IAAI,oBAOd1yB,EAAQY,OAASC,QAAQD,OAAO,uBACjBE,QAAQ,kBAAmBd,GAC1Ce,EAAAL,QAASE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG9BjB,iGC5cf,QAAAD,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,KACYkT,IAAZlT,EAAA,QACAA,EAAA,IACYwqC,IAAZxqC,EAAA,gNA2BA,IAAMC,EAAU,SAAS+E,EAAUgtB,EAAWE,EAAgBD,EAC5Dmd,EAAkBlsC,EAAWG,GAM7B3J,KAAK21C,UAAYrqC,EAMjBtL,KAAK41C,WAAatd,EAMlBt4B,KAAK61C,gBAAkBrd,EAMvBx4B,KAAKo5B,aAAeb,EAMpBv4B,KAAK81C,kBAAoBJ,EAMzB11C,KAAK6J,WAAaL,EAQlBxJ,KAAK+1C,MACHvrC,aAUFxK,KAAK2R,SAAW,KAQhB3R,KAAKg2C,oCAAsC,EAM3Ch2C,KAAKi2C,gCAMLj2C,KAAKk2C,uCAAyC,KAM9Cl2C,KAAKgK,kBAAoBL,EAOzB3J,KAAK6Q,YAAc,KAEnB7J,EAAAC,QAAS4B,OAAO7I,KAAK6J,WAAY,SAAU7J,KAAK8R,oBAAqB9R,uPAUvEuG,EAAQrG,UAAU4R,oBAAsB,WAAW,IAAAR,EAAAtR,KACjDA,KAAK6J,WAAWoI,sBAAsBC,KAAK,SAACC,GAC1Cb,EAAKT,YAAcsB,IAGjBnS,KAAK2R,UAAY3R,KAAK2R,SAASnH,UACjCxK,KAAK6J,WAAW8yB,kBAAkBzqB,KAAK,SAACunB,GACtCnoB,EAAK6kC,yBAAyB1c,MAapClzB,EAAQrG,UAAUqK,oBAAsB,SAAS6rC,GAG/C,OAFAp2C,KAAK+1C,KAAKvrC,SAAS3J,OAAS,EAC5Bb,KAAKgK,kBAAkBqsC,YAAY/uC,EAAAL,QAAQqvC,eAAeC,aACnDv2C,KAAKyK,oBAAoB2rC,IAclC7vC,EAAQrG,UAAUuK,oBAAsB,SAAS2rC,EAC/CI,EAASpsC,GAAY,IAAA4H,EAAAhS,KACfy2C,KAWN,OATAL,EAAiB31C,QAAQu7B,UAAUj1B,QAAQ,SAAC2yB,GACrC1nB,EAAK0kC,oBAAoBhd,IAC5B+c,EAAc5vC,KAAK6yB,KAGnB+c,EAAc51C,OAAS,IAAMuJ,GAC/BpK,KAAK22C,qBAAqBF,GAGI,IAAzBA,EAAc51C,QASvB0F,EAAQrG,UAAU02C,uBAAyB,SAASnD,GAClD,IAAMoD,KACNA,EAAgBvvC,EAAAL,QAAQqvC,eAAeC,aAAe9C,EAAOrrC,IAAI,SAAA+F,GAAA,OAAQA,EAAK3G,OAAM4M,KAAK,KACzFpU,KAAKgK,kBAAkBK,YAAYwsC,GAC/B72C,KAAK41C,WAAW5c,IAAI,iBACiBh5B,KAAK41C,WAAW3c,IAAI,gBAAiB6d,YAAYrD,IAY5FltC,EAAQrG,UAAUw2C,oBAAsB,SAAShd,GAAO,IAAAgE,EAAA19B,KAClD+2C,GAAe,EACbC,EAAUtd,EAAMyY,GAWtB,OAVAnyC,KAAK+1C,KAAKvrC,SAASuyB,KAAK,SAACka,GACvB,GAAID,IAAYC,EAAU9E,GACxB,OAAO4E,GAAe,GAEvB/2C,MACHA,KAAKi2C,6BAA6BlZ,KAAK,SAACma,GACtC,GAAIF,IAAYE,EAAI/E,GAClB,OAAO4E,GAAe,GAEvB/2C,OACC+2C,IAMJ/2C,KAAKi2C,6BAA6BpvC,KAAK6yB,GACvC15B,KAAKg2C,oCAAsC,EAGS,OAAhDh2C,KAAKk2C,wCACPl2C,KAAK21C,UAAU5pC,OAAO/L,KAAKk2C,wCAM7Bl2C,KAAKk2C,uCAAyCl2C,KAAK21C,UAAU,WAE3DjY,EAAKsY,oCAAsCtY,EAAKuY,6BAA6Bp1C,OAE7E68B,EAAKuY,6BAA6BlvC,QAAQ,SAASmwC,GACjDl3C,KAAK+1C,KAAKvrC,SAAS2sC,QAAQD,IAD7BxZ,GAIAA,EAAKkZ,uBAAuBlZ,EAAKqY,KAAKvrC,UAKtCkzB,EAAKuY,6BAA6Bp1C,OAAS,EAC3C68B,EAAKwY,uCAAyC,QAGzC,IAWT3vC,EAAQrG,UAAUk3C,eAAiB,SAAS5D,EAAWgD,GAAS,IAAAa,EAAAr3C,KAC9DA,KAAK6J,WAAW8yB,kBAAkBzqB,KAAK,SAACunB,GACtC,IAAMC,EAAQpnB,EAAArL,QAAe4yB,gBAAgBJ,EAAQ+Z,GACjD9Z,GACF2d,EAAK5sC,qBAAqBivB,GAAQ8c,GAAS,MAejDjwC,EAAQrG,UAAUo3C,oBAAsB,SAASvoC,EAAWynC,EAASpsC,GAAY,IAAAmtC,EAAAv3C,KAC/EA,KAAK6J,WAAW8yB,kBAAkBzqB,KAAK,SAACunB,GACtC,IAAMC,EAAQpnB,EAAArL,QAAeuyB,yBAAyBC,EAAQ1qB,GAC9D,GAAI2qB,EAAO,CACT,IAAM8d,EAAaD,EAAK9sC,qBAAqBivB,GAAQ8c,EAASpsC,GAC9DmtC,EAAK5B,UAAU,WACb,IAAMvjC,EAAWmlC,EAAKE,oBAAoB/d,EAAMyY,IAChD,GAAK//B,EAAL,CAIA,IAAIslC,SACJtlC,EAASR,mBAAmB,SAACQ,GAC3B,GAAIA,EAASjE,KAAK3G,OAASuH,EAEzB,OADA2oC,EAAmBtlC,EACZ4B,EAAA/M,QAAwBg6B,gBAAgBC,OAK/CsW,GACFplC,EAAS0tB,SAAS,OAIhB4X,GACFA,EAAiB5X,SAAS,WAlB1BzE,QAAQsc,KAAK,4DAgCvBpxC,EAAQrG,UAAU03C,YAAc,SAASle,GACvC,IAAMlvB,EAAWxK,KAAK+1C,KAAKvrC,SACvB2B,EAAQ,EAAG4nC,GAAQ,EACvBvpC,EAASuyB,KAAK,SAAC/B,GACb,GAAIA,EAAMxzB,OAASkyB,EAAMlyB,KACvB,OAAOusC,GAAQ,EAEjB5nC,MAEE4nC,IACFvpC,EAASy0B,OAAO9yB,EAAO,GACvBnM,KAAK42C,uBAAuBpsC,KAShCjE,EAAQrG,UAAU8K,UAAY,WAC5B,KAAOhL,KAAK+1C,KAAKvrC,SAAS3J,QACxBb,KAAK43C,YAAY53C,KAAK+1C,KAAKvrC,SAAS,KAcxCjE,EAAQrG,UAAU23C,gBAAkB,SAASne,EAAO8b,GAClD,IAAM5zB,EAA2CkvB,EAAMgH,UAAWpe,GAElE,OADA15B,KAAK+3C,iBAAiBn2B,EAAO4zB,GACtB5zB,GAYTrb,EAAQrG,UAAU63C,iBAAmB,SAAS5pC,EAAMqnC,GAC7CrnC,EAAK3D,UAGV2D,EAAK3D,SAASzD,QAAQ,SAASixC,GACzBA,EAAUxtC,SACZxK,KAAK+3C,iBAAiBC,EAAWxC,GACxBwC,EAAUrd,WACnBqd,EAAUrd,SAASsd,UAAYz+B,EAAQiJ,SAAS+yB,EAAOwC,EAAUxwC,QAElExH,OAWLuG,EAAQrG,UAAUy2C,qBAAuB,SAASlD,GAChD,IAAM+B,KACAhd,EAAiBx4B,KAAK61C,gBAC5BpC,EAAO1sC,QAAQ,SAAC2yB,GACd8b,EAAM3uC,KAAK6yB,EAAMlyB,QAEnB,IAAM0wC,EAAO1C,EAAM30C,OAAS,EAC1B23B,EAAe8D,UAAU,4BACzB9D,EAAe8D,UAAU,8BAC3Bt8B,KAAK81C,kBAAkBqC,QACrBD,IAAQ1C,EAAMphC,KAAK,MAAnB,IAA4B8jC,EAC5B7kC,KAAM+kC,EAAAnxC,QAAmBq9B,KAAK+T,eAWlC9xC,EAAQrG,UAAUu3C,oBAAsB,SAAStF,GAC/C,IAAImG,EAAwB,KAS5B,OARIt4C,KAAK2R,UAAY3R,KAAK2R,SAASC,oBACjC5R,KAAK2R,SAASC,mBAAmB,SAACQ,GAChC,GAAIA,EAASjE,KAAKgkC,KAAOA,EAEvB,OADAmG,EAAwBlmC,EACjB4B,EAAA/M,QAAwBg6B,gBAAgBC,OAI9CoX,GAUT/xC,EAAQrG,UAAUq4C,aAAe,SAASnmC,GACxC,GAAIA,EAASyB,OAAO1F,KAAK2F,MAAO,CAC9B,IAAMN,EAAoDpB,EAASjE,KAEnE,OADA7F,EAAArB,QAAY8J,OAAOyC,EAAYO,WACxB/T,KAAK6Q,YAAY2C,EAAYO,WAGpC,IADA,IAAIykC,EAAsBpmC,GAClBomC,EAAoB3kC,OAAO6qB,QACjC8Z,EAAsBA,EAAoB3kC,OAE5C,IAAM4kC,EAA8CD,EAAoBrqC,KAExE,OADA7F,EAAArB,QAAY8J,OAAO0nC,EAAS1kC,WACrB/T,KAAK6Q,YAAY4nC,EAAS1kC,YAcrCxN,EAAQrG,UAAUi2C,yBAA2B,SAAS1c,GAAQ,IAAAif,EAAA14C,KACtD24C,KAGN34C,KAAK2R,SAASnH,SAASpC,IAAI,SAACgK,GAC1B,IAAM5K,EAAO4K,EAASjE,KAAK3G,KAC3BmxC,EAA0BnxC,GAAQkxC,EAAKE,6BAA6BxmC,KAItE,IAAMymC,KAEN74C,KAAK+1C,KAAKvrC,SAASpC,IAAI,SAAC+F,GACtB,IAAM3G,EAAO2G,EAAK3G,KAGZsxC,EAAgBxmC,EAAArL,QAAe4yB,gBAAgBJ,EAAQjyB,GAC7D,GAAIsxC,EAAe,CAEjB,IAAMC,EAAYJ,EAA0BnxC,GACxCuxC,GACFL,EAAKM,8BAA8BF,EAAeC,GAEpDF,EAAehyC,KAAKiyC,MAKxB94C,KAAKuK,oBAAoBsuC,GAGzB74C,KAAK21C,UAAU,WACb+C,EAAK9B,uBAAuB8B,EAAK3C,KAAKvrC,aAa1CjE,EAAQrG,UAAU04C,6BAA+B,SAASxmC,GAAU,IAAA6mC,EAAAj5C,KAC5DwK,KAEN4H,EAAS5H,SAASpC,IAAI,SAAC4yB,GACrBxwB,EAASwwB,EAAM7sB,KAAK3G,MAAQyxC,EAAKL,6BAA6B5d,KAGhE,IAAIid,SAAWiB,SAAYC,SAC3B,GAAI/mC,EAAS5H,SAAS3J,OAAS,EAAG,CAChC,IAAMu4C,EAAcvhC,gCAAgCzF,EAAS1L,KAEzD0yC,IACFF,EAAaE,EAAYC,SAAS,WAE/B,CAIHpB,EADgB,QADlBA,EAAY7lC,EAASS,aAGI,QAAdolC,QAGGn0C,EAEd,IAAMw1C,EAAgBzhC,yBAAyBzF,EAAS1L,IAAlC,WAClB4yC,IACFH,EAAmBG,EAAcC,GAAG,aAIxC,OACE/uC,WACAytC,YACAiB,aACAC,qBAcJ5yC,EAAQrG,UAAU84C,8BAAgC,SAAS7qC,EAAM4qC,GAAW,IAAAS,EAAAx5C,KAC1E,IAAK+4C,EACH,OAAO5qC,EAILA,EAAK3D,UACP2D,EAAK3D,SAASpC,IAAI,SAAC4yB,GACjBwe,EAAKR,8BAA8Bhe,EAAO+d,EAAUvuC,SAASwwB,EAAMxzB,SAKvE,IAAMmzB,EAAWxsB,EAAKwsB,SAKtB,OAJAA,EAASsd,UAAYc,EAAUd,UAC/Btd,EAASue,WAAaH,EAAUG,WAChCve,EAASwe,iBAAmBJ,EAAUI,iBAE/BhrC,IAOT5H,EAAQY,OAASC,QAAQD,OAAO,kBAC9BmL,EAAArL,QAAeE,OAAOK,KACtBwM,EAAA/M,QAAwBE,OAAOK,KAC/BiyC,EAAAxyC,QAAwBE,OAAOK,KAC/B0D,EAAAjE,QAAwBE,OAAOK,QAElBH,QAAQ,iBAAkBd,GACzCe,EAAAL,QAAQE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG7BjB,oGCtlBf,QAAAD,EAAA,QACAA,EAAA,QACAA,EAAA,wDAWA,IAAMC,EAAU,SAASmzC,EAAcC,GAAmB,IAAAroC,EAAAtR,KAMxDA,KAAK45C,gBAKL55C,KAAK05C,aAAeA,EAMpB15C,KAAK65C,cAAgBF,EAMrB35C,KAAK85C,iBAEL95C,KAAK+5C,oBAAmB,GAMxB,IAAMC,EAAYN,EAAaO,eAAe7uB,OAAO,SAAAzkB,GAAA,MAAc,SAAPA,GAAyB,eAAPA,IAE9E,GAAyB,IAArBqzC,EAAUn5C,QACZ,GAAIb,KAAK85C,iBAAkB,KAAAI,EAAA,SACdvzC,GACT2B,EAAArB,QAAY8J,OAAOpK,GAEnB2K,EAAKuoC,cAAc9c,KAAK,SAACod,GACvB,GAAIxzC,EAAIyzC,MAAMD,GAAY,CACxB,IAAMhvC,EAAQsN,OAAO4hC,aAAa1zC,GAMlC,OAJE2K,EAAKsoC,aAAajzC,QADN7C,IAAVqH,GAAiC,OAAVA,EACAA,EAEA,IAEpB,MAXb,IAAK,IAAMxE,KAAO8R,OAAO4hC,aAAcH,EAA5BvzC,SAiBbqzC,EAAUjzC,QAAQ,SAACJ,GACjB2K,EAAKuoC,cAAc9c,KAAK,SAACod,GACvB,GAAIxzC,EAAIyzC,MAAMD,GAAY,CACxB,IAAMhvC,EAAQmG,EAAKooC,aAAaY,SAAS3zC,GACzC,QAAc7C,IAAVqH,EAEF,OADAmG,EAAKsoC,aAAajzC,GAAOwE,GAClB,sGAanB5E,EAAQrG,UAAU65C,mBAAqB,SAAS5uC,GAI9C,GAHAnL,KAAK85C,iBAAmB3uC,EAGpBnL,KAAK85C,iBACP,IACM,iBAAkBrhC,QACpBA,OAAO4hC,aAAP,KAA8B,UACvB5hC,OAAO4hC,aAAP,MAEPr6C,KAAK85C,kBAAmB,EAE1B,MAAOpS,GACPrM,QAAQC,MAAMoM,GACd1nC,KAAK85C,kBAAmB,EAG5B,OAAO95C,KAAK85C,kBAQdvzC,EAAQrG,UAAUq6C,gBAAkB,SAAS5zC,GAC3C,OAAO3G,KAAK45C,aAAajzC,IAS3BJ,EAAQrG,UAAUs6C,sBAAwB,SAAS7zC,GACjD,IAAMwE,EAAQnL,KAAK45C,aAAajzC,GAChC,QAAc7C,IAAVqH,EAGJ,OAAOA,GAST5E,EAAQrG,UAAUu6C,sBAAwB,SAAS9zC,GACjD,IAAMwE,EAAQnL,KAAK45C,aAAajzC,GAChC,QAAc7C,IAAVqH,EAGJ,OAAOqW,WAAWrW,IASpB5E,EAAQrG,UAAUw6C,uBAAyB,SAAS/zC,GAClD,IAAMwE,EAAQnL,KAAK45C,aAAajzC,GAChC,QAAc7C,IAAVqH,EAGJ,MAAiB,SAAVA,GAQT5E,EAAQrG,UAAUmK,YAAc,SAAS8vB,GAEvC,GADAn6B,KAAK05C,aAAa5H,aAAa3X,GAC3Bn6B,KAAK85C,iBACP,IAAK,IAAMnzC,KAAOwzB,EAAQ,CACxB7xB,EAAArB,QAAY8J,OAAOpK,GACnB,IAAMwE,EAAQgvB,EAAOxzB,GACrB2B,EAAArB,QAAY8J,YAAiBjN,IAAVqH,GACnBsN,OAAO4hC,aAAa1zC,GAAOwE,IAUjC5E,EAAQrG,UAAUm2C,YAAc,SAAS1vC,GACvC3G,KAAK05C,aAAarD,YAAY1vC,GAC1B3G,KAAK85C,yBACArhC,OAAO4hC,aAAa1zC,KAQ/BJ,EAAQY,OAASC,QAAQD,OAAO,oBAC9B4f,EAAA9f,QAAyBE,OAAOK,QAEnBH,QAAQ,mBAAoBd,GAC3CA,EAAQY,OAAOgE,MAAM,qBAAsB,IAAIwvC,OAAO,QACtDrzC,EAAAL,QAASE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG9BjB,oFCvMf,IAAA+oB,EAAAhpB,EAAA,GAaA,MAAAq7B,EAAA,aAQAA,EAAAzhC,UAAAwyC,KAAA,SAAAhrB,GACA,GAAA4H,EAAA,QAAAsS,WAAAla,GACA,OAAA1nB,KAAA46C,iBAAqD,GAClD,GAAAtrB,EAAA,QAAAwS,OAAApa,GACH,OAAA1nB,KAAA66C,aAA6C,GAC1C,oBAAAnzB,EAAA,CACH,MAAAsa,EAAA1S,EAAA,QAAAQ,MAAApI,GACA,OAAA1nB,KAAA46C,iBAAA5Y,GAEA,aAUAL,EAAAzhC,UAAA06C,iBAAA,SAAA5Y,KAQAL,EAAAzhC,UAAA26C,aAAA,SAAA1sC,KACA9H,EAAA,4JCjDAy0C,EAAAx0C,EAAA,GAuBA,MAAAyhC,EAAA,SAAA16B,GACA,MAAAC,EACAD,MAEA0tC,EAAA,EAAAx6C,KAAAP,KAAAsN,GAEAtN,KAAA2P,2BAAAorC,EAAA,EAAAtO,OACA,cACAqO,EAAA,QAAA1rC,gBAAA2rC,EAAA,EAAA76C,UAAA0sC,sBAKA5sC,KAAAwsC,eAAAl/B,EAAAk/B,eACAl/B,EAAAk/B,eAAAzE,EAAAiT,iBAIAr6C,OAAAkN,EAAA,SAAAlN,CAAAonC,EAAAgT,EAAA,GAQAhT,EAAAiT,gBAAAD,EAAA,EAAAtO,MACA,oDASA1E,EAAA7nC,UAAA+6C,qBAAA,SAAA9sC,EAAAC,GACA,MAAAihB,EAAAyrB,EAAA,QAAAvrB,kBAAAphB,GAAA,GAAAa,QAAA,iBAEAksC,EADiD9sC,EAAA,GACjD,QACA,IAAA+sC,EAAA,MACA,GAAAD,EAAA,CACA,MAAAE,EAAAz6C,OAAA06C,EAAA,IAAA16C,CAAAu6C,GACAE,IACAD,EAAAC,EAAAE,sBAGA,MAAAC,EAAAlsB,EAAAiB,OAAA9a,MAAA,OACA,IAAAwP,EAAAC,EAAAu2B,EACA,MAAAh9B,KACA,QAAAhQ,EAAA,EAAAC,EAAA8sC,EAAA16C,OAA2C2N,EAAAC,EAAQD,IAAA,CACnD,MAAAitC,EAAAF,EAAA/sC,GAAAgH,MAAA,MACAwP,EAAAxD,WAAAi6B,EAAA,IACAx2B,EAAAzD,WAAAi6B,EAAA,IACAD,EAAA,IAAAC,EAAA56C,OAAA2gB,WAAAi6B,EAAA,MACA,OAAAN,EAAAO,OAAA,KACAl9B,EAAA3X,KAAAme,EAAAC,EAAAu2B,GAEAh9B,EAAA3X,KAAAoe,EAAAD,EAAAw2B,GAGA,OAAAh9B,GAUAupB,EAAA7nC,UAAAy7C,SAAA,SAAAxtC,EAAAC,GAEA,MAAAoQ,EAAAs8B,EAAA,QAAArrC,iBAAA,MACAzP,KAAA47C,aAAAztC,EAAAC,EAAApO,MACA,OAAAW,OAAAk7C,EAAA,eAAAl7C,CAAA6d,EAAA,MACAA,EAAA,MAAAA,EAAA,MACAA,EAAA,QASAupB,EAAA7nC,UAAA47C,uBAAA,SAAA3tC,EAAAC,GAEA,MAAA2tC,EAAAjB,EAAA,QAAArrC,qBAAA3L,EACA9D,KAAA2wC,aAAAxiC,EAAAC,EAAApO,MACA,GAAA+7C,EAAA,CAEA3tC,IAAAvN,OAAA,GACAgG,KAAAk1C,KAUAhU,EAAA7nC,UAAA87C,uBAAA,SAAA7tC,EAAAC,GAEA,MAAA2tC,EAAAjB,EAAA,QAAArrC,qBAAA3L,EACA9D,KAAA2wC,aAAAxiC,EAAAC,EAAApO,MACA,GAAA+7C,EAAA,CAEA3tC,IAAAvN,OAAA,GACA,GAAAk7C,IAUAhU,EAAA7nC,UAAA2vC,oCACAO,8BACAzjB,YAAAmuB,EAAA,QAAAnO,aACA5E,EAAA7nC,UAAA+6C,wBAUAlT,EAAA7nC,UAAAgwC,4BACAE,8BACA6L,gBAAAlU,EAAA7nC,UAAA47C,uBACAI,gBAAAnU,EAAA7nC,UAAA87C,yBAUAjU,EAAA7nC,UAAA07C,cACAxL,8BACAzjB,YAAAmuB,EAAA,QAAA1rC,gBACA24B,EAAA7nC,UAAA+6C,wBAUAlT,EAAA7nC,UAAA2tC,mBACAuC,8BACAz1B,MAAAmgC,EAAA,QAAAnO,aAAAoO,EAAA,EAAA76C,UAAAmuC,WACArzB,WAAA8/B,EAAA,QAAAnO,aACAoO,EAAA,EAAA76C,UAAAuuC,gBACAj0B,WAAAsgC,EAAA,QAAAnO,aACAoO,EAAA,EAAA76C,UAAAuvC,gBACA10B,gBAAA+/B,EAAA,QAAAnO,aACAoO,EAAA,EAAA76C,UAAA0uC,qBACArmB,WAAAuyB,EAAA,QAAAnO,aACAoO,EAAA,EAAA76C,UAAA4vC,gBACAj1B,QAAAigC,EAAA,QAAAnO,aAAAoO,EAAA,EAAA76C,UAAA8vC,aACA/0B,aAAA6/B,EAAA,QAAAnO,aACAoO,EAAA,EAAA76C,UAAA6uC,kBACAoN,IAAArB,EAAA,QAAAnO,aAAA5E,EAAA7nC,UAAAy7C,YAaA5T,EAAA7nC,UAAAk8C,uBAAA,SAAAjxC,EAAAiD,EAAAiuC,GACA,MAAAvwC,EAAAsC,IAAAvN,OAAA,GACAy7C,EAAAxwC,EAAA,aACAywC,EAAAzwC,EAAA,QACA0wC,EAAA1wC,EAAA,WACA,IAAAshC,EAaA,OAZA5sC,MAAA+c,QAAApS,GAUAiiC,EAAA,WARA,kBADAA,EAA2C,EAAA3mB,aAC3C,IAAA61B,EACAlP,EAAA,eACK,YAAAA,IAAA,IAAAmP,EACLnP,EAAA,UACK,oBAAAA,IAAA,IAAAoP,IACLpP,EAAA,cAKA0N,EAAA,QAAA2B,gBAAA,6BACArP,IASArF,EAAA7nC,UAAAw8C,oBAAA,SAAAvuC,EAAA3B,EAAA4B,GACA,MAAA2/B,EAAAvhC,EAAAmwC,QACA5O,GACA5/B,EAAAE,aAAA,MAAA0/B,GAEA,MAAAjiC,EAAoCsC,IAAAvN,OAAA,GACpCkS,EAAAjH,EAAA,UACAxK,EAAAkL,EAAA4Z,kBACAta,EAAA8wC,cACA9wC,EAAA8wC,eACA9wC,EAAA8wC,YAAA7pC,OAEA,MAAAiH,EAAAxN,EAAAgP,gBACAjK,KACA8qB,KACA,UAAA11B,KAAAqT,EAAA,CACA,MAAA7O,EAAA6O,EAAArT,GACA,OAAAwE,IACAoG,EAAA1K,KAAAF,GACA01B,EAAAx1B,KAAAsE,GACAxE,GAAArF,GAAA6J,aAAA0xC,EAAA,QACAl2C,KAAAmF,EAAA8wC,YAAA7pC,KACAjH,EAAA8wC,YAAA7pC,GAAApM,GAAAm0C,EAAA,QAAAgC,kBACA98C,KAAA+8C,qBAAA/8C,OAGA2G,KAAAmF,EAAA8wC,YAAA7pC,KACAjH,EAAA8wC,YAAA7pC,GAAApM,GAAAm0C,EAAA,QAAAgC,kBACAE,EAAA,EAAAvsB,uBAKA,MAAAzf,EAAArQ,OAAAs8C,EAAA,OAAAt8C,IAAwBmL,GACxBkF,EAAA7C,OACA2sC,EAAA,QAAAoC,oBACA,EAAApxC,EAAA8wC,YACA9B,EAAA,QAAAqC,2BAAAr5C,EAAAiP,GACAspB,EACAjuB,EAAAmD,IASAw2B,EAAA7nC,UAAA68C,qBAAA,SAAA5uC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAqDsC,IAAAvN,OAAA,GACrDmQ,EAAArQ,OAAAs8C,EAAA,OAAAt8C,IAAwBmL,GAExB,IAAAX,EADA6F,EAAA7C,OAIAhD,EAFA3K,MAAA+c,QAAA3b,GACAkK,EAAAsxC,eACAz8C,OAAA06C,EAAA,gBAAA16C,CACAiB,EAAAkK,EAAAuxC,kBAAAvxC,EAAAsxC,gBAEAx7C,EAGAjB,OAAA8gC,EAAA,qBAAA9gC,CAA6D,KAAAmL,GAE7DgvC,EAAA,QAAAoC,oBACA,EAAAnV,EAAAuV,sBACAt9C,KAAAo8C,wBAAAjxC,GACAiD,OAAAtK,EAAA9D,OAUA+nC,EAAA7nC,UAAAq9C,wBAAA,SAAApvC,EAAAvM,EAAAwM,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QAIA,GAHA,sBAAAsN,EAAAi/B,UAAA3rC,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,eAAA0M,EAAAi/B,UACA,sBAAAj/B,EAAAi/B,SAAA,CACA,MAAAzgB,EAAA3sB,KAAAw9C,uBAAArvC,EAAA6+B,cACA7+B,EAAAwiB,YAAAhE,GACA3sB,KAAAy9C,kBAAA9wB,EAAA/qB,EAAAwM,QACG,aAAAD,EAAAi/B,SAAA,CACH,MAAAliB,EAAA4vB,EAAA,QAAA2B,gBAAAtuC,EAAA6+B,aAAA,YACA7+B,EAAAwiB,YAAAzF,GACAlrB,KAAA09C,oBAAAxyB,EACAtpB,EAAAwM,KAUA25B,EAAA7nC,UAAAs9C,uBAAA,SAAAxQ,GACA,MAAArgB,EAAAmuB,EAAA,QAAA2B,gBAAAzP,EAAA,eAKA,OAJArgB,EAAAte,aAAA,eACAse,EAAAte,aAAA,UACAse,EAAAte,aAAA,UAEAse,GAUAob,EAAA7nC,UAAAu9C,kBAAA,SAAAtvC,EAAAhD,EAAAiD,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACA88C,EAAA7xC,EAAA,KACArK,EAAAqK,EAAA,QAEAqhB,EAAAhiB,EAAA0hB,iBACApI,EAAA0I,EAAAtsB,OACA6hB,EAAA,IAAAliB,MAAAikB,GACA,IAAApF,EACA,QAAA7Q,EAAA,EAAiBA,EAAAiW,IAASjW,EAC1B6Q,EAAA8N,EAAA3e,GACAkU,EAAAlU,GAAAxO,KAAA49C,WAAAv+B,EAAA5d,EAAAk8C,GAEAX,EAAA,EAAAvsB,oBAAAtiB,EAAAuU,EAAAtO,KAAA,OAUA2zB,EAAA7nC,UAAAw9C,oBAAA,SAAAvvC,EAAA0vC,EAAAzvC,GACA,MAAA4sB,EAAA8f,EAAA,QAAA2B,gBAAAtuC,EAAA6+B,aACA,qBACA7+B,EAAAwiB,YAAAqK,GACAh7B,KAAAu9C,wBAAAviB,EAAA6iB,EAAAzvC,IAUA25B,EAAA7nC,UAAA49C,uBAAA,SAAA3vC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACA88C,EAAA7xC,EAAA,KACArK,EAAAqK,EAAA,QAIA,GAHA,iBAAAqC,EAAAi/B,UAAA3rC,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,YAAA0M,EAAAi/B,UAAA,iBAAAj/B,EAAAi/B,SAAA,CACA,MAAAztB,EAAA/d,EAAAm8C,iBACAjD,EAAA,QAAAoC,qBACO/uC,OAAAwvC,OAAAl8C,WACPsmC,EAAAiW,kBACAh+C,KAAAi+C,mBACAt+B,EAAAvR,OAAAtK,EAAA9D,WACG,eAAAmO,EAAAi/B,SAAA,CACH,MAAA8Q,EAAApD,EAAA,QAAA2B,gBAAAtuC,EAAA6+B,aAAA,WACA7+B,EAAAwiB,YAAAutB,GACAl+C,KAAAm+C,qBACAD,EAAAt8C,EAAAwM,KAYA25B,EAAA7nC,UAAA+9C,mBAAA,SAAA9yC,EAAAiD,EAAAiuC,GACA,MAAAvwC,EAAAsC,IAAAvN,OAAA,GACAu9C,EAAAtyC,EAAAqC,KACAkwC,EAAAvyC,EAAA,gBAIA,YAHAhI,IAAAu6C,IACAvyC,EAAA,oBAEAgvC,EAAA,QAAA2B,gBAAA2B,EAAApR,kBACAlpC,IAAAu6C,EAAA,sCAUAtW,EAAA7nC,UAAAi+C,qBAAA,SAAAhwC,EAAAyR,EAAAxR,GACA,MAAA4sB,EAAA8f,EAAA,QAAA2B,gBAAAtuC,EAAA6+B,aAAA,gBACA7+B,EAAAwiB,YAAAqK,GACAh7B,KAAA89C,uBAAA9iB,EAAApb,EAAAxR,IAUA25B,EAAA7nC,UAAAo+C,WAAA,SAAAnwC,EAAAyhC,EAAAxhC,GACA,MAAAmwC,EAAAzD,EAAA,QAAA2B,gBAAAtuC,EAAA6+B,aAAA,cACA7+B,EAAAwiB,YAAA4tB,GACAv+C,KAAAw+C,iBAAAD,EAAA3O,EAAAxhC,IAWA25B,EAAA7nC,UAAA09C,WAAA,SAAAv+B,EAAA7d,EAAAi9C,GACA,IAAAtD,EAAA,MACA35C,IACA25C,EAAAx6C,OAAA06C,EAAA,IAAA16C,CAAAa,GAAA85C,sBAEA,IAAAG,EAAA,OAAAN,EAAAO,OAAA,KACAr8B,EAAA,OAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,GACA,GAAAo/B,EAAA,CAGAhD,GAAA,KADAp8B,EAAA,OAIA,OAAAo8B,GAUA1T,EAAA7nC,UAAAw+C,6BAAA,SAAAvwC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACA88C,EAAA7xC,EAAA,KACArK,EAAAqK,EAAA,QACA6yC,EAAA7yC,EAAA,MACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAyrB,EAAAtrB,EAAAiyB,iBACAinB,EAAA,QAAAoC,qBAAgC/uC,OAAAwvC,OAAAl8C,UAAAk9C,SAChC5W,EAAA6W,qCACA5+C,KAAA6+C,mCAAA3xB,EACA9e,OAAAtK,EAAA9D,OAUA+nC,EAAA7nC,UAAA4+C,YAAA,SAAA3wC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACA88C,EAAA7xC,EAAA,KACArK,EAAAqK,EAAA,QACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAkrB,EAAA3sB,KAAAw9C,uBAAArvC,EAAA6+B,cACA7+B,EAAAwiB,YAAAhE,GACA,MAAAtN,EAAAzd,EAAAirB,iBACAkyB,EAAA/+C,KAAA49C,WAAAv+B,EAAA5d,EAAAk8C,GACAX,EAAA,EAAAvsB,oBAAA9D,EAAAoyB,IAUAhX,EAAA7nC,UAAA8+C,iBAAA,SAAA7wC,EAAAvM,EACAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACA88C,EAAA7xC,EAAA,KACArK,EAAAqK,EAAA,QACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAA0rB,EAAAvrB,EAAA0zB,YACAwlB,EAAA,QAAAoC,qBAAgC/uC,OAAAwvC,OAAAl8C,WAChCsmC,EAAAkX,yBACAnE,EAAA,QAAAqC,sBAAA,eAAAhwB,EACA/e,OAAAtK,EAAA9D,OAUA+nC,EAAA7nC,UAAAg/C,kBAAA,SAAA/wC,EAAAkR,EAAAjR,GACA,MAAA4sB,EAAA8f,EAAA,QAAA2B,gBAAAtuC,EAAA6+B,aAAA,SACA7+B,EAAAwiB,YAAAqK,GACAh7B,KAAA8+C,YAAA9jB,EAAA3b,EAAAjR,IAUA25B,EAAA7nC,UAAAi/C,8BAAA,SAAAhxC,EAAA0vC,EAAAzvC,GACA,MAAA4sB,EAAAh7B,KAAAo8C,uBAAAyB,EAAAzvC,GACA4sB,IACA7sB,EAAAwiB,YAAAqK,GACAh7B,KAAAu9C,wBAAAviB,EAAA6iB,EAAAzvC,KAWA25B,EAAA7nC,UAAAs+C,iBAAA,SAAArwC,EAAAvM,EAAAwM,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QACAY,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAkrB,EAAA3sB,KAAAw9C,uBAAArvC,EAAA6+B,cACA7+B,EAAAwiB,YAAAhE,GACA3sB,KAAAy9C,kBAAA9wB,EAAA/qB,EAAAwM,IAUA25B,EAAA7nC,UAAAk/C,4BAAA,SAAAjxC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACA88C,EAAA7xC,EAAA,KACArK,EAAAqK,EAAA,QACAywC,EAAAzwC,EAAA,QACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAue,EAAApe,EAAAo2B,cACA8iB,EAAA,QAAAoC,qBAAgC/uC,OAAAwvC,OAAAl8C,UAAA86C,WAChCxU,EAAAsX,oCACAr/C,KAAA6+C,mCAAA7+B,EACA5R,OAAAtK,EAAA9D,OAUA+nC,EAAA7nC,UAAAo/C,6BAAA,SAAAnxC,EAAAyR,EAAAxR,GACA,MAAA4sB,EAAAh7B,KAAAo8C,uBACAx8B,EAAAxR,GACA4sB,IACA7sB,EAAAwiB,YAAAqK,GACAh7B,KAAA89C,uBAAA9iB,EAAApb,EAAAxR,KAWA25B,EAAA7nC,UAAAq/C,cAAA,SAAApxC,EAAA5M,EAAA6M,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QACAY,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MACA46B,GAAA96B,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,IACAu5C,EAAA,QAAAoC,qBACM/uC,QAAW45B,EAAAyX,sBACjB1E,EAAA,QAAA2E,6BACApjB,EACAjuB,GANA,6BAMApO,OASA+nC,EAAAuV,uBACAlN,8BACAsP,MAAA5E,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAq9C,yBACAoC,WAAA7E,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAw+C,8BACA/jC,MAAAmgC,EAAA,QAAAgC,kBAAA/U,EAAA7nC,UAAA4+C,aACA9jC,WAAA8/B,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAA8+C,kBACAxkC,WAAAsgC,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAq9C,yBACAxiC,gBAAA+/B,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAw+C,8BACAn2B,WAAAuyB,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAs+C,kBACA3jC,QAAAigC,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAA49C,wBACA7iC,aAAA6/B,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAk/C,6BACAQ,QAAA9E,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAA49C,wBACA+B,aAAA/E,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAk/C,6BACAU,SAAAhF,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAq/C,iBASAxX,EAAAiW,mBACA5N,8BACA8L,gBAAApB,EAAA,QAAAgC,kBAAA/U,EAAA7nC,UAAAo+C,YACArC,gBAAAnB,EAAA,QAAAgC,kBAAA/U,EAAA7nC,UAAAo+C,cASAvW,EAAAkX,0BACA7O,8BACAC,YAAAyK,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAg/C,qBASAnX,EAAA6W,sCACAxO,8BACAG,iBAAAuK,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAi/C,+BACAY,YAAAjF,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAi/C,iCAaApX,EAAA7nC,UAAA2+C,mCAAA,SAAA1zC,EAAAiD,EAAAiuC,GACA,MAAA+B,EAAAhwC,IAAAvN,OAAA,GAAAsN,KACA,OAAA2sC,EAAA,QAAA2B,gBAAA,6BACA1U,EAAAiY,kCAAA5B,EAAAhR,YAQArF,EAAAiY,mCACAjlC,gBAAA,mBACA4kC,WAAA,cACA1kC,aAAA,gBACA4kC,aAAA,iBASA9X,EAAAsX,qCACAjP,8BACA6P,cAAAnF,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAo/C,8BACA7O,cAAAqK,EAAA,QAAAgC,kBACA/U,EAAA7nC,UAAAo/C,gCASAvX,EAAAyX,uBACApP,8BACA8P,YAAApF,EAAA,QAAAgC,kBAAAE,EAAA,EAAAvsB,qBACA0vB,YAAArF,EAAA,QAAAgC,kBAAAE,EAAA,EAAAvsB,uBAGApqB,EAAA,6FCtwBAC,EAAA,KACAA,EAAA,KACA,QAAAA,EAAA,QAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,yDAZA,IAAMC,KAgBNA,EAAQY,OAASC,QAAQD,OAAO,UAC9BG,EAAAL,QAAQE,OAAOK,KACfmP,EAAA1P,QAAgBO,OAGlBjB,EAAQ65C,SAAS,eAAgB,QACjC75C,EAAQ65C,SAAS,sBAAuB,yCAOxC75C,EAAQ85C,eAAiB,WAMvBrgD,KAAKoI,IAAM,IAAAI,EAAAvB,SACT0G,QACE,IAAA4uB,EAAAt1B,SACEygB,OAAQ,IAAA44B,EAAAr5C,WAGZ+N,KAAM,IAAAurC,EAAAt5C,SACJu5C,QAAS,EAAG,GACZC,KAAM,OAMZl6C,EAAQY,OAAO2P,WAAW,iBAAkBvQ,EAAQ85C,0BAGrC95C,wGCnDf,QAAAD,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAPA,IAAMC,GAgBNA,QAAkB,SAAS3E,GACzB,IAAI8+C,SAaJ,OAZI9+C,wBACF8+C,EAAY,IAAAjhC,EAAAxY,aACFguB,YAAYrzB,GACbA,wBACT8+C,EAAY,IAAAvhC,EAAAlY,aACFmrB,iBAAiBxwB,GAClBA,wBACT8+C,EAAY,IAAAtgC,EAAAnZ,aACF+uB,cAAcp0B,GAExB8+C,EAAY9+C,EAEP8+C,GAOTn6C,SAAmB,WACjB,OAAiD,GAA1Co6C,UAAUC,UAAUn/B,QAAQ,YAA6D,GAA1Ck/B,UAAUC,UAAUn/B,QAAQ,WASpFlb,iBAA2B,SAASs6C,GAClC,OAAqB,GAAdA,EAAIhgD,OAAJ,IAAsBggD,EAAQA,GAQvCt6C,cAAwB,SAASu6C,GAC/B,IAAMC,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRp8B,EAAIo8B,EAAI,GACd,GAAIC,IAAU,IAAJA,IAAYC,IAAU,IAAJA,IAAYt8B,IAAU,IAAJA,GAC5C,MAAMu8B,WAAWF,EAAX,IAAgBC,EAAhB,IAAqBt8B,EAArB,+BAKR,UAHane,EAAQ26C,iBAAiBH,EAAEz6B,SAAS,KACpC/f,EAAQ26C,iBAAiBF,EAAE16B,SAAS,KACpC/f,EAAQ26C,iBAAiBx8B,EAAE4B,SAAS,MASnD/f,kBAA4B,SAAS+tC,GACnC,IAAM6M,KACN,GAAI7M,EAAa,CACf,IAAM8M,EAAQ9M,EAAY/1B,UAAU,GAAG/I,MAAM,KAD9BwxB,GAAA,EAAAC,GAAA,EAAAC,OAAApjC,EAAA,IAEf,QAAAqjC,EAAAC,EAAmBga,EAAnB/Z,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA0B,KAAfqa,EAAela,EAAAh8B,MAClBm2C,EAAgBD,EAAK5/B,QAAQ,KACnC,GAAI6/B,GAAiB,EAAG,CACtB,IAAM95C,EAAO65C,EAAK9iC,UAAU,EAAG+iC,GACzBn2C,EAAQk2C,EAAK9iC,UAAU+iC,EAAgB,GAC7CH,EAAUv+B,mBAAmBpb,IAASob,mBAAmBzX,QAEzDg2C,EAAUE,GAAQ,IATP,MAAA3Z,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,IAajB,OAAOia,GAQT56C,kBAA4B,SAAS46C,GACnC,IAAMI,KACN,IAAK,IAAM56C,KAAOw6C,EAAW,CAC3B,IAAMh2C,EAAQg2C,EAAUx6C,GACxB46C,EAAU16C,KAAQqW,mBAAmBvW,GAArC,IAA6CuW,mBAAmB/R,IAElE,OAAOo2C,EAAUntC,KAAK,MASxB7N,gBAA0B,SAASi7C,GACjC,OAAOC,EAAAx6C,QAAkBy6C,eAAeF,IAAUC,EAAAx6C,QAAkB06C,YAAYH,eAInEj7C,+FC5Gbyb,MAAO,IAKP4/B,MAAO,IAKPv/B,UAAW,IAKXC,aAAc,IAKdf,QAAS,IAKTsgC,KAAM,IAKNr/B,WAAY,IAKZP,QAAS,IAKT6/B,OAAQ,IAKRv/B,aAAc,IAKdL,KAAM,IAKNC,OAAQ,uFCzDV,IAAM5b,EAAU,aAUhBA,EAAQrG,UAAU6hD,YAAc,SAAS3mB,KAWzC70B,EAAQrG,UAAU8hD,KAAO,SAAS7nB,GACbn6B,KAAKiiD,kBAAkB9nB,GAC/BpzB,QAAQ/G,KAAK+hD,YAAa/hD,OAUvCuG,EAAQrG,UAAUo7B,MAAQ,SAASF,GACjCp7B,KAAKgiD,KAAKhiD,KAAKiiD,kBAAkB7mB,EAAS70B,EAAQ+9B,KAAK4d,SASzD37C,EAAQrG,UAAUiiD,KAAO,SAAS/mB,GAChCp7B,KAAKgiD,KAAKhiD,KAAKiiD,kBAAkB7mB,EAAS70B,EAAQ+9B,KAAK+T,eASzD9xC,EAAQrG,UAAUkiD,QAAU,SAAShnB,GACnCp7B,KAAKgiD,KAAKhiD,KAAKiiD,kBAAkB7mB,EAAS70B,EAAQ+9B,KAAK+d,WASzD97C,EAAQrG,UAAUy3C,KAAO,SAASvc,GAChCp7B,KAAKgiD,KAAKhiD,KAAKiiD,kBAAkB7mB,EAAS70B,EAAQ+9B,KAAKge,WAezD/7C,EAAQrG,UAAU+hD,kBAAoB,SAAS9nB,EAAQooB,GACrD,IAAMC,KACFC,EAAY,KACVC,EAAcn8C,EAAQ+9B,KAAK+T,YAiCjC,MA/BsB,iBAAXle,EACTqoB,EAAW37C,MACTqxC,IAAK/d,EACL9mB,UAAmBvP,IAAby+C,EAAyBA,EAAWG,IAEnCliD,MAAM+c,QAAQ4c,GACvBA,EAAOpzB,QAAQ,SAACmxC,GACQ,iBAAX/d,EACTsoB,GACEvK,IAAKA,EACL7kC,UAAmBvP,IAAby+C,EAAyBA,EAAWG,IAG5CD,EAAYvK,OACKp0C,IAAby+C,IACFE,EAAUpvC,KAAOkvC,IAGrBC,EAAW37C,KAAK47C,IACfziD,OAEHyiD,EAAYtoB,OACKr2B,IAAby+C,IACFE,EAAUpvC,KAAOkvC,QAEIz+C,IAAnB2+C,EAAUpvC,OACZovC,EAAUpvC,KAAOqvC,GAEnBF,EAAW37C,KAAK47C,IAGXD,GAQTj8C,EAAQ+9B,MAKN4d,MAAO,QAKP7J,YAAa,cAKbgK,QAAS,UAKTC,QAAS,qBAII/7C,mCC1Jf,MAAAo8C,KAcAA,EAAAC,SAAA,SAAAz0C,GACA,OAAAA,EAAA6/B,eARA,+BAQA,SAEA3nC,EAAA,iJCAA,MAAAw8C,EAAA,SAAAthD,EAAAuhD,EAAAC,EAAAC,EAAA10B,EAAA20B,GAEAC,EAAA,EAAA3iD,KAAAP,KAAAuB,EAAAuhD,EAAAC,EAAAI,EAAA,EAAAC,MAMApjD,KAAAqjD,KAAAL,EAMAhjD,KAAAsjD,OAAA,IAAAC,MACA,OAAAj1B,IACAtuB,KAAAsjD,OAAAh1B,eAOAtuB,KAAAwjD,mBAAA,KAMAxjD,KAAA+/B,MAAAojB,EAAA,EAAAC,KAMApjD,KAAAyjD,mBAAAR,GAIAtiD,OAAAG,EAAA,SAAAH,CAAAkiD,EAAAK,EAAA,GAOAL,EAAA3iD,UAAAoc,SAAA,WACA,OAAAtc,KAAAsjD,QASAT,EAAA3iD,UAAAwjD,kBAAA,WACA1jD,KAAA+/B,MAAAojB,EAAA,EAAAjB,MACAliD,KAAA2jD,iBACA3jD,KAAAqyB,WASAwwB,EAAA3iD,UAAA0jD,iBAAA,gBACA9/C,IAAA9D,KAAA8iD,aACA9iD,KAAA8iD,WAAAniD,OAAAkjD,EAAA,UAAAljD,CAAAX,KAAAuB,QAAAvB,KAAAsjD,OAAAQ,QAEA9jD,KAAA+/B,MAAAojB,EAAA,EAAAY,OACA/jD,KAAA2jD,iBACA3jD,KAAAqyB,WAWAwwB,EAAA3iD,UAAA8jD,KAAA,WACAhkD,KAAA+/B,OAAAojB,EAAA,EAAAC,MAAApjD,KAAA+/B,OAAAojB,EAAA,EAAAjB,QACAliD,KAAA+/B,MAAAojB,EAAA,EAAAc,QACAjkD,KAAAqyB,UACAryB,KAAAwjD,oBACAU,EAAA,QAAAC,WAAAnkD,KAAAsjD,OAAAx4C,EAAA,EAAAo3C,MACAliD,KAAA0jD,kBAAA1jD,MACAkkD,EAAA,QAAAC,WAAAnkD,KAAAsjD,OAAAx4C,EAAA,EAAAs5C,KACApkD,KAAA4jD,iBAAA5jD,OAEAA,KAAAyjD,mBAAAzjD,UAAAqjD,QAQAR,EAAA3iD,UAAAmkD,SAAA,SAAAljC,GACAnhB,KAAAsjD,OAAAniC,GASA0hC,EAAA3iD,UAAAyjD,eAAA,WACA3jD,KAAAwjD,mBAAAz8C,QAAAm9C,EAAA,QAAAh9C,eACAlH,KAAAwjD,mBAAA,MAEA,IAAAc,EAAA,iEC5GA,MAAAC,EAAA,SAAAl3C,GAEA,MAAAC,EAAAD,MAEAm3C,EAAA,QAAAjkD,KAAAP,MACAouB,aAAA9gB,EAAA8gB,aACAT,WAAArgB,EAAAqgB,WACA82B,YAAAn3C,EAAAm3C,cAOAzkD,KAAA0kD,kBACA5gD,IAAAwJ,EAAAghB,YAAAhhB,EAAAghB,YAAA,KAMAtuB,KAAA2kD,KAAAr3C,EAAA+G,IAMArU,KAAAyjD,wBAAA3/C,IAAAwJ,EAAA21C,kBACA31C,EAAA21C,kBAAAuB,EAAA,QAAAI,yBAMA5kD,KAAA6kD,QAAAv3C,EAAArM,WAMAjB,KAAA8kD,MAAA,EACA9kD,KAAA+kD,aAMA/kD,KAAAglD,YAAkE13C,EAAA,WAMlEtN,KAAAilD,YAAAnhD,IAAAwJ,EAAA43C,OAAA53C,EAAA43C,MAMAllD,KAAAsjD,OAAA,KAMAtjD,KAAAmlD,YAAA,KAMAnlD,KAAAolD,kBAAA,EAMAplD,KAAAqlD,YAAAvhD,IAAAwJ,EAAAg4C,MAAAh4C,EAAAg4C,MAAA,KAIA3kD,OAAAG,EAAA,SAAAH,CAAA4jD,EAAAC,EAAA,SAQAD,EAAAgB,4BAAA,SAiBAhB,EAAArkD,UAAAslD,qBAAA,SAAAl4B,EAAAw1B,EAAAn1B,EAAA1sB,GACA,QAAA6C,IAAA9D,KAAA2kD,KACA,OAEA,MAAAc,EAAA9kD,OAAAy6C,EAAA,IAAAz6C,CAAAgtB,GACA+3B,EAAA1lD,KAAAsV,gBAEAowC,OAAAD,IACA3C,EAAA6C,EAAA,EAAAC,0BAAAF,EAAAD,EAAAn4B,EAAAw1B,GACAx1B,EAAA3sB,OAAAy6C,EAAA,UAAAz6C,CAAA2sB,EAAAm4B,EAAAC,IAGA,MAAAnkD,EAAAZ,OAAAkjD,EAAA,kBAAAljD,CAAA2sB,EAAAw1B,EAAA,EACAyB,EAAAgB,4BAEAM,GACArR,QAAA,MACAC,QAAAqR,EAAA,EACApR,QAAA,iBACAjD,OAAA,YACA8C,aAAA,EACAwR,aAAA/lD,KAAA6kD,QAAA,QAEAlkD,OAAAqlD,EAAA,OAAArlD,CAAAklD,EAAA7lD,KAAA6kD,QAAA5jD,GAEA,MAAA+jB,EAAAtD,KAAAwD,OAAAoI,EAAA,GAAA/rB,EAAA,IAAAuhD,GACA79B,EAAAvD,KAAAwD,OAAA3jB,EAAA,GAAA+rB,EAAA,IAAAw1B,GAIA,OAHA+C,EAAA7lD,KAAA8kD,KAAA,SAAA9/B,EACA6gC,EAAA7lD,KAAA8kD,KAAA,SAAA7/B,EAEAjlB,KAAAimD,eACA1kD,EAAAgjD,EAAAgB,2BACA,EAAAG,GAAAD,EAAAI,IAUAtB,EAAArkD,UAAAm1C,UAAA,WACA,OAAAr1C,KAAA6kD,SAOAN,EAAArkD,UAAAgmD,iBAAA,SAAA3kD,EAAAuhD,EAAAC,EAAAp1B,GAEA,QAAA7pB,IAAA9D,KAAA2kD,KACA,YAGA7B,EAAA9iD,KAAAmmD,sBAAArD,GAEA,GAAAC,GAAA/iD,KAAAilD,aAAAnhD,IAAA9D,KAAAglD,cACAjC,EAAA,GAGA,MAAAqD,EAAAtD,EAAAC,EAEAvC,EAAA7/C,OAAAkjD,EAAA,UAAAljD,CAAAY,GACA8kD,EAAA3kC,KAAA4kC,KAAA3lD,OAAAkjD,EAAA,SAAAljD,CAAAY,GAAA6kD,GACAG,EAAA7kC,KAAA4kC,KAAA3lD,OAAAkjD,EAAA,UAAAljD,CAAAY,GAAA6kD,GACAI,EAAA7lD,OAAAkjD,EAAA,kBAAAljD,CAAA6/C,EAAA4F,EAAA,GACAC,EAAAE,IACAE,EAAA/kC,KAAA4kC,KAAAtmD,KAAAqlD,OAAA1kD,OAAAkjD,EAAA,SAAAljD,CAAAY,GAAA6kD,GACAM,EAAAhlC,KAAA4kC,KAAAtmD,KAAAqlD,OAAA1kD,OAAAkjD,EAAA,UAAAljD,CAAAY,GAAA6kD,GACAO,EAAAhmD,OAAAkjD,EAAA,kBAAAljD,CAAA6/C,EAAA4F,EAAA,GACAK,EAAAC,IAEAvlC,EAAAnhB,KAAAsjD,OACA,GAAAniC,GACAnhB,KAAAolD,mBAAAplD,KAAA2yB,eACAxR,EAAA6zB,iBAAA8N,GACA3hC,EAAAylC,iBAAA7D,GACApiD,OAAAkjD,EAAA,eAAAljD,CAAAwgB,EAAA4H,YAAAy9B,GACA,OAAArlC,EAGA,MAAAlgB,GACAuzC,QAAA,MACAC,QAAAqR,EAAA,EACApR,QAAA,SACAjD,OAAA,YACA8C,aAAA,GAEA5zC,OAAAqlD,EAAA,OAAArlD,CAAAM,EAAAjB,KAAA6kD,SAEA7kD,KAAAmlD,WAAA,GAAAzjC,KAAAC,MAAAhhB,OAAAkjD,EAAA,SAAAljD,CAAAgmD,GAAAP,GACApmD,KAAAmlD,WAAA,GAAAzjC,KAAAC,MAAAhhB,OAAAkjD,EAAA,UAAAljD,CAAAgmD,GAAAP,GAEA,MAAA/xC,EAAArU,KAAAimD,eAAAU,EAAA3mD,KAAAmlD,WAAApC,EACAp1B,EAAA1sB,GAUA,OARAjB,KAAAsjD,OAAA,IAAAgB,EAAAqC,EAAA7D,EAAAC,EACA1uC,EAAArU,KAAA0kD,aAAA1kD,KAAAyjD,oBAEAzjD,KAAAolD,kBAAAplD,KAAA2yB,cAEAuxB,EAAA,QAAAr7C,OAAA7I,KAAAsjD,OAAAx4C,EAAA,EAAAqe,OACAnpB,KAAA6mD,kBAAA7mD,MAEAA,KAAAsjD,QAUAiB,EAAArkD,UAAA4mD,qBAAA,WACA,OAAA9mD,KAAAyjD,oBAaAc,EAAArkD,UAAA+lD,eAAA,SAAA1kD,EAAA2T,EAAA6tC,EAAAp1B,EAAA1sB,GAUA,GARAN,OAAAC,EAAA,EAAAD,MAAAmD,IAAA9D,KAAA2kD,KAAA,GAEA1jD,EAAAjB,KAAA8kD,KAAA,aAAAn3B,EAAApY,UAEA,WAAAvV,KAAA6kD,UACA5jD,EAAA,WAGA,GAAA8hD,EACA,OAAA/iD,KAAAglD,aACA,KAAA+B,EAAA,EAAArb,UACA,MAAAsb,EAAA,GAAAjE,EAAA,KACA,mBAAA9hD,EACAA,EAAA,wBAAwC+lD,EAExC/lD,EAAA,sBAAA+lD,EAEA,MACA,KAAAD,EAAA,EAAA5iB,UACAljC,EAAA,kBAAA8hD,EACA,MACA,KAAAgE,EAAA,EAAAE,gBACA,KAAAF,EAAA,EAAAG,KACAjmD,EAAA,OAAA8hD,EACA,MACA,QACApiD,OAAAC,EAAA,EAAAD,EAAA,KAKAM,EAAA,MAAAiU,EAAA,GACAjU,EAAA,OAAAiU,EAAA,GAEA,MAAAimC,EAAAxtB,EAAA2tB,qBACA,IAAA/1C,EAQA,OANAA,EADAvF,KAAA8kD,MAAA,MAAA3J,EAAAO,OAAA,MACAn6C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAA,EAEAN,EAAA,KAAAsE,EAAA6O,KAAA,KAEAzT,OAAA4sC,EAAA,aAAA5sC,CAAwCX,KAAA,KAAAiB,IASxCsjD,EAAArkD,UAAAinD,OAAA,WACA,OAAAnnD,KAAA2kD,MASAJ,EAAArkD,UAAAknD,qBAAA,SACAnE,GACAjjD,KAAAsjD,OAAA,KACAtjD,KAAAyjD,mBAAAR,EACAjjD,KAAAqyB,WASAkyB,EAAArkD,UAAAmnD,OAAA,SAAAhzC,GACAA,GAAArU,KAAA2kD,OACA3kD,KAAA2kD,KAAAtwC,EACArU,KAAAsjD,OAAA,KACAtjD,KAAAqyB,YAUAkyB,EAAArkD,UAAA4xC,aAAA,SAAA7wC,GACAN,OAAAqlD,EAAA,OAAArlD,CAAAX,KAAA6kD,QAAA5jD,GACAjB,KAAA+kD,aACA/kD,KAAAsjD,OAAA,KACAtjD,KAAAqyB,WAOAkyB,EAAArkD,UAAA6kD,WAAA,WACA,MAAAuC,EAAAtnD,KAAA6kD,QAAA,SAAAiB,EAAA,EACA9lD,KAAA8kD,KAAAr1B,EAAA,QAAA83B,gBAAAD,EAAA,WAEAjhD,EAAA,sLCnXAmhD,EAAAlhD,EAAA,GA6BA,MAAAmhD,EAAA,SAAAp6C,GACA,MAAAC,EAAAD,MAMArN,KAAA0nD,aAAAp6C,EAAA4B,YAMAlP,KAAAuN,WAAAD,EAAAyF,UAMA/S,KAAAwN,WAAAF,EAAA26B,UACA36B,EAAA26B,UAAA,IAAA0f,EAAA,QAMA3nD,KAAAg7C,gBAAA1tC,EAAAk/B,eACAl/B,EAAAk/B,eACAib,EAAAG,iBAAAH,EAAAI,iBAEAC,EAAA,EAAAvnD,KAAAP,OAGAW,OAAAkN,EAAA,SAAAlN,CAAA8mD,EAAAK,EAAA,GAOAL,EAAAM,eAAA,UAOAN,EAAAO,MAAA,gCAOAP,EAAAQ,MAAA,6BAOAR,EAAAS,MAAA,6BAOAT,EAAAU,MAAA,6BAOAV,EAAAG,kBACAQ,QAAA,0EAEAC,QAAA,2EASAZ,EAAAI,gBAAA,QAMAJ,EAAAvnD,UAAAooD,eAAA,WACA,OAAAtoD,KAAA0nD,cAOAD,EAAAvnD,UAAAqoD,eAAA,SAAAr5C,GACAlP,KAAA0nD,aAAAx4C,GAaAu4C,EAAAvnD,UAAA0P,aAMA63C,EAAAvnD,UAAA2P,qBAAA,SAAA1B,EAAAd,GACA,MAAAvB,GACAoD,YAAAlP,KAAA0nD,aACA30C,UAAA/S,KAAAuN,YAEA5M,OAAA6nD,EAAA,OAAA7nD,CAAAmL,EAAA9L,KAAA+P,eAAA5B,EAAAd,QACA,MAAAe,GAAAtC,GACA9L,KAAAwN,WAAAmC,2BAAA84C,EAAA,EAAAhc,OACA,cACA+a,EAAA,QAAAp4C,gBAAAq5C,EAAA,EAAAvoD,UAAA0sC,sBACA,IAAAhgC,EAAA46C,EAAA,QAAA/3C,mBACAzP,KAAAwN,WAAAmC,2BAAAxB,EACAC,EAAApO,KAAAwN,YAIA,OAHAZ,IACAA,MAEAA,GAWA66C,EAAAvnD,UAAAwoD,wBAAA,SAAAhhC,GACA,GAAA8/B,EAAA,QAAA5lB,WAAAla,GACA,OAAA1nB,KAAA2oD,oCAC0B,GACvB,GAAAnB,EAAA,QAAA1lB,OAAApa,GACH,OAAA1nB,KAAA4oD,gCAAgE,GAC7D,oBAAAlhC,EAAA,CACH,MAAAsa,EAAAwlB,EAAA,QAAA13B,MAAApI,GACA,OAAA1nB,KAAA2oD,oCAAA3mB,KAeAylB,EAAAvnD,UAAA2oD,8BAAA,SAAAnhC,GACA,GAAA8/B,EAAA,QAAA5lB,WAAAla,GACA,OAAA1nB,KAAA8oD,0CAC0B,GACvB,GAAAtB,EAAA,QAAA1lB,OAAApa,GACH,OAAA1nB,KAAA+oD,sCACsB,GACnB,oBAAArhC,EAAA,CACH,MAAAsa,EAAAwlB,EAAA,QAAA13B,MAAApI,GACA,OAAA1nB,KAAA8oD,0CAAA9mB,KAYAylB,EAAAvnD,UAAA4oD,0CAAA,SAAA9mB,GACA,QAAA5M,EAAA4M,EAAAE,WAA8B9M,EAAGA,IAAA+M,YACjC,GAAA/M,EAAAzmB,UAAAC,KAAAC,aACA,OAAA7O,KAAA+oD,sCAAA3zB,IAYAqyB,EAAAuB,6BACA5Y,8BACA6Y,UAAAzB,EAAA,QAAA0B,yBACAT,EAAA,EAAAvoD,UAAAwtC,oBAAA,YAUA+Z,EAAAvnD,UAAA6oD,sCAAA,SAAA56C,GACA,MAAAyW,KACAzZ,EAAAg+C,EAAA,EAAAh5B,6BACAhiB,EAAAy/B,aAAA,qBAEA,OADAhpB,EAAA,iBAAAzZ,EACAq8C,EAAA,QAAA/3C,gBAC+C,EAC/Cg4C,EAAAuB,4BAAA76C,KAAAnO,KAAAwN,aASAi6C,EAAA2B,8BACAC,8BACAC,cAAA9B,EAAA,QAAA0B,yBACAC,EAAA,EAAAj5B,wBACAq5B,aAAA/B,EAAA,QAAA0B,yBACAC,EAAA,EAAAj5B,wBACAs5B,aAAAhC,EAAA,QAAA0B,yBACAC,EAAA,EAAAj5B,0BAWAu3B,EAAAgC,wBAAA,SAAAt7C,EAAAC,GACA,OAAAo5C,EAAA,QAAA/3C,mBACMg4C,EAAA2B,6BAAAj7C,EAAAC,IASNq5C,EAAAiC,kBACAC,8BACAC,UAAApC,EAAA,QAAAp4C,gBAAA,SAAAjB,EAAAC,GACA,OAAAD,EAAAy/B,aAAA,WAWA6Z,EAAAoC,WAAA,SAAA17C,EAAAC,GACAo5C,EAAA,QAAArY,UAAAsY,EAAAiC,iBAAAv7C,EAAAC,IASAq5C,EAAAqC,yBACAT,8BACAU,QAAAtC,EAAAoC,aAWApC,EAAAuC,mBAAA,SAAA77C,EAAAC,GACA,OAAAo5C,EAAA,QAAA/3C,mBACAg4C,EAAAqC,wBAAA37C,EAAAC,IASAq5C,EAAAwC,+BACAZ,8BACAa,mBAAA1C,EAAA,QAAA0B,yBACAzB,EAAAgC,wBAAA,sBACAU,cAAA3C,EAAA,QAAA0B,yBACAzB,EAAAuC,mBAAA,eASAvC,EAAAvnD,UAAAyoD,oCAAA,SAAA3mB,GACA,QAAA5M,EAAA4M,EAAAE,WAA8B9M,EAAGA,IAAA+M,YACjC,GAAA/M,EAAAzmB,UAAAC,KAAAC,aACA,OAAA7O,KAAA4oD,gCAAAxzB,IAWAqyB,EAAAvnD,UAAA0oD,gCAAA,SAAAz6C,GACA,OAAAq5C,EAAA,QAAA/3C,mBAEAg4C,EAAAwC,8BAAA97C,OAQAs5C,EAAA2C,oBACAf,8BACAgB,aAAA7C,EAAA,QAAA1K,kBAAAqM,EAAA,EAAA14B,uBAWAg3B,EAAA6C,cAAA,SAAAn8C,EAAA3B,EAAA4B,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAqO,EAAApD,EAAA,YACAiH,EAAAjH,EAAA,UACAy+C,EAAAz+C,EAAA,WACAkvB,EAAAwsB,EAAA,QAAA/K,gBAAA1pC,EAAA7D,GACAf,EAAAwiB,YAAAqK,GACA,IAAAuvB,EACA98C,EAAA,QAAAvN,UAAAw8C,oBAAA1hB,EAAAxuB,EAAA4B,GAEAu5C,EAAA,QAAAznD,UAAAw8C,oBAAA1hB,EAAAxuB,EAAA4B,IAWAq5C,EAAA+C,mBAAA,SAAAr8C,EAAA4/B,EAAA3/B,GACA,MAAAgd,EAAAo8B,EAAA,QAAA/K,gBAAAgL,EAAAQ,MAAA,UACAjtB,EAAAwsB,EAAA,QAAA/K,gBAAAgL,EAAAQ,MAAA,aACA78B,EAAAuF,YAAAqK,GACAA,EAAA3sB,aAAA,MAAA0/B,GACA5/B,EAAAwiB,YAAAvF,IAUAq8B,EAAAgD,aAAA,SAAAz3C,EAAA9D,GAGA,MAAA+9B,GAFAj6B,KACAy0C,EAAAM,gBACA,IAEA,WAAA74C,EAAAuS,QAAAwrB,GACA/9B,EAEA+9B,EAAA/9B,GAWAu4C,EAAAiD,aAAA,SAAAv8C,EAAA3B,EAAA4B,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAF,OAAAgqD,EAAA,EAAAhqD,MAAAmD,IAAA0I,EAAAmwC,QAAA,IACA,MAAAztC,EAAApD,EAAA,YACAkH,EAAAlH,EAAA,cACAiH,EAAAjH,EAAA,UACA8+C,EAAAnD,EAAAgD,aAAAz3C,EAAA9D,GACAf,EAAAE,aAAA,WAAAu8C,GACApD,EAAA,QAAAqD,eAAA18C,EAAAs5C,EAAAO,MAAA,SAAAh1C,EACAD,GACA,MAAAg7B,EAAAvhC,EAAAmwC,aACA74C,IAAAiqC,GACA0Z,EAAA+C,mBAAAr8C,EAAA4/B,EAAA3/B,IAWAq5C,EAAAqD,aAAA,SAAA38C,EAAA3B,EAAA4B,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAF,OAAAgqD,EAAA,EAAAhqD,MAAAmD,IAAA0I,EAAAmwC,QAAA,IACA,MAAAztC,EAAApD,EAAA,YACAkH,EAAAlH,EAAA,cACAiH,EAAAjH,EAAA,UACA8+C,EAAAnD,EAAAgD,aAAAz3C,EAAA9D,GACA5N,EAAAkL,EAAA4Z,kBACAjY,EAAAE,aAAA,WAAAu8C,GACApD,EAAA,QAAAqD,eAAA18C,EAAAs5C,EAAAO,MAAA,SAAAh1C,EACAD,GACA,MAAAg7B,EAAAvhC,EAAAmwC,QACA,QAAA74C,IAAAiqC,EAAA,CACA,MAAAx8B,EAAA/E,EAAAu+C,UACA1uB,KACA,QAAA7tB,EAAA,EAAAC,EAAA8C,EAAA1Q,OAAqC2N,EAAAC,EAAQD,IAAA,CAC7C,MAAArD,EAAAqB,EAAAysB,IAAA1nB,EAAA/C,IACA,QAAA1K,IAAAqH,EAAA,CACA,IAAA3D,EAAA+J,EAAA/C,GACArD,aAAA6/C,EAAA,UACAxjD,EAAAlG,GAEA+6B,EAAAx1B,MAAqBW,OAAA2D,WAGrBq8C,EAAA,QAAAtK,qBACOqN,WAAAz+C,EAAA,WAAAqC,OACPwvC,KAAA7xC,EAAA,KAAArK,QAAAqK,EAAA,SACA27C,EAAAwD,yBACAzD,EAAA,QAAArK,sBAAA,YAAA9gB,EACAjuB,GACAq5C,EAAA+C,mBAAAr8C,EAAA4/B,EAAA3/B,KAWAq5C,EAAAyD,eAAA,SAAA/8C,EAAAkzC,EAAAjzC,GACA,MAAA5G,EAAAggD,EAAA,QAAA/K,gBAAAgL,EAAAS,MAAA,QAEAqC,EADAn8C,IAAAvN,OAAA,GACA,WAGA,GAFAsN,EAAAwiB,YAAAnpB,GACA2hD,EAAA,EAAA14B,oBAAAjpB,EAAA65C,EAAA75C,WACA1D,IAAAu9C,EAAAl2C,OAAA,OAAAk2C,EAAAl2C,MAAA,CACA,MAAAA,EAAAq8C,EAAA,QAAA/K,gBAAAgL,EAAAS,MAAA,SACA/5C,EAAAwiB,YAAAxlB,GACAk2C,EAAAl2C,iBAAA6/C,EAAA,QACA,IAAAT,EACA98C,EAAA,QAAAvN,UAAA68C,qBAAA5xC,EACAk2C,EAAAl2C,MAAAiD,GAEAu5C,EAAA,QAAAznD,UAAA68C,qBAAA5xC,EACAk2C,EAAAl2C,MAAAiD,GAGA+6C,EAAA,EAAA14B,oBAAAtlB,EAAAk2C,EAAAl2C,SAaAs8C,EAAA0D,aAAA,SAAAh9C,EAAAi9C,EAAAh9C,GACAg9C,EAAAC,UACAl9C,EAAAE,aAAA,WAAA+8C,EAAAC,eAEAvnD,IAAAsnD,EAAAE,cACAn9C,EAAAE,aAAA,eAAA+8C,EAAAE,mBAEAxnD,IAAAsnD,EAAAjgD,OACAg+C,EAAA,EAAA14B,oBAAAtiB,EAAAi9C,EAAAjgD,QASAs8C,EAAAwD,0BACA5B,8BACAkC,OAAA/D,EAAA,QAAA1K,kBAAA2K,EAAA6C,eACAkB,OAAAhE,EAAA,QAAA1K,kBAAA2K,EAAAqD,cACAW,OAAAjE,EAAA,QAAA1K,kBAAA2K,EAAAiD,cACAgB,SAAAlE,EAAA,QAAA1K,kBAAA2K,EAAAyD,gBACAS,OAAAnE,EAAA,QAAA1K,kBAAA2K,EAAA0D,gBAWA1D,EAAAmE,YAAA,SAAAz9C,EAAAe,EAAAd,GACA,MAAAtC,EAAoCsC,IAAAvN,OAAA,GACpCmS,EAAAlH,EAAA,cACAiH,EAAAjH,EAAA,UACA+/C,EAAA//C,EAAA,cACArK,EAAAqK,EAAA,QACA,IAAA8+C,EAGAA,EADA53C,EACAy0C,EAAAgD,aAAAz3C,EAAA9D,GAEAA,EAEAf,EAAAE,aAAA,WAAAu8C,GACAnpD,GACA0M,EAAAE,aAAA,UAAA5M,GAEAsR,GACAy0C,EAAA,QAAAqD,eAAA18C,EAAAs5C,EAAAO,MAAA,SAAAh1C,EACAD,GAEA,MAAA/B,EAA8CrQ,OAAA6nD,EAAA,WAAc18C,GAC5DkF,EAAA7C,OACAq5C,EAAA,QAAAtK,oBAAAlsC,EACAy2C,EAAA2C,mBACA5C,EAAA,QAAArK,sBAAA,gBAAA0O,EACAz9C,GACA,MAAAgd,EAAAtf,EAAA,OACA,GAAAsf,EAAA,CACA,MAAA4P,EAAAwsB,EAAA,QAAA/K,gBAAAgL,EAAAQ,MAAA,UACA95C,EAAAwiB,YAAAqK,GACAysB,EAAAqE,sBAAA9wB,EAAA5P,EAAAhd,KAWAq5C,EAAAqE,sBAAA,SAAA39C,EAAAid,EAAAhd,GAEA,MAAA4C,GAAgB7C,QAChBq5C,EAAA,QAAAtK,oBAAAlsC,EACAy2C,EAAAsE,wBACAvE,EAAA,QAAArK,sBAAA/xB,EAAAjrB,eACAirB,GAAAhd,IAUAq5C,EAAAuE,iBAAA,SAAA79C,EAAAid,EAAAhd,GACAA,IAAAvN,OAAA,GACA,QAAAuqB,EAAA3pB,QAEAgmD,EAAAwE,sBAAA99C,EAAAid,EAAA9pB,cACAqmD,EAAA,QAAAznD,UAAA68C,qBAAA5uC,EAAAid,EAAA7pB,OAAA6M,IAUAq5C,EAAAyE,qBAAA,SAAA/9C,EAAAid,EAAAhd,GACAA,IAAAvN,OAAA,GACA,QAAAuqB,EAAA3pB,QAEAgmD,EAAAwE,sBAAA99C,EAAAid,EAAA9pB,cACAqmD,EAAA,QAAAznD,UAAA68C,qBAAA5uC,EAAAid,EAAAxpB,SAAAwM,IAUAq5C,EAAA0E,uBAAA,SAAAh+C,EAAAid,EAAAhd,GACAA,IAAAvN,OAAA,GACA,QAAAuqB,EAAA3pB,QAEAgmD,EAAAwE,sBAAA99C,EAAAid,EAAA9pB,cACAqmD,EAAA,QAAAznD,UAAA68C,qBAAA5uC,EAAAid,EAAAxpB,SAAAwM,IAUAq5C,EAAA2E,mBAAA,SAAAj+C,EAAAid,EAAAhd,GACAA,IAAAvN,OAAA,GACA,QAAAuqB,EAAA3pB,QAEAgmD,EAAAwE,sBAAA99C,EAAAid,EAAA9pB,cACAqmD,EAAA,QAAAznD,UAAA68C,qBAAA5uC,EAAAid,EAAAxpB,SAAAwM,IAUAq5C,EAAA4E,mBAAA,SAAAl+C,EAAAid,EAAAhd,GAEA,MAAAk+C,EAAA9E,EAAA,QAAA/K,gBAAAgL,EAAAU,MAAA,kBACAgB,EAAA,EAAA14B,oBAAA67B,EAAAlhC,EAAAnpB,cACAkM,EAAAwiB,YAAA27B,GAEA,MAAAC,EAAA/E,EAAA,QAAA/K,gBAAAgM,EAAA,EAAAhc,MAAA,cAEAt+B,EAAAwiB,YAAA47B,GAEA,MAAAnqD,EAAAolD,EAAA,QAAA/K,gBAAAgM,EAAA,EAAAhc,MAAA,SACA8f,EAAA57B,YAAAvuB,GACAqlD,EAAA+E,kBAAApqD,EAAAgpB,EAAAhpB,OAEA,MAAAC,EAAAmlD,EAAA,QAAA/K,gBAAAgM,EAAA,EAAAhc,MAAA,OACA8f,EAAA57B,YAAAtuB,GACAolD,EAAA+E,kBAAAnqD,EAAA+oB,EAAA/oB,MAUAolD,EAAAgF,oBAAA,SAAAt+C,EAAAid,EAAAhd,GAEA,MAAA4C,GAAgB7C,QAChB7N,EAAA8qB,EAAA9qB,WACA,QAAAkO,EAAA,EAAAC,EAAAnO,EAAAO,OAAyC2N,EAAAC,IAAQD,EAAA,CACjD,MAAA/J,EAAAnE,EAAAkO,GACAg5C,EAAA,QAAAtK,oBAAAlsC,EACAy2C,EAAAsE,wBACAvE,EAAA,QAAArK,sBAAA14C,EAAAtE,eACAsE,GAAA2J,KAWAq5C,EAAAiF,gBAAA,SAAAv+C,EAAAid,EAAAhd,GAEA,MAAA4C,GAAgB7C,QAChB1J,EAAA2mB,EAAA3mB,UACA+iD,EAAA,QAAAtK,oBAAAlsC,EACAy2C,EAAAsE,wBACAvE,EAAA,QAAArK,sBAAA14C,EAAAtE,eACAsE,GAAA2J,IAUAq5C,EAAAkF,uBAAA,SAAAx+C,EAAAid,EAAAhd,QACAtK,IAAAsnB,EAAA1oB,WACAyL,EAAAE,aAAA,YAAA+c,EAAA1oB,UAAA4jB,YAEAmhC,EAAAwE,sBAAA99C,EAAAid,EAAAnpB,cACAwlD,EAAAmF,iBAAAz+C,EAAA,GAAAid,EAAA5oB,aAUAilD,EAAAoF,mBAAA,SAAA1+C,EAAAid,EAAAhd,GACAq5C,EAAAwE,sBAAA99C,EAAAid,EAAAnpB,eAUAwlD,EAAAqF,sBAAA,SAAA3+C,EAAAid,EAAAhd,GACAq5C,EAAAwE,sBAAA99C,EAAAid,EAAAnpB,cAEA,MAAAoB,EAAAmkD,EAAA,QAAA/K,gBAAAgL,EAAAQ,MAAA,iBACA95C,EAAAwiB,YAAAttB,GACAokD,EAAAmF,iBAAAvpD,EAAA,GAAA+nB,EAAA/nB,eAEA,MAAAC,EAAAkkD,EAAA,QAAA/K,gBAAAgL,EAAAQ,MAAA,iBACA95C,EAAAwiB,YAAArtB,GACAmkD,EAAAmF,iBAAAtpD,EAAA,GAAA8nB,EAAA9nB,gBAUAmkD,EAAAsF,mBAAA,SAAA5+C,EAAAid,EAAAhd,GACAD,EAAAE,aAAA,WAAA+c,EAAAvnB,UACAsK,EAAAE,aAAA,aAAA+c,EAAArnB,YACAoK,EAAAE,aAAA,aAAA+c,EAAApnB,iBACAF,IAAAsnB,EAAA1oB,WACAyL,EAAAE,aAAA,YAAA+c,EAAA1oB,UAAA4jB,YAEAmhC,EAAAwE,sBAAA99C,EAAAid,EAAAnpB,cACAwlD,EAAAmF,iBAAAz+C,EAAA,GAAAid,EAAA3nB,UAUAgkD,EAAAuF,oBAAA,SAAAjtD,EAAAoO,EAAAhD,GACA,MAAA8hD,EAAAzF,EAAA,QAAA/K,gBAAAgL,EAAAQ,MAAAloD,GACAopD,EAAA,EAAA14B,oBAAAw8B,EAAA9hD,GACAgD,EAAAwiB,YAAAs8B,IASAxF,EAAAwE,sBAAA,SAAA99C,EAAAhD,GACAs8C,EAAAuF,oBAAA,eAAA7+C,EAAAhD,IASAs8C,EAAAmF,iBAAA,SAAAz+C,EAAAhD,GACAs8C,EAAAuF,oBAAA,UAAA7+C,EAAAhD,IASAs8C,EAAA+E,kBAAA,SAAAr+C,EAAA08B,GACA,MAAAqiB,EAAA1F,EAAA,QAAA/K,gBAAAgM,EAAA,EAAAhc,MAAA,eACAt+B,EAAAwiB,YAAAu8B,GAEA,MAAAC,EAAA3F,EAAA,QAAA/K,gBAAAgM,EAAA,EAAAhc,MAAA,gBACAygB,EAAAv8B,YAAAw8B,GACAhE,EAAA,EAAA14B,oBAAA08B,EAAAtiB,IAQA4c,EAAAsE,yBACA1C,8BACA+D,MAAA5F,EAAA,QAAA1K,kBAAA2K,EAAAmE,cAEAjC,8BACAxnD,OAAAqlD,EAAA,QAAA1K,kBAAA2K,EAAA4E,oBACArrD,IAAAwmD,EAAA,QAAA1K,kBAAA2K,EAAAgF,qBACA5nD,GAAA2iD,EAAA,QAAA1K,kBAAA2K,EAAAgF,qBACAjoD,IAAAgjD,EAAA,QAAA1K,kBAAA2K,EAAAiF,iBACAW,KAAA7F,EAAA,QAAA1K,kBAAA2K,EAAAuE,kBACAlqD,SAAA0lD,EAAA,QAAA1K,kBAAA2K,EAAAyE,sBACAhpD,WAAAskD,EAAA,QAAA1K,kBAAA2K,EAAA0E,wBACApnD,OAAAyiD,EAAA,QAAA1K,kBAAA2K,EAAA2E,oBACAkB,kBAAA9F,EAAA,QAAA1K,kBAAA2K,EAAAkF,wBACAY,qBAAA/F,EAAA,QAAA1K,kBAAA2K,EAAAkF,wBACAa,mBAAAhG,EAAA,QAAA1K,kBAAA2K,EAAAkF,wBACAc,4BAAAjG,EAAA,QAAA1K,kBAAA2K,EAAAkF,wBACAe,sBAAAlG,EAAA,QAAA1K,kBAAA2K,EAAAkF,wBACAgB,+BAAAnG,EAAA,QAAA1K,kBAAA2K,EAAAkF,wBACAiB,eAAApG,EAAA,QAAA1K,kBAAA2K,EAAAoF,oBACAgB,kBAAArG,EAAA,QAAA1K,kBAAA2K,EAAAqF,uBACAgB,eAAAtG,EAAA,QAAA1K,kBAAA2K,EAAAsF,sBAYAtF,EAAAsG,YAAA,SAAA3iC,GACA,MAAA4P,EAAAwsB,EAAA,QAAA/K,gBAAAgL,EAAAQ,MAAA,UAEA,OADAR,EAAAqE,sBAAA9wB,EAAA5P,MACA4P,GAUAysB,EAAAuG,iBAAA,SAAA7/C,EAAAsF,EAAArF,GACA,MAAAtC,EAAoCsC,IAAAvN,OAAA,GACpCmQ,EAA8CrQ,OAAA6nD,EAAA,WAAc18C,GAC5DkF,EAAA7C,OACAq5C,EAAA,QAAAtK,oBAAAlsC,EACAy2C,EAAAsE,wBACAvE,EAAA,QAAArK,sBAAA,SAAA1pC,EACArF,IAWAq5C,EAAAvnD,UAAA8V,gBAAA,SAAA1I,GACA,MAAAa,EAAAq5C,EAAA,QAAA/K,gBAAAgL,EAAAS,MAAA,cAGA,IAAA98B,EACA,GAHAjd,EAAAE,aAAA,iBACAF,EAAAE,aAAA,mBAEAf,IACAA,EAAA2gD,QACA9/C,EAAAE,aAAA,SAAAf,EAAA2gD,QAEA3gD,EAAAoI,cACAvH,EAAAE,aAAA,eAAAf,EAAAoI,mBAEA5R,IAAAwJ,EAAA2F,aACA9E,EAAAE,aAAA,cAAAf,EAAA2F,aAEA3F,EAAA4gD,YACA//C,EAAAE,aAAA,aAAAf,EAAA4gD,iBAEApqD,IAAAwJ,EAAA6gD,YACAhgD,EAAAE,aAAA,aAAAf,EAAA6gD,iBAEArqD,IAAAwJ,EAAAggC,OACAn/B,EAAAE,aAAA,QAAAf,EAAAggC,OAEAliB,EAAA9d,EAAA8d,OACA9d,EAAA/H,MAAA,CACA5E,OAAAgqD,EAAA,EAAAhqD,CAAA2M,EAAAhM,aACA,IACA,MAAAiE,EAAA6oD,EAAA,QAAA7oD,KAC0B+H,EAAA,aAAAA,EAAA/H,KAAA+H,EAAA7L,SAG1B2pB,EAFAA,EAEAgjC,EAAA,QAAAlpD,IAAAkmB,EAAA7lB,GAEAA,EAIAiiD,EAAA,QAAAqD,eAAA18C,EAAA,4CACA,qBAAAnO,KAAAg7C,iBAEA,MAAAlvC,GACAqC,OACA1M,QAAA6L,EAAA7L,QACAsR,UAAAzF,EAAAyF,UAAAzF,EAAAyF,UAAA/S,KAAAuN,WACAyF,cAAA1F,EAAA0F,cACA1R,aAAAgM,EAAAhM,aACA8pB,SACAygC,cAAAv+C,EAAAu+C,cAAAv+C,EAAAu+C,kBAKA,OAHAlrD,OAAAgqD,EAAA,EAAAhqD,CAAAH,MAAA+c,QAAAjQ,EAAAmG,cACA,IACAg0C,EAAAuG,iBAAA7/C,EAAwDb,EAAA,cAAAxB,IACxDqC,GAcAs5C,EAAAvnD,UAAAmuD,iBAAA,SAAAC,EAAAC,EAAAC,EACAlhD,GACA,MAAAc,KACAD,EAAAq5C,EAAA,QAAA/K,gBAAAgL,EAAAS,MAAA,eACAZ,EAAAh6C,EAAAg6C,QACAh6C,EAAAg6C,QAAAG,EAAAI,gBACA0C,EAAA,UAAAjD,EAAA,IAGA,IAAAmH,EAEAzI,EAJA73C,EAAAE,aAAA,iBACAF,EAAAE,aAAA,UAAAi5C,GAIAh6C,IACAmhD,EAAAnhD,EAAAohD,WAAAphD,EAAAohD,cACAphD,EAAA2gD,QACA9/C,EAAAE,aAAA,SAAAf,EAAA2gD,SAGA,MAAAzhB,EAAAib,EAAAG,iBAAAN,GACAE,EAAA,QAAAqD,eAAA18C,EAAA,4CACA,qBAAAq+B,GACA,MAAAx5B,EAAA1F,EAAA0F,cAAA1F,EAAA0F,cAAAy0C,EAAAM,eAqCA,OApCAuG,IACAtI,GAAW73C,OAAA4E,UAAAzF,EAAAyF,UACX7D,YAAA5B,EAAA4B,YAAA8D,gBACAu3C,aAAA5M,KAAArwC,EAAAqwC,KAAAl8C,QAAA6L,EAAA7L,SACAd,OAAA6nD,EAAA,OAAA7nD,CAAAqlD,EAAAyI,GACAjH,EAAA,QAAAtK,oBAAA8I,EACAyB,EAAAwD,yBACAzD,EAAA,QAAArK,sBAAA,UAAAmR,EACAlgD,IAEAmgD,IACAvI,GAAW73C,OAAA4E,UAAAzF,EAAAyF,UACX7D,YAAA5B,EAAA4B,YAAA8D,gBACAu3C,aAAA5M,KAAArwC,EAAAqwC,KAAAl8C,QAAA6L,EAAA7L,SACAd,OAAA6nD,EAAA,OAAA7nD,CAAAqlD,EAAAyI,GACAjH,EAAA,QAAAtK,oBAAA8I,EACAyB,EAAAwD,yBACAzD,EAAA,QAAArK,sBAAA,UAAAoR,EACAngD,IAEAogD,GACAhH,EAAA,QAAAtK,qBAAkC/uC,OAAA4E,UAAAzF,EAAAyF,UAClC7D,YAAA5B,EAAA4B,YAAA8D,gBACAu3C,aAAA9oD,QAAA6L,EAAA7L,SACAgmD,EAAAwD,yBACAzD,EAAA,QAAArK,sBAAA,UAAAqR,EACApgD,GAEAd,EAAAqhD,gBACAnH,EAAA,QAAAtK,qBAAkC/uC,OAAA4E,UAAAzF,EAAAyF,UAClC7D,YAAA5B,EAAA4B,YAAA8D,gBACAu3C,aAAA9oD,QAAA6L,EAAA7L,SACAgmD,EAAAwD,yBACAzD,EAAA,QAAArK,sBAAA,UAAA7vC,EAAAqhD,eACAvgD,GAEAD,GAYAs5C,EAAAvnD,UAAAoiC,eAMAmlB,EAAAvnD,UAAAqiC,2BAAA,SAAAP,GACA,QAAA5M,EAAA4M,EAAAE,WAA8B9M,EAAGA,IAAA+M,YACjC,GAAA/M,EAAAzmB,UAAAC,KAAAC,aACA,OAAA7O,KAAAwiC,uBAAApN,GAGA,aAOAqyB,EAAAvnD,UAAAsiC,uBAAA,SAAAr0B,GACA,GAAAA,EAAAw/B,mBACAx/B,EAAAw/B,oCAEA,QAAAvY,GADAjnB,IAAAw/B,qCACAA,kBAAwCvY,EAAGA,IAAA6Y,mBAC3C,OAAA7Y,EAAA7mB,WAAA1N,SACA,IAAAu0B,EAAA7mB,WAAA1N,QACA,IAAAu0B,EAAA8M,WAAAvzB,UAAA,CACA,MAAAP,OAEA,OADApO,KAAAwN,WAAAkgC,oBAAAtY,EAAAhnB,GACAzN,OAAAiuD,EAAA,IAAAjuD,CAAAyN,EAAAi/B,MAAA5rC,SAKA,aAEA4E,EAAA,2CC/kCAA,EAAA,2CCOAA,EAAA,GACA4gD,gBAAA,iBACAvb,UAAA,YACAvH,UAAA,YACA+iB,KAAA,uVCXA5gD,EAAA,SACAA,EAAA,MACAA,EAAA,yDAEA,IAAMC,aAWJ,SAAAA,EAAY+G,gGAASo1B,CAAA1iC,KAAAuG,GAQnBvG,KAAK6uD,uBAAyB,IAAA5iD,EAAAhF,QAAiBqG,EAAQwhD,aASvD9uD,KAAK+uD,OAASzhD,EAAQ0hD,MA5BpB,OAAAvmB,EAAAliC,IAAAI,IAAA,UAAAwE,MAAA,WAmCFnL,KAAK6uD,uBAAuBniD,WAnC1B/F,IAAA,qBAAAwE,MAAA,SAiHe41B,GACjB,OAAOA,EAAWmR,QAChB3rC,EAAQ0oD,gBAAgBC,GACxB3oD,EAAQ0oD,gBAAgBE,OApHxBxoD,IAAA,gBAAAwE,MAAA,SA2HU41B,GACZ/gC,KAAK6uD,uBAAuBhoD,KAAKk6B,MA5H/Bp6B,IAAA,mBAAAwE,MAAA,SAmIa41B,GACf/gC,KAAK6uD,uBAAuB3kC,OAAO6W,MApIjCp6B,IAAA,wBAAAwE,MAAA,WAkJF,IAAMikD,EACFpvD,KAAKqvD,kBAAoB9oD,EAAQ0oD,gBAAgBC,GAF/BloB,GAAA,EAAAC,GAAA,EAAAC,OAAApjC,EAAA,IAGtB,QAAAqjC,EAAAC,EAAyBpnC,KAAK8uD,YAA9BznB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,KAAhCjG,EAAgCoG,EAAAh8B,MACrC41B,EAAWmR,UAAYkd,IACzBruB,EAAWmR,QAAUkd,IALH,MAAA1nB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,OAjJpBvgC,IAAA,cAAAsyB,IAAA,WA+CF,OAAOj5B,KAAK6uD,uBAAuBnuB,cA/CjC/5B,IAAA,wBAAAsyB,IAAA,WAwDF,OAAOj5B,KAAK6uD,0BAxDVloD,IAAA,QAAAsyB,IAAA,WAqEF,OAAOj5B,KAAK+uD,UArEVpoD,IAAA,kBAAAsyB,IAAA,WAkFF,IAAI8G,SADgBqJ,GAAA,EAAAC,GAAA,EAAAC,OAAAxlC,EAAA,IAGpB,QAAAylC,EAAAC,EAAyBxpC,KAAK8uD,YAA9BznB,OAAAC,cAAA8B,GAAAG,EAAAC,EAAAjC,QAAAC,MAAA4B,GAAA,EAA2C,KAAhCrI,EAAgCwI,EAAAp+B,MACzC,QAAcrH,IAAVi8B,EACFA,EAAQ//B,KAAKsvD,mBAAmBvuB,QAEb/gC,KAAKsvD,mBAAmBvuB,KACxBhB,IACjBA,EAAQx5B,EAAQ0oD,gBAAgBM,eAGpC,GAAIxvB,IAAUx5B,EAAQ0oD,gBAAgBM,cACpC,OAbgB,MAAA7nB,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,aAAA0B,GAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,GAmBpB,OAFAhhC,EAAArB,QAAYq4B,aAAaS,GAElBA,MApGLx5B,KAgKNA,EAAQ0oD,iBACNM,cAAe,gBACfJ,IAAK,MACLD,GAAI,gBAIS3oD,+LC9KfipD,EAAAlpD,EAAA,IA4BA,MAAAmpD,EAAA,SAAApiD,GAEA,MAAAC,EAAAD,MAEApM,EAAAqM,EAAArM,WAEAyuD,IAAA,gBAAAzuD,MAAA,YAEA0uD,EAAA,EAAApvD,KAAAP,MACAouB,aAAA9gB,EAAA8gB,aACAC,UAAA/gB,EAAA+gB,UACAC,YAAAhhB,EAAAghB,YACAC,QAAAmhC,EACA/hC,WAAArgB,EAAAqgB,WACAa,2BAAAlhB,EAAAkhB,2BACAohC,UAAAtiD,EAAAsiD,UACAhiC,SAAAtgB,EAAAsgB,SACAa,iBAAAnhB,EAAAmhB,iBACApa,IAAA/G,EAAA+G,IACAua,KAAAthB,EAAAshB,KACAC,WAAA/qB,IAAAwJ,EAAAuhB,OAAAvhB,EAAAuhB,MACAC,WAAAxhB,EAAAwhB,aAOA9uB,KAAA6vD,aAAA/rD,IAAAwJ,EAAAwiD,OAAAxiD,EAAAwiD,OAAA,EAMA9vD,KAAA6kD,QAAA5jD,EAMAjB,KAAA8kD,MAAA,EAMA9kD,KAAAglD,YAAkE13C,EAAA,WAMlEtN,KAAAilD,YAAAnhD,IAAAwJ,EAAA43C,OAAA53C,EAAA43C,MAMAllD,KAAA+vD,WAAApvD,OAAAqvD,EAAA,YAAArvD,GAEAX,KAAA+kD,aACA/kD,KAAAiwD,OAAAjwD,KAAAkwD,qBAIAvvD,OAAAwvD,EAAA,SAAAxvD,CAAA8uD,EAAAE,EAAA,GAiBAF,EAAAvvD,UAAAslD,qBAAA,SAAAl4B,EAAAw1B,EAAAn1B,EAAA1sB,GACA,MAAAwkD,EAAA9kD,OAAAyvD,EAAA,IAAAzvD,CAAAgtB,GACA+3B,EAAA1lD,KAAAsV,gBAEA,IAAAsY,EAAA5tB,KAAAqwD,cACAziC,IACAA,EAAA5tB,KAAAswD,yBAAA7K,IAGA,MAAA8K,EAAA3iC,EAAA4iC,kCAAAljC,EAAAw1B,GAEA,GAAAl1B,EAAA6iC,iBAAA5vD,QAAA0vD,EAAA,GACA,OAGA,IAAAG,EAAA9iC,EAAAonB,cAAAub,EAAA,IACAI,EAAA/iC,EAAAgjC,mBAAAL,EAAAvwD,KAAA+vD,YACA7hC,EAAA2iC,EAAA,QAAAC,OAAAljC,EAAAmjC,YAAAR,EAAA,IAAAvwD,KAAAgxD,SAGA,MAAAlB,EAAA9vD,KAAA6vD,QACA,IAAAC,IACA5hC,EAAA2iC,EAAA,QAAAI,OAAA/iC,EAAA4hC,EAAA9vD,KAAAgxD,SACAL,EAAAhwD,OAAAqvD,EAAA,OAAArvD,CAAAgwD,EAAAD,EAAAZ,EAAAa,IAGAjL,OAAAD,IACAiL,EAAAQ,EAAA,EAAAtL,0BAAAF,EAAAD,EAAAn4B,EAAAojC,GACAC,EAAAhwD,OAAAyvD,EAAA,gBAAAzvD,CAAAgwD,EAAAlL,EAAAC,GACAp4B,EAAA3sB,OAAAyvD,EAAA,UAAAzvD,CAAA2sB,EAAAm4B,EAAAC,IAGA,MAAAG,GACArR,QAAA,MACAC,QAAA0c,EAAA,EACAzc,QAAA,iBACAjD,OAAA,YACA8C,aAAA,EACAwR,aAAA/lD,KAAA6kD,QAAA,QAEAlkD,OAAAmP,EAAA,OAAAnP,CAAAklD,EAAA7lD,KAAA6kD,QAAA5jD,GAEA,MAAA+jB,EAAAtD,KAAAwD,OAAAoI,EAAA,GAAAqjC,EAAA,IAAAD,GACAzrC,EAAAvD,KAAAwD,OAAAyrC,EAAA,GAAArjC,EAAA,IAAAojC,GAKA,OAHA7K,EAAA7lD,KAAA8kD,KAAA,SAAA9/B,EACA6gC,EAAA7lD,KAAA8kD,KAAA,SAAA7/B,EAEAjlB,KAAAimD,eAAAsK,EAAAriC,EAAAyiC,EACA,EAAAjL,GAAAD,EAAAI,IAOA4J,EAAAvvD,UAAAkxD,kBAAA,WACA,OAAApxD,KAAA6vD,SAUAJ,EAAAvvD,UAAAm1C,UAAA,WACA,OAAAr1C,KAAA6kD,SAcA4K,EAAAvvD,UAAA+lD,eAAA,SAAAsK,EAAAriC,EAAAyiC,EACA5N,EAAAp1B,EAAA1sB,GAEA,MAAA2tB,EAAA5uB,KAAA4uB,KACA,IAAAA,EACA,OAYA,GATA3tB,EAAA,MAAAitB,EAAA,GACAjtB,EAAA,OAAAitB,EAAA,GAEAjtB,EAAAjB,KAAA8kD,KAAA,aAAAn3B,EAAApY,UAEA,WAAAvV,KAAA6kD,UACA5jD,EAAA,WAGA,GAAA8hD,EACA,OAAA/iD,KAAAglD,aACA,KAAAqM,EAAA,EAAA3lB,UACA,MAAAsb,EAAA,GAAAjE,EAAA,KACA,mBAAA9hD,EACAA,EAAA,wBAAwC+lD,EAExC/lD,EAAA,sBAAA+lD,EAEA,MACA,KAAAqK,EAAA,EAAAltB,UACAljC,EAAA,kBAAA8hD,EACA,MACA,KAAAsO,EAAA,EAAApK,gBACA,KAAAoK,EAAA,EAAAnK,KACAjmD,EAAA,OAAA8hD,EACA,MACA,QACApiD,OAAA2wD,EAAA,EAAA3wD,EAAA,MAKA,MAAAw6C,EAAAxtB,EAAA2tB,qBACA/1C,EAAAorD,EACA,GAAA3wD,KAAA8kD,MAAA,MAAA3J,EAAAO,OAAA,MACA,IAAA6V,EACAA,EAAAZ,EAAA,GACAprD,EAAA,GAAAorD,EAAA,GACAprD,EAAA,GAAAgsD,EACAA,EAAAZ,EAAA,GACAprD,EAAA,GAAAorD,EAAA,GACAprD,EAAA,GAAAgsD,EAIA,IAAAl9C,EACA,GAHApT,EAAA,KAAAsE,EAAA6O,KAAA,KAGA,GAAAwa,EAAA/tB,OACAwT,EAAAua,EAAA,OACG,CAEHva,EAAAua,EADAjuB,OAAA6wD,EAAA,OAAA7wD,CAAA8wD,EAAA,EAAAC,KAAAnB,GAAA3hC,EAAA/tB,SAGA,OAAAF,OAAA6uD,EAAA,aAAA7uD,CAAA0T,EAAApT,IAOAwuD,EAAAvvD,UAAAyxD,kBAAA,SAAA5O,GACA,OAAA/iD,KAAAilD,aAAAnhD,IAAA9D,KAAAglD,YACoB,EADpB,GASAyK,EAAAvvD,UAAAgwD,iBAAA,WACA,IAAA1hD,EAAA,EACA,MAAAw6B,KACA,UAAAriC,KAAA3G,KAAA6kD,QACA7b,EAAAx6B,KAAA7H,EAAA,IAAA3G,KAAA6kD,QAAAl+C,GAEA,OAAAqiC,EAAA50B,KAAA,MAOAq7C,EAAAvvD,UAAA0xD,qBAAA,SAAArB,EAAAxN,EAAAp1B,GAEA,IAAAC,EAAA5tB,KAAAqwD,cAKA,GAJAziC,IACAA,EAAA5tB,KAAAswD,yBAAA3iC,IAGAC,EAAA6iC,iBAAA5vD,QAAA0vD,EAAA,GACA,OAGA,GAAAxN,GAAA/iD,KAAAilD,aAAAnhD,IAAA9D,KAAAglD,cACAjC,EAAA,GAGA,MAAA2N,EAAA9iC,EAAAonB,cAAAub,EAAA,IACA,IAAAI,EAAA/iC,EAAAgjC,mBAAAL,EAAAvwD,KAAA+vD,YACA7hC,EAAA2iC,EAAA,QAAAC,OACAljC,EAAAmjC,YAAAR,EAAA,IAAAvwD,KAAAgxD,SAEA,MAAAlB,EAAA9vD,KAAA6vD,QACA,IAAAC,IACA5hC,EAAA2iC,EAAA,QAAAI,OAAA/iC,EAAA4hC,EAAA9vD,KAAAgxD,SACAL,EAAAhwD,OAAAqvD,EAAA,OAAArvD,CAAAgwD,EAAAD,EAAAZ,EAAAa,IAGA,GAAA5N,IACA70B,EAAA2iC,EAAA,QAAAgB,MAAA3jC,EAAA60B,EAAA/iD,KAAAgxD,UAGA,MAAAnL,GACArR,QAAA,MACAC,QAAA0c,EAAA,EACAzc,QAAA,SACAjD,OAAA,YACA8C,aAAA,GAIA,OAFA5zC,OAAAmP,EAAA,OAAAnP,CAAAklD,EAAA7lD,KAAA6kD,SAEA7kD,KAAAimD,eAAAsK,EAAAriC,EAAAyiC,EACA5N,EAAAp1B,EAAAk4B,IAQA4J,EAAAvvD,UAAA4xC,aAAA,SAAA7wC,GACAN,OAAAmP,EAAA,OAAAnP,CAAAX,KAAA6kD,QAAA5jD,GACAjB,KAAA+kD,aACA/kD,KAAAiwD,OAAAjwD,KAAAkwD,qBAOAT,EAAAvvD,UAAA6kD,WAAA,WACA,MAAAuC,EAAAtnD,KAAA6kD,QAAA,SAAAsM,EAAA,EACAnxD,KAAA8kD,KAAAgN,EAAA,QAAAvK,gBAAAD,EAAA,WAEAjhD,EAAA,4FCrVA,QAAAC,EAAA,QACAA,EAAA,QACAA,EAAA,wDA6BA,IAAMC,EAAU,SAASwrD,EAAUC,GAKjChyD,KAAKiyD,SAAWD,EAMhBhyD,KAAKkyD,QAAUH,EAASI,SAAS5zC,UAAU,EAAGwzC,EAASI,SAAStxD,OAAS,GAMzEb,KAAKoyD,QAAUL,EAASM,SAMxBryD,KAAKsyD,MAAQP,EAASQ,KAAOniC,SAAS2hC,EAASQ,KAAM,SAAMzuD,EAM3D9D,KAAKwyD,MAAQT,EAASU,SAMtBzyD,KAAK0yD,WAAa/0C,EAAA1W,QAAU0rD,kBAAkBZ,EAASa,QAMvD5yD,KAAK6yD,UAAYl1C,EAAA1W,QAAU0rD,kBAAkBZ,EAASL,OAQxDnrD,EAAQusD,aAAe,SAASd,EAASjyB,GACvC,IACEiyB,EAAQc,aAAa,KAAM,GAAI/yB,GAC/B,MAAOzE,MAYX/0B,EAAQrG,UAAU6yD,QAAU,WAC1B,OAAO/yD,KAAKwyD,OASdjsD,EAAQrG,UAAU8yD,aAAe,WAC/B,IAAMC,KAEFjzD,KAAKkyD,SACPe,EAAIpsD,KAAK7G,KAAKkyD,QAAS,MAGrBlyD,KAAKoyD,SAA4B,SAAjBpyD,KAAKkyD,WACvBe,EAAIpsD,KAAK,MAETosD,EAAIpsD,KAAK7G,KAAKoyD,cAEKtuD,IAAf9D,KAAKsyD,OACPW,EAAIpsD,KAAK,IAAKqsD,OAAOlzD,KAAKsyD,SAI1BtyD,KAAKwyD,QACHxyD,KAAKoyD,SAAoC,MAAzBpyD,KAAKwyD,MAAM12C,OAAO,IACpCm3C,EAAIpsD,KAAK,KAEXosD,EAAIpsD,KAAK7G,KAAKwyD,QAGhB,IAAMW,EAAmBx1C,EAAA1W,QAAUmsD,kBAAkBpzD,KAAK0yD,YACtDS,EAAiBtyD,OAAS,GAC5BoyD,EAAIpsD,KAAK,IAAKssD,GAGhB,IAAME,EAAkB11C,EAAA1W,QAAUmsD,kBAAkBpzD,KAAK6yD,WAIzD,OAHIQ,EAAgBxyD,OAAS,GAC3BoyD,EAAIpsD,KAAK,IAAKwsD,GAETJ,EAAI7+C,KAAK,KAUlB7N,EAAQrG,UAAU89B,SAAW,SAASr3B,GACpC,OAAOA,KAAO3G,KAAK0yD,YAUrBnsD,EAAQrG,UAAUozD,iBAAmB,SAAS3sD,GAC5C,OAAOA,KAAO3G,KAAK6yD,WAUrBtsD,EAAQrG,UAAUo6C,SAAW,SAAS3zC,GACpC,OAAO3G,KAAK0yD,WAAW/rD,IAUzBJ,EAAQrG,UAAUqzD,iBAAmB,SAAS5sD,GAC5C,OAAO3G,KAAK6yD,UAAUlsD,IAWxBJ,EAAQrG,UAAUszD,cAAgB,SAAS7sD,GACzC,IAAMwE,EAAQnL,KAAKs6C,SAAS3zC,GAC5B,QAAc7C,IAAVqH,EAAJ,CAGA7C,EAAArB,QAAYq4B,aAAan0B,GACzB,IAAMsoD,EAAarjC,SAASjlB,EAAO,IACnC,OAAQ4kB,MAAM0jC,QAAe3vD,EAAY2vD,IAY3CltD,EAAQrG,UAAUwzD,gBAAkB,SAAS/sD,GAC3C,IAAMwE,EAAQnL,KAAKs6C,SAAS3zC,GAC5B,QAAc7C,IAAVqH,EAAJ,CAGA7C,EAAArB,QAAYq4B,aAAan0B,GACzB,IAAMwoD,EAAenyC,WAAWrW,GAChC,OAAO4kB,MAAM4jC,QAAgB7vD,EAAY6vD,IAW3CptD,EAAQrG,UAAU0zD,sBAAwB,SAASjtD,GACjD,IAAMwE,EAAQnL,KAAKuzD,iBAAiB5sD,GACpC,QAAc7C,IAAVqH,EAAJ,CAGA7C,EAAArB,QAAYq4B,aAAan0B,GACzB,IAAMsoD,EAAarjC,SAASjlB,EAAO,IACnC,OAAQ4kB,MAAM0jC,QAAe3vD,EAAY2vD,IAS3CltD,EAAQrG,UAAU+5C,aAAe,WAC/B,IAAM1oC,KACN,IAAK,IAAM5K,KAAO3G,KAAK0yD,WACrBnhD,EAAK1K,KAAKF,GAEZ,OAAO4K,GASThL,EAAQrG,UAAU2zD,qBAAuB,WACvC,IAAMtiD,KACN,IAAK,IAAM5K,KAAO3G,KAAK6yD,UACrBthD,EAAK1K,KAAKF,GAEZ,OAAO4K,GAWThL,EAAQrG,UAAU4zD,uBAAyB,SAAS7mB,GAClD,IAAM17B,KACN,IAAK,IAAM5K,KAAO3G,KAAK0yD,WACM,GAAvB/rD,EAAI8a,QAAQwrB,IACd17B,EAAK1K,KAAKF,GAGd,OAAO4K,GAWThL,EAAQrG,UAAU6zD,+BAAiC,SAAS9mB,GAC1D,IAAM17B,KACN,IAAK,IAAM5K,KAAO3G,KAAK6yD,UACM,GAAvBlsD,EAAI8a,QAAQwrB,IACd17B,EAAK1K,KAAKF,GAGd,OAAO4K,GASThL,EAAQrG,UAAU4xC,aAAe,SAAS7wC,GACxC,IAAK,IAAM0F,KAAO1F,EAChBjB,KAAK0yD,WAAW/rD,GAAO1F,EAAO0F,IAUlCJ,EAAQrG,UAAU8zD,qBAAuB,SAAS/yD,GAChD,IAAK,IAAM0F,KAAO1F,EAChBjB,KAAK6yD,UAAUlsD,GAAO1F,EAAO0F,IAUjCJ,EAAQrG,UAAUm2C,YAAc,SAAS1vC,UAChC3G,KAAK0yD,WAAW/rD,IASzBJ,EAAQrG,UAAU+zD,oBAAsB,SAASttD,UACxC3G,KAAK6yD,UAAUlsD,IAQxBJ,EAAQrG,UAAUg0D,QAAU,WAC1B3tD,EAAQusD,aAAa9yD,KAAKiyD,SAAUjyD,KAAKgzD,iBAS3CzsD,EAAQrG,UAAUi0D,QAAU,SAASC,GACnCp0D,KAAKwyD,MAAQ4B,IAYf7tD,EAAQ8tD,gBAAkB,SAAS9qD,EAAY1B,GAC7C,IAAMmqD,EAAUnqD,EAAQmqD,QAClB3qD,EAAU,IAAId,EAAQsB,EAAQkqD,SAAUlqD,EAAQmqD,SAElDsC,EAAUjtD,EAAQ2rD,eActB,OAbAzpD,EAAWqJ,OAAO,WAChB,IAAM2hD,EAASltD,EAAQ2rD,eACnBsB,IAAYC,GACdhrD,EAAWirD,WAAW,WACpBF,EAAUC,OACMzwD,IAAZkuD,QAAkDluD,IAAzBkuD,EAAQc,cACnCvsD,EAAQusD,aAAad,EAASuC,GAEhChrD,EAAWm2B,WAAW,0BAKrBr4B,sCAcTd,EAAQkuD,aAAe,SAASC,GAI9BA,EAAA,KAA4B,WA0D1B,OArDEC,OAJqD,WAKnD,MAAO,IAMTjD,KAXqD,SAWhDkD,GACH,YAAoB9wD,IAAb8wD,EAAyB50D,KAAO,IAKzC60D,KAjBqD,WAkBnD,MAAO,IAMTT,KAxBqD,SAwBhDQ,GACH,YAAoB9wD,IAAb8wD,EAAyB50D,KAAO,IAKzCuyD,KA9BqD,WA+BnD,OAAO,GAKTJ,SApCqD,WAqCnD,MAAO,IAETnjD,QAvCqD,aA8CrD4jD,OA9CqD,SA8C9CkC,EAAYC,GACjB,YAAsBjxD,IAAfgxD,EAA2B90D,SAMpCqU,IArDqD,SAqDjD2gD,GACF,MAAO,uCAafzuD,EAAQY,OAASC,QAAQD,OAAO,oBACjB6E,QAAQ,eAAgBzF,EAAQ8tD,iBAC/C/sD,EAAAL,QAASE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG9BjB,+UCref6E,EAAA9E,EAAA,uBAKA,IAAMC,aAkBJ,SAAAA,EAAY+G,gGAASo1B,CAAA1iC,KAAAuG,GAiBnBvG,KAAKi1D,UAA+B,IAApB3nD,EAAQ4nD,QAQxBl1D,KAAKm1D,UAA+B,IAApB7nD,EAAQ4kC,QAcxBlyC,KAAK2oC,WAAar7B,EAAQq7B,YAAc,KAOxC3oC,KAAKo1D,IAAM9nD,EAAQ6kC,GASnBnyC,KAAKq1D,qBAAuB/nD,EAAQgoD,oBAOpCt1D,KAAKu1D,eAAiBjoD,EAAQ6vB,cAO9Bn9B,KAAKw1D,eAAiBloD,EAAQgwB,cAO9Bt9B,KAAKy1D,MAAQnoD,EAAQ9F,KA9FnB,OAAAihC,EAAAliC,IAAAI,IAAA,gBAAAwE,MAAA,WA8IF,OAAOnL,KAAK2oC,cA9IVhiC,IAAA,gBAAAwE,MAAA,SAqJUw9B,GACZ3oC,KAAK2oC,WAAaA,KAtJhBhiC,IAAA,UAAAsyB,IAAA,WA0GF,OAAOj5B,KAAKi1D,UA1GVvvC,IAAA,SAiHQwvC,GACVl1D,KAAKi1D,SAAWC,KAlHdvuD,IAAA,UAAAsyB,IAAA,WA0HF,OAAOj5B,KAAKm1D,UA1HVzvC,IAAA,SAiIQwsB,GACVlyC,KAAKm1D,SAAWjjB,KAlIdvrC,IAAA,KAAAsyB,IAAA,WA8JF,OAAOj5B,KAAKo1D,OA9JVzuD,IAAA,sBAAAsyB,IAAA,WAsKF,OAAOj5B,KAAKq1D,wBAtKV1uD,IAAA,gBAAAsyB,IAAA,WA8KF,OAAOj5B,KAAKu1D,kBA9KV5uD,IAAA,gBAAAsyB,IAAA,WAsLF,OAAOj5B,KAAKw1D,kBAtLV7uD,IAAA,OAAAsyB,IAAA,WA8LF,OAAOj5B,KAAKy1D,SA9LV9uD,IAAA,YAAAsyB,IAAA,WA4MF,OAAO,KA5MLtyB,IAAA,yBAAAsyB,IAAA,WAqNF,OAA8B,OAAvBj5B,KAAKm9B,eAAiD,OAAvBn9B,KAAKs9B,kBArNzC/2B,eA0NSA,gGClOfmvD,EAAApvD,EAAA,KAcA,MAAAqvD,EAAA,SAAAtoD,GAEA,MAAAC,EAAAD,MAMArN,KAAA41D,MAAAtoD,EAAA8Q,KAMApe,KAAA61D,UAAAvoD,EAAAwoD,SAMA91D,KAAA+1D,gBAAAzoD,EAAA0oD,eAMAh2D,KAAAi2D,OAAA3oD,EAAAukD,MAMA7xD,KAAAk2D,MAAA5oD,EAAAgR,KAMAte,KAAAm2D,WAAA7oD,EAAA8oD,UAMAp2D,KAAAq2D,cAAA/oD,EAAAgpD,aAMAt2D,KAAAu2D,WAAAzyD,IAAAwJ,EAAAyT,KAAAzT,EAAAyT,KACA,IAAAy1C,EAAA,SAAc71C,MAAAg1C,EAAAc,sBAMdz2D,KAAA02D,eAAA5yD,IAAAwJ,EAAAqpD,SAAArpD,EAAAqpD,SAAAj1C,KAAAk1C,GAAA,EAMA52D,KAAA62D,gBAAA/yD,IAAAwJ,EAAAsL,UAAAtL,EAAAsL,UAAA88C,EAAA,EAAA96C,MAMA5a,KAAA82D,YAAAxpD,EAAAypD,SAMA/2D,KAAAg3D,aAAAlzD,IAAAwJ,EAAA0T,OAAA1T,EAAA0T,OAAA,KAMAhhB,KAAAi3D,cAAAnzD,IAAAwJ,EAAA4pD,QAAA5pD,EAAA4pD,QAAA,EAMAl3D,KAAAm3D,cAAArzD,IAAAwJ,EAAA8pD,QAAA9pD,EAAA8pD,QAAA,EAMAp3D,KAAAq3D,gBAAA/pD,EAAAgqD,eAAAhqD,EAAAgqD,eAAA,KAMAt3D,KAAAu3D,kBAAAjqD,EAAAkqD,iBAAAlqD,EAAAkqD,iBAAA,KAMAx3D,KAAAy3D,cAAA3zD,IAAAwJ,EAAAoqD,QAAA,KAAApqD,EAAAoqD,SAWA/B,EAAAc,oBAAA,OAQAd,EAAAz1D,UAAA0hB,MAAA,WACA,WAAA+zC,GACAv3C,KAAApe,KAAAme,UACAvF,UAAA5Y,KAAA23D,eACAhB,SAAA32D,KAAA43D,cACAb,SAAA/2D,KAAA63D,cACA/B,SAAA91D,KAAA83D,cACA9B,eAAAh2D,KAAA+3D,oBACAlG,MAAA7xD,KAAAg4D,WACA15C,KAAAte,KAAA0c,UACA05C,UAAAp2D,KAAAi4D,eACA3B,aAAAt2D,KAAAk4D,kBACAn3C,KAAA/gB,KAAAoc,UAAApc,KAAAoc,UAAAwF,aAAA9d,EACAkd,OAAAhhB,KAAAwc,YAAAxc,KAAAwc,YAAAoF,aAAA9d,EACAozD,QAAAl3D,KAAAm4D,aACAf,QAAAp3D,KAAAo4D,aACAd,eAAAt3D,KAAAq4D,oBAAAr4D,KAAAq4D,oBAAAz2C,aAAA9d,EACA0zD,iBAAAx3D,KAAAs4D,sBAAAt4D,KAAAs4D,sBAAA12C,aAAA9d,KAUA6xD,EAAAz1D,UAAA23D,YAAA,WACA,OAAA73D,KAAA82D,WASAnB,EAAAz1D,UAAAie,QAAA,WACA,OAAAne,KAAA41D,OASAD,EAAAz1D,UAAA03D,YAAA,WACA,OAAA53D,KAAA02D,WASAf,EAAAz1D,UAAAy3D,aAAA,WACA,OAAA33D,KAAA62D,YASAlB,EAAAz1D,UAAAi4D,WAAA,WACA,OAAAn4D,KAAAi3D,UASAtB,EAAAz1D,UAAAk4D,WAAA,WACA,OAAAp4D,KAAAm3D,UASAxB,EAAAz1D,UAAAkc,QAAA,WACA,OAAApc,KAAAu2D,OASAZ,EAAAz1D,UAAA63D,kBAAA,WACA,OAAA/3D,KAAA+1D,iBASAJ,EAAAz1D,UAAA43D,YAAA,WACA,OAAA93D,KAAA61D,WASAF,EAAAz1D,UAAA83D,SAAA,WACA,OAAAh4D,KAAAi2D,QASAN,EAAAz1D,UAAAsc,UAAA,WACA,OAAAxc,KAAAg3D,SASArB,EAAAz1D,UAAAwc,QAAA,WACA,OAAA1c,KAAAk2D,OASAP,EAAAz1D,UAAA+3D,aAAA,WACA,OAAAj4D,KAAAm2D,YASAR,EAAAz1D,UAAAg4D,gBAAA,WACA,OAAAl4D,KAAAq2D,eASAV,EAAAz1D,UAAAm4D,kBAAA,WACA,OAAAr4D,KAAAq3D,iBASA1B,EAAAz1D,UAAAo4D,oBAAA,WACA,OAAAt4D,KAAAu3D,mBASA5B,EAAAz1D,UAAAq4D,WAAA,WACA,OAAAv4D,KAAAy3D,UAUA9B,EAAAz1D,UAAAs4D,YAAA,SAAAzB,GACA/2D,KAAA82D,UAAAC,GAUApB,EAAAz1D,UAAAu4D,QAAA,SAAAr6C,GACApe,KAAA41D,MAAAx3C,GAUAu3C,EAAAz1D,UAAAw4D,YAAA,SAAA/B,GACA32D,KAAA02D,UAAAC,GAUAhB,EAAAz1D,UAAAy4D,WAAA,SAAAzB,GACAl3D,KAAAi3D,SAAAC,GAUAvB,EAAAz1D,UAAA04D,WAAA,SAAAxB,GACAp3D,KAAAm3D,SAAAC,GAUAzB,EAAAz1D,UAAA24D,aAAA,SAAAjgD,GACA5Y,KAAA62D,WAAAj+C,GAUA+8C,EAAAz1D,UAAA44D,QAAA,SAAA/3C,GACA/gB,KAAAu2D,MAAAx1C,GAUA40C,EAAAz1D,UAAA64D,YAAA,SAAAjD,GACA91D,KAAA61D,UAAAC,GAUAH,EAAAz1D,UAAA84D,SAAA,SAAAnH,GACA7xD,KAAAi2D,OAAApE,GAUA8D,EAAAz1D,UAAA+4D,UAAA,SAAAj4C,GACAhhB,KAAAg3D,QAAAh2C,GAUA20C,EAAAz1D,UAAAg5D,QAAA,SAAA56C,GACAte,KAAAk2D,MAAA53C,GAUAq3C,EAAAz1D,UAAAi5D,aAAA,SAAA/C,GACAp2D,KAAAm2D,WAAAC,GAUAT,EAAAz1D,UAAAk5D,gBAAA,SAAA9C,GACAt2D,KAAAq2D,cAAAC,GAUAX,EAAAz1D,UAAAm5D,kBAAA,SAAAt4C,GACA/gB,KAAAq3D,gBAAAt2C,GAUA40C,EAAAz1D,UAAAo5D,oBAAA,SAAAt4C,GACAhhB,KAAAu3D,kBAAAv2C,GAUA20C,EAAAz1D,UAAAq5D,WAAA,SAAA7B,GACA13D,KAAAy3D,SAAAC,GAEArxD,EAAA,2MCxfAmzD,EAAAlzD,EAAA,GA+BA,MAAA2/B,EAAA,SAAA54B,GACA,MAAAC,EACAD,MAEAo7C,EAAA,EAAAloD,KAAAP,KAAAsN,GAMAtN,KAAAy5D,cAAA31D,IAAAwJ,EAAAivC,SAAAjvC,EAAAivC,QAMAv8C,KAAA05D,YAAA51D,IAAAwJ,EAAAqxC,OAAArxC,EAAAqxC,MAMA3+C,KAAA25D,iBAAA71D,IAAAwJ,EAAAkvC,YACAlvC,EAAAkvC,WAMAx8C,KAAA45D,mBAAA91D,IAAAwJ,EAAAgvC,cACAhvC,EAAAgvC,aAKAt8C,KAAAwsC,eAAAl/B,EAAAk/B,eACAl/B,EAAAk/B,eAAAvG,EAAA+U,gBAMAh7C,KAAA29C,UAAA75C,IAAAwJ,EAAAqwC,MACArwC,EAAAqwC,MAIAh9C,OAAAkN,EAAA,SAAAlN,CAAAslC,EAAAwiB,EAAA,GAQAxiB,EAAA+U,gBAAAyN,EAAA,EAAAhc,MACA,8EAUAxG,EAAA/lC,UAAA25D,gBAAA,SAAA1rD,EAAAC,GAEA,MAAA6Q,EAAAu6C,EAAA,QAAA/pD,mBACAzP,KAAA85D,oBAAA3rD,EAAAC,EAAApO,MACA,GAAAif,EAAA,CACA,MAAAC,EAAA,IAAA66C,EAAA,cAEA,OADA76C,EAAA4V,eAAA7V,GACAC,IAaA+mB,EAAA/lC,UAAA85D,kBAAA,SAAA7rD,EAAAC,GAEA,MAAA4R,EAAAw5C,EAAA,QAAA/pD,mBACAzP,KAAAi6D,sBAAA9rD,EAAAC,EAAApO,MACA,GAAAggB,EAAA,CACA,MAAAiW,EAAA,IAAAgZ,EAAA,cAEA,OADAhZ,EAAAoC,YAAArY,GACAiW,IAYAgQ,EAAA/lC,UAAAg6D,mBAAA,SAAA/rD,EAAAC,GACAorD,EAAA,QAAArqB,UAAAnvC,KAAAm6D,qBAAAhsD,EAAAC,EAAApO,OASAimC,EAAA/lC,UAAAk6D,qBAAA,SAAAjsD,EAAAC,GACAorD,EAAA,QAAArqB,UAAAnvC,KAAAq6D,uBACAlsD,EAAAC,EAAApO,OAUAimC,EAAA/lC,UAAAo6D,WAAA,SAAAnsD,EAAAC,GACA,OAAAorD,EAAA,QAAA/pD,iBAAA,MACAzP,KAAAu6D,iBAAApsD,EAAAC,EAAApO,OAUAimC,EAAA/lC,UAAAs6D,aAAA,SAAArsD,EAAAC,GACA,OAAAorD,EAAA,QAAA/pD,iBAAA,MACAzP,KAAAy6D,kBAAAtsD,EAAAC,EAAApO,OAUAimC,EAAA/lC,UAAAw6D,kBAAA,SAAAvsD,EAAAC,GACA,OAAAorD,EAAA,QAAA/pD,iBAAA,MACAzP,KAAAkwC,2BAAA/hC,EAAAC,EAAApO,OAUAimC,EAAA/lC,UAAAy6D,uBAAA,SAAAxsD,EAAAC,GACA,OAAAorD,EAAA,QAAA/pD,iBAAA,MACAzP,KAAA6vC,mCACA1hC,EAAAC,EAAApO,OASAimC,EAAA/lC,UAAA06D,gBAAA,SAAAzsD,EAAAC,GAEA,MAAA2tC,EAAAyd,EAAA,QAAA/pD,qBAAA3L,EACA9D,KAAA2wC,aAAAxiC,EAAAC,EAAApO,MACA,GAAA+7C,EAAA,CAEA3tC,IAAAvN,OAAA,GACAgG,KAAAk1C,KAUA9V,EAAA/lC,UAAA26D,gBAAA,SAAA1sD,EAAAC,GAEA,MAAA2tC,EAAAyd,EAAA,QAAA/pD,qBAAA3L,EACA9D,KAAA2wC,aAAAxiC,EAAAC,EAAApO,MACA,GAAA+7C,EAAA,CAEA3tC,IAAAvN,OAAA,GACA,GAAAk7C,IAWA9V,EAAA/lC,UAAA46D,aAAA,SAAA3sD,EAAAC,GAEA,MAAA6hC,EAAAupB,EAAA,QAAA/pD,iBAAA,MACAzP,KAAA+6D,iBAAA5sD,EAAAC,EAAApO,MACA,GAAAiwC,KAAA,IACA,MAAArwB,EAAA,IAAAo7C,EAAA,cACAx8C,EAAAyxB,EAAA,GACAjxB,GAAAR,EAAA3d,QACA,IAAA2N,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAwhC,EAAApvC,OAA4C2N,EAAAC,IAAQD,EACpD7N,OAAAsO,EAAA,OAAAtO,CAAA6d,EAAAyxB,EAAAzhC,IACAwQ,EAAAnY,KAAA2X,EAAA3d,QAIA,OAFA+e,EAAAhB,mBACAq8C,EAAA,QAAAvtC,IAAAlP,EAAAQ,GACAY,IAaAqmB,EAAA/lC,UAAAg7D,WAAA,SAAA/sD,EAAAC,GAEA,MAAAoQ,EAAAg7C,EAAA,QAAA/pD,iBAAA,MACAzP,KAAAm7D,eAAAhtD,EAAAC,EAAApO,MACA,GAAAwe,EAAA,CACA,MAAAE,EAAA,IAAA08C,EAAA,cAEA,OADA18C,EAAAE,mBAAAq8C,EAAA,QAAAvtC,IAAAlP,GACAE,IAaAunB,EAAA/lC,UAAAm7D,cAAA,SAAAltD,EAAAC,GAEA,MAAAoQ,EAAAg7C,EAAA,QAAA/pD,iBAAA,MACAzP,KAAAs7D,kBAAAntD,EAAAC,EAAApO,MACA,OAAAW,OAAA+xB,EAAA,eAAA/xB,CAAA6d,EAAA,MACAA,EAAA,MAAAA,EAAA,MACAA,EAAA,QAUAynB,EAAA/lC,UAAAq7D,aAAA,SAAAptD,EAAAC,GACA,IAAAihB,EAAAmqC,EAAA,QAAAjqC,kBAAAphB,GAAA,GACA,MAAAqtD,EAAA,6CAEAh9C,KACA,IAAAkR,EACA,KAAAA,EAAA8rC,EAAA7rC,KAAAN,IACA7Q,EAAA3X,KAAA2a,WAAAkO,EAAA,KACAL,IAAAqsB,OAAAhsB,EAAA,GAAA7uB,QAEA,QAAAwuB,EACA,OAEA,MACA6rB,EADA9sC,EAAA,GACA,QACA,IAAA+sC,EAAA,MACA,GAAAD,EAAA,CAEAC,EADAx6C,OAAA86D,EAAA,IAAA96D,CAAAu6C,GACAI,qBAEA,WAAAH,EAAA,CACA,IAAA3sC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA+P,EAAA3d,OAA4C2N,EAAAC,EAAQD,GAAA,GACpD,MAAAyW,EAAAzG,EAAAhQ,GACAwW,EAAAxG,EAAAhQ,EAAA,GACAgQ,EAAAhQ,GAAAwW,EACAxG,EAAAhQ,EAAA,GAAAyW,GAGA,MAAAR,EAAAjG,EAAA3d,OAIA,OAHA,GAAA4jB,GACAjG,EAAA3X,KAAA,GAEA,IAAA4d,EAGAjG,OAHA,GAaAynB,EAAA/lC,UAAAw7D,iBAAA,SAAAvtD,EAAAC,GACA,MAAAihB,EAAAmqC,EAAA,QAAAjqC,kBAAAphB,GAAA,GAAAa,QAAA,iBACAlD,EAAAsC,EAAA,GACA8sC,EAAApvC,EAAA,QACA6vD,EAAA7vD,EAAA,aACA,IAAAqvC,EAAA,MACA,GAAAD,EAAA,CAEAC,EADAx6C,OAAA86D,EAAA,IAAA96D,CAAAu6C,GACAI,qBAEA,MAAAG,EAAApsB,EAAA7Z,MAAA,OAEA,IAaAwP,EAAAC,EAAAu2B,EAbAogB,EAAA,EACAztD,EAAAy/B,aAAA,gBACAguB,EAAAC,EAAA,EAAA1rC,6BACAhiB,EAAAy/B,aAAA,iBACGz/B,EAAAy/B,aAAA,aACHguB,EAAAC,EAAA,EAAA1rC,6BACAhiB,EAAAy/B,aAAA,cACGz/B,EAAAiwC,WAAAxQ,aAAA,gBACHguB,EAAAC,EAAA,EAAA1rC,6BACAhiB,EAAAiwC,WAAAxQ,aAAA,iBACG+tB,IACHC,EAAAC,EAAA,EAAA1rC,6BAAAwrC,IAGA,MAAAn9C,KACA,QAAAhQ,EAAA,EAAAC,EAAAgtC,EAAA56C,OAAqC2N,EAAAC,EAAQD,GAAAotD,EAC7C52C,EAAAxD,WAAAi6B,EAAAjtC,IACAyW,EAAAzD,WAAAi6B,EAAAjtC,EAAA,IACAgtC,EAAA,IAAAogB,EAAAp6C,WAAAi6B,EAAAjtC,EAAA,MACA,OAAA2sC,EAAAO,OAAA,KACAl9B,EAAA3X,KAAAme,EAAAC,EAAAu2B,GAEAh9B,EAAA3X,KAAAoe,EAAAD,EAAAw2B,GAGA,OAAAh9B,GASAynB,EAAA/lC,UAAA2vC,oCACAO,8BACA0rB,IAAAtC,EAAA,QAAA7sB,aAAA1G,EAAA/lC,UAAAq7D,cACAQ,QAAAvC,EAAA,QAAA7sB,aAAA1G,EAAA/lC,UAAAw7D,oBAUAz1B,EAAA/lC,UAAAgwC,4BACAE,8BACA4rB,SAAA/1B,EAAA/lC,UAAA06D,gBACAqB,SAAAh2B,EAAA/lC,UAAA26D,kBAUA50B,EAAA/lC,UAAA2tC,mBACAuC,8BACAz1B,MAAA6+C,EAAA,QAAA7sB,aAAA8b,EAAA,EAAAvoD,UAAAmuC,WACArzB,WAAAw+C,EAAA,QAAA7sB,aACA8b,EAAA,EAAAvoD,UAAAuuC,gBACAj0B,WAAAg/C,EAAA,QAAA7sB,aACA8b,EAAA,EAAAvoD,UAAAuvC,gBACA10B,gBAAAy+C,EAAA,QAAA7sB,aACA8b,EAAA,EAAAvoD,UAAA0uC,qBACArmB,WAAAixC,EAAA,QAAA7sB,aACA8b,EAAA,EAAAvoD,UAAA4vC,gBACAj1B,QAAA2+C,EAAA,QAAA7sB,aAAA8b,EAAA,EAAAvoD,UAAA8vC,aACA/0B,aAAAu+C,EAAA,QAAA7sB,aACA8b,EAAA,EAAAvoD,UAAA6uC,kBACA6Q,QAAA4Z,EAAA,QAAA7sB,aAAA1G,EAAA/lC,UAAA46D,cACAjb,aAAA2Z,EAAA,QAAA7sB,aACA1G,EAAA/lC,UAAA85D,mBACAta,MAAA8Z,EAAA,QAAA7sB,aAAA1G,EAAA/lC,UAAAg7D,YACAvb,WAAA6Z,EAAA,QAAA7sB,aACA1G,EAAA/lC,UAAA25D,iBACA/Z,SAAA0Z,EAAA,QAAA7sB,aAAA1G,EAAA/lC,UAAAm7D,iBAUAp1B,EAAA/lC,UAAA45D,qBACA1pB,8BACA2P,YAAAyZ,EAAA,QAAApqD,gBACA62B,EAAA/lC,UAAAg6D,oBACAgC,aAAA1C,EAAA,QAAApqD,gBACA62B,EAAA/lC,UAAAg6D,sBAUAj0B,EAAA/lC,UAAA+5D,uBACA7pB,8BACA6P,cAAAuZ,EAAA,QAAApqD,gBACA62B,EAAA/lC,UAAAk6D,sBACA+B,eAAA3C,EAAA,QAAApqD,gBACA62B,EAAA/lC,UAAAk6D,wBAUAn0B,EAAA/lC,UAAAi6D,sBACA/pB,8BACA51B,WAAAg/C,EAAA,QAAApqD,gBACAq5C,EAAA,EAAAvoD,UAAAuvC,gBACAiQ,MAAA8Z,EAAA,QAAApqD,gBAAA62B,EAAA/lC,UAAAg7D,cAUAj1B,EAAA/lC,UAAAm6D,wBACAjqB,8BACAv1B,QAAA2+C,EAAA,QAAApqD,gBAAAq5C,EAAA,EAAAvoD,UAAA8vC,aACA4P,QAAA4Z,EAAA,QAAApqD,gBAAA62B,EAAA/lC,UAAA46D,gBAUA70B,EAAA/lC,UAAA66D,kBACA3qB,8BACA8N,QAAAsb,EAAA,QAAA7sB,aAAA1G,EAAA/lC,UAAAo6D,cAUAr0B,EAAA/lC,UAAAi7D,gBACA/qB,8BACAllB,SAAAsuC,EAAA,QAAA7sB,aAAA1G,EAAA/lC,UAAAs6D,gBAUAv0B,EAAA/lC,UAAAo7D,mBACAlrB,8BACA8P,YAAAsZ,EAAA,QAAApqD,gBACA62B,EAAA/lC,UAAAw7D,kBACAvb,YAAAqZ,EAAA,QAAApqD,gBACA62B,EAAA/lC,UAAAw7D,oBAUAz1B,EAAA/lC,UAAAq6D,kBACAnqB,8BACAgsB,aAAA5C,EAAA,QAAA7sB,aACA1G,EAAA/lC,UAAAw6D,qBAUAz0B,EAAA/lC,UAAAu6D,mBACArqB,8BACAisB,kBAAA7C,EAAA,QAAA7sB,aACA1G,EAAA/lC,UAAAy6D,0BAWA10B,EAAA/lC,UAAAo8D,UAAA,SAAAnuD,EAAAhD,EAAAiD,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACA88C,EAAA7xC,EAAA,KACAywD,EAAA5e,EAAA,IACAxvC,EAAAE,aAAA,eAAAkuD,GACA,MAAA96D,EAAAqK,EAAA,QACA,IAAAqvC,EAAA,MACA15C,IACA05C,EAAAx6C,OAAA86D,EAAA,IAAA96D,CAAAc,GAAA65C,sBAEA,MAAAj8B,EAAAlU,EAAA0hB,iBACA,IAAA4uB,EAOA,GAJAA,EADA,OAAAN,EAAAO,OAAA,KACAr8B,EAAA,OAAAA,EAAA,GAEAA,EAAA,OAAAA,EAAA,GAEAs+B,EAAA,CAGAlC,GAAA,KADAp8B,EAAA,OAGAw8C,EAAA,EAAAprC,oBAAAtiB,EAAAstC,IAWAxV,EAAA/lC,UAAA09C,WAAA,SAAAv+B,EAAA7d,EAAAi9C,GACA,IAAAtD,EAAA,MACA35C,IACA25C,EAAAx6C,OAAA86D,EAAA,IAAA96D,CAAAa,GAAA85C,sBAEA,IAAAG,EAAA,OAAAN,EAAAO,OAAA,KACAr8B,EAAA,OAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,GACA,GAAAo/B,EAAA,CAGAhD,GAAA,KADAp8B,EAAA,OAIA,OAAAo8B,GAUAxV,EAAA/lC,UAAAs8D,cAAA,SAAAruD,EAAAhD,EAAAiD,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACA88C,EAAA7xC,EAAA,KACAywD,EAAA5e,EAAA,IACAxvC,EAAAE,aAAA,eAAAkuD,GACA,MAAA96D,EAAAqK,EAAA,QAEAqhB,EAAAhiB,EAAA0hB,iBACApI,EAAA0I,EAAAtsB,OACA6hB,EAAA,IAAAliB,MAAAikB,GACA,IAAApF,EACA,QAAA7Q,EAAA,EAAiBA,EAAAiW,IAASjW,EAC1B6Q,EAAA8N,EAAA3e,GACAkU,EAAAlU,GAAAxO,KAAA49C,WAAAv+B,EAAA5d,EAAAk8C,GAEAke,EAAA,EAAAprC,oBAAAtiB,EAAAuU,EAAAtO,KAAA,OAUA6xB,EAAA/lC,UAAA4+C,YAAA,SAAA3wC,EAAAvM,EAAAwM,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QACAY,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAq6D,EAAAtC,EAAA,QAAA/c,gBAAAtuC,EAAA6+B,aAAA,OACA7+B,EAAAwiB,YAAAmrC,GACA97D,KAAAs8D,UAAAR,EAAAl6D,EAAAwM,IAQA63B,EAAAuZ,uBACApP,8BACA8P,YAAAsZ,EAAA,QAAA1c,kBAAA+e,EAAA,EAAAprC,qBACA0vB,YAAAqZ,EAAA,QAAA1c,kBAAA+e,EAAA,EAAAprC,uBAUAwV,EAAA/lC,UAAAq/C,cAAA,SAAApxC,EAAA5M,EAAA6M,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QACAY,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MACA46B,GAAA96B,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,IACAi4D,EAAA,QAAAtc,qBACM/uC,QAAW83B,EAAAuZ,sBACjBga,EAAA,QAAA/Z,6BACApjB,EACAjuB,GANA,6BAMApO,OAUAimC,EAAA/lC,UAAAs+C,iBAAA,SAAArwC,EAAAvM,EAAAwM,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QACAY,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAs6D,EAAAvC,EAAA,QAAA/c,gBAAAtuC,EAAA6+B,aAAA,WACA7+B,EAAAwiB,YAAAorC,GACA/7D,KAAAw8D,cAAAT,EAAAn6D,EAAAwM,IAWA63B,EAAA/lC,UAAA+9C,mBAAA,SAAA9yC,EAAAiD,EAAAiuC,GACA,MAAAvwC,EAAAsC,IAAAvN,OAAA,GACAu9C,EAAAtyC,EAAAqC,KACAkwC,EAAAvyC,EAAA,gBAIA,YAHAhI,IAAAu6C,IACAvyC,EAAA,oBAEA0tD,EAAA,QAAA/c,gBAAA2B,EAAApR,kBACAlpC,IAAAu6C,EAAA,wBAUApY,EAAA/lC,UAAA49C,uBAAA,SAAA3vC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACA88C,EAAA7xC,EAAA,KACArK,EAAAqK,EAAA,QAIA,GAHA,iBAAAqC,EAAAi/B,UAAA3rC,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,YAAA0M,EAAAi/B,UAAA,iBAAAj/B,EAAAi/B,SAAA,CACA,MAAAztB,EAAA/d,EAAAm8C,iBACAyb,EAAA,QAAAtc,qBACO/uC,OAAAwvC,OAAAl8C,WACPwkC,EAAA+X,kBACAh+C,KAAAi+C,mBACAt+B,EAAAvR,OAAAtK,EAAA9D,WACG,eAAAmO,EAAAi/B,SAAA,CACH,MAAA8Q,EAAAsb,EAAA,QAAA/c,gBAAAtuC,EAAA6+B,aAAA,WACA7+B,EAAAwiB,YAAAutB,GACAl+C,KAAAm+C,qBACAD,EAAAt8C,EAAAwM,KAWA63B,EAAA/lC,UAAAq9C,wBAAA,SAAApvC,EAAAvM,EAAAwM,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QAIA,GAHA,sBAAAsN,EAAAi/B,UAAA3rC,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,eAAA0M,EAAAi/B,UACA,sBAAAj/B,EAAAi/B,SAAA,CACA,MAAA2uB,EAAAvC,EAAA,QAAA/c,gBAAAtuC,EAAA6+B,aAAA,WACA7+B,EAAAwiB,YAAAorC,GACA/7D,KAAAw8D,cAAAT,EAAAn6D,EAAAwM,QACG,aAAAD,EAAAi/B,SAAA,CACH,MAAAliB,EAAAsuC,EAAA,QAAA/c,gBAAAtuC,EAAA6+B,aAAA,YACA7+B,EAAAwiB,YAAAzF,GACAlrB,KAAA09C,oBAAAxyB,EACAtpB,EAAAwM,KAWA63B,EAAA/lC,UAAAk/C,4BAAA,SAAAjxC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACA88C,EAAA7xC,EAAA,KACArK,EAAAqK,EAAA,QACAywC,EAAAzwC,EAAA,QACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAue,EAAApe,EAAAo2B,cACAwhC,EAAA,QAAAtc,qBAAgC/uC,OAAAwvC,OAAAl8C,UAAA86C,WAChCtW,EAAAoZ,oCACAr/C,KAAA6+C,mCAAA7+B,EACA5R,OAAAtK,EAAA9D,OAUAimC,EAAA/lC,UAAA8+C,iBAAA,SAAA7wC,EAAAvM,EACAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAY,EAAAqK,EAAA,QACA6xC,EAAA7xC,EAAA,KACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAA0rB,EAAAvrB,EAAA0zB,YACAkkC,EAAA,QAAAtc,qBAAgC/uC,OAAAwvC,OAAAl8C,WAChCwkC,EAAAgZ,yBACAua,EAAA,QAAArc,sBAAA,eAAAhwB,EACA/e,OAAAtK,EAAA9D,OAUAimC,EAAA/lC,UAAAw+C,6BAAA,SAAAvwC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACA88C,EAAA7xC,EAAA,KACArK,EAAAqK,EAAA,QACA6yC,EAAA7yC,EAAA,MACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAyrB,EAAAtrB,EAAAiyB,iBACA2lC,EAAA,QAAAtc,qBAAgC/uC,OAAAwvC,OAAAl8C,UAAAk9C,SAChC1Y,EAAA2Y,qCACA5+C,KAAA6+C,mCAAA3xB,EACA9e,OAAAtK,EAAA9D,OAUAimC,EAAA/lC,UAAAo+C,WAAA,SAAAnwC,EAAAyhC,EAAAxhC,GACA,MAAAmwC,EAAAib,EAAA,QAAA/c,gBAAAtuC,EAAA6+B,aAAA,cACA7+B,EAAAwiB,YAAA4tB,GACAv+C,KAAAw+C,iBAAAD,EAAA3O,EAAAxhC,IAUA63B,EAAA/lC,UAAAo/C,6BAAA,SAAAnxC,EAAAyR,EAAAxR,GACA,MAAA4sB,EAAAh7B,KAAAo8C,uBACAx8B,EAAAxR,GACA4sB,IACA7sB,EAAAwiB,YAAAqK,GACAh7B,KAAA89C,uBAAA9iB,EAAApb,EAAAxR,KAWA63B,EAAA/lC,UAAAg/C,kBAAA,SAAA/wC,EAAAkR,EAAAjR,GACA,MAAA4sB,EAAAw+B,EAAA,QAAA/c,gBAAAtuC,EAAA6+B,aAAA,SACA7+B,EAAAwiB,YAAAqK,GACAh7B,KAAA8+C,YAAA9jB,EAAA3b,EAAAjR,IAUA63B,EAAA/lC,UAAAi/C,8BAAA,SAAAhxC,EAAA0vC,EAAAzvC,GACA,MAAA4sB,EAAAh7B,KAAAo8C,uBAAAyB,EAAAzvC,GACA4sB,IACA7sB,EAAAwiB,YAAAqK,GACAh7B,KAAAu9C,wBAAAviB,EAAA6iB,EAAAzvC,KAWA63B,EAAA/lC,UAAAi+C,qBAAA,SAAAhwC,EAAAyR,EAAAxR,GACA,MAAA4sB,EAAAw+B,EAAA,QAAA/c,gBAAAtuC,EAAA6+B,aAAA,gBACA7+B,EAAAwiB,YAAAqK,GACAh7B,KAAA89C,uBAAA9iB,EAAApb,EAAAxR,IAUA63B,EAAA/lC,UAAAw9C,oBAAA,SAAAvvC,EAAA0vC,EAAAzvC,GACA,MAAA4sB,EAAAw+B,EAAA,QAAA/c,gBAAAtuC,EAAA6+B,aACA,qBACA7+B,EAAAwiB,YAAAqK,GACAh7B,KAAAu9C,wBAAAviB,EAAA6iB,EAAAzvC,IASA63B,EAAA/lC,UAAA68C,qBAAA,SAAA5uC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAqDsC,IAAAvN,OAAA,GACrDmQ,EAAArQ,OAAA87D,EAAA,OAAA97D,IAAwBmL,GAExB,IAAAX,EADA6F,EAAA7C,OAIAhD,EAFA3K,MAAA+c,QAAA3b,GACAkK,EAAAsxC,eACAz8C,OAAA86D,EAAA,gBAAA96D,CACAiB,EAAAkK,EAAAuxC,kBAAAvxC,EAAAsxC,gBAEAx7C,EAGAjB,OAAAmtC,EAAA,qBAAAntC,CAA6D,KAAAmL,GAE7D0tD,EAAA,QAAAtc,oBACA,EAAAjX,EAAAqX,sBACAt9C,KAAAo8C,wBAAAjxC,GACAiD,OAAAtK,EAAA9D,OASAimC,EAAA/lC,UAAAw8C,oBAAA,SAAAvuC,EAAA3B,EAAA4B,GACA,MAAA2/B,EAAAvhC,EAAAmwC,QACA5O,GACA5/B,EAAAE,aAAA,MAAA0/B,GAEA,MAAAjiC,EAAoCsC,IAAAvN,OAAA,GACpCkS,EAAAjH,EAAA,UACAxK,EAAAkL,EAAA4Z,kBACAta,EAAA8wC,cACA9wC,EAAA8wC,eACA9wC,EAAA8wC,YAAA7pC,OAEA,MAAAiH,EAAAxN,EAAAgP,gBACAjK,KACA8qB,KACA,UAAA11B,KAAAqT,EAAA,CACA,MAAA7O,EAAA6O,EAAArT,GACA,OAAAwE,IACAoG,EAAA1K,KAAAF,GACA01B,EAAAx1B,KAAAsE,GACAxE,GAAArF,GAAA6J,aAAAuxD,EAAA,QACA/1D,KAAAmF,EAAA8wC,YAAA7pC,KACAjH,EAAA8wC,YAAA7pC,GAAApM,GAAA6yD,EAAA,QAAA1c,kBACA98C,KAAA+8C,qBAAA/8C,OAGA2G,KAAAmF,EAAA8wC,YAAA7pC,KACAjH,EAAA8wC,YAAA7pC,GAAApM,GAAA6yD,EAAA,QAAA1c,kBACA+e,EAAA,EAAAprC,uBAKA,MAAAzf,EAAArQ,OAAA87D,EAAA,OAAA97D,IAAwBmL,GACxBkF,EAAA7C,OACAqrD,EAAA,QAAAtc,oBACA,EAAApxC,EAAA8wC,YACA4c,EAAA,QAAArc,2BAAAr5C,EAAAiP,GACAspB,EACAjuB,EAAAmD,IAUA00B,EAAA/lC,UAAAy8D,qBAAA,SAAAxuD,EAAAvB,EAAAwB,GACA,MAAAtC,EAAoCsC,IAAAvN,OAAA,GACpCqO,EAAApD,EAAA,YACAiH,EAAAjH,EAAA,UACA8wC,KACAA,EAAA7pC,MACA6pC,EAAA7pC,GAAA7D,GAAAsqD,EAAA,QAAA1c,kBACA98C,KAAA08C,oBAAA18C,MACA,MAAAgR,EAAArQ,OAAA87D,EAAA,OAAA97D,IAAwBmL,GACxBkF,EAAA7C,OACAqrD,EAAA,QAAAtc,oBACA,EACAN,EACA4c,EAAA,QAAArc,sBAAAjuC,EAAA6D,GAAAnG,EACAwB,IAQA63B,EAAAoZ,qCACAjP,8BACA6P,cAAAuZ,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAo/C,8BACA7O,cAAA+oB,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAo/C,gCASArZ,EAAAgZ,0BACA7O,8BACAC,YAAAmpB,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAg/C,qBASAjZ,EAAA2Y,sCACAxO,8BACAG,iBAAAipB,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAi/C,+BACAY,YAAAyZ,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAi/C,iCASAlZ,EAAA+X,mBACA5N,8BACA6rB,SAAAzC,EAAA,QAAA1c,kBAAA7W,EAAA/lC,UAAAo+C,YACA0d,SAAAxC,EAAA,QAAA1c,kBAAA7W,EAAA/lC,UAAAo+C,cASArY,EAAAqX,uBACAlN,8BACAsP,MAAA8Z,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAq9C,yBACAoC,WAAA6Z,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAw+C,8BACA/jC,MAAA6+C,EAAA,QAAA1c,kBAAA7W,EAAA/lC,UAAA4+C,aACA9jC,WAAAw+C,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAA8+C,kBACAxkC,WAAAg/C,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAq9C,yBACAxiC,gBAAAy+C,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAw+C,8BACAn2B,WAAAixC,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAs+C,kBACA3jC,QAAA2+C,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAA49C,wBACA7iC,aAAAu+C,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAk/C,6BACAQ,QAAA4Z,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAA49C,wBACA+B,aAAA2Z,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAk/C,6BACAU,SAAA0Z,EAAA,QAAA1c,kBACA7W,EAAA/lC,UAAAq/C,iBAUAtZ,EAAA+Z,mCACAjlC,gBAAA,mBACA4kC,WAAA,cACA1kC,aAAA,gBACA4kC,aAAA,iBAYA5Z,EAAA/lC,UAAA2+C,mCAAA,SAAA1zC,EAAAiD,EAAAiuC,GACA,MAAA+B,EAAAhwC,IAAAvN,OAAA,GAAAsN,KACA,OAAAqrD,EAAA,QAAA/c,gBAAA,6BACAxW,EAAA+Z,kCAAA5B,EAAAhR,YAYAnH,EAAA/lC,UAAAk8C,uBAAA,SAAAjxC,EAAAiD,EAAAiuC,GACA,MAAAvwC,EAAAsC,IAAAvN,OAAA,GACAy7C,EAAAxwC,EAAA,aACAywC,EAAAzwC,EAAA,QACA6yC,EAAA7yC,EAAA,MACA0wC,EAAA1wC,EAAA,WACA,IAAAshC,EAeA,OAdA5sC,MAAA+c,QAAApS,GAYAiiC,EAAA,WAVA,kBADAA,EAA2C,EAAA3mB,aAC3C,IAAA61B,EACAlP,EAAA,eACK,YAAAA,IAAA,IAAAmP,EACLnP,EAAA,UACK,eAAAA,IAAA,IAAAuR,EACLvR,EAAA,QACK,oBAAAA,IAAA,IAAAoP,IACLpP,EAAA,cAKAosB,EAAA,QAAA/c,gBAAA,6BACArP,IAaAnH,EAAA/lC,UAAAgQ,kBAAA,SAAAtO,EAAAyL,GACAA,EAAArN,KAAA48D,aAAAvvD,GACA,MAAAwvD,EAAArD,EAAA,QAAA/c,gBAAA,qCACA3wC,GAAmBqC,KAAA0uD,EAAAlf,KAAA39C,KAAA29C,KAAAl8C,QAAAzB,KAAAyB,QACnBk9C,MAAA3+C,KAAA05D,OAAAnd,QAAAv8C,KAAAy5D,SACAnd,aAAAt8C,KAAA45D,cAAApd,WAAAx8C,KAAA25D,aAKA,OAJAtsD,GACA1M,OAAA87D,EAAA,OAAA97D,CAAAmL,EAAAuB,GAEArN,KAAA+8C,qBAAA8f,EAAAj7D,GAAAkK,IACA+wD,GAaA52B,EAAA/lC,UAAAmb,cAYA4qB,EAAA/lC,UAAA+P,kBAAA,SAAArD,EAAAS,GACAA,EAAArN,KAAA48D,aAAAvvD,GACA,MAAAc,EAAAqrD,EAAA,QAAA/c,gBAAA,6BACA,kBACA+c,EAAA,QAAA3O,eAAA18C,EAAA,4CACA,qBAAAnO,KAAAwsC,gBACA,MAAA1gC,GACArK,QAAAzB,KAAAyB,QACAk8C,KAAA39C,KAAA29C,KACAgB,MAAA3+C,KAAA05D,OACAnd,QAAAv8C,KAAAy5D,SACAnd,aAAAt8C,KAAA45D,cACApd,WAAAx8C,KAAA25D,YACA5mD,UAAA/S,KAAA+S,UACA7D,YAAAlP,KAAAkP,aAMA,OAJA7B,GACA1M,OAAA87D,EAAA,OAAA97D,CAAAmL,EAAAuB,GAEArN,KAAA28D,qBAAAxuD,EAAAvB,GAAAd,IACAqC,GAEA9H,EAAA,4FCvuCA,QAAAC,EAAA,QACAA,EAAA,QACAA,EAAA,MACY6J,IAAZ7J,EAAA,QACAA,EAAA,KACYwqC,IAAZxqC,EAAA,QACAA,EAAA,SACAA,EAAA,iNAyBA,IAAMC,EAAU,WAMdvG,KAAK88D,2BAML98D,KAAK+8D,WAML/8D,KAAKynB,QAAU,IAAAu1C,EAAA/1D,SACbg2D,iBAAiB,IAOnBj9D,KAAKk9D,OAAS,IAAAC,EAAAl2D,SACZygB,OAAQ1nB,KAAKynB,QACbxa,MAAOjN,KAAKo9D,eAAeh4D,KAAKpF,MAChCq9D,sBAAsB,EACtBC,wBAAwB,KAW5B/2D,EAAQrG,UAAUqM,WAAa,SAASC,EAAS+wD,GAC/Cj1D,EAAArB,QAAY8J,OAAOwsD,GAAc,GACjCj1D,EAAArB,QAAY8J,OAAOwsD,EAAav9D,KAAK+8D,QAAQl8D,QAC7C,IAAM28D,EAAartD,EAAOuC,OAAOlG,GAAS8Z,WAC1CtmB,KAAK88D,wBAAwBU,GAAcD,EAC3Cv9D,KAAK+8D,QAAQQ,GAAY3wD,SAAS4wD,GAAchxD,EAChDxM,KAAKynB,QAAQlb,WAAWC,IAS1BjG,EAAQrG,UAAUuM,cAAgB,SAASD,EAAS+wD,GAClDj1D,EAAArB,QAAY8J,OAAOwsD,GAAc,GACjCj1D,EAAArB,QAAY8J,OAAOwsD,EAAav9D,KAAK+8D,QAAQl8D,QAC7C,IAAM28D,EAAartD,EAAOuC,OAAOlG,GAAS8Z,kBACnCtmB,KAAK88D,wBAAwBU,UAC7Bx9D,KAAK+8D,QAAQQ,GAAY3wD,SAAS4wD,GACzCx9D,KAAKynB,QAAQhb,cAAcD,IAQ7BjG,EAAQrG,UAAUwM,MAAQ,SAAS6wD,GACjCj1D,EAAArB,QAAY8J,OAAOwsD,GAAc,GACjCj1D,EAAArB,QAAY8J,OAAOwsD,EAAav9D,KAAK+8D,QAAQl8D,QAC7C,IAAM64B,EAAQ15B,KAAK+8D,QAAQQ,GAC3B,IAAK,IAAMC,KAAc9jC,EAAM9sB,SAC7B5M,KAAKyM,cAAcitB,EAAM9sB,SAAS4wD,GAAaD,GAEjDj1D,EAAArB,QAAY8J,OAAO+/B,EAAM+B,QAAQnZ,EAAM9sB,YAQzCrG,EAAQrG,UAAUu9D,SAAW,WAC3B,OAAOz9D,KAAKk9D,QAQd32D,EAAQrG,UAAUw9D,kBAAoB,WACpC,IAAMH,EAAav9D,KAAK+8D,QAAQl8D,OAKhC,OAJAb,KAAK+8D,QAAQl2D,MACX0f,cAAerF,EAAAja,QAAa02D,gBAC5B/wD,cAEK,IAAAgxD,EAAA32D,QAA0BjH,KAAMu9D,IAQzCh3D,EAAQrG,UAAUwX,KAAO,SAAStP,GAChCpI,KAAKk9D,OAAO7rD,OAAOjJ,IAUrB7B,EAAQrG,UAAU8M,SAAW,SAASC,EAAOswD,GAC3Cj1D,EAAArB,QAAY8J,OAAOwsD,GAAc,GACjCj1D,EAAArB,QAAY8J,OAAOwsD,EAAav9D,KAAK+8D,QAAQl8D,QAC7Cb,KAAK+8D,QAAQQ,GAAYh3C,cAA0B,OAAVtZ,EACvCiU,EAAAja,QAAa02D,gBAAkBz8C,EAAAja,QAAa42D,eAAe5wD,IAU/D1G,EAAQrG,UAAUk9D,eAAiB,SAAS5wD,EAASs2C,GACnD,IAAM0a,EAAartD,EAAOuC,OAAOlG,GAAS8Z,WAC1Che,EAAArB,QAAY8J,OAAOysD,KAAcx9D,KAAK88D,yBACtC,IAAMS,EAAav9D,KAAK88D,wBAAwBU,GAEhD,OADcx9D,KAAK+8D,QAAQQ,GACdh3C,cAAc/Z,EAASs2C,KAOtCv8C,EAAQY,OAASC,QAAQD,OAAO,yBAC9By2D,EAAA32D,QAAsBE,OAAOK,QAEhBH,QAAQ,wBAAyBd,GAChDe,EAAAL,QAASE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG9BjB,qIC9Kf,MAAAu3D,EAAA,WACAn8B,EAAA,QAAAphC,KAAAP,OAGAW,OAAAG,EAAA,SAAAH,CAAAm9D,EAAAn8B,EAAA,SAMAm8B,EAAA59D,UAAA06C,iBAAA,SAAA5Y,GACA,QAAA5M,EAAA4M,EAAAE,WAA8B9M,EAAGA,IAAA+M,YACjC,GAAA/M,EAAAzmB,UAAAC,KAAAC,aACA,OAAA7O,KAAA66C,aAAAzlB,GAGA,aAOA0oC,EAAA59D,UAAA26C,aAAA,SAAA1sC,GACA,MAAA4vD,EAAAC,EAAA,QAAAvuD,mBACAquD,EAAAG,SAAA9vD,MACA,OAAA4vD,GAAA,MAUAD,EAAAI,aAAA,SAAA/vD,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAquD,EAAAK,iBAAAhwD,EAAAC,IAUA0vD,EAAAM,mBAAA,SAAAjwD,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAquD,EAAAO,wBAAAlwD,EAAAC,IAUA0vD,EAAAQ,gBAAA,SAAAnwD,EAAAC,GACA,MAAA5G,EAAA2G,EAAAy/B,aAAA,QACA,GAAApmC,EAGA,OAAAw2D,EAAA,QAAAvuD,iBAAmCjI,QACnCs2D,EAAAS,oBAAApwD,EACAC,IAUA0vD,EAAAU,iBAAA,SAAArwD,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAquD,EAAAW,sBAAAtwD,EAAAC,IAUA0vD,EAAAY,SAAA,SAAAvwD,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAquD,EAAAa,aAAAxwD,EAAAC,IAUA0vD,EAAAc,SAAA,SAAAzwD,EAAAC,GACA,MAAAywD,EAAAlc,EAAA,EAAAC,SAAAz0C,GACA,GAAA0wD,EAGA,OAAAb,EAAA,QAAAvuD,iBAAmCovD,QACnCf,EAAAgB,wBAAA3wD,EAAAC,IAUA0vD,EAAAiB,UAAA,SAAA5wD,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBAAoCquD,EAAAkB,cACpC7wD,EAAAC,IAUA0vD,EAAAmB,eAAA,SAAA9wD,EAAAC,GACA,MAAA5G,EAAA2G,EAAAy/B,aAAA,QACAziC,EAAA6yD,EAAA,QAAAvuD,mBACAquD,EAAAoB,mBAAA/wD,EAAAC,GACAjD,IAIAiD,IAAAvN,OAAA,GACA2G,GAAA2D,IAUA2yD,EAAAqB,wBAAA,SAAAhxD,EACAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAquD,EAAAsB,6BAAAjxD,EACAC,IAUA0vD,EAAAuB,WAAA,SAAAlxD,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAquD,EAAAwB,eAAAnxD,EAAAC,IAUA0vD,EAAAyB,2BAAA,SAAApxD,EACAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACMquD,EAAA0B,gCAAArxD,EACNC,IAUA0vD,EAAA2B,oBAAA,SAAAtxD,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACMquD,EAAA4B,yBAAAvxD,EACNC,IAUA0vD,EAAA6B,qBAAA,SAAAxxD,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACMquD,EAAA8B,0BAAAzxD,EACNC,IAUA0vD,EAAA+B,WAAA,SAAA1xD,EAAAC,GACA,OAAA+gB,EAAA,EAAAkB,WAAAliB,IASA2vD,EAAAgC,iBACA,KACA,kCASAhC,EAAAG,SAAAD,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAC,sBAAA/B,EAAA,QAAA9U,yBACA4U,EAAAyB,4BACAS,gBAAAhC,EAAA,QAAA9U,yBACA4U,EAAA6B,sBACAM,mBAAAjC,EAAA,QAAA9U,yBACA4U,EAAAqB,2BASArB,EAAAK,iBAAAH,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAI,cAAAlC,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACA8vC,KAAAnC,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,YACA+vC,mBAAApC,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACAgwC,WAAArC,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,YACAiwC,QAAAtC,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,YACAkwC,sBAAAvC,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,cASAytC,EAAAO,wBAAAL,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAU,MAAAxC,EAAA,QAAAyC,yBAAA3C,EAAA+B,cASA/B,EAAAS,oBAAAP,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAY,cAAA1C,EAAA,QAAA9U,yBACA4U,EAAAM,sBASAN,EAAAW,sBAAAT,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAa,MAAA3C,EAAA,QAAA9U,yBAAA4U,EAAAuB,YACAuB,QAAA5C,EAAA,QAAA9U,yBAAA4U,EAAAI,gBASAJ,EAAAa,aAAAX,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAe,KAAA7C,EAAA,QAAA9U,yBAAA4U,EAAAiB,aASAjB,EAAAkB,cAAAhB,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAgB,IAAA9C,EAAA,QAAAyC,yBAAA3C,EAAAc,UACAmC,UAAAj9D,IASAg6D,EAAAoB,mBAAAlB,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAkB,IAAAhD,EAAA,QAAA9U,yBAAA4U,EAAAY,YASAZ,EAAAsB,6BAAApB,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAmB,UAAAnD,EAAAmB,iBASAnB,EAAAwB,eAAAtB,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAoB,MAAAlD,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,YACA8wC,UAAAnD,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,cASAytC,EAAAgB,wBAAAd,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAsB,WAAApD,EAAA,QAAAyC,yBACA3C,EAAAQ,mBASAR,EAAA4B,yBACA1B,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAuB,eAAArD,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACAixC,aAAAtD,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,YACAkxC,YAAAvD,EAAA,QAAA9U,yBACA4U,EAAAU,oBASAV,EAAA0B,gCACAxB,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACA0B,SAAAxD,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,YACAoxC,kBAAAzD,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,YACAqxC,KAAA1D,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,YACAsxC,MAAA3D,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,YACAuxC,mBAAA5D,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACAwxC,YAAA7D,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,cASAytC,EAAA8B,0BACA5B,EAAA,QAAAzuD,gBACAuuD,EAAAgC,iBACAgC,aAAA9D,EAAA,QAAA9U,yBAAA/5B,EAAA,EAAAkB,YACA0xC,aAAA/D,EAAA,QAAA9U,yBAAAvG,EAAA,EAAAC,UACAof,eAAAhE,EAAA,QAAA9U,yBACA4U,EAAA2B,uBAEA,IAAAwC,EAAA,EC1ZA,MAAAC,EAAA,WACAvgC,EAAA,QAAAphC,KAAAP,MAMAA,KAAAmiE,WAAA,IAAAF,GAGAthE,OAAAG,EAAA,SAAAH,CAAAuhE,EAAAvgC,EAAA,SAWAugC,EAAAhiE,UAAAwyC,KAMAwvB,EAAAhiE,UAAA06C,iBAAA,SAAA5Y,GACA,QAAA5M,EAAA4M,EAAAE,WAA8B9M,EAAGA,IAAA+M,YACjC,GAAA/M,EAAAzmB,UAAAC,KAAAC,aACA,OAAA7O,KAAA66C,aAAAzlB,GAGA,aAOA8sC,EAAAhiE,UAAA26C,aAAA,SAAA1sC,GACA,MAAAm5C,EAAAn5C,EAAAy/B,aAAA,WAAAtd,OACA,IAAA8xC,EAAApiE,KAAAmiE,WAAAtnB,aAAA1sC,GACA,OAAAi0D,GAGAA,EAAA,QAAA9a,GACA8a,EAAApE,EAAA,QAAAvuD,gBAAA2yD,EACAF,EAAAjE,SAAA9vD,QACA,MALA,MAeA+zD,EAAAG,cAAA,SAAAl0D,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAyyD,EAAAI,kBAAAn0D,EAAAC,IAUA8zD,EAAAK,WAAA,SAAAp0D,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAyyD,EAAAM,eAAAr0D,EAAAC,IAUA8zD,EAAAO,mBAAA,SAAAt0D,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAyyD,EAAAQ,aAAAv0D,EAAAC,IAUA8zD,EAAAS,WAAA,SAAAx0D,EAAAC,GACA,MAAAnB,EAAA+wD,EAAA,QAAAvuD,mBACAyyD,EAAAU,eAAAz0D,EAAAC,GACA,IAAAnB,EACA,OAEA,MAAA41D,EAAA,SAAA10D,EAAAy/B,aAAA,aAEA,OADA3gC,EAAA,UAAA41D,EACA51D,GAWAi1D,EAAAY,uBAAA,SAAA30D,EACAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAyyD,EAAAa,mBAAA50D,EAAAC,IAUA8zD,EAAAc,gBAAA,SAAA70D,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAyyD,EAAAe,mBAAA90D,EAAAC,IAUA8zD,EAAAgB,iBAAA,SAAA/0D,EAAAC,GACA,MAAAy5B,EAAA15B,EAAAy/B,aAAA,UACA/0B,EAAA1K,EAAAy/B,aAAA,YACAu1B,EAAAh1D,EAAAy/B,aAAA,gBACAw1B,KAUA,OATAv7B,IACAu7B,EAAA,OAAAv7B,GAEAhvB,IACAuqD,EAAA,SAAAvqD,GAEAsqD,IACAC,EAAA,aAAAD,GAEAC,GAUAlB,EAAAmB,sBAAA,SAAAl1D,EAAAC,GACA,MAAAue,EAAAqxC,EAAA,QAAAvuD,mBACAyyD,EAAAoB,oBAAAn1D,EAAAC,GACA,MAAAue,EAAA9rB,OAGA,OAAAF,OAAAY,EAAA,eAAAZ,CAAAgsB,IAUAu1C,EAAAqB,eAAA,SAAAp1D,EAAAC,GACA,MAAAo1D,KAGA,OAFAA,EAAA,OAAAr1D,EAAAy/B,aAAA,UACA41B,EAAA,KAAA7gB,EAAA,EAAAC,SAAAz0C,GACAq1D,GAUAtB,EAAAuB,iBAAA,SAAAt1D,EAAAC,GACA,MAAAue,EAAAwC,EAAA,EAAAkB,WAAAliB,GAAAqH,MAAA,KACA,IAAAmX,GAAA,GAAAA,EAAA9rB,OACA,OAEA,MAAAmkB,GAAA2H,EAAA,GACA1H,GAAA0H,EAAA,GACA,OAAAoD,MAAA/K,IAAA+K,MAAA9K,QAAA,GAGAD,EAAAC,IAUAi9C,EAAAwB,gBAAA,SAAAv1D,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAyyD,EAAAyB,YAAAx1D,EAAAC,IAUA8zD,EAAA0B,0BAAA,SAAAz1D,EACAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAyyD,EAAA2B,yBAAA11D,EACAC,IAUA8zD,EAAA4B,sBAAA,SAAA31D,EAAAC,GACA,OAAA4vD,EAAA,QAAAvuD,mBACAyyD,EAAA6B,oBAAA51D,EAAAC,IASA8zD,EAAApC,iBACA,KACA,mCASAoC,EAAA8B,qBACA,KACA,kCASA9B,EAAAjE,SAAAD,EAAA,QAAAzuD,gBACA2yD,EAAApC,iBACAmE,SAAAjG,EAAA,QAAA9U,yBACAgZ,EAAAG,iBASAH,EAAAI,kBAAAtE,EAAA,QAAAzuD,gBACA2yD,EAAApC,iBACAoE,MAAAlG,EAAA,QAAAyC,yBACAyB,EAAAK,YACA4B,cAAAnG,EAAA,QAAAyC,yBACAyB,EAAAO,sBASAP,EAAAM,eAAAxE,EAAA,QAAAzuD,gBACA2yD,EAAApC,iBACAsE,MAAApG,EAAA,QAAAyC,yBACAyB,EAAAS,YACA0B,OAAArG,EAAA,QAAAyC,yBACAtxC,EAAA,EAAAkB,YACAi0C,kBAAAtG,EAAA,QAAAyC,yBACAyB,EAAAY,wBACAyB,UAAAvG,EAAA,QAAAyC,yBACAyB,EAAAc,iBACAwB,YAAAxG,EAAA,QAAAyC,yBACAyB,EAAAgB,mBACGlF,EAAA,QAAAzuD,gBAAA2yD,EAAA8B,qBACHrC,MAAA3D,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACAmxC,SAAAxD,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACAo0C,iBAAAzG,EAAA,QAAA9U,yBACAgZ,EAAAmB,uBACAqB,WAAA1G,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,eASA6xC,EAAAU,eAAA5E,EAAA,QAAAzuD,gBACA2yD,EAAApC,iBACA6E,UAAA3G,EAAA,QAAAyC,yBACAyB,EAAAqB,iBACGvF,EAAA,QAAAzuD,gBAAA2yD,EAAA8B,qBACHrC,MAAA3D,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACAq0C,WAAA1G,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,eASA6xC,EAAAa,mBAAA/E,EAAA,QAAAzuD,gBACA2yD,EAAApC,iBACAqE,cAAAnG,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACAu0C,oBAAA5G,EAAA,QAAA9U,yBACAgZ,EAAA0B,6BAQA1B,EAAA2B,yBAAA7F,EAAA,QAAAzuD,gBACA2yD,EAAApC,iBACA+E,iBAAA7G,EAAA,QAAA5uD,gBACA8yD,EAAA4B,yBASA5B,EAAA6B,oBAAA/F,EAAA,QAAAzuD,gBACA2yD,EAAApC,iBACAgF,WAAA9G,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACA00C,WAAA/G,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAe,wBACA80C,WAAAhH,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAe,wBACA+0C,WAAAjH,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAe,wBACAg1C,WAAAlH,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAe,0BASAgyC,EAAAe,mBAAAjF,EAAA,QAAAzuD,gBACA2yD,EAAApC,iBACAqF,QAAAnH,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACAmwC,MAAAxC,EAAA,QAAAyC,yBACAtxC,EAAA,EAAAkB,aACG2tC,EAAA,QAAAzuD,gBAAA2yD,EAAA8B,qBACHU,WAAA1G,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,eASA6xC,EAAAoB,oBAAAtF,EAAA,QAAAzuD,gBACA2yD,EAAA8B,qBACAoB,YAAApH,EAAA,QAAA5uD,gBACA8yD,EAAAuB,kBACA4B,YAAArH,EAAA,QAAA5uD,gBACA8yD,EAAAuB,oBASAvB,EAAAQ,aAAA1E,EAAA,QAAAzuD,gBACA2yD,EAAApC,iBACAwF,kBAAAtH,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACAy0C,WAAA9G,EAAA,QAAAyC,yBACAyB,EAAAwB,kBACG1F,EAAA,QAAAzuD,gBAAA2yD,EAAA8B,qBACHuB,aAAAvH,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,YACAq0C,WAAA1G,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,eASA6xC,EAAAyB,YAAA3F,EAAA,QAAAzuD,gBACA2yD,EAAApC,iBACA0F,cAAAxH,EAAA,QAAA9U,yBACAgZ,EAAAuB,kBACAgC,iBAAAzH,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAa,aACA01C,UAAA1H,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAe,wBACAy1C,WAAA3H,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAe,wBACA01C,YAAA5H,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAe,wBACA21C,aAAA7H,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAe,yBACG8tC,EAAA,QAAAzuD,gBAAA2yD,EAAA8B,qBACHU,WAAA1G,EAAA,QAAA9U,yBACA/5B,EAAA,EAAAkB,eAEAhqB,EAAA,4FCxdA,QAAAC,EAAA,SACAA,EAAA,MACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDARA,IAAMC,GAsBNA,YAAsB,SAAS2K,GAC7B5I,EAAArB,QAAYsB,iBAAiB2I,EAA7B40D,EAAA7+D,SAEAtG,OAAOolE,eAAe70D,EAAa,UACjC+nB,IAAK,kBAAM/nB,EAAY80D,aACvBtgD,IAAK,SAAC7C,GACJ3R,EAAY+0D,UAAUpjD,OAiB5Btc,MAAgB,SAASmI,GACvBpG,EAAArB,QAAYsB,iBAAiBmG,EAA7Bw3D,EAAAj/D,SAEAtG,OAAOolE,eAAer3D,EAAO,WAC3By3D,cAAc,EAIdltC,IAAK,kBAAMvqB,EAAMomC,cAIjBpvB,IAAK,SAAC7C,GACJnU,EAAMujC,WAAWpvB,MAIrBliB,OAAOolE,eAAer3D,EAAO,WAC3By3D,cAAc,EAIdltC,IAAK,kBAAMvqB,EAAM03D,cAIjB1gD,IAAK,SAAC7C,GACJnU,EAAM23D,WAAWxjD,OAmBvBtc,aAAuB,SAASmI,EAAO8vB,GAErC,IAAI9W,SAKA4+C,EAAkB,KAKlBC,EAAkB,KAMhBC,EAoDN,SAASC,EAAW/3D,GAClB,IAAIg4D,EAAoCh4D,EAAMuqB,IAAI,cAClD,IAAMplB,EAAuCnF,EAAMuqB,IAAI,gBACvDvqB,EAAMgX,IAAI,eAAgBghD,GAAY,GAClC7yD,GACF4yD,EAAW5yD,IAnDT8yD,EA4DN,SAASC,EAAWl4D,GAClB,IAAIg4D,EAAoCh4D,EAAMuqB,IAAI,cAClD,IAAMplB,EAAuCnF,EAAMuqB,IAAI,gBACvDvqB,EAAMgX,IAAI,eAAgBghD,GAAY,GAClC7yD,GACF+yD,EAAW/yD,IAtDf,GATAnF,EAAMgX,IAAI,aAAc,GAAG,GAEvBhX,wBACFA,EAAMV,YAAY64D,GAAG,MAAO,SAACC,GACVA,EAAQ7+D,QAChByd,IAAI,eAAgBhX,KAI7BA,uBAA+B,CAEjC,GAAe,QADfgZ,EAAShZ,EAAM0mC,aAEb,OACS1tB,wBACT4+C,GAAmB,iBACnBC,GAAmB,cAAe,kBACzB7+C,wBACT4+C,GAAmB,kBACnBC,GAAmB,eAAgB,mBAEnCj+D,EAAArB,QAAY00B,KAAK,2BAGnBjU,EAAOm/C,GAAGP,EAAiB,WACzBE,EAAoB93D,GACpB8vB,EAAOuoC,gBAGTr/C,EAAOm/C,GAAGN,EAAiB,WACzBI,EAAoBj4D,GACpB8vB,EAAOuoC,gBAIXpmE,OAAOolE,eAAer3D,EAAO,WAC3By3D,cAAc,EACdltC,IAAK,kBAA6BvqB,EAAMuqB,IAAI,cAAiB,iBAiClD1yB,iGC1Lf,QAAAD,EAAA,QAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,QACAA,EAAA,UAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,UAGAA,EAAA,OAEAA,EAAA,WACAA,EAAA,UACAA,EAAA,UAGAA,EAAA,QAEAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,IACY6J,IAAZ7J,EAAA,IACYkT,IAAZlT,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,MACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,yUA+BA,IAAMC,EAAU,SAAVA,EAAmB8J,EAAI/E,EAAU/B,EAAY+uB,EAAW0uC,EAAcC,EAC1Et9D,EAAkB+vC,GAAc,IAAApoC,EAAAtR,KAMhCA,KAAKuQ,GAAKF,EAMVrQ,KAAKwQ,WAAajH,EAMlBvJ,KAAK21C,UAAYrqC,EASjBtL,KAAKknE,+BAAiC,KAQtClnE,KAAKmnE,cAAgBH,EAMrBhnE,KAAKonE,iBAAmBH,EAMxBjnE,KAAKgK,kBAAoBL,EAMzB3J,KAAKqnE,cAAgB/uC,EAAUU,IAAI,gBACjCV,EAAUW,IAAI,gBAAkB,KAMlCj5B,KAAKsnE,wBAA0BhvC,EAAUU,IAAI,0BAC3CV,EAAUW,IAAI,0BAA4B,KAK5C,IAAM9hB,EAAwBmhB,EAAUU,IAAI,yBAC1CV,EAAUW,IAAI,yBAA2B,KAM3Cj5B,KAAKunE,gBAAkBpwD,EACrBA,EAAsBumD,oBAAsB,KAM9C19D,KAAKwnE,eAAiBlvC,EAAUU,IAAI,qBAClCV,EAAUW,IAAI,qBAAuB,KAMvCj5B,KAAKynE,aAAenvC,EAAUU,IAAI,eAChCV,EAAUW,IAAI,eAAiB,KAMjC,IAAMyuC,EAAsBpvC,EAAUU,IAAI,uBACxCV,EAAUW,IAAI,0BA+FhB,IA9F4C,IAAxCyuC,EAAoBC,iBAEtB3nE,KAAKgK,kBAAkB+vC,oBAAmB,GAO5C/5C,KAAK4nE,6BAA+BF,EAAoBG,0BAMxD7nE,KAAK8nE,+BACHxvC,EAAUU,IAAI,iCACZV,EAAUW,IAAI,iCAAmC,KAMrDj5B,KAAK6J,WAAayuB,EAAUU,IAAI,aAAeV,EAAUW,IAAI,aAAe,KAM5Ej5B,KAAK+nE,yBAA2BzvC,EAAUU,IAAI,2BAC5CV,EAAUW,IAAI,2BAA6B,KAM7Cj5B,KAAKgoE,iBAAmB1vC,EAAUU,IAAI,mBACpCV,EAAUW,IAAI,mBAAqB,KAMrCj5B,KAAKioE,cAAgB3vC,EAAUU,IAAI,gBACjCV,EAAUW,IAAI,qBAAkBn1B,EAMlC9D,KAAK+J,gBAAkBuuB,EAAUU,IAAI,kBACnCV,EAAUW,IAAI,kBAAoB,KAQpCj5B,KAAKm5B,cAAgBugB,EAMrB15C,KAAKkoE,kBAAoB5vC,EAAUU,IAAI,oBACrCV,EAAUW,IAAI,oBAAsB,KAMtCj5B,KAAKmoE,SAAW7vC,EAAUU,IAAI,WAC5BV,EAAUW,IAAI,WAAa,KAM7Bj5B,KAAK2Q,KAAO,KAMZ3Q,KAAKooE,oBAAsB9vC,EAAUU,IAAI,sBACvCV,EAAUW,IAAI,sBAAwB,KAOxCj5B,KAAKqoE,mBAAqB,UACkBvkE,IAAxC4jE,EAAoBY,iBAAiCtoE,KAAKooE,oBAAqB,CACjF,IAAMG,EAAcvoE,KAAKooE,oBAAoBI,kBAAkBd,EAAoBY,iBAC/EC,EAAY1nE,OAAS,IACvBb,KAAKqoE,mBAAqBE,GAQ9BvoE,KAAKyoE,kBAAoB,KAMzBzoE,KAAK0oE,qBAEsC5kE,IAAvC4jE,EAAoBiB,eACtB3oE,KAAK0oE,gBAAkBhB,EAAoBiB,eAE3C3oE,KAAK0oE,iBAAmB,IAAAxnD,EAAAja,SACtBka,MAAO,IAAAynD,EAAA3hE,SACL+Z,OAAQ,IAAAJ,EAAA3Z,SACN0Z,MAAO,2BACPE,MAAO,IAETsM,OAAQ,EACRnQ,OAAQ,EACR6rD,QAAS,EACTC,MAAO,MAEP,IAAA5nD,EAAAja,SACFka,MAAO,IAAAynD,EAAA3hE,SACL+Z,OAAQ,IAAAJ,EAAA3Z,SACN0Z,MAAO,qBACPE,MAAO,IAETsM,OAAQ,EACRnQ,OAAQ,EACR6rD,QAAS,EACTC,MAAO,OASb9oE,KAAK+oE,YAAc,KAMnB/oE,KAAKgpE,mBAAqB,IAAAC,EAAAhiE,SACxB+F,UAAU,EACV8M,cAAc,EACdQ,gBACE+C,UAAaiE,EAAAra,QAA4B26C,MACzCsnB,YAAe5nD,EAAAra,QAA4Bgb,QAC3CzB,UAAac,EAAAra,QAA4B26C,MACzCrhC,SAAYe,EAAAra,QAA4Bib,KACxCinD,MAAS7nD,EAAAra,QAA4Bqb,aACrC4J,SAAY5K,EAAAra,QAA4Bob,UACxC+mD,QAAW9nD,EAAAra,QAA4Bsa,QACvC/Z,KAAQ8Z,EAAAra,QAA4B46C,KACpCphC,YAAea,EAAAra,QAA4Bib,KAC3CmnD,UAAa/nD,EAAAra,QAA4Bub,WACzC8mD,YAAehoD,EAAAra,QAA4Bsb,aAC3C1E,YAAeyD,EAAAra,QAA4B26C,MAC3C5jC,YAAesD,EAAAra,QAA4Bkb,UAM3CniB,KAAKsnE,yBACPtgE,EAAAC,QAAS4B,OACP7I,KAAKsnE,wBACL,SACAtnE,KAAKupE,oCACLvpE,MAIJA,KAAKwQ,WAAWwuB,IAAI,uBAAwB,SAACwiB,EAAOpvC,EAAUguB,GAC5D,IAAMC,KACN,GAAID,EAAYjyB,KAAK2F,MAAO,CAC1B,IAAMisB,EAAQ3tB,EAASS,WACvBvK,EAAArB,QAAY8J,OAAiB,OAAVgvB,GAA4B,QAAVA,GACrC,IAAMmS,EAAoB,OAAVnS,EAChB3tB,EAASR,mBAAmB,SAAC43D,GAC3B,QAA2B1lE,IAAvB0lE,EAAKr7D,KAAK3D,SAAwB,CACpC,IAAMi/D,EAAQljE,EAAQmjE,YAAYC,YAAcH,EAAKr7D,KAAK3G,KAC1D64B,EAASopC,GAASv3B,SAGjB,CACL,IAAM03B,KACNxpC,EAAYxuB,mBAAmB,SAAC43D,QACH1lE,IAAvB0lE,EAAKr7D,KAAK3D,UAA8C,OAApBg/D,EAAK32D,YAC3C+2D,EAAc/iE,KAAK2iE,EAAKr7D,KAAK3G,QAGjC64B,EAAS95B,EAAQmjE,YAAYG,kBAAoBzpC,EAAYjyB,KAAK3G,MAAQoiE,EAAcx1D,KAAK,KAE/F9C,EAAKtH,kBAAkBK,YAAYg2B,KAErCrgC,KAAKwQ,WAAWwuB,IAAI,yBAA0B,SAACwiB,EAAOpvC,GACpD,IAAMiuB,KACAypC,EAAU13D,EAAS1D,MAAM03D,aAI/B/lC,GAHmBjuB,EAASyB,OAAO1F,KAAK2F,MACtCvN,EAAQmjE,YAAYK,aAAexjE,EAAQmjE,YAAYM,oBACrD53D,EAASjE,KAAK3G,MACIsiE,EACtBx4D,EAAKtH,kBAAkBK,YAAYg2B,KAMrC,IAAMzzB,EAAW5M,KAAKwpB,cAClBxpB,KAAKqnE,gBACPz6D,EAAS7F,QAAQ,SAASyF,GACpBxM,KAAKwnE,gBACPxnE,KAAKwnE,eAAex6D,SAASR,GAE/BxM,KAAKiqE,gBAAgBz9D,IACpBxM,MAEHA,KAAKqnE,cAAc7wD,OAAO5J,GAC1B5F,EAAAC,QAAS4B,OAAO7I,KAAKqnE,cAAe,MAAOrnE,KAAKkqE,uBAAwBlqE,MACxEgH,EAAAC,QAAS4B,OAAO7I,KAAKqnE,cAAe,SAAUrnE,KAAKmqE,0BAA2BnqE,OAG5EA,KAAKwnE,gBACPxnE,KAAKwQ,WAAWwuB,IAAI,uBAAwB,WAC1CpyB,EAAS7F,QAAQ,SAASyF,GACxBxM,KAAKwnE,eAAex6D,SAASR,IAD/B8E,KAMAtR,KAAKgoE,kBACPhoE,KAAKwQ,WAAWwuB,IAAIorC,EAAAnjE,QAAgB6D,UAAUC,eAAgB,SAACy2C,EAAOh6C,GACpE8J,EAAK+4D,eAAe7iE,KAUxBxH,KAAKsqE,oCAAsC,KAEvCtqE,KAAKynE,cAAgBznE,KAAK8nE,gCAE5B9nE,KAAKuqE,2BAA2Br4D,KAAK,WAGnClL,EAAAC,QAAS4B,OACPyI,EAAKw2D,+BAA+B0C,oBACpC,MACAl5D,EAAKm5D,oCAHPn5D,GAMAtK,EAAAC,QAAS4B,OACPyI,EAAKw2D,+BAA+B0C,oBACpC,SACAl5D,EAAKo5D,uCAHPp5D,GAMAtK,EAAAC,QAAS4B,OACPyI,EAAKw2D,+BAA+B6C,qBACpC,MACAr5D,EAAKm5D,oCAHPn5D,GAMAtK,EAAAC,QAAS4B,OACPyI,EAAKw2D,+BAA+B6C,qBACpC,SACAr5D,EAAKo5D,uCAHPp5D,GArByC,IAAA01B,GAAA,EAAAC,GAAA,EAAAC,OAAApjC,EAAA,IA8BzC,QAAAqjC,EAAAC,EAAuB91B,EAAKw2D,+BAA+B8C,UAA3DvjC,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsE,KAA3D6jC,EAA2D1jC,EAAAh8B,MACpEmG,EAAKw5D,yBAAyBD,IA/BS,MAAAnjC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAAA,IAAAkC,GAAA,EAAAC,GAAA,EAAAC,OAAAxlC,EAAA,IAiCzC,QAAAylC,EAAAC,EAAwBl4B,EAAKw2D,+BAA+BiD,WAA5D1jC,OAAAC,cAAA8B,GAAAG,EAAAC,EAAAjC,QAAAC,MAAA4B,GAAA,EAAwE,KAA7D4hC,EAA6DzhC,EAAAp+B,MACtEmG,EAAKw5D,yBAAyBE,IAlCS,MAAAtjC,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,aAAA0B,GAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,MAuC7CtpC,KAAKirE,+PAUP1kE,EAAQrG,UAAUgrE,aAAe,WAC/B,IAAMlmD,EAAIhlB,KAAKgK,kBAAkBywC,sBAAsBnzC,EAAAL,QAAQqvC,eAAe60B,OACxElmD,EAAIjlB,KAAKgK,kBAAkBywC,sBAAsBnzC,EAAAL,QAAQqvC,eAAe80B,OAE9E,IAAKr7C,MAAM/K,KAAO+K,MAAM9K,GAAI,CAC1B,IAAMu7B,GAAUx7B,EAAGC,GACnB,GAAgC,OAA5BjlB,KAAKqoE,oBAA+BroE,KAAKooE,oBAAqB,CAChE,IAAMiD,EAAmBrrE,KAAK2Q,KAAKsE,UAAUK,gBACvCg2D,EAAoBtrE,KAAKooE,oBAAoBmD,4BACjD/qB,EAAQ6qB,EAAiBtiD,YAAasiD,EACtCrrE,KAAKqoE,oBACP,GAAIiD,EACF,OAAOA,EAGX,OAAO9qB,EAET,OAAO,MASTj6C,EAAQrG,UAAUsrE,WAAa,WAC7B,IAAM/qB,EAAOzgD,KAAKgK,kBAAkBywC,sBAAsBnzC,EAAAL,QAAQqvC,eAAem1B,OACjF,OAAO17C,MAAM0wB,QAAQ38C,EAAY28C,GAYnCl6C,EAAQrG,UAAUwrE,gBAAkB,WAClC,IAAMC,EAAY3rE,KAAKgK,kBAAkB0wC,uBAAuBpzC,EAAAL,QAAQqvC,eAAes1B,eACvF,YAAqB9nE,IAAd6nE,EAA0B3rE,KAAK4nE,2BAA6B+D,GASrEplE,EAAQrG,UAAU2rE,gBAAkB,SAASC,GAC3C,IAAIC,SAEFA,EADED,GAGoB9rE,KAAK2Q,KAAKsE,UAAU+2D,YAE5C1jE,EAAArB,QAAYglE,YAAYF,GAGpB/rE,KAAKyoE,mBACPzoE,KAAKunE,gBAAgB96D,cAAczM,KAAKyoE,mBAG1CzoE,KAAKyoE,kBAAoB,IAAAljD,EAAAte,QACvB,IAAAqY,EAAArY,QAAgB8kE,IAClB/rE,KAAKyoE,kBAAkBz7D,SAAShN,KAAK0oE,iBAGrC1oE,KAAKunE,gBAAgBh7D,WAAWvM,KAAKyoE,oBAYvCliE,EAAQrG,UAAUgsE,cAAgB,WAChC,OAAOlsE,KAAKgK,kBAAkBwwC,sBAAsBlzC,EAAAL,QAAQqvC,eAAe61B,cAS7E5lE,EAAQrG,UAAUksE,cAAgB,SAASC,EAAaP,GACtD,IAAIQ,SAEFA,EADER,GAGgB9rE,KAAK2Q,KAAKsE,UAAU+2D,YAExC1jE,EAAArB,QAAYglE,YAAYK,GAExB,IAAMC,EAAM10D,EAAE,UACZE,MAAS,wBACTuG,KAAQ+tD,IACP,GAEsB,OAArBrsE,KAAK+oE,aACP/oE,KAAK2Q,KAAKoI,cAAc/Y,KAAK+oE,aAG/B/oE,KAAK+oE,YAAc,IAAAyD,EAAAvlE,SACjBgB,QAASskE,EACTE,SAAUH,IAGZtsE,KAAK2Q,KAAK+7D,WAAW1sE,KAAK+oE,cAY5BxiE,EAAQrG,UAAUspB,YAAc,WAC9B,IAAMmjD,EAAI3sE,KAAKgK,kBAAkBwwC,sBAAsBlzC,EAAAL,QAAQqvC,eAAes2B,UAC9E,YAAU9oE,IAAN6oE,GAAyB,KAANA,EACdrkE,EAAArB,QAAY8J,OAAO/Q,KAAKgpE,mBAAmBp5D,aAAa+8D,QAUnEpmE,EAAQrG,UAAU2sE,cAAgB,SAASjyC,GAGzC,IAHqD,IAAA5oB,EAAAhS,KAE/CuR,EAAOvR,KAAKm5B,cAAc26B,uBAAuBvtD,EAAQmjE,YAAYoD,YAClEt+D,EAAI,EAAGA,EAAI+C,EAAK1Q,OAAQ2N,IAAK,CACpC,IAAM7H,EAAM4K,EAAK/C,GACXrD,EAAQnL,KAAKm5B,cAAcmhB,SAAS3zC,GAC1C2B,EAAArB,QAAY8J,OAAO5F,GACnByvB,EAAWj0B,EAAIlG,MAAM8F,EAAQmjE,YAAYoD,WAAWjsE,SAAWsK,EAGjEnL,KAAKwQ,WAAWkB,iBAAiB,kBAAMkpB,GAAY,SAACA,GAClD,IAAM35B,KACN,IAAK,IAAM0F,KAAOi0B,EAChB35B,EAAOsF,EAAQmjE,YAAYoD,WAAanmE,GAAOi0B,EAAWj0B,GAE5DqL,EAAKmnB,cAAc2Y,aAAa7wC,MAepCsF,EAAQrG,UAAUmR,OAAS,SAASjJ,GAAK,IAAAs1B,EAAA19B,KAEnCoI,IAAQpI,KAAK2Q,OAIb3Q,KAAK2Q,OACP3Q,KAAK+sE,iBACL/sE,KAAK2Q,KAAO,MAGVvI,IACFpI,KAAK2Q,KAAOvI,EACRpI,KAAK+nE,yBACP/nE,KAAK+nE,yBAAyBiF,aAAa96D,KAAK,SAAC1F,GAC/CkxB,EAAKuvC,aAAa7kE,EAAKoE,KAGzBxM,KAAKitE,aAAa7kE,EAAK,SAa7B7B,EAAQrG,UAAU+sE,aAAe,SAAS7kE,EAAK8kE,GAAW,IAAA71B,EAAAr3C,KAElDgV,EAAO5M,EAAI6M,UACburC,SAKJ,GAAI0sB,GAAaA,EAAU7rD,cAAe,CACxC,IAAMnM,EAAO9M,EAAI+M,UACjB7M,EAAArB,QAAY8J,OAAOmE,GACnBF,EAAKm4D,IAAID,EAAU7rD,cAAc0H,YAAa7T,OACzC,CAEL,IADkBlV,KAAKgK,kBAAkB0wC,uBAAuB0yB,EAAAnmE,QAAkBomE,iBAAiBr0D,SACnF,EACdwnC,EAASxgD,KAAKkrE,iBAEZl2D,EAAKs4D,UAAU9sB,GAEjB,IAAMC,EAAOzgD,KAAKwrE,kBACL1nE,IAAT28C,GACFzrC,EAAKu4D,QAAQ9sB,IAQnBzgD,KAAKknE,+BAAiClgE,EAAAC,QAAS4B,OAC7CmM,EACA,iBACAhV,KAAKmnE,cAAc,WACjB,IAAM3mB,EAASxrC,EAAKg3D,YACdvrB,EAAOzrC,EAAKw4D,UACZrzC,KACNA,EAAO7yB,EAAAL,QAAQqvC,eAAe60B,OAASzpD,KAAKC,MAAM6+B,EAAO,IACzDrmB,EAAO7yB,EAAAL,QAAQqvC,eAAe80B,OAAS1pD,KAAKC,MAAM6+B,EAAO,IACzDrmB,EAAO7yB,EAAAL,QAAQqvC,eAAem1B,OAAShrB,EACvCpJ,EAAKrtC,kBAAkBK,YAAY8vB,IAClC,KAAuB,GAC1Bn6B,MAGEA,KAAK0rE,mBAAqB1rE,KAAKunE,iBACjCvnE,KAAK6rE,gBAAgBrrB,GAIvB,IAAM6rB,EAAcrsE,KAAKksE,gBACrBG,GACFrsE,KAAKosE,cAAcC,EAAa7rB,GAIlC,IAAMitB,EAAmBztE,KAAK0tE,uBACL,OAArBD,GAA6BztE,KAAKkoE,mBACpCloE,KAAKkoE,kBAAkByF,MAAMF,EAAkBrlE,IASnD7B,EAAQrG,UAAU6sE,eAAiB,WACjCzkE,EAAArB,QAAY8J,OACV/Q,KAAKknE,+BAAgC,yBACvClgE,EAAAC,QAASC,cAAclH,KAAKknE,gCAC5BlnE,KAAKknE,+BAAiC,MAcxC3gE,EAAQrG,UAAU0tE,mBAAqB,SAASjgE,GAC9C,IAAMoB,EAAY/O,KAAKgK,kBAAkBwwC,sBAAsBlzC,EAAAL,QAAQqvC,eAAeu3B,UACtF,QAAkB/pE,IAAdiL,EAAyB,KAAA46B,GAAA,EAAAC,GAAA,EAAAC,OAAA/lC,EAAA,IAC3B,QAAAgmC,EAAAC,EAAoBp8B,EAApB05B,OAAAC,cAAAqC,GAAAG,EAAAC,EAAAxC,QAAAC,MAAAmC,GAAA,EAA4B,KAAjBj7B,EAAiBo7B,EAAA3+B,MAC1B,GAAIuD,EAAMuqB,IAAI,WAAalqB,EACzB,OAAOL,GAHgB,MAAAg5B,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,aAAAiC,GAAAI,EAAApC,QAAAoC,EAAApC,SAAA,WAAAiC,EAAA,MAAAC,IAO7B,OAAO,MASTtjC,EAAQrG,UAAUqpE,oCAAsC,WACtD,GAAKvpE,KAAK2Q,MAAS3Q,KAAKsnE,wBAAxB,CAKA,IACMv4D,EADQ/O,KAAKsnE,wBAAwBruC,IAAIj5B,KAAK2Q,MAC5BsoB,IAAI,SAC5B3wB,EAAArB,QAAYq4B,aAAavwB,GAGzB,IAAMorB,KACNA,EAAO7yB,EAAAL,QAAQqvC,eAAeu3B,UAAY9+D,EAC1C/O,KAAKgK,kBAAkBK,YAAY8vB,KAYrC5zB,EAAQrG,UAAU4tE,wBAA0B,WAC1C,GAAK9tE,KAAK+J,gBAAV,CAIA,IACMgkE,EADa/tE,KAAK+J,gBAAgB4H,SAASxD,KAAK3D,SACtBpC,IAAI,SAAA+F,GAAA,OAAQA,EAAK3G,OAG3C2yB,KACNA,EAAO7yB,EAAAL,QAAQqvC,eAAeC,aAAew3B,EAAa35D,KAAK,KAC/DpU,KAAKgK,kBAAkBK,YAAY8vB,KAUrC5zB,EAAQrG,UAAU8tE,YAAc,SAASC,GACvC,IAAMC,EAAeD,EAAaxsD,QAAQ,SAC1C,OAAwB,GAAjBysD,GAAsBA,GAAgBD,EAAaptE,OAAS,GAQrE0F,EAAQrG,UAAUmqE,eAAiB,SAAShwC,GAC1C,GAAIA,EAAW,CACb,IAAM4zC,EAAejuE,KAAKm5B,cAAc45B,UAAUv9C,MAAM,KACxDlN,EAAArB,QAAY8J,OAAOk9D,EAAaptE,OAAS,GACK,KAA1CotE,EAAaA,EAAaptE,OAAS,IAErCotE,EAAahvC,OAAOgvC,EAAaptE,OAAS,GAExCb,KAAKguE,YAAYC,GACnBA,EAAaA,EAAaptE,OAAS,GAAKw5B,EAExC4zC,EAAapnE,KAAK,QAASwzB,GAE7Br6B,KAAKm5B,cAAcg7B,QAAQ8Z,EAAa75D,KAAK,QAWjD7N,EAAQrG,UAAUiuE,iBAAmB,WAGnC,IAAMF,EAAejuE,KAAKm5B,cAAc45B,UAAUv9C,MAAM,KACxD,GAAIxV,KAAKguE,YAAYC,GACnB,OAAOA,EAAaA,EAAaptE,OAAS,GAI5C,IAAMutE,EAAKpuE,KAAKgK,kBAAkBwwC,sBAAsB,SACxD,GAAI4zB,EACF,OAAOA,EAGT,IAAMC,EAAeruE,KAAKsuE,sCAC1B,OAAqB,OAAjBD,EACKA,EAILruE,KAAKioE,cACAjoE,KAAKioE,cAGP,MAST1hE,EAAQrG,UAAUouE,oCAAsC,WAEtD,IAAKtuE,KAAKmoE,SACR,OAAO,KAET,IAAMoG,EAAkBvuE,KAAKmoE,SAASoG,gBACtC,GAAIA,GAAmB,kBAAmBA,EAAiB,CACzD,IAAMF,EAAeE,EAAgBC,cACrC,GAAIH,EAAaxtE,OAAS,EACxB,OAAOwtE,EAAa,GAGxB,OAAO,MAOT9nE,EAAQrG,UAAU+qE,YAAc,WAAW,IAAA1zB,EAAAv3C,KACpCA,KAAK6J,YAGV7J,KAAK6J,WAAW8yB,kBAAkBzqB,KAAK,SAACunB,GACtC,IAAMY,EAAYkd,EAAK42B,mBACvB7lE,EAAArB,QAAY8J,OAAqB,OAAdspB,GAEfkd,EAAKywB,kBACPzwB,EAAKywB,iBAAiB19D,aAAaitC,EAAKywB,iBAAiBl+D,UAAYuwB,EAAY,IAMnF,IAAI+b,KACAjsC,SAEEskE,EAAcl3B,EAAKpe,cAAcmhB,SAAShzC,EAAAL,QAAQqvC,eAAeC,kBACnDzyC,IAAhB2qE,GACFnmE,EAAArB,QAAYq4B,aAAajF,IACzBlwB,EAAQmI,EAAArL,QAAemzB,gBAAgBX,EAAQY,MAE7C+b,EAAmBjsC,EAAMK,WAG3BikE,EAAYj5D,MAAM,KAAKzO,QAAQ,SAACysC,GAC9B,IAAM9Z,EAAQpnB,EAAArL,QAAe4yB,gBAAgBJ,EAAQ+Z,GACjD9Z,GACF0c,EAAiBvvC,KAAK6yB,KAKxB6d,EAAKxtC,iBACPwtC,EAAKxtC,gBAAgBQ,oBAAoB6rC,GAG3CmB,EAAK5B,UAAU,WACR4B,EAAKxtC,iBAAoBwtC,EAAKxtC,gBAAgB4H,WAKnD4lC,EAAKxtC,gBAAgB4H,SAASC,mBAAmB,SAACQ,GAChD,IAAIA,EAASssB,OAAb,CAIA,IAAMorC,EAAUvyB,EAAKvtC,kBAAkBywC,uBACrCroC,EAASyB,OAAO1F,KAAK2F,MACnBvN,EAAQmjE,YAAYK,aACpBxjE,EAAQmjE,YAAYM,oBACpB53D,EAASjE,KAAK3G,MAIlB,QAHgB1D,IAAZgmE,GAAyB13D,EAAS1D,OACpC0D,EAAS1D,MAAM23D,WAAWyD,GAExB13D,EAASyB,OAAO1F,MAAQiE,EAASyB,OAAO1F,KAAK2F,OAAmChQ,MAA1BsO,EAASjE,KAAK3D,SAAuB,CAE7F,IAAMkkE,EAASn3B,EAAKvtC,kBAAkB0wC,uBACpCn0C,EAAQmjE,YAAYC,YAAcv3D,EAASjE,KAAK3G,WAEnC1D,IAAX4qE,GACFt8D,EAAS0tB,SAAS4uC,EAAS,KAAO,OAAO,QAEtC,IAAKt8D,EAASjE,KAAK2F,OAA2B,GAAlB1B,EAAS8sB,MAAY,CAEtD,IAAMyvC,EAAcp3B,EAAKvtC,kBAAkBwwC,sBACzCj0C,EAAQmjE,YAAYG,kBAAoBz3D,EAASjE,KAAK3G,MAExD,QAAoB1D,IAAhB6qE,EAA2B,CAC7B,IAAMC,EAAmBD,EAAYn5D,MAAM,KAC3CpD,EAASR,mBAAmB,SAACQ,GAC3B,QAA+BtO,IAA3BsO,EAASjE,KAAK3D,SAAwB,CACxC,IAAMkkE,EAASl1D,EAAQiJ,SAASmsD,EAAkBx8D,EAASjE,KAAK3G,MAChE4K,EAAS0tB,SAAS4uC,EAAS,KAAO,OAAO,WAM9Bn3B,EAAKxtC,gBAAgB4H,SAASnH,SACtCzD,QAAQ,SAACq5B,GACpBA,EAAYxuB,mBAAmB,SAACQ,GAC9B,GAA4B,kBAAxBA,EAASS,WAEX,OADA0kC,EAAK/mC,WAAWkvB,WAAW,uBAAwBttB,EAAUguB,GACtDpsB,EAAA/M,QAAwBg6B,gBAAgBC,eAgB3D36B,EAAQrG,UAAUgqE,uBAAyB,SAAS1oB,GAClD,IAAMh1C,EAAUg1C,EAAMv5C,QACtBK,EAAArB,QAAYsB,iBAAiBiE,EAA7B+Y,EAAAte,SACAjH,KAAKiqE,gBAAgBz9D,IAQvBjG,EAAQrG,UAAUiqE,0BAA4B,SAAS3oB,GACrD,IAAMh1C,EAAUg1C,EAAMv5C,QACtBK,EAAArB,QAAYsB,iBAAiBiE,EAA7B+Y,EAAAte,SACAjH,KAAK6uE,mBAAmBriE,IAU1BjG,EAAQrG,UAAU+pE,gBAAkB,SAASz9D,GAC3C,IAAM9F,EAAMyJ,EAAOuC,OAAOlG,GAC1BxM,KAAKonE,iBAAiB3gE,eACpBC,EACAM,EAAAC,QAAS4B,OAAO2D,EAAS,SACvBxM,KAAKmnE,cAAcnnE,KAAK8uE,0BAA2B,KAAK,GAAO9uE,QAUrEuG,EAAQrG,UAAU2uE,mBAAqB,SAASriE,GAC9C,IAAM9F,EAAMyJ,EAAOuC,OAAOlG,GAC1BxM,KAAKonE,iBAAiBtgE,iBAAiBJ,GACvC1G,KAAK8uE,6BAUPvoE,EAAQrG,UAAU4uE,0BAA4B,WAC5C,GAAK9uE,KAAKqnE,cAAV,CAGA,IAAMz6D,EAAW5M,KAAKqnE,cAAc3mC,WAC9BnqB,EAAOvW,KAAKgpE,mBAAmB3tD,cAAczO,GAE7CutB,KACNA,EAAO7yB,EAAAL,QAAQqvC,eAAes2B,UAAYr2D,EAC1CvW,KAAKgK,kBAAkBK,YAAY8vB,KASrC5zB,EAAQrG,UAAUwtE,qBAAuB,WACvC,IAAMqB,EAAW/uE,KAAKm5B,cAAcmhB,SAAShzC,EAAAL,QAAQqvC,eAAe04B,WACpE,IAAKD,EACH,OAAO,KAGT,IAAME,EAAYjvE,KAAKm5B,cAAcq6B,cAAclsD,EAAAL,QAAQqvC,eAAe44B,aACpEl1B,EAAYh6C,KAAKm5B,cAAc26B,uBAAuBvtD,EAAQmjE,YAAYjiB,KAE1E0nB,KACFC,SACJ,QAAkBtrE,IAAdmrE,EAGkB,QADpBG,EAAcpvE,KAAKqvE,mBAAmB9oE,EAAQmjE,YAAYjiB,IAAKzN,KAE7Dm1B,EAAatoE,KAAKuoE,QAKpB,IAAK,IAAI5gE,EAAI,EAAGA,EAAIygE,EAAWzgE,IAET,QADpB4gE,EAAcpvE,KAAKqvE,mBAAsB9oE,EAAQmjE,YAAYjiB,IAAMj5C,EAArD,IAA2DwrC,KAEvEm1B,EAAatoE,KAAKuoE,GAKxB,GAA2B,GAAvBD,EAAatuE,OACf,OAAO,KAGT,IAAMyuE,EAAoBtvE,KAAKm5B,cAAcmhB,SAAShzC,EAAAL,QAAQqvC,eAAei5B,mBAG7E,OACEC,QAAST,EACTU,eAJ2C,MAAtBH,GAAmD,UAAtBA,GAKlDH,aAAcA,IAYlB5oE,EAAQrG,UAAUmvE,mBAAqB,SAASpiC,EAAQ+M,GAAW,IAAAtB,EAAA14C,KAI3D0vE,KAwBN,OAtBA11B,EAAUjzC,QAAQ,SAAC4oE,GACjB,GAAIA,GAAYroE,EAAAL,QAAQqvC,eAAe04B,WAAaW,GAAYroE,EAAAL,QAAQqvC,eAAei5B,mBACnFI,GAAYroE,EAAAL,QAAQqvC,eAAe44B,aAA2C,GAA5BS,EAASluD,QAAQwrB,GADvE,CAIA,IAAM9hC,EAAQutC,EAAKvf,cAAcmhB,SAASq1B,GAC1C,GAAKxkE,EAAL,CAIA,IAAI1G,EAAY0G,EACZA,EAAMsW,QAAQ,MAAQ,IACxBhd,EAAY0G,EAAMqK,MAAM,MAG1B,IAAM4V,GACJ6hC,SAAU0iB,EAAS3gE,QAAQi+B,EAAQ,IACnCxoC,UAAWA,GAEbirE,EAAQ7oE,KAAKukB,OAGPskD,EAAQ7uE,OAAS,GAAM6uE,WAAW,MAY5CnpE,EAAQrG,UAAUqqE,yBAA2B,WAAW,IAAAtxB,EAAAj5C,KAEhD4vE,EAActnE,EAAArB,QAAY8J,OAAO/Q,KAAKynE,cACtCoI,EAAkBvnE,EAAArB,QAAY8J,OAClC/Q,KAAK8nE,gCAEDjsC,KAEAi0C,EAAmB9vE,KAAKgK,kBAAkBuwC,gBAC9CjzC,EAAAL,QAAQqvC,eAAey5B,4BACnBC,EAAahwE,KAAKgK,kBAAkBuwC,gBACxCjzC,EAAAL,QAAQqvC,eAAe25B,2BAEzB,GAAIH,GAAoBE,EAKtB,IAHA,IAAM7mC,EAAa2mC,EAAiBt6D,MAAMjP,EAAQ2pE,eAAeC,MAC3DvhD,EAAOohD,EAAWx6D,MAAMjP,EAAQ2pE,eAAeC,MAHnBj2B,EAAA,SAKzB1rC,EAAOC,GAGd,IAAM2hE,EAAwBjnC,EAAW36B,GAEzC,IAAK4hE,EACH,cAGF,IAAMC,EAAkBD,EAAsB56D,MAC5CjP,EAAQ2pE,eAAeI,OACnBj8D,EAAMua,EAAKpgB,GAEX+hE,EAAcC,EAAAvpE,QAAkBukC,sBAAsBn3B,GAEtDo8D,EAAuBx3B,EAAK1oC,GAAG4F,QACrC0lB,EAASh1B,KAAK4pE,EAAqBp6D,SAE/Bk6D,IAAgBC,EAAAvpE,QAAkBq9B,KAAK/wB,IACzCq8D,EAAYc,mBAAmBr8D,GAAKnC,KAClC,SAACghC,GACCu9B,EAAqB37D,SACnBo+B,eACAm9B,kBACAE,cACAl8D,SAGJ,WAEEo8D,EAAqBtyC,QACnBkyC,kBACAE,cACAl8D,UAIGk8D,IAAgBC,EAAAvpE,QAAkBq9B,KAAKhG,KAChDsxC,EAAYe,oBAAoBt8D,GAAKnC,KACnC,SAACghC,GACCu9B,EAAqB37D,SACnBo+B,eACAm9B,kBACAE,cACAl8D,SAGJ,WAEEo8D,EAAqBtyC,QACnBkyC,kBACAE,cACAl8D,UAMNo8D,EAAqBtyC,QACnBkyC,kBACAE,cACAl8D,SA7DG7F,EAAI,EAAGC,EAAKmgB,EAAK/tB,OAAQ2N,EAAIC,EAAID,IAAK,cAAA0rC,EAAtC1rC,GAML,MA6DN,OAAOxO,KAAKuQ,GAAG0rB,IAAIJ,GAAU3pB,KAC3B,SAAC0+D,GAAc,IAAA3mC,GAAA,EAAAC,GAAA,EAAAC,OAAArmC,EAAA,IACb,QAAAsmC,EAAAC,EAAuBumC,EAAvBvpC,OAAAC,cAAA2C,GAAAG,EAAAC,EAAA9C,QAAAC,MAAAyC,GAAA,EAAkC,KAAvB3zB,EAAuB8zB,EAAAj/B,MAIhC,GAAImL,EAASi6D,cAAgBC,EAAAvpE,QAAkBq9B,KAAK/wB,IAAK,KAAA43B,GAAA,EAAAC,GAAA,EAAAC,OAAAvnC,EAAA,IACvD,QAAAwnC,EAAAC,EAAwBj1B,EAAS+5D,gBAAjChpC,OAAAC,cAAA6D,GAAAG,EAAAC,EAAAhE,QAAAC,MAAA2D,GAAA,EAAkD,KAAvCp8B,EAAuCu8B,EAAAngC,MAC1CgoC,EAAWy8B,EAAYiB,uBAC3Bv6D,EAAS48B,aAAT,uBACAnkC,GAEEokC,GACF08B,EAAgBiB,wCACd39B,EACA78B,EAAS48B,aACT58B,EAASjC,MAVwC,MAAAqzB,GAAA0D,GAAA,EAAAC,EAAA3D,EAAA,aAAAyD,GAAAI,EAAA5D,QAAA4D,EAAA5D,SAAA,WAAAyD,EAAA,MAAAC,SAiBlD,GAAI/0B,EAASi6D,cAAgBC,EAAAvpE,QAAkBq9B,KAAKhG,KAAM,KAAAyyC,GAAA,EAAAC,GAAA,EAAAC,OAAAntE,EAAA,IAI/D,QAAAotE,EAAAC,EAAwB76D,EAAS+5D,gBAAjChpC,OAAAC,cAAAypC,GAAAG,EAAAC,EAAA5pC,QAAAC,MAAAupC,GAAA,EAAkD,KAAvChiE,EAAuCmiE,EAAA/lE,MAC1CgoC,EAAWy8B,EAAYwB,wBAC3B96D,EAAS48B,aAAT,eACAnkC,GAEEokC,GACF08B,EAAgBwB,yCACdl+B,EACA78B,EAAS48B,aACT58B,EAASjC,MAbgD,MAAAqzB,GAAAspC,GAAA,EAAAC,EAAAvpC,EAAA,aAAAqpC,GAAAI,EAAAxpC,QAAAwpC,EAAAxpC,SAAA,WAAAqpC,EAAA,MAAAC,MAtBtD,MAAAvpC,GAAAwC,GAAA,EAAAC,EAAAzC,EAAA,aAAAuC,GAAAI,EAAA1C,QAAA0C,EAAA1C,SAAA,WAAAuC,EAAA,MAAAC,KA4Cf,SAACmnC,OAWL/qE,EAAQrG,UAAUuqE,oCAAsC,SAASv9D,GAC/D,IAAMwsB,EAAQxsB,EAAIjF,QAClBK,EAAArB,QAAYsB,iBAAiBmxB,EAA7B4Z,EAAArsC,SACAjH,KAAK8qE,yBAAyBpxC,GAC9B15B,KAAKuxE,gCAQPhrE,EAAQrG,UAAU4qE,yBAA2B,SAASpxC,GACpD1yB,EAAAC,QAAS4B,OACP6wB,EAAM83C,sBACN,MACAxxE,KAAKuxE,6BACLvxE,MAEFgH,EAAAC,QAAS4B,OACP6wB,EAAM83C,sBACN,SACAxxE,KAAKuxE,6BACLvxE,OAWJuG,EAAQrG,UAAUuxE,kBAAoB,SAAS/iE,EAAOlH,GACpD,GAAIkH,uBAA+B,KAAAgjE,GAAA,EAAAC,GAAA,EAAAC,OAAA9tE,EAAA,IACjC,QAAA+tE,EAAAC,EAAgBpjE,EAAMV,YAAY0yB,WAAlC2G,OAAAC,cAAAoqC,GAAAG,EAAAC,EAAAvqC,QAAAC,MAAAkqC,GAAA,EAA8C,KAAnCttD,EAAmCytD,EAAA1mE,MAE5C,GADA7C,EAAArB,QAAY8J,OAAOqT,GACfpkB,KAAKyxE,kBAAkBrtD,EAAG5c,GAC5B,OAAO,GAJsB,MAAAkgC,GAAAiqC,GAAA,EAAAC,EAAAlqC,EAAA,aAAAgqC,GAAAI,EAAAnqC,QAAAmqC,EAAAnqC,SAAA,WAAAgqC,EAAA,MAAAC,GAOjC,OAAO,EAEP,OAAOljE,EAAMuqB,IAAI,kBAAoBzxB,GASzCjB,EAAQrG,UAAUwqE,uCAAyC,SAASx9D,GAClE,IAAMwsB,EAAQxsB,EAAIjF,QAClBK,EAAArB,QAAYsB,iBAAiBmxB,EAA7B4Z,EAAArsC,SACAjH,KAAK+xE,2BAA2Br4C,GAChC15B,KAAKuxE,gCAQPhrE,EAAQrG,UAAU6xE,2BAA6B,SAASr4C,GACtD1yB,EAAAC,QAAS4F,SACP6sB,EAAM83C,sBACN,MACAxxE,KAAKuxE,6BACLvxE,MAEFgH,EAAAC,QAAS4F,SACP6sB,EAAM83C,sBACN,SACAxxE,KAAKuxE,6BACLvxE,OASJuG,EAAQrG,UAAUqxE,6BAA+B,WAAW,IAAA/3B,EAAAx5C,KAEtDA,KAAKsqE,qCACPtqE,KAAK21C,UAAU5pC,OAAO/L,KAAKsqE,qCAG7BtqE,KAAKsqE,oCAAsCtqE,KAAK21C,UAAU,WAAM,IAAAq8B,EACxDx8B,KACA5mB,KAFwDqjD,GAAA,EAAAC,GAAA,EAAAC,OAAAruE,EAAA,IAK9D,QAAAsuE,EAAAC,EAAuB74B,EAAKsuB,+BAA+B8C,UAA3DvjC,OAAAC,cAAA2qC,GAAAG,EAAAC,EAAA9qC,QAAAC,MAAAyqC,GAAA,EAAsE,KAA3DpH,EAA2DuH,EAAAjnE,MAGpEyjB,EAAK/nB,KAAKgkE,EAASx2D,KAGnB,IAAMi+D,KAN8DC,GAAA,EAAAC,GAAA,EAAAC,OAAA3uE,EAAA,IAOpE,QAAA4uE,EAAAC,EAA4B9H,EAAS/b,YAArCznB,OAAAC,cAAAirC,GAAAG,EAAAC,EAAAprC,QAAAC,MAAA+qC,GAAA,EAAkD,KAAvCK,EAAuCF,EAAAvnE,MAChD7C,EAAArB,QAAYsB,iBAAiBqqE,EAA7BpC,EAAAvpE,SAKA,IAAM8H,EAAY6jE,EAAc5oC,mBAAmB,GACnDsoC,EAAmBzrE,KAAKkI,IAd0C,MAAA24B,GAAA8qC,GAAA,EAAAC,EAAA/qC,EAAA,aAAA6qC,GAAAI,EAAAhrC,QAAAgrC,EAAAhrC,SAAA,WAAA6qC,EAAA,MAAAC,GAgBpEj9B,EAAM3uC,KAAKyrE,EAAmBl+D,KAAK7N,EAAQ2pE,eAAeI,SArBE,MAAA5oC,GAAAwqC,GAAA,EAAAC,EAAAzqC,EAAA,aAAAuqC,GAAAI,EAAA1qC,QAAA0qC,EAAA1qC,SAAA,WAAAuqC,EAAA,MAAAC,GAAA,IAAAU,GAAA,EAAAC,GAAA,EAAAC,OAAAjvE,EAAA,IAyB9D,QAAAkvE,EAAAC,EAAwBz5B,EAAKsuB,+BAA+BiD,WAA5D1jC,OAAAC,cAAAurC,GAAAG,EAAAC,EAAA1rC,QAAAC,MAAAqrC,GAAA,EAAwE,KAA7D7H,EAA6DgI,EAAA7nE,MAGtEyjB,EAAK/nB,KAAKmkE,EAAU32D,KAGpB,IAAM6+D,KANgEC,GAAA,EAAAC,GAAA,EAAAC,OAAAvvE,EAAA,IAOtE,QAAAwvE,EAAAC,EAA6BvI,EAAUlc,YAAvCznB,OAAAC,cAAA6rC,GAAAG,EAAAC,EAAAhsC,QAAAC,MAAA2rC,GAAA,EAAoD,KAAzCK,EAAyCF,EAAAnoE,MAClD7C,EAAArB,QAAY8J,OAAOyiE,EAAe3sC,WAClCqsC,EAAoBrsE,KAAK2sE,EAAe3sC,YAT4B,MAAAa,GAAA0rC,GAAA,EAAAC,EAAA3rC,EAAA,aAAAyrC,GAAAI,EAAA5rC,QAAA4rC,EAAA5rC,SAAA,WAAAyrC,EAAA,MAAAC,GAWtE79B,EAAM3uC,KAAKqsE,EAAoB9+D,KAAK7N,EAAQ2pE,eAAeI,SApCC,MAAA5oC,GAAAorC,GAAA,EAAAC,EAAArrC,EAAA,aAAAmrC,GAAAI,EAAAtrC,QAAAsrC,EAAAtrC,SAAA,WAAAmrC,EAAA,MAAAC,GAwC9Dv5B,EAAKxvC,kBAAkBK,aAAvBopE,EAAAzB,KACG1qE,EAAAL,QAAQqvC,eAAey5B,2BAA6Bv6B,EAAMphC,KACzD7N,EAAQ2pE,eAAeC,OAF3BsD,EAAAzB,EAIG1qE,EAAAL,QAAQqvC,eAAe25B,0BAA4BrhD,EAAKxa,KACvD7N,EAAQ2pE,eAAeC,OAL3B6B,IAUAx4B,EAAK8wB,oCAAsC,QAS/C/jE,EAAQrG,UAAU42C,YAAc,SAASrD,GAAQ,IAAAigC,EAAA1zE,KACzCuR,EAAOjJ,EAAArB,QAAY8J,OAAO/Q,KAAKm5B,cAAc8gB,gBADJ05B,GAAA,EAAAC,GAAA,EAAAC,OAAA/vE,EAAA,IAE/C,QAAAgwE,EAAAC,EAAkBxiE,EAAlB81B,OAAAC,cAAAqsC,GAAAG,EAAAC,EAAAxsC,QAAAC,MAAAmsC,GAAA,EAAwB,KAAbhtE,EAAamtE,EAAA3oE,MACtB,GAAIxE,EAAIqtE,WAAWztE,EAAQmjE,YAAYG,mBAAoB,CACzD,IAAM1+D,EAAQxE,EAAI4X,UAAUhY,EAAQmjE,YAAYG,kBAAkBhpE,QADTozE,GAAA,EAAAC,GAAA,EAAAC,OAAArwE,EAAA,IAEzD,QAAAswE,EAAAC,EAAoB5gC,EAApBpM,OAAAC,cAAA2sC,GAAAG,EAAAC,EAAA9sC,QAAAC,MAAAysC,GAAA,EAA4B,CAC1B,GAD0BG,EAAAjpE,MAChB3D,MAAQ2D,EAAO,CACvBnL,KAAKgK,kBAAkBqsC,YAAY1vC,GACnC,QALqD,MAAA+gC,GAAAwsC,GAAA,EAAAC,EAAAzsC,EAAA,aAAAusC,GAAAI,EAAA1sC,QAAA0sC,EAAA1sC,SAAA,WAAAusC,EAAA,MAAAC,IAS3D,GAAIxtE,EAAIqtE,WAAWztE,EAAQmjE,YAAYM,oBAAqB,CAC1D,IAAM7+D,EAAQxE,EAAI4X,UAAUhY,EAAQmjE,YAAYM,mBAAmBnpE,QADTyzE,GAAA,EAAAC,GAAA,EAAAC,OAAA1wE,EAAA,IAE1D,QAAA2wE,EAAAC,EAAoBjhC,EAApBpM,OAAAC,cAAAgtC,GAAAG,EAAAC,EAAAntC,QAAAC,MAAA8sC,GAAA,EAA4B,CAC1B,GAD0BG,EAAAtpE,MAChB3D,MAAQ2D,EAAO,CACvBnL,KAAKgK,kBAAkBqsC,YAAY1vC,GACnC,QALsD,MAAA+gC,GAAA6sC,GAAA,EAAAC,EAAA9sC,EAAA,aAAA4sC,GAAAI,EAAA/sC,QAAA+sC,EAAA/sC,SAAA,WAAA4sC,EAAA,MAAAC,MAZf,MAAA9sC,GAAAksC,GAAA,EAAAC,EAAAnsC,EAAA,aAAAisC,GAAAI,EAAApsC,QAAAosC,EAAApsC,SAAA,WAAAisC,EAAA,MAAAC,GAsB/C7zE,KAAK21C,UAAU,WACb,GAAK+9B,EAAK/iE,KAAV,CAGA,IAAMjC,EAAQglE,EAAK/iE,KAAK+iC,gBACxBprC,EAAArB,QAAY8J,OAAOrC,GALA,IAAAimE,GAAA,EAAAC,GAAA,EAAAC,OAAA/wE,EAAA,IAMnB,QAAAgxE,EAAAC,EAAkBxjE,EAAlB81B,OAAAC,cAAAqtC,GAAAG,EAAAC,EAAAxtC,QAAAC,MAAAmtC,GAAA,EAAwB,KAAbhuE,EAAamuE,EAAA3pE,MACtB,GAAIxE,EAAIqtE,WAAWztE,EAAQmjE,YAAYC,aAAc,CACnD,IAAMx+D,EAAQxE,EAAI4X,UAAUhY,EAAQmjE,YAAYC,YAAY9oE,QACvD6yE,EAAKjC,kBAAkB/iE,EAAOvD,IACjCuoE,EAAK1pE,kBAAkBqsC,YAAY1vC,GAGvC,GAAIA,EAAIqtE,WAAWztE,EAAQmjE,YAAYK,cAAe,CACpD,IAAM5+D,EAAQxE,EAAI4X,UAAUhY,EAAQmjE,YAAYK,aAAalpE,QACxD6yE,EAAKjC,kBAAkB/iE,EAAOvD,IACjCuoE,EAAK1pE,kBAAkBqsC,YAAY1vC,KAhBtB,MAAA+gC,GAAAktC,GAAA,EAAAC,EAAAntC,EAAA,aAAAitC,GAAAI,EAAAptC,QAAAotC,EAAAptC,SAAA,WAAAitC,EAAA,MAAAC,QAwBvBtuE,EAAQY,OAASC,QAAQD,OAAO,gBAC9B6tE,EAAA/tE,QAAuBO,KACvB8K,EAAArL,QAAeE,OAAOK,KACtB4iE,EAAAnjE,QAAgBE,OAAOK,KACvBytE,EAAAhuE,QAAiBO,KACjB0tE,EAAAjuE,QAAoBE,OAAOK,KAC3BwM,EAAA/M,QAAwBE,OAAOK,OAGjCF,EAAAL,QAAQE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,MAE5CjB,EAAQY,OAAOE,QAAQ,eAAgBd,GAMvCA,EAAQ4uE,2BACNlzD,QAAS,WAMX1b,EAAQmjE,aACNoD,WAAY,OACZnD,YAAa,eACbE,kBAAmB,qBACnBG,mBAAoB,sBACpBD,aAAc,gBACdtiB,IAAK,QAQPlhD,EAAQ2pE,gBACNC,KAAM,IACNG,MAAO,KAIT/pE,EAAQY,OAAOgE,MAAM,0BAKrB,WACE,IAAMiqE,KACN,IAAK,IAAMC,KAAQ9uE,EAAQmjE,YACzB0L,EAAOvuE,KAAK,IAAI8zC,OAAUp0C,EAAQmjE,YAAY2L,GAAlC,OAEd,IAAK,IAAMC,KAAQhuE,EAAAL,QAAQqvC,eACzB8+B,EAAOvuE,KAAK,IAAI8zC,OAAOp0C,EAAQmjE,YAAY4L,KAE7CC,EAAAtuE,QAASE,OAAOgE,MAAM,oBAAqBiqE,GAR7C,aAYe7uE,oGC9hDf,QAAAD,EAAA,QACAA,EAAA,QACAA,EAAA,KACY6J,0JAAZ7J,EAAA,uDAgBA,IAAMC,EAAU,SAAS+E,GAEvB8sC,EAAAnxC,QAAmB1G,KAAKP,MAMxBA,KAAKyQ,SAAWnF,EAEhB,IAAMkqE,EAAYpuE,QAAQa,QAAQ,yCAClCb,QAAQa,QAAQwtE,SAASC,MAAMx9D,OAAOs9D,GAMtCx1E,KAAK21E,WAAaH,EAMlBx1E,KAAK0Q,yDAIPP,EAAOiI,SAAS7R,EAAhB6xC,EAAAnxC,SAQAV,EAAQqvE,eAAiB,IAazBrvE,EAAQrG,UAAUi4C,OAAS,SAAShe,GAClCn6B,KAAKgiD,KAAK7nB,IAQZ5zB,EAAQrG,UAAUwM,MAAQ,WACxB,IAAK,IAAMhG,KAAO1G,KAAK0Q,OACrB1Q,KAAK61E,yBAAyB71E,KAAK0Q,OAAO0f,SAAS1pB,EAAK,OAQ5DH,EAAQrG,UAAU6hD,YAAc,SAAS3mB,GAAS,IAAA9pB,EAAAtR,KAC1CqT,EAAO+nB,EAAQ/nB,KACrB/K,EAAArB,QAAYq4B,aAAajsB,EAAM,uBAE/B,IAAMyiE,GAAc,QAAS,QAC7B,OAAQziE,GACN,KAAK+kC,EAAAnxC,QAAmBq9B,KAAK4d,MAC3B4zB,EAAWjvE,KAAK,gBAChB,MACF,KAAKuxC,EAAAnxC,QAAmBq9B,KAAK+T,YAC3By9B,EAAWjvE,KAAK,cAChB,MACF,KAAKuxC,EAAAnxC,QAAmBq9B,KAAK+d,QAC3ByzB,EAAWjvE,KAAK,iBAChB,MACF,KAAKuxC,EAAAnxC,QAAmBq9B,KAAKge,QAC3BwzB,EAAWjvE,KAAK,iBAMpB,IAAMkvE,EAAK3uE,QAAQa,QAAR,eAA+B6tE,EAAW1hE,KAAK,KAA/C,aAGPgnB,EAAQ46C,OACE5uE,QAAQa,QAAQmzB,EAAQ46C,QAExBh2E,KAAK21E,YAGTz9D,OAAO69D,GACjBA,EAAG/9D,KAAKojB,EAAQ8c,KAAK+9B,SAAS,MAE9B,IAAMC,OAA0BpyE,IAAlBs3B,EAAQ86C,MAAsB96C,EAAQ86C,MAClD3vE,EAAQqvE,eAEJ5kE,GACJ+kE,MAKIrvE,EAAMyJ,EAAOuC,OAAOqjE,GAC1B/kE,EAAKqF,QAAUrW,KAAKyQ,SAAS,WAC3BslE,EAAG93C,MAAM,gBACF3sB,EAAKZ,OAAOhK,IAClBwvE,GAEHl2E,KAAK0Q,OAAOhK,GAAOsK,GASrBzK,EAAQrG,UAAU21E,yBAA2B,SAAS7kE,GACpD,IAAM+kE,EAAK/kE,EAAK+kE,GACV1/D,EAAUrF,EAAKqF,QACf3P,EAAMyJ,EAAOuC,OAAOqjE,GAG1BA,EAAG93C,MAAM,SAITj+B,KAAKyQ,SAAS1E,OAAOsK,UAGdrW,KAAK0Q,OAAOhK,KAgBrBH,EAAQY,OAASC,QAAQD,OAAO,wBAGjBE,QAAQ,mBAAoBd,GAE3Ce,EAAAL,QAASE,OAAOI,SAASV,KAAKN,EAAQY,OAAOK,gBAG9BjB,6kBCrLfD,EAAA,SACAA,EAAA,MACAA,EAAA,OACAA,EAAA,UACAA,EAAA,KACYkT,0JAAZlT,EAAA,uDAEA,IAAMC,cAaJ,SAAAA,EAAY+G,gGAASo1B,CAAA1iC,KAAAuG,GAAA,IAAA+K,mKAAAqxB,CAAA3iC,MAAAuG,EAAAq8B,WAAAjiC,OAAAkiC,eAAAt8B,IAAAhG,KAAAP,KAEbsN,IAEA6oE,EAAW7oE,EAAQ6oE,SAJN,OAanB7kE,EAAK4rD,OAML5rD,EAAK8kE,iBAAmBD,EAASl9C,IAAI,mBAMrC3nB,EAAKd,WAAa2lE,EAASl9C,IAAI,cAQ/B3nB,EAAK+kE,4BAGL/kE,EAAKglE,QApCchlE,EAbjB,gUAAAi3B,CAAAhiC,EAAAgwE,EAAAtvE,SAAAwhC,EAAAliC,IAAAI,IAAA,QAAAwE,MAAA,WAwDF7C,EAAArB,QAAY8J,OACV/Q,KAAK8uD,YAAYjuD,OAAQ,yCAFrB,IAAAmmC,GAAA,EAAAC,GAAA,EAAAC,OAAApjC,EAAA,IAIN,QAAAqjC,EAAAC,EAAyBpnC,KAAK8uD,YAA9BznB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,KAAhCjG,EAAgCoG,EAAAh8B,MACzC7C,EAAArB,QAAYsB,iBAAiBw4B,EAA7ByvC,EAAAvpE,SACAjH,KAAKw2E,oBAAoBz1C,IANrB,MAAA2G,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,OAvDJvgC,IAAA,UAAAwE,MAAA,WAoEM,IAAAi+B,GAAA,EAAAC,GAAA,EAAAC,OAAAxlC,EAAA,IACR,QAAAylC,EAAAC,EAAyBxpC,KAAK8uD,YAA9BznB,OAAAC,cAAA8B,GAAAG,EAAAC,EAAAjC,QAAAC,MAAA4B,GAAA,EAA2C,KAAhCrI,EAAgCwI,EAAAp+B,MACzC7C,EAAArB,QAAYsB,iBAAiBw4B,EAA7ByvC,EAAAvpE,SACAjH,KAAKy2E,sBAAsB11C,IAHrB,MAAA2G,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,aAAA0B,GAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,GAKRZ,EAAAniC,EAAArG,UAAA0iC,WAAAjiC,OAAAkiC,eAAAt8B,EAAArG,WAAA,UAAAF,MAAAO,KAAAP,SAzEE2G,IAAA,gBAAAwE,MAAA,SAiGU41B,GACZ2H,EAAAniC,EAAArG,UAAA0iC,WAAAjiC,OAAAkiC,eAAAt8B,EAAArG,WAAA,gBAAAF,MAAAO,KAAAP,KAAoB+gC,GACpBz4B,EAAArB,QAAYsB,iBAAiBw4B,EAA7ByvC,EAAAvpE,SACAjH,KAAKw2E,oBAAoBz1C,MApGvBp6B,IAAA,sBAAAwE,MAAA,SA2GgB41B,GAElB,IAAMoR,EAAKpR,EAAWoR,GAEtBnyC,KAAKq2E,yBAAyBlkC,GAAMnyC,KAAKwQ,WAAWoC,OAClD,kBAAMmuB,EAAWmR,SACjBlyC,KAAK02E,+BAA+BtxE,KAAKpF,OAGtCA,KAAKk9D,QAKRl9D,KAAKk9D,OAAOjkC,IAAI,kBAAkBpyB,KAAKsrC,GACvCnyC,KAAK22E,gBALL32E,KAAKk9D,OAASl9D,KAAKo2E,iBAAiBpkC,kCAClCjR,MAtHFp6B,IAAA,iCAAAwE,MAAA,SAmI2BA,EAAOyrE,QACtB9yE,IAAVqH,GAAuBA,IAAUyrE,GACnC52E,KAAK22E,kBArILhwE,IAAA,eAAAwE,MAAA,WA6IF,IAAMuD,EAAQ1O,KAAK0O,MACfy6B,KAFSQ,GAAA,EAAAC,GAAA,EAAAC,OAAA/lC,EAAA,IAKb,QAAAgmC,EAAAC,EAAyB/pC,KAAK8uD,YAA9BznB,OAAAC,cAAAqC,GAAAG,EAAAC,EAAAxC,QAAAC,MAAAmC,GAAA,EAA2C,KAAhC5I,EAAgC+I,EAAA3+B,MACzC7C,EAAArB,QAAYsB,iBAAiBw4B,EAA7ByvC,EAAAvpE,SACI85B,EAAWmR,UACb/I,EAAaA,EAAWjoC,OAAO6/B,EAAWiJ,sBARjC,MAAAtC,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,aAAAiC,GAAAI,EAAApC,QAAAoC,EAAApC,SAAA,WAAAiC,EAAA,MAAAC,GAab7pC,KAAKo2E,iBAAiB7gC,oBAAoB7mC,EAAOy6B,EAAW/0B,KAAK,SAzJ/DzN,IAAA,mBAAAwE,MAAA,SA+Ja41B,GACf2H,EAAAniC,EAAArG,UAAA0iC,WAAAjiC,OAAAkiC,eAAAt8B,EAAArG,WAAA,mBAAAF,MAAAO,KAAAP,KAAuB+gC,GACvBz4B,EAAArB,QAAYsB,iBAAiBw4B,EAA7ByvC,EAAAvpE,SACAjH,KAAKy2E,sBAAsB11C,MAlKzBp6B,IAAA,wBAAAwE,MAAA,SAyKkB41B,GAEpB,IAAMoR,EAAKpR,EAAWoR,GAChBzjC,EAAQ1O,KAAK0O,OAInBmoE,EADmB72E,KAAKq2E,yBAAyBlkC,aAE1CnyC,KAAKq2E,yBAAyBlkC,GAGrC34B,EAAQ0Q,OAAOlqB,KAAK8uD,YAAa/tB,GAGjC,IAAMlG,EAAM76B,KAAKo2E,iBAAiB3gC,kBAAkB/mC,GAChDmsB,GACFrhB,EAAQ0Q,OAAO2Q,EAAKsX,GAGlBnyC,KAAK8uD,YAAYjuD,QACnBb,KAAK22E,kBA7LLhwE,IAAA,QAAAsyB,IAAA,WAsFF,OAAOj5B,KAAKk9D,WAtFV32D,eAmMSA,kVC1MfD,EAAA,MACAA,EAAA,yDAEA,IAAMC,cAQJ,SAAAA,EAAY+G,gGAASo1B,CAAA1iC,KAAAuG,GAAA,IAAA+K,mKAAAqxB,CAAA3iC,MAAAuG,EAAAq8B,WAAAjiC,OAAAkiC,eAAAt8B,IAAAhG,KAAAP,KAEbsN,IAFa,OAQnBgE,EAAKqzC,KAAOr3C,EAAQ+G,IARD/C,EARjB,gUAAAi3B,CAAAhiC,EAAA+sC,EAAArsC,SAAAwhC,EAAAliC,IAAAI,IAAA,MAAAsyB,IAAA,WAwBF,OAAOj5B,KAAK2kD,SAxBVp+C,eA6BSA","file":"simple.c2a96a323583a3ea0afc.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmfapp.simple\n */\nconst exports = {};\n\nimport './simple.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfMapComponent.name,\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/simple.js","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}