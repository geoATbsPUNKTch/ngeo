{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./examples/search.js"],"names":["__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","__webpack_require__","ATTRIBUTION","__webpack_exports__","OSM","opt_options","options","attributions","undefined","crossOrigin","url","call","this","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","projection","tileGrid","extent","minZoom","tileSize","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","urls","transition","olProj","exports","module","angular","_module2","default","name","_module4","searchComponent","bndings","map","controller","template","component","SearchController","$element","$rootScope","$compile","ngeoSearchCreateGeoJSONBloodhound","vectorLayer_","createVectorLayer_","bloodhoundEngine","createAndInitBloodhound_","highlight","hint","minLength","datasets","source","ttAdapter","display","suggestion","get","templates","header","feature","scope","$new","event","window","alert","stopPropagation","html","listeners","select","select_","bind","prototype","$onInit","input","find","on","val","vectorLayer","_Vector2","_Vector4","setMap","bloodhound","_EPSG2","initialize","dataset","featureGeometry","getGeometry","size","getSize","_asserts2","assert","getSource","clear","addFeature","getView","fit","MainController","_Map2","layers","_Tile2","_OSM2","view","_View2","center","zoom"],"mappings":"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","file":"search.d46815bba5d82442d478.js","sourcesContent":["/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 4\n// module chunks = 1 2 3 4 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 5\n// module chunks = 1 2 3 4 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26","/**\n * @module app.search\n */\nconst exports = {};\n\nimport './search.css';\nimport './common_dependencies.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport EPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olProj from 'ol/proj.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeoMapModule.name,\n  ngeoSearchModule.name\n]);\n\n\n/**\n * @type {!angular.Component}\n */\nexports.searchComponent = {\n  bndings: {\n    'map': '=appSearchMap'\n  },\n  controller: 'AppSearchController',\n  template:\n      '<input type=\"text\" placeholder=\"searchâ€¦\" ' +\n      'ngeo-search=\"$ctrl.options\" ' +\n      'ngeo-search-datasets=\"$ctrl.datasets\" ' +\n      'ngeo-search-listeners=\"$ctrl.listeners\">'\n};\n\n\nexports.module.component('appSearch', exports.searchComponent);\n\n\n/**\n * @constructor\n * @param {angular.JQLite} $element Element.\n * @param {angular.Scope} $rootScope Angular root scope.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n *     create GeoJSON Bloodhound service.\n * @ngInject\n */\nexports.SearchController = function($element, $rootScope, $compile, ngeoSearchCreateGeoJSONBloodhound) {\n  /**\n   * @private\n   * @type {angular.JQLite}\n   */\n  this.$element = $element;\n\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = this.createVectorLayer_();\n\n  /** @type {Bloodhound} */\n  const bloodhoundEngine = this.createAndInitBloodhound_(\n    ngeoSearchCreateGeoJSONBloodhound);\n\n  /**\n   * @type {TypeaheadOptions}\n   * @export\n   */\n  this.options = /** @type {TypeaheadOptions} */ ({\n    highlight: true,\n    hint: undefined,\n    minLength: undefined\n  });\n\n  /**\n   * @type {Array.<TypeaheadDataset>}\n   * @export\n   */\n  this.datasets = [{\n    source: bloodhoundEngine.ttAdapter(),\n    display: (suggestion) => {\n      const feature = /** @type {ol.Feature} */ (suggestion);\n      return feature.get('label');\n    },\n    templates: {\n      header: () => '<div class=\"ngeo-header\">Addresses</div>',\n      suggestion: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n\n        // A scope for the ng-click on the suggestion's Â« i Â» button.\n        const scope = $rootScope.$new(true);\n        scope['feature'] = feature;\n        scope['click'] = function(event) {\n          window.alert(feature.get('label'));\n          event.stopPropagation();\n        };\n\n        const html = `<p>${feature.get('label')\n        }<button ng-click=\"click($event)\">i</button></p>`;\n        return $compile(html)(scope);\n      }\n    }\n  }];\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.listeners = /** @type {ngeox.SearchDirectiveListeners} */ ({\n    select: exports.SearchController.select_.bind(this)\n  });\n};\n\n\n/**\n * @export\n */\nexports.SearchController.prototype.$onInit = function() {\n  // Empty the search field on focus and blur.\n  const input = this.$element.find('input');\n  input.on('focus blur', () => {\n    input.val('');\n  });\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer.\n * @private\n */\nexports.SearchController.prototype.createVectorLayer_ = function() {\n  const vectorLayer = new olLayerVector({\n    source: new olSourceVector()\n  });\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  vectorLayer.setMap(this.map);\n  return vectorLayer;\n};\n\n\n/**\n * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n *     create GeoJSON Bloodhound service.\n * @return {Bloodhound} The bloodhound engine.\n * @private\n */\nexports.SearchController.prototype.createAndInitBloodhound_ = function(ngeoSearchCreateGeoJSONBloodhound) {\n  const url = 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/fulltextsearch?query=%QUERY';\n  const bloodhound = ngeoSearchCreateGeoJSONBloodhound(url, undefined, olProj.get('EPSG:3857'), EPSG21781);\n  bloodhound.initialize();\n  return bloodhound;\n};\n\n\n/**\n * @param {jQuery.Event} event Event.\n * @param {Object} suggestion Suggestion.\n * @param {TypeaheadDataset} dataset Dataset.\n * @this {app.search.SearchController}\n * @private\n */\nexports.SearchController.select_ = function(event, suggestion, dataset) {\n  const feature = /** @type {ol.Feature} */ (suggestion);\n  const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n  const size = this.map.getSize();\n  googAsserts.assert(size !== undefined);\n  const source = this.vectorLayer_.getSource();\n  source.clear(true);\n  source.addFeature(feature);\n  this.map.getView().fit(featureGeometry, {\n    size: size,\n    maxZoom: 16\n  });\n};\n\n\nexports.module.controller('AppSearchController', exports.SearchController);\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/search.js"],"sourceRoot":""}