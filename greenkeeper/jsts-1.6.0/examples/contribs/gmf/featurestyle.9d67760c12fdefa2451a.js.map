{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/misc/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./node_modules/file-saver/FileSaver.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/featurestyle.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","_events2","default","unlistenByKey","module","angular","service","_index2","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","_asserts2","assertInstanceof","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","_TreeManager2","_Service2","value","olBase","_Event","type","detail","_Event2","inherits","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","_Collection2","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","_Themes2","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","_Controller2","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","_Snap2","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","_WFS2","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","_Permalink2","_Snapping2","_component2","_FeatureOverlayMgr2","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","_Overlay2","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","_TextFeature2","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","_FeatureHashStyleType2","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","_utils2","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","_LineString2","setFlatCoordinates","_GeometryLayout2","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","_MultiLineString2","readPointGeometry_","point","_Point2","readMultiPointGeometry_","multiPoint","_MultiPoint2","readPolygonGeometry_","rings","polygon","_Polygon2","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","_MultiPolygon2","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","_Fill2","color","_Stroke2","width","_Circle2","fill","stroke","_Text2","_Style2","image","setStyleProperties_","getGeometry","_FeatureProperties2","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","_Feature2","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","_Feature4","transformWithOptions","_Location2","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","setCoordinates","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","useSpatialIndex","wrapX","getDefaultStyleFunction","updateWhileInteracting","geometryName_","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","events","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","Style","createDefaultEditing","resolution","event","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","Feature","updateSketchFeatures_","setGeometryName","setGeometry","dispatchEvent","last","sketchLineGeom","ring","getLinearRing","getLayout","done","pop","removeLastPoint","splice","sketchFeature","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","getSource","sketchFeatures","overlaySource","addFeatures","getActive","createRegularPolygon","opt_sides","opt_angle","center","angle","atan","createBox","ol_extent","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","transition","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","_Interaction2","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","_Vector2","_Vector4","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","getFormattedArea","format","geom","transform","abs","getArea","getFormattedCircleArea","PI","pow","getFormattedLength","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","appendChild","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","classList","add","setOffset","_CustomEvent2","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","addOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","setActive","callback","getTooltipElement","RECTANGLE","TEXT","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","opt_layout","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","layout","closestPointXY","closestPoint","minSquaredDistance","delta","containsXY","getRadiusSquared_","getCenter","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","intersectsExtent","circleExtent","intersectsCoordinate","setCenter","setLayout","changed","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setFlatCoordinatesInternal","setRadius","olMath","Scalify","$filter","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","decimal","unit","str_number","groups","str_unit","unshift","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","_string2","padNumber","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","olExtent","$injector","$filter_","decimals_","has","get","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","_GeometryType2","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","offsetY","font_size","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","azimut","AZIMUT","line","getRadiusLine","_Measure2","getLastCoordinate","offsetX","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","console","zIndex","opt_incGeomFunc","incGeomFunc","_RegularShape2","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","assertString","COLOR","fromString","NAME","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","_GPX2","export_","_KML2","fileName","opt_mimeType","mimeType","clones","writeOptions","dataProjection","featureProjection","rotation","_MeasureAzimut2","getFormattedAzimutRadius","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","assertArray","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","_service2","_filters2","__WEBPACK_IMPORTED_MODULE_11__xml_js__","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","defaultDataProjection","__WEBPACK_IMPORTED_MODULE_10__proj_js__","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","readString","RTE_PARSERS","cmt","desc","src","parseLink","readNonNegativeInteger","extensions","parseExtensions","rtept","values","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","readDecimal","time","readDateTime","TRK_PARSERS","trkseg","parseNode","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","makeChildAppender","writeStringTextNode","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","pushSerializeAndPop","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","makeSimpleNodeFactory","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDecimalTextNode","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","opt_nodeName","nodeName","createElementNS","namespaceURI","GPX_SERIALIZERS","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","orderedKeys","makeSequence","OBJECT_PROPERTY_NODE_FACTORY","getLineStrings","getAttribute","hasZ","hasM","href","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","setAttributeNS","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","XYZM","XYM","handleReadExtensions_","extensionsNode","readFeatureFromNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","readProjection","adaptOptions","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchor","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","textAlign","imageSize","getImageSize","imageScale","getScale","foundText","setFont","setScale","setFill","setStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","getAllTextContent","exec","hexColor","substr","readFlatCoordinates_","re","z","readURI_","trim","baseURI","location","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","object","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","test","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","readFlatLinearRing_","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","setLineStrings","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readFlatCoordinatesFromNode_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","setPolygons","GEOMETRY_COLLECTION","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","readStyle_","STYLE_PARSERS_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","innerBoundaryIsParser_","flatLinearRing","INNER_BOUNDARY_IS_PARSERS_","outerBoundaryIsParser_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","parse","isNaN","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","makeReplacer","innerBoundaryIs","outerBoundaryIs","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","id","setId","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","n","firstElementChild","nextElementSibling","fs","readName","isDocument","readNameFromDocument","isNode","readNameFromNode","doc","firstChild","nextSibling","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","hex","writeCoordinatesTextNode_","dimension","writeDataNode_","pair","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","getGeometries","GEOMETRY_NODE_FACTORY_","getPoints","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","getPolygons","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","linearRing","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","getId","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","getLinearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","writeBooleanTextNode","kml","xmlnsUri","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","__WEBPACK_IMPORTED_MODULE_0__xml_js__","readBooleanString","string","dateTime","readDecimalString","readNonNegativeIntegerString","bool","DOCUMENT","createCDATASection","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","toPrecision","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","appendLineString","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","_fileSaver","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","_DrawAzimut2","_GeometryCollection2","_Projection2","formatLength","formatAzimut","output","getFormattedAzimut","getAzimut","coords","rad","acos","__WEBPACK_AMD_DEFINE_RESULT__","navigator","userAgent","get_URL","webkitURL","save_link","can_use_save_link","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","revoke","file","revokeObjectURL","auto_bom","String","fromCharCode","FileSaver","no_auto_bom","object_url","filesaver","force","dispatch_all","event_types","listener","dispatch","readyState","INIT","createObjectURL","download","MouseEvent","DONE","FileReader","reader","onloadend","readAsDataURL","fs_error","FS_proto","msSaveOrOpenBlob","abort","WRITING","error","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","self","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","Error","__webpack_amd_options__","olFunctions","_Pointer2","started_","sketchLayer_","_Draw2","finishDrawing_","mapBrowserEvent","sketchPointGeom","getLength","FALSE","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","_EventTarget2","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","getString","_Tile2","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","_LayerHelper2","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","dataSource_","_decorate2","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeatureFromDocument","readFeaturesFromDocument","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","component_","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","$element","setColor","_colorpickerComponent2","_FeatureHelper2","ngeoFeatureHelper","scope_","featureHelper_","handleColorSet_","featureListenerKeys_","handleFeatureSet_","newFeature","previousFeature","propName","_Object2","handleGeometryChange_","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","$apply","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","_Condition2","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","ogcLayer","err","return","supportsWFS","_GML4","GML2","_GML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_inherits","_DataSource2","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","_AttributeType2","GEOMETRY","share","myActive","activeDimensions","itsActive","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","_featureStyleComponent2","_index4","constant","MainController","pointProperties","textProperties","lineProperties","poly1Properties","poly2Properties","rectProperties","fromExtent","circleProperties","fromCircle","_View2","zoom","_OSM2","selectedFeature","on","handleMapSingleClick_","forEachFeatureAtPixel","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","defaultPrefix","ft","count","uri","candidate","ns","readGeometryElement","GEOMETRY_PARSERS_","fid","getAttributeNS","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","readPoint","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","_ImageWMS2","serverType","updateParams","_Image2","createBasicWMSLayerFromDataSource","setVisible","visible","capabilitiesURL","opt_dimensions","parser","_WMTSCapabilities2","preload","read","_WMTS2","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","_Group2","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getParams","random","updateWMSLayerState","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","_Message2","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","_Notification2","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","readBox_","BOX_PARSERS_","Box","multiSurface","surface","multiCurve","writeFeatureElement","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","getCoords_","writeSurfaceOrPolygon_","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","rgb","r","g","colorZeroPadding","queryData","pairs","indexOfEquals","queryItem","_condition2","singleClick","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","height","LOADED","load","LOADING","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","version","compareVersions","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","placement_","overflow_","overflow","stroke_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","featureUidToGroupIndex_","groups_","layer_","styleFunction_","updateWhileAnimating","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","_FeatureOverlay2","createFunction","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","rotate","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","defineProperty","_Base2","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","radius2","mapTooltip_","featureHashFormat_","_FeatureHash2","fillOpacity","isBox","isLabel","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","_Manager2","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","_Popover2","position","f","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","_constants2","Permalink3dParam","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","_OGC2","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_module2","_features2","_EventHelper2","OpenLayersLayerProperties","regexp","key1","key2","container","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","_OGCGroup2","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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","file":"featurestyle.9d67760c12fdefa2451a.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  const length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 147\n// module chunks = 0 1 2 3 4 5 6 7 8 11 13 14","/**\n * @module ngeo.misc.filters\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 165\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 166\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.download.service\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/file-saver/FileSaver.js\n// module id = 199\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 200\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 201\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/**\n * @module ngeo.interaction.MeasureBaseOptions\n */\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.misc.colorpickerComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/misc/colorpickerComponent.html`;\n  });\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/colorpickerComponent.js","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/featureStyleComponent.html`\n  };\n};\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          olObject.getChangeEventType(propName),\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/featureStyleComponent.js","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.featurestyle\n */\nconst exports = {};\n\nimport './featurestyle.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfDrawingFeatureStyleComponent.name,\n  gmfMapComponent.name,\n  ngeoBase.module.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.module.value('ngeoMeasureDecimals', 2);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  // create features\n  const features = [];\n\n  const pointProperties = {\n    geometry: new olGeomPoint([-8458215, 6672646])\n  };\n  pointProperties[ngeoFormatFeatureProperties.COLOR] = '#009D57';\n  pointProperties[ngeoFormatFeatureProperties.NAME] = 'Point1';\n  pointProperties[ngeoFormatFeatureProperties.SIZE] = '6';\n  features.push(new olFeature(pointProperties));\n\n  const textProperties = {\n    geometry: new olGeomPoint([-8007848, 6209744])\n  };\n  textProperties[ngeoFormatFeatureProperties.ANGLE] = '0';\n  textProperties[ngeoFormatFeatureProperties.COLOR] = '#000000';\n  textProperties[ngeoFormatFeatureProperties.IS_TEXT] = true;\n  textProperties[ngeoFormatFeatureProperties.NAME] = 'Text 1';\n  textProperties[ngeoFormatFeatureProperties.SIZE] = '16';\n  textProperties[ngeoFormatFeatureProperties.STROKE] = '2';\n  features.push(new olFeature(textProperties));\n\n  const lineProperties = {\n    geometry: new olGeomLineString([\n      [-8321240, 6523441],\n      [-8103547, 6726458],\n      [-8091318, 6408480],\n      [-7973910, 6631065]\n    ])\n  };\n  lineProperties[ngeoFormatFeatureProperties.COLOR] = '#0BA9CC';\n  lineProperties[ngeoFormatFeatureProperties.NAME] = 'LineString 1';\n  lineProperties[ngeoFormatFeatureProperties.STROKE] = '4';\n  features.push(new olFeature(lineProperties));\n\n  const poly1Properties = {\n    geometry: new olGeomPolygon([\n      [\n        [-8512027, 6359560],\n        [-8531595, 6080718],\n        [-8267428, 6031798],\n        [-8238077, 6247045],\n        [-8512027, 6359560]\n      ]\n    ])\n  };\n  poly1Properties[ngeoFormatFeatureProperties.COLOR] = '#4186F0';\n  poly1Properties[ngeoFormatFeatureProperties.NAME] = 'Polygon 1';\n  poly1Properties[ngeoFormatFeatureProperties.OPACITY] = '0.5';\n  poly1Properties[ngeoFormatFeatureProperties.SHOW_MEASURE] = true;\n  poly1Properties[ngeoFormatFeatureProperties.STROKE] = '1';\n  features.push(new olFeature(poly1Properties));\n\n  const poly2Properties = {\n    geometry: new olGeomPolygon([\n      [\n        [-7952508, 6096617],\n        [-8051570, 5959642],\n        [-7848554, 5926621],\n        [-7754383, 6025683],\n        [-7952508, 6096617]\n      ]\n    ])\n  };\n  poly2Properties[ngeoFormatFeatureProperties.COLOR] = '#CCCCCC';\n  poly2Properties[ngeoFormatFeatureProperties.NAME] = 'Polygon 2';\n  poly2Properties[ngeoFormatFeatureProperties.OPACITY] = '1';\n  poly2Properties[ngeoFormatFeatureProperties.STROKE] = '3';\n  features.push(new olFeature(poly2Properties));\n\n  const rectProperties = {\n    geometry: olGeomPolygon.fromExtent([-7874848, 6496535, -7730535, 6384020])\n  };\n  rectProperties[ngeoFormatFeatureProperties.COLOR] = '#000000';\n  rectProperties[ngeoFormatFeatureProperties.IS_RECTANGLE] = true;\n  rectProperties[ngeoFormatFeatureProperties.NAME] = 'Rectangle 1';\n  rectProperties[ngeoFormatFeatureProperties.OPACITY] = '0.5';\n  rectProperties[ngeoFormatFeatureProperties.STROKE] = '2';\n  features.push(new olFeature(rectProperties));\n\n  const circleProperties = {\n    geometry: olGeomPolygon.fromCircle(\n      new olGeomCircle([-7691093, 6166327], 35000), 64)\n  };\n  circleProperties[ngeoFormatFeatureProperties.COLOR] = '#000000';\n  circleProperties[ngeoFormatFeatureProperties.IS_CIRCLE] = true;\n  circleProperties[ngeoFormatFeatureProperties.NAME] = 'Circle 1';\n  circleProperties[ngeoFormatFeatureProperties.OPACITY] = '0.5';\n  circleProperties[ngeoFormatFeatureProperties.STROKE] = '2';\n  features.push(new olFeature(circleProperties));\n\n  const view = new olView({\n    center: [-8174482, 6288627],\n    zoom: 6\n  });\n\n  ngeoFeatureHelper.setProjection(googAsserts.assert(view.getProjection()));\n\n  // set style\n  features.forEach((feature) => {\n    ngeoFeatureHelper.setStyle(feature);\n  }, this);\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      new olLayerVector({\n        source: new olSourceVector({\n          wrapX: false,\n          features: features\n        })\n      })\n    ],\n    view: view\n  });\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  this.map.on('singleclick', this.handleMapSingleClick_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapSingleClick_ = function(evt) {\n  const pixel = evt.pixel;\n\n  const feature = this.map.forEachFeatureAtPixel(pixel, feature => feature);\n\n  if (this.selectedFeature) {\n    this.featureHelper_.setStyle(this.selectedFeature);\n  }\n\n  if (feature) {\n    if (this.selectedFeature !== feature) {\n      this.selectedFeature = feature;\n      this.featureHelper_.setStyle(feature, true);\n    }\n  } else {\n    this.selectedFeature = null;\n  }\n\n  this.scope_.$apply();\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/featurestyle.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}