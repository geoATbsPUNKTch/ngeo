{"version":3,"sources":["webpack:///./examples/backgroundlayerdropdown.js","webpack:///./examples/partials/backgroundlayerdropdown.html","webpack:///./src/source/AsitVD.js"],"names":["__webpack_require__","exports","module","angular","_module2","default","name","backgroundlayerComponent","bindings","map","template","controller","controllerAs","component","BackgroundlayerController","$http","ngeoBackgroundLayerMgr","_this","this","get","then","resp","bgLayers","data","setLayer","backgroundLayerMgr_","prototype","layerSpec","layer","createLayer_","set","layerName","_Tile2","source","_AsitVD2","MainController","$scope","_Map2","view","_View2","projection","resolutions","center","zoom","overlay","_Image2","_ImageWMS2","url","params","LAYERS","serverType","addLayer","asitVDResolutions","asitVDTileGrid","extent","matrixIds","value","index","options","_classCallCheck","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","attributions","requestEncoding","style","matrixSet","format","tileGrid","_inherits","_WMTS2"],"mappings":"gJAOA,QAAAA,EAAA,SAEAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAZA,IAAIC,KAgBJA,EAAQC,OAASC,QAAQD,OAAO,OAC9BE,EAAAC,QAAcC,OAYhBL,EAAQM,0BACNC,UACEC,IAAO,0BAETC,SAAUV,EAAQ,KAClBW,WAAY,+BACZC,aAAc,QAIhBX,EAAQC,OAAOW,UAAU,qBAAsBZ,EAAQM,0BAWvDN,EAAQa,0BAA4B,SAASC,EAAOC,GAAwB,IAAAC,EAAAC,KAC1EH,EAAMI,IAAI,8BAA8BC,KACtC,SAACC,GACC,IAAMC,EAAWD,EAAKE,KACtBN,EAAA,SAAmBK,EACnBL,EAAKO,SAASF,EAAS,MAO3BJ,KAAKO,oBAAsBT,GAZ7Bf,EAAQa,qEAsBRb,EAAQa,0BAA0BY,UAAUF,SAAW,SAASG,GAC9DT,KAAA,eAAyBS,EACzB,IAAMC,EAAQV,KAAKW,aAAaF,EAAA,MAChCT,KAAKO,oBAAoBK,IAAIZ,KAAA,IAAaU,IAS5C3B,EAAQa,0BAA0BY,UAAUG,aAAe,SAASE,GAClE,GAAkB,UAAdA,EACF,OAAO,IAAAC,EAAA3B,QAGT,IAAM4B,EAAS,IAAAC,EAAA7B,SACbuB,MAAOG,IAET,OAAO,IAAAC,EAAA3B,SAAiB4B,YAI1BhC,EAAQC,OAAOS,WAAW,+BACxBV,EAAQa,2BAQVb,EAAQkC,eAAiB,SAASC,GAKhC,IAAM3B,EAAM,IAAA4B,EAAAhC,SACViC,KAAM,IAAAC,EAAAlC,SACJmC,qBACAC,aAAc,IAAM,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,IAC7DC,QAAS,IAAQ,KACjBC,KAAM,MAGVzB,KAAA,IAAcT,EAMd,IAAMmC,EAAU,IAAAC,EAAAxC,SACd4B,OAAQ,IAAAa,EAAAzC,SACN0C,IAAK,2BACLC,QAASC,OAAU,oCACnBC,WAAY,gBAIhBzC,EAAI0C,SAASP,IA3Bf3C,EAAQkC,kCAgCRlC,EAAQC,OAAOS,WAAW,iBAAkBV,EAAQkC,0BAGrClC,qBC/IfC,EAAAD,QAAA,wYCGA,QAAAD,EAAA,wDAOA,IAAMoD,GACJ,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAClE,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAO1DC,EAAiB,MAfvBrD,EAAA,KAeuBK,UACrBiD,QAAS,KAAQ,IAAO,IAAQ,MAChCb,YAAaW,EACbG,UAAWH,EAAkB3C,IAAI,SAAC+C,EAAOC,GAAR,SAAqBA,MASlDxD,cAKJ,SAAAA,EAAYyD,GAAS,mGAAAC,CAAAzC,KAAAjB,oKAAA2D,CAAA1C,MAAAjB,EAAA4D,WAAAC,OAAAC,eAAA9D,IAAA+D,KAAA9C,MAEjB+C,aAAc,sEACdlB,IAAK,6GAELP,WAAY,aACZ0B,gBAAiB,OACjBtC,MAAO8B,EAAQ9B,MACfuC,MAAO,UACPC,UAAW,QACXC,OAAQ,YACRC,SAAUjB,KAhBV,gUAAAkB,CAAAtE,EAAAuE,EAAAnE,SAAAJ,eAsBSA","file":"backgroundlayerdropdown.5c844b5da15c5e20e48d.js","sourcesContent":["/**\n * @module app.backgroundlayerdropdown\n */\nlet exports = {};\n\n// webpack: import './backgroundlayerdropdown.css';\n// webpack: import './common_dependencies.js';\nimport ngeoSourceAsitVD from 'ngeo/source/AsitVD.js';\n\nimport EPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeoMapModule.name\n]);\n\n\n/**\n * The application-specific background layer component.\n *\n * The component is based on Bootstrap's dropdown jQuery plugin and on\n * the ngeoBackgroundLayerMgr service.\n *\n * @type {!angular.Component}\n */\nexports.backgroundlayerComponent = {\n  bindings: {\n    'map': '=appBackgroundlayerMap'\n  },\n  template: require('./partials/backgroundlayerdropdown.html'),\n  controller: 'AppBackgroundlayerController',\n  controllerAs: 'ctrl'\n};\n\n\nexports.module.component('appBackgroundlayer', exports.backgroundlayerComponent);\n\n\n/**\n * @constructor\n * @param {angular.$http} $http Angular http service.\n * @param {ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n *     manager.\n * @export\n * @ngInject\n */\nexports.BackgroundlayerController = function($http, ngeoBackgroundLayerMgr) {\n  $http.get('data/backgroundlayers.json').then(\n    (resp) => {\n      const bgLayers = resp.data;\n      this['bgLayers'] = bgLayers;\n      this.setLayer(bgLayers[0]);\n    });\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n};\n\n\n/**\n * Function called when the user selects a new background layer in the\n * dropdown. Called by the ng-click directive used in the partial.\n * @param {Object} layerSpec Layer specification object.\n * @export\n */\nexports.BackgroundlayerController.prototype.setLayer = function(layerSpec) {\n  this['currentBgLayer'] = layerSpec;\n  const layer = this.createLayer_(layerSpec['name']);\n  this.backgroundLayerMgr_.set(this['map'], layer);\n};\n\n\n/**\n * @param {string} layerName Layer name.\n * @return {ol.layer.Tile} The layer.\n * @private\n */\nexports.BackgroundlayerController.prototype.createLayer_ = function(layerName) {\n  if (layerName === 'blank') {\n    return new olLayerTile();\n  }\n\n  const source = new ngeoSourceAsitVD({\n    layer: layerName\n  });\n  return new olLayerTile({source});\n};\n\n\nexports.module.controller('AppBackgroundlayerController',\n  exports.BackgroundlayerController);\n\n\n/**\n * @constructor\n * @param {angular.Scope} $scope Controller scope.\n * @ngInject\n */\nexports.MainController = function($scope) {\n\n  /**\n   * @type {ol.Map}\n   */\n  const map = new olMap({\n    view: new olView({\n      projection: EPSG21781,\n      resolutions: [1000, 500, 200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 1\n    })\n  });\n  this['map'] = map;\n\n  /**\n   * An overlay layer.\n   * @type {ol.layer.Image}\n   */\n  const overlay = new olLayerImage({\n    source: new olSourceImageWMS({\n      url: 'https://wms.geo.admin.ch',\n      params: {'LAYERS': 'ch.swisstopo.dreiecksvermaschung'},\n      serverType: 'mapserver'\n    })\n  });\n\n  map.addLayer(overlay);\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/backgroundlayerdropdown.js","module.exports = \"<div class=dropdown> <button type=button class=\\\"btn btn-primary\\\" data-toggle=dropdown> {{ctrl.currentBgLayer.name}} <span class=caret></span> </button> <ul class=dropdown-menu role=menu> <li ng-repeat=\\\"layer in ::ctrl.bgLayers\\\"> <a href ng-click=ctrl.setLayer(layer)>{{::layer.name}}</a> </li> </ul> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./examples/partials/backgroundlayerdropdown.html\n// module id = 293\n// module chunks = 25","/**\n * @module ngeo.source.AsitVD\n */\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n\n/**\n * @const {!Array.<number>}\n */\nconst asitVDResolutions = [\n  4000, 3750, 3500, 3250, 3000, 2750, 2500, 2250, 2000, 1750, 1500, 1250,\n  1000, 750, 650, 500, 250, 100, 50, 20, 10, 5, 2.5, 2, 1.5, 1, 0.5\n];\n\n\n/**\n * @const {ol.tilegrid.WMTS}\n */\nconst asitVDTileGrid = new olTilegridWMTS({\n  extent: [420000, 30000, 900000, 350000],\n  resolutions: asitVDResolutions,\n  matrixIds: asitVDResolutions.map((value, index) => `${index}`)\n});\n\n\n/**\n * Layer source for the ASIT VD tile server.\n * @see https://www.asitvd.ch/chercher/geoservices/fond-de-plan-asit-vd.html\n *\n */\nconst exports = class extends olSourceWMTS {\n\n  /**\n   * @param {ngeox.source.AsitVDOptions} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      attributions: 'géodonnées &copy; Etat de Vaud & &copy; contributeurs OpenStreetMap',\n      url: 'https://ows{1-4}.asitvd.ch/wmts/1.0.0/{Layer}/default/default/0/' +\n        '21781/{TileMatrix}/{TileRow}/{TileCol}.png',\n      projection: 'EPSG:21781',\n      requestEncoding: 'REST',\n      layer: options.layer,\n      style: 'default',\n      matrixSet: '21781',\n      format: 'image/png',\n      tileGrid: asitVDTileGrid\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/source/AsitVD.js"],"sourceRoot":""}