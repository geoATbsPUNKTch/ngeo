{"version":3,"sources":["webpack:///./src/message/Popup.js","webpack:///./src/message/popupComponent.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./examples/disclaimer.js","webpack:///./src/message/Disclaimer.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./src/message/Message.js"],"names":["__webpack_require__","e","Error","code","exports","$compile","$rootScope","$sce","$timeout","_this","this","scope","$new","$watch","open","autoDestroy_","timeout_","destroy","sce_","element_","angular","element","document","body","append","prototype","getOpen","setOpen","$destroy","remove","setTitle","title","trustedTitle","trustAsHtml","setContent","content","opt_trusted","setUrl","url","setWidth","width","setHeight","height","setSize","setAutoDestroy","autoDestroy","addClass","cls","options","_asserts2","default","fail","undefined","Factory","module","_popupComponent2","name","factory","_index","value","attrs","templateUrl","_index2","baseModuleTemplateUrl","directive_","ngeoPopupTemplateUrl","restrict","link","close","evt","stopPropagation","preventDefault","newVal","oldVal","css","directive","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","opt_options","attributions","ATTRIBUTION","crossOrigin","call","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","__webpack_exports__","_module2","_Disclaimer2","MainController","ngeoDisclaimer","disclaimer","map","_Map2","layers","_Tile2","source","_OSM2","view","_View2","center","zoom","successMsg_","infoMsg_","warningMsg_","errorMsg_","inMapMsgs_","$","tooltip","container","trigger","success","info","warn","error","inMap","forEach","message","alert","msg","target","type","_Message2","Type","WARNING","closeAll","SUCCESS","INFORMATION","ERROR","controller","olBase","gettextCatalog","ngeoCreatePopup","gettextCatalog_","createPopup_","container_","messages_","inherits","object","show","getMessageObjects","closeMessage_","showMessage","assertString","uid","getMessageUid_","popup","classNames","push","el","join","button","getString","html","on","obj","hasClass","_Popup2","service","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","projection","tileGrid","extent","minZoom","tileSize","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","urls","transition","opt_type","msgObjects","msgObject","defaultType","Array","isArray"],"mappings":"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","file":"disclaimer.0a4e74936755091f4df4.js","sourcesContent":["/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Popup.js","/**\n * @module ngeo.message.popupComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n// webpack: import 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/message/popupcomponent.html`; // nowebpack\n    // webpack: 'ngeo/message/popupcomponent';\n  });\n\n// webpack: exports.run(/* @ngInject */ ($templateCache) => {\n// webpack:   $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n// webpack: });\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intented to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/popupComponent.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 3\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module app.disclaimer\n */\nlet exports = {};\n\n// webpack: import './disclaimer.css';\n// webpack: import './common_dependencies.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeoMapModule.name,\n  ngeoMessageDisclaimer.module.name,\n]);\n\n\n/**\n * @param {ngeo.message.Disclaimer} ngeoDisclaimer Ngeo disclaimer service.\n * @ngInject\n * @constructor\n */\nexports.MainController = function(ngeoDisclaimer) {\n\n  /**\n   * @type {ngeo.message.Disclaimer}\n   * @export\n   */\n  this.disclaimer = ngeoDisclaimer;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.successMsg_ = 'Disclaimer with success style';\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.infoMsg_ = 'Disclaimer with info style';\n  /**\n   * @type {string}\n   * @private\n   */\n  this.warningMsg_ = 'Disclaimer with warning style';\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.errorMsg_ = 'Disclaimer with error style';\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.inMapMsgs_ = [\n    'Disclaimer inside the map',\n    'An other message ',\n    'Map contributors',\n    'This is a long message inside a map'\n  ];\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.success = function() {\n  this.disclaimer.success(this.successMsg_);\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.info = function() {\n  this.disclaimer.info(this.infoMsg_);\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.warn = function() {\n  this.disclaimer.warn(this.warningMsg_);\n};\n\n\n/**\n * @export\n */\nexports.MainController.prototype.error = function() {\n  this.disclaimer.error(this.errorMsg_);\n};\n\n\n/**\n * Demonstrates how to display a disclaimer message in an other target. In\n * this case, it's shown in the map.\n * @export\n */\nexports.MainController.prototype.inMap = function() {\n  this.inMapMsgs_.forEach(function(message) {\n    this.disclaimer.alert({\n      msg: message,\n      target: angular.element('#disclaimers-in-map'),\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }, this);\n};\n\n\n/**\n * Demonstrates how to close disclaimer messages using JavaScript, i.e.\n * instead of clicking on the close button.\n * @export\n */\nexports.MainController.prototype.closeAll = function() {\n\n  this.disclaimer.close({\n    msg: this.successMsg_,\n    type: ngeoMessageMessage.Type.SUCCESS\n  });\n\n  this.disclaimer.close({\n    msg: this.infoMsg_,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n\n  this.disclaimer.close({\n    msg: this.warningMsg_,\n    type: ngeoMessageMessage.Type.WARNING\n  });\n\n  this.disclaimer.close({\n    msg: this.errorMsg_,\n    type: ngeoMessageMessage.Type.ERROR\n  });\n\n  this.inMapMsgs_.forEach(function(message) {\n    this.disclaimer.close({\n      msg: message,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }, this);\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/disclaimer.js","/**\n * @module ngeo.message.Disclaimer\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Disclaimer.js","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 4\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js"],"sourceRoot":""}