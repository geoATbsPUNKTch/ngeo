{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./examples/control.js","webpack:///./node_modules/openlayers/src/ol/control/MousePosition.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","__webpack_require__","OSM","opt_options","options","attributions","undefined","ATTRIBUTION","crossOrigin","url","call","this","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","__webpack_exports__","exports","module","angular","_module2","default","name","_controlComponent2","MainController","map","_Map2","layers","_Tile2","source","_OSM2","view","_View2","center","zoom","control","_MousePosition2","className","controller","__WEBPACK_IMPORTED_MODULE_5__proj_js__","MousePosition","element","document","createElement","render","__WEBPACK_IMPORTED_MODULE_4__control_Control_js__","target","__WEBPACK_IMPORTED_MODULE_1__events_js__","listen","__WEBPACK_IMPORTED_MODULE_3__Object_js__","getChangeEventType","Property_","PROJECTION","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","projection","setProjection","undefinedHTML_","undefinedHTML","renderedHTML_","innerHTML","mapProjection_","transform_","lastMouseMovePixel_","mapEvent","frameState","viewState","updateHTML_","prototype","getCoordinateFormat","get","COORDINATE_FORMAT","getProjection","handleMouseMove","event","getMap","getEventPixel","handleMouseOut","setMap","viewport","getViewport","listenerKeys","push","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","MOUSEMOVE","MOUSEOUT","format","set","pixel","html","coordinate","getCoordinateFromPixel","toString","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","tileGrid","createXYZ","extent","extentFromProjection","minZoom","tileSize","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","urls","transition"],"mappings":"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","file":"control.b9cc9889f324ae99939f.js","sourcesContent":["/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 4\n// module chunks = 1 2 3 4 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26","/**\n * @module app.control\n */\nconst exports = {};\n\nimport './control.css';\nimport './common_dependencies.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeoMapModule.name,\n  ngeoMiscControlComponent.name,\n]);\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n\n  /**\n   * @type {ol.control.Control}\n   * @export\n   */\n  this.control = new olControlMousePosition({\n    className: 'mouse-position'\n  });\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/control.js","/**\n * @module ol/control/MousePosition\n */\n\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport BaseObject from '../Object.js';\nimport Control from '../control/Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.MousePositionOptions=} opt_options Mouse position\n *     options.\n * @api\n */\nconst MousePosition = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const element = document.createElement('DIV');\n  element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n  const render = options.render ?\n    options.render : MousePosition.render;\n\n  Control.call(this, {\n    element: element,\n    render: render,\n    target: options.target\n  });\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(MousePosition.Property_.PROJECTION),\n    this.handleProjectionChanged_, this);\n\n  if (options.coordinateFormat) {\n    this.setCoordinateFormat(options.coordinateFormat);\n  }\n  if (options.projection) {\n    this.setProjection(options.projection);\n  }\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = element.innerHTML;\n\n  /**\n   * @private\n   * @type {ol.proj.Projection}\n   */\n  this.mapProjection_ = null;\n\n  /**\n   * @private\n   * @type {?ol.TransformFunction}\n   */\n  this.transform_ = null;\n\n  /**\n   * @private\n   * @type {ol.Pixel}\n   */\n  this.lastMouseMovePixel_ = null;\n\n};\n\ninherits(MousePosition, Control);\n\n\n/**\n * Update the mouseposition element.\n * @param {ol.MapEvent} mapEvent Map event.\n * @this {ol.control.MousePosition}\n * @api\n */\nMousePosition.render = function(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n  this.updateHTML_(this.lastMouseMovePixel_);\n};\n\n\n/**\n * @private\n */\nMousePosition.prototype.handleProjectionChanged_ = function() {\n  this.transform_ = null;\n};\n\n\n/**\n * Return the coordinate format type used to render the current position or\n * undefined.\n * @return {ol.CoordinateFormatType|undefined} The format to render the current\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.getCoordinateFormat = function() {\n  return (\n    /** @type {ol.CoordinateFormatType|undefined} */ this.get(MousePosition.Property_.COORDINATE_FORMAT)\n  );\n};\n\n\n/**\n * Return the projection that is used to report the mouse position.\n * @return {ol.proj.Projection|undefined} The projection to report mouse\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.getProjection = function() {\n  return (\n    /** @type {ol.proj.Projection|undefined} */ this.get(MousePosition.Property_.PROJECTION)\n  );\n};\n\n\n/**\n * @param {Event} event Browser event.\n * @protected\n */\nMousePosition.prototype.handleMouseMove = function(event) {\n  const map = this.getMap();\n  this.lastMouseMovePixel_ = map.getEventPixel(event);\n  this.updateHTML_(this.lastMouseMovePixel_);\n};\n\n\n/**\n * @param {Event} event Browser event.\n * @protected\n */\nMousePosition.prototype.handleMouseOut = function(event) {\n  this.updateHTML_(null);\n  this.lastMouseMovePixel_ = null;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMousePosition.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    const viewport = map.getViewport();\n    this.listenerKeys.push(\n      _ol_events_.listen(viewport, EventType.MOUSEMOVE,\n        this.handleMouseMove, this),\n      _ol_events_.listen(viewport, EventType.MOUSEOUT,\n        this.handleMouseOut, this)\n    );\n  }\n};\n\n\n/**\n * Set the coordinate format type used to render the current position.\n * @param {ol.CoordinateFormatType} format The format to render the current\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.setCoordinateFormat = function(format) {\n  this.set(MousePosition.Property_.COORDINATE_FORMAT, format);\n};\n\n\n/**\n * Set the projection that is used to report the mouse position.\n * @param {ol.ProjectionLike} projection The projection to report mouse\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.setProjection = function(projection) {\n  this.set(MousePosition.Property_.PROJECTION, getProjection(projection));\n};\n\n\n/**\n * @param {?ol.Pixel} pixel Pixel.\n * @private\n */\nMousePosition.prototype.updateHTML_ = function(pixel) {\n  let html = this.undefinedHTML_;\n  if (pixel && this.mapProjection_) {\n    if (!this.transform_) {\n      const projection = this.getProjection();\n      if (projection) {\n        this.transform_ = getTransformFromProjections(\n          this.mapProjection_, projection);\n      } else {\n        this.transform_ = identityTransform;\n      }\n    }\n    const map = this.getMap();\n    const coordinate = map.getCoordinateFromPixel(pixel);\n    if (coordinate) {\n      this.transform_(coordinate, coordinate);\n      const coordinateFormat = this.getCoordinateFormat();\n      if (coordinateFormat) {\n        html = coordinateFormat(coordinate);\n      } else {\n        html = coordinate.toString();\n      }\n    }\n  }\n  if (!this.renderedHTML_ || html != this.renderedHTML_) {\n    this.element.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nMousePosition.Property_ = {\n  PROJECTION: 'projection',\n  COORDINATE_FORMAT: 'coordinateFormat'\n};\nexport default MousePosition;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/control/MousePosition.js\n// module id = 409\n// module chunks = 10","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 5\n// module chunks = 1 2 3 4 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26"],"sourceRoot":""}