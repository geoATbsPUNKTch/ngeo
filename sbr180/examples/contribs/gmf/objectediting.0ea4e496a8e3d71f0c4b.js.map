{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/statemanager/Service.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/datasource/DataSources.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/misc/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./src/datasource/File.js","webpack:///./src/message/popupComponent.js","webpack:///./src/misc/Time.js","webpack:///./node_modules/openlayers/src/ol/format/JSONFeature.js","webpack:///./node_modules/openlayers/src/ol/format/GeoJSON.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./node_modules/file-saver/FileSaver.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./src/message/Popup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./node_modules/angular-sanitize/index.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/layertree/component.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./src/misc/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./node_modules/angular-sanitize/angular-sanitize.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/btnComponent.js","webpack:///./node_modules/openlayers/src/ol/interaction/ModifyEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Modify.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./contribs/gmf/src/objectediting/Manager.js","webpack:///./contribs/gmf/src/objectediting/Query.js","webpack:///./contribs/gmf/examples/objectediting.js","webpack:///./contribs/gmf/src/objectediting/component.js","webpack:///./contribs/gmf/src/objectediting/geom.js","webpack:///./contribs/gmf/src/objectediting/coordinate.js","webpack:///./contribs/gmf/src/objectediting/toolsComponent.js","webpack:///./contribs/gmf/src/objectediting/getWMSFeatureComponent.js","webpack:///./src/editing/createregularpolygonfromclickComponent.js","webpack:///./src/interaction/DrawRegularPolygonFromClick.js","webpack:///./node_modules/jsts/hasInterface.js","webpack:///./node_modules/jsts/extend.js","webpack:///./node_modules/jsts/java/lang/Cloneable.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequence.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequenceFactory.js","webpack:///./node_modules/jsts/java/lang/IllegalArgumentException.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/GeometryComponentFilter.js","webpack:///./node_modules/jsts/java/lang/Comparable.js","webpack:///./node_modules/jsts/java/io/Serializable.js","webpack:///./node_modules/jsts/org/locationtech/jts/util/NumberUtil.js","webpack:///./node_modules/jsts/java/lang/Double.js","webpack:///./node_modules/jsts/java/util/Comparator.js","webpack:///./node_modules/jsts/java/lang/RuntimeException.js","webpack:///./node_modules/jsts/inherits.js","webpack:///./node_modules/jsts/org/locationtech/jts/util/AssertionFailedException.js","webpack:///./node_modules/jsts/org/locationtech/jts/util/Assert.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/Coordinate.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/Envelope.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/Geometry.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/CoordinateFilter.js","webpack:///./node_modules/jsts/org/locationtech/jts/algorithm/BoundaryNodeRule.js","webpack:///./node_modules/jsts/java/util/Iterator.js","webpack:///./node_modules/jsts/java/util/Collection.js","webpack:///./node_modules/jsts/java/util/IndexOutOfBoundsException.js","webpack:///./node_modules/jsts/java/util/List.js","webpack:///./node_modules/jsts/java/util/NoSuchElementException.js","webpack:///./node_modules/jsts/java/util/OperationNotSupported.js","webpack:///./node_modules/jsts/java/util/ArrayList.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/CoordinateList.js","webpack:///./node_modules/jsts/org/locationtech/jts/math/MathUtil.js","webpack:///./node_modules/jsts/java/lang/System.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/CoordinateArrays.js","webpack:///./node_modules/jsts/java/util/Map.js","webpack:///./node_modules/jsts/java/util/SortedMap.js","webpack:///./node_modules/jsts/java/util/Set.js","webpack:///./node_modules/jsts/java/util/HashSet.js","webpack:///./node_modules/jsts/java/util/TreeMap.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/Lineal.js","webpack:///./node_modules/jsts/java/util/SortedSet.js","webpack:///./node_modules/jsts/java/util/TreeSet.js","webpack:///./node_modules/jsts/Map.js","webpack:///./node_modules/jsts/java/util/Arrays.js","webpack:///./node_modules/jsts/java/lang/Character.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/Dimension.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/GeometryFilter.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequenceFilter.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/GeometryCollection.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/MultiLineString.js","webpack:///./node_modules/jsts/org/locationtech/jts/operation/BoundaryOp.js","webpack:///./node_modules/jsts/org/locationtech/jts/algorithm/Length.js","webpack:///./node_modules/jsts/java/io/IOException.js","webpack:///./node_modules/jsts/org/locationtech/jts/util/StringUtil.js","webpack:///./node_modules/jsts/java/lang/StringBuilder.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequences.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/LineString.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/Puntal.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/Point.js","webpack:///./node_modules/jsts/org/locationtech/jts/algorithm/Area.js","webpack:///./node_modules/jsts/java/lang/StringBuffer.js","webpack:///./node_modules/jsts/java/lang/Integer.js","webpack:///./node_modules/jsts/org/locationtech/jts/math/DD.js","webpack:///./node_modules/jsts/org/locationtech/jts/algorithm/CGAlgorithmsDD.js","webpack:///./node_modules/jsts/org/locationtech/jts/algorithm/Orientation.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/Polygonal.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/Polygon.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/MultiPoint.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/LinearRing.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/MultiPolygon.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/util/GeometryEditor.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/impl/CoordinateArraySequence.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js","webpack:///./node_modules/jsts/java/io/ByteArrayOutputStream.js","webpack:///./node_modules/jsts/java/io/PrintStream.js","webpack:///./node_modules/jsts/java/io/LineNumberReader.js","webpack:///./node_modules/jsts/java/io/StringReader.js","webpack:///./node_modules/jsts/java/text/DecimalFormat.js","webpack:///./node_modules/jsts/java/util/HashMap.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/PrecisionModel.js","webpack:///./node_modules/jsts/org/locationtech/jts/geom/GeometryFactory.js","webpack:///./node_modules/jsts/org/locationtech/jts/io/GeoJSONParser.js","webpack:///./node_modules/jsts/org/locationtech/jts/io/GeoJSONReader.js","webpack:///./node_modules/jsts/org/locationtech/jts/io/GeoJSONWriter.js","webpack:///./node_modules/jsts/org/locationtech/jts/io/WKTParser.js","webpack:///./node_modules/jsts/org/locationtech/jts/io/WKTReader.js","webpack:///./node_modules/jsts/org/locationtech/jts/io/WKTWriter.js","webpack:///./node_modules/jsts/org/locationtech/jts/io/OL3Parser.js"],"names":["__WEBPACK_IMPORTED_MODULE_1__string_js__","__webpack_require__","XSD","readBoolean","node","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","exec","undefined","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","MultiLineString","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","call","this","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","prototype","appendLineString","lineString","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","slice","push","length","changed","clone","multiLineString","setFlatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getExtent","getRevision","Math","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","stride","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","getCoordinates","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","index","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","i","ii","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","XY","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","extent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","appendPoint","point","multiPoint","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","olBase","olArray","exports","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","_EventTarget2","default","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","inherits","findGroupByLayerNodeName","themes","name","theme","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","getUid","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","type","gmfLayerWMTS","_asserts2","assert","url","createWMTSLayerFromCapabilitites","then","bind","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","data","promises","background_layers","map","itemType","reverse","all","collection","filter","l","_Collection2","createBasicGroup","layerGroupCreationFn","values","getString","_Tile2","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","window","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","module","angular","_LayerHelper2","value","service","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","mapExpr","parent","$parent","$on","indexOf","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","dataSource_","_decorate2","layerLoading","_events2","listen","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeature","source","opt_options","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","features","readFeaturesFromDocument","readFeatures","readFeaturesFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","writeFeature","feature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","geometry","writeGeometryNode","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","key","_loop","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","updateState","updateParams","deleteParam","_Location2","RegExp","options","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","_Condition2","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","return","wfsFormat","supportsWFS","format","_GML4","GML2","_GML2","_WFS2","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_inherits","_DataSource2","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","_AttributeType2","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","active","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","objectStack","localName","namespaceURI","pushParseAndPop","context","prefix","defaultPrefix","ft","nodeName","split","pop","count","uri","candidate","ns","parsersNS","featureTypes","isArray","p","parsers","makeArrayPusher","readFeatureElement","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","XYZ","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","Point","LineString","Polygon","RING_PARSERS","LinearRing","getReadOptions","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","_ImageWMS2","serverType","crossOrigin","_Image2","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_dimensions","parser","_WMTSCapabilities2","preload","Infinity","result","read","_WMTS2","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","_Group2","setLayers","getGroupFromMap","groupName","groups","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","getParams","random","updateWMSLayerState","names","getQuerySourceIds","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","_index2","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","unshift","addGroupByName","_this4","_Themes2","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","_Controller2","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","includes","msg","notify","_Message2","INFORMATION","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this8","_Notification2","_Service2","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","setAttribute","getGeometryName","serializers","getProperties","keys","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","hasZ","parts","getCoords_","line","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","_MultiPoint2","_MultiLineString2","_MultiPolygon2","navigator","userAgent","hex","rgb","r","g","b","Error","colorZeroPadding","queryData","pairs","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","_condition2","noModifierKeys","singleClick","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","ol","getImage","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","projection","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","floor","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","round","CHANGE","handleImageChange","getImageLoadFunction","size","asserts","getCode","WMSServerType","dpi","CARMENTA_SERVER","QGIS","bbox","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","writeOgcFidFilter_","getTypeName_","featurePrefix","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","propertyName","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","clear","VisibilityState","ON","OFF","remove","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","_utils2","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","_index","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","color","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","_Vector4","useSpatialIndex","layer_","_Vector2","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","getLayer","getFeatureOverlay","styleFunction","_Style2","defaultFunction","_FeatureOverlay2","init","setMap","setStyle","createFunction","proj4","projCodes","defs","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","a","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","shift","convert","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","apply","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","extend","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","e","cos","lon","lat","exp","projections_names","projStore","add","projections","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","Proj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","num","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","temp","h","asin","sinh","hypot","max","min","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","GeometryCollection","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","geometries","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","unlisten","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","interaction","assertInstanceof","_Interaction2","defineProperty","getActive","setActive","_Base2","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","element","$applyAsync","ngeoDebounce","ngeoEventHelper","q_","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","gmfTreeManager_","ngeoWfsPermalink_","gmfUser_","map_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","_RegularShape2","_Stroke2","width","radius","radius2","mapTooltip_","featureHashFormat_","_FeatureHash2","encodeStyles","propertiesType","fillColor","_FeatureProperties2","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","_Manager2","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","zoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","_Feature2","_Point2","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","class","removeOverlay","_Popover2","position","addOverlay","FEATURES","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","view","getGeometry","getSize","fit","_constants2","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","_OGC2","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","evt","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_module2","_features2","_EventHelper2","OpenLayersLayerProperties","regexp","key1","key2","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","html","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","_OGCGroup2","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","listenerKeys_","initListenerKey_","NOT","OR","directive_","restrict","link","scope","attrs","prop","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","_TreeManager2","$filter","$filter_","_Time2","formatTimeValue","opt_useISOFormat","opt_toUTC","utc","yearResolution","monthResolution","dayResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","_Event","detail","_Event2","factory_","func","wait","invokeApply","timeout","_len","args","_key","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","collection_","handleDataSourcesAdd_","handleViewResolutionChange_","assertNumber","syncDataSourcesToResolution_","_Observable2","unByKey","_View2","syncDataSourceToResolution_","supportsDynamicInRange","unbindMap_","bindMap_","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","featureIdentifier_","layerIdentifier_","readFeatures_","toRemove","layerFeatures","gmlFeatures","http_","mapViewChangePromise_","ensureSnapInteractionsOnTop","removeInteraction","addInteraction","treeCtrlsUnregister_","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","_Snap2","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","loadAllItems_","calculateExtent","projCode","getFeatureOptions","xmlSerializer","featureRequestXml","featureRequest","post","_Permalink2","_Snapping2","_component2","_FeatureOverlayMgr2","manageResize","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","_Overlay","originalEl","closeEl_","contentEl_","_Overlay2","getElement","getMap","popover","contentEl","setTimeout","content","one","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olFormatFeature","_TextFeature2","accuracy_","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","_FeatureHashStyleType2","LINE_STRING","POLYGON","CHAR64_","encodeSignedNumber_","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","imageStyle","strokeStyle","textStyle","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","getRadius","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","asArray","fillColorHex","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","readLineStringGeometry_","decodeCoordinates_","_LineString2","_GeometryLayout2","readMultiLineStringGeometry_","readPointGeometry_","readMultiPointGeometry_","readPolygonGeometry_","_Polygon2","readMultiPolygonGeometry_","multipolygon","setStyleInFeature_","getStyleProperties_","_Fill2","_Circle2","_Text2","setStyleProperties_","setProperties","castValue_","numProperties","boolProperties","keyVal","writeLineStringGeometry_","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","polygonCount","GEOMETRY_READERS_","L","GEOMETRY_WRITERS_","opt_flatCoordinates","dx","dy","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","transformWithOptions","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","getInExtent","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","closestOnCircle","closestOnSegment","distance","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","segmentData","insert","kk","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","condition_","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","ACTIVE","updateState_","createDefaultEditing","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","setGeometry","last","sketchLineGeom","getLinearRing","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","addFeatures","createRegularPolygon","opt_sides","opt_angle","createBox","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","TileImage","tilePixelRatio","tileUrlFunction","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","getFormattedArea","getFormattedCircleArea","getFormattedLength","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","innerHTML","classList","setOffset","_CustomEvent2","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","RECTANGLE","olProjProj4","epsg21781def","_proj4","register","setExtent","_somerc2","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","homepage","license","main","repository","scripts","build","build:tmerc","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","olMath","Scalify","numberFilter","filterFn","$locale","formats","NUMBER_FORMATS","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","nb_decimal","factor","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","_string2","xdms","ydms","trustHtmlFilter","$sce","trustAsHtml","olExtent","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","_GeometryType2","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","font_size","optNumber","attrib","getNumber","getOpacityProperty","azimut","getRadiusLine","_Measure2","getLastCoordinate","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","fromString","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","_GPX2","export_","_KML2","fileName","opt_mimeType","mimeType","clones","writeOptions","_MeasureAzimut2","getFormattedAzimutRadius","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","_service2","_filters2","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","orderedKeys","makeSequence","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","imageSize","getImageSize","imageScale","foundText","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","hexColor","readURI_","baseURI","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeCoordinatesTextNode_","dimension","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","kml","xmlnsUri","featuresCollection_","ngeoPopupTemplateUrl","close","css","getOptions","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getTime","localDate","JSONFeature","format_Feature","getObject","JSON","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","format_JSONFeature","GeoJSON","defaultFeatureProjection","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","GEOMETRY_WRITERS","rightHanded","geoJSONFeature","geometry_name","geoJSONFeatures","_fileSaver","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","_DrawAzimut2","_GeometryCollection2","_Projection2","formatLength","formatAzimut","getFormattedAzimut","getAzimut","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","groupNode","createLayerFromGroup_","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","querySourceIds","disclaimer","disclaimers","wmsTime","timeValues","isOneParentNotMix","_WMSTime2","__WEBPACK_AMD_DEFINE_RESULT__","get_URL","webkitURL","save_link","can_use_save_link","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","revoke","file","revokeObjectURL","auto_bom","FileSaver","no_auto_bom","object_url","filesaver","force","dispatch_all","event_types","listener","dispatch","readyState","INIT","createObjectURL","download","MouseEvent","DONE","FileReader","reader","onloadend","readAsDataURL","fs_error","FS_proto","msSaveOrOpenBlob","abort","WRITING","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","__webpack_amd_options__","$compile","$new","autoDestroy_","destroy","sce_","element_","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setWidth","setHeight","setSize","setAutoDestroy","autoDestroy","cls","Factory","_popupComponent2","ngeoDataSources","ngeoFile","injector_","dataSources_","ngeoFile_","extDataSources_","files_","fileGroup_","_FileGroup2","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","$inject","layerGroup","req","getWMSGroup","addDataSource","_WMSGroup2","addLayer_","addWMSGroup_","getWMTSGroup","addWMTSGroup_","layerObj","handleWMTSDataSourceVisibleChange_","getFileDataSource_","fileGroup","readOptions","isKml","isGpx","_File4","removeFileDataSource_","removeOGCDataSource_","removeLayer_","removeDataSource","removeWMSGroup_","removeWMTSGroup_","EXTERNALLAYERGROUP_NAME","_File2","_DataSources2","olFunctions","_Pointer2","started_","sketchLayer_","_Draw2","finishDrawing_","mapBrowserEvent","sketchPointGeom","getLength","FALSE","ngeoLayertreeTemplateUrl","_DataSourceBeingFiltered2","_ExternalDataSourcesManager2","_datasourceGroupTreeComponent2","_SyncLayertreeMap2","_Popup2","gmfLayertreeTemplate","$element","component_","bindings","openLinksInNewWindow","component","ngeoCreatePopup","gmfDataSourceBeingFiltered","gmfExternalDataSourcesManager","gmfSyncLayertreeMap","scope_","$sce_","gmfSyncLayertreeMap_","infoPopup_","promises_","groupNodeStates_","dataLayerGroup_","$apply","DATALAYERGROUP_NAME","_syncArrays2","render","updateDimensions_","_Layer2","updateLayerDimensions_","once","listeners","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","legendImage","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","getMetersPerUnit","displayMetadata","treeUid","metadataURL","resp","infoPopup","afterReorder","groupNodes","currentTreeCtrls","treeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","setResolution","constrainResolution","toggleNodeLegend","legendNodeId","toggle","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","gettext","fileReader","canceler","isValidFileSize","fileSize","isWmsGetCap","fileContent","isWmtsGetCap","onload","reason","readAsText","opt_cancelP","unregister_","_class","toggleVisibilityState","isDefined","lowercase","noop","nodeContains","htmlParser","htmlSanitizeWriter","$sanitizeMinErr","$$minErr","provider","svgEnabled","$get","$$sanitizeUri","validElements","svgElements","buf","isImage","enableSvg","handler","inertBodyElement","getInertBodyElement","mXSSAttempts","attrToMap","chars","nextNode","getNonDescendant","uriValidator","ignoreCurrentElement","tag","blockedElements","validAttrs","uriAttrs","encodeEntities","voidElements","compareDocumentPosition","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","toMap","optionalEndTagBlockElements","optionalEndTagInlineElements","optionalEndTagElements","blockElements","inlineElements","htmlAttrs","svgAttrs","str","lowercaseKeys","items","inertDocument","implementation","createHTMLDocument","documentElement","getDocumentElement","querySelector","DOMParser","parseFromString","documentMode","stripCustomNsAttrs","encodeURI","xhr","XMLHttpRequest","responseType","send","attr","attrNode","attrName","lastIndexOf","removeAttributeNode","propName","outerHTML","outerText","angularVersion","$sanitize","LINKY_URL_REGEXP","MAILTO_REGEXP","linkyMinErr","isFunction","isObject","isString","attributesFn","addText","addLink","linkAttributes","arr1","arr2","dereg1","dereg2","toolContext","activePropertyName","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$setViewValue","$viewValue","$render","toggleClass","ModifyEventType","Modify","handleDragEvent","handleDragEvent_","primaryAction","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","RBush","snappedToVertex_","changingFeature_","dragSegments_","Collection","VectorEventType","handleSourceAdd_","handleSourceRemove_","addFeature_","CollectionEventType","lastPointerEvent_","MODIFY_SEGMENT_CIRCLE_CENTER_INDEX","MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX","isRendered","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","closestVertex","closestOnSegmentData_","equals","insertVertex_","dragSegment","setGeometryCoordinates_","update","handled","getInteracting","SINGLECLICK","removePoint","pointDistanceToSegmentDataSquared_","vertexSegments","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getClosestPoint","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","newIndex","deleted","mapBrowserPointerEvent","registerTool","tool","opt_defaultActivate","entries","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","br","gmfLayersUrl","baseUrl_","getFeaturesInExtent","layerIds","handleGetFeatures_","getFeaturesWithComparisonFilters","operator","_GeoJSON2","insertFeatures","layerId","geoJSON","headers","Content-Type","updateFeature","put","deleteFeature","delete","geomType","compile_","filter_","interaction_","contMsg","_MeasureLength2","_MeasureArea2","handleDrawEnd_","sketch","toMulti","$onDestroy","gmfEditFeature","gmfEditFeature_","getFeatureDefered_","Param","GEOM_TYPE","ID","PROPERTY","THEME","getGeomType","getLayerNodeId","featureProperties","_EditFeature2","getQueryableLayerNodesDefered_","getQueryableLayersInfo","allQueryableLayersInfo","getQueryableLayersInfoFromThemes","queryableLayersInfo","layerNode","getFeatureInfo","layerInfo","infoFormat","layersParam","INFO_FORMAT","FEATURE_COUNT","_component4","_component6","_ToolActivateMgr2","constant","regularPolygonRadius","MainController","gmfObjectEditingManager","ngeoToolActivateMgr","vectorSource_","_OSM2","objectEditingGeomType","objectEditingLayerNodeId","objectEditingActive","objectEditingToolActivate","_ToolActivate2","dummyActive","dummyToolActivate","objectEditingFeature","jsts","io","OL3Parser","_Query2","_toolsComponent2","_FeatureHelper2","gmfObjecteditingTemplateUrl","layerNodeId","Controller","gmfObjectEditingQuery","ngeoFeatureHelper","gmfObjectEditingQuery_","selectedQueryableLayerInfo","queryableLayerListShown","copyFromActive","deleteFromActive","featureHasGeom","ngeoFeatureHelper_","ngeoToolActivateMgr_","skipGeometryChange_","process","ProcessType","editableWMSLayer_","jstsOL3Parser_","geometryChanges_","defaultStyles_","defaultStylesWoVertice_","dirtyStyles_","dirtyStylesWoVertice_","pending","dirty","interactions_","modify_","_Modify2","modifyToolActivate_","toolsActive","toolsToolActivate_","handleGetQueryableLayersInfo_","State","UPDATE","INSERT","defaultColor","dirtyColor","initializeStyles_","setFeatureStyle_","_geom2","initializeInteractions_","registerInteractions_","toggle_","resetGeometryChanges_","handleDestroy_","confirm","handleDeleteFeature_","save","toXY","handleEditFeature_","undo","cloneGeometry_","isStateInsert","refreshWMSLayer_","unregisterInteractions_","NAMESPACE_","toolMgr","_Object2","handleFeatureGeometryChange_","handleModifyInteractionModifyEnd_","handleWindowBeforeUnload_","handleSketchFeaturesAdd_","undoAllChanges_","jstsBuffered","write","opt_incVertice","incVertice","rgbaColor","modifyActive","returnValue","sketchGeom","jstsGeom","jstsSketchGeom","jstsProcessedGeom","union","difference","processedGeom","layersInfo","_coordinate2","nesting","_getWMSFeatureComponent2","_createfeatureComponent2","_createregularpolygonfromclickComponent2","_btnComponent2","queryableLayerInfo","requiresLayer","geomTypePolygon","toolActiveNames_","drawActive","registerTool_","eraseActive","DELETE","drawTriangleActive","triangleAngle","oeToolsOptions","triangleRadius","toolActiveName","opt_requiresLayer","handleToolActiveChange_","toolActivate","handleActiveChange_","handleMapClick_","sides","interactionListenerKey_","_DrawRegularPolygonFromClick2","angle_","radius_","sides_","TRUE","enable_","disable_","fromCircle","makeRegular","hasInterface","o","interfaces_","Clonable","CoordinateSequence","CoordinateSequenceFactory","IllegalArgumentException","GeometryComponentFilter","Comparable","Serializable","NumberUtil","Double","Comparator","RuntimeException","setOrdinate","ordinateIndex","getOrdinate","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","env","copy","getY","toCoordinateArray","getClass","create","equalsWithTolerance","x1","x2","doubleToLongBits","longBitsToDouble","isInfinite","MAX_VALUE","AssertionFailedException","Assert","Coordinate","NULL_ORDINATE","DimensionalComparator","_dimensionsToTest","dimensionsToTest","_minx","_maxx","_miny","_maxy","p1","p2","y1","y2","Geometry","_envelope","_factory","_SRID","_userData","getSRID","CoordinateFilter","BoundaryNodeRule","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","Iterator","IndexOutOfBoundsException","List","NoSuchElementException","OperationNotSupported","ArrayList","array_","addAll","shouldNeverReachHere","isTrue","assertion","expectedValue","actualValue","equals2D","other","equals3D","equalInZ","compareTo","CloneNotSupportedException","distance3D","dz","hashCode","setCoordinate","trunc","compare","o1","o2","compX","compY","serialVersionUID","getHeight","otherEnvelope","getMaxX","getMaxY","getMinX","getMinY","intersection","intMinX","intMinY","covers","expandToInclude","minExtent","transX","transY","setToNull","maxExtent","expandBy","centre","q1","q2","minq","maxq","minp","maxp","isGeometryCollection","getTypeCode","TYPECODE_GEOMETRYCOLLECTION","getFactory","getGeometryN","isRectangle","equalsTopo","equalsExact","geometryChanged","geometryChangedFilter","geometryChangedAction","equalsNorm","norm","getNumGeometries","compareToSameClass","comp","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","SRID","setUserData","userData","hasNext","aElement","bElement","comparison","isGeometryCollectionOrDerived","TYPECODE_MULTIPOINT","TYPECODE_MULTILINESTRING","TYPECODE_MULTIPOLYGON","hasNonEmptyElements","hasNullElements","TYPECODE_POINT","TYPECODE_LINESTRING","TYPECODE_LINEARRING","TYPECODE_POLYGON","TYPENAME_POINT","TYPENAME_MULTIPOINT","TYPENAME_LINESTRING","TYPENAME_LINEARRING","TYPENAME_MULTILINESTRING","TYPENAME_POLYGON","TYPENAME_MULTIPOLYGON","TYPENAME_GEOMETRYCOLLECTION","isInBoundary","boundaryCount","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","toArray","ensureCapacity","oldElement","Iterator_","arrayList","arrayList_","position_","CoordinateList","allowRepeated","MathUtil","System","CoordinateArrays","ForwardComparator","BidirectionalComparator","Map_Map","SortedMap","Set","HashSet","coll","isChanged","coordArrayType","isInteger","inc","closeRing","log10","ln","LOG_10","v1","v2","v3","v4","clamp","wrap","average","arraycopy","srcPos","destPos","getProperty","line.separator","isRing","pts","ptNotInList","testPts","testPt","scroll","firstCoordinate","newCoordinates","coord1","coord2","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","mid","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","entrySet","javascript","util","HashSet_Iterator_","hashSet","hashSet_","BLACK","colorOf","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","Lineal","SortedSet","TreeSet","cmp","[object Object]","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","ch","TreeSet_Iterator_","Map_i","treeSet","treeSet_","Arrays","Character","GeometryFilter","CoordinateSequenceFilter","_geometries","BoundaryOp","_geom","_geomFact","_bnRule","_endpointMap","bnRule","Counter","Length","IOException","StringUtil","StringBuilder","CoordinateSequences","_points","Puntal","_coordinates","Area","StringBuffer","Integer","DD","_hi","_lo","lo","CGAlgorithmsDD","Orientation","Polygonal","_shell","_holes","shell","holes","createLinearRing","GeometryFactory","getCoordinateSequenceFactory","validateConstruction","GeometryEditor","_isUserDataCopied","GeometryEditorOperation","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","_dimension","coordSeq","CoordinateArraySequenceFactory","comparator","asList","isWhitespace","toDimensionSymbol","dimensionValue","SYM_FALSE","SYM_TRUE","DONTCARE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionValue","dimensionSymbol","seq","isDone","isGeometryChanged","getNumPoints","childCoordinates","isEquivalentClass","otherCollection","getBoundaryDimension","sum","numPoints","revGeoms","createGeometryCollection","theseElements","otherElements","gc","n1","n2","thisGeom","otherGeom","holeComp","getBoundary","getGeometryType","isClosed","nLines","revLines","createMultiLineString","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createPoint","createMultiPointFromCoords","boundaryLineString","getStartPoint","createMultiPoint","getEndPoint","addEndpoint","getCoordinateN","it","valence","getValue","getKey","counter","ofLine","getStackTrace","os","ps","printStackTrace","stackTrace","lineNumberReader","readLine","NEWLINE","separator","separatorlen","tokenList","tmpString","token","SIMPLE_ORDINATE_FORMAT","spaces","setCharAt","copyCoord","minDim","isEqual","cs1","cs2","cs1Size","fact","newseq","swap","builder","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","createLineString","getCoordinateSequence","isCoordinate","IllegalStateException","ofRing","ofRingSigned","p0","intValue","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","TEN","divide","gt","lt","ONE","multiply","decimalPointPos","numDigits","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","isZero","selfSubtract","getSpecialNumberString","selfDivide","yhi","ylo","tc","ty","U","hc","hy","SPLIT","dump","createNaN","ge","selfMultiply","reciprocal","fhi","flo","rint","setValue","isNegative","ax","axdd","d2","zhi","zlo","tx","hx","selfSqr","toStandardNotation","toSciNotation","specialStr","sigDigits","stringOfChar","numZeroes","SCI_NOT_ZERO","digits","expStr","SCI_NOT_EXPONENT_CHAR","trailingDigits","digitsWithDecimal","isPositive","signum","strlen","signCh","numBeforeDec","isDigit","NumberFormatException","val2","numDecPlaces","xAbs","xLog10","xMag","PI_2","E","EPS","orientationIndex","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","denom1","denom2","denom","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","det","errbound","DP_SAFE_EPSILON","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","prev","disc","CLOCKWISE","COUNTERCLOCKWISE","COLLINEAR","STRAIGHT","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","convexHull","getExteriorRing","otherShell","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","shellCopy","holeCopies","isValid","MINIMUM_VALID_SIZE","createMultiPolygon","allRings","allRingsArray","setCopyUserData","isUserDataCopied","edit","operation","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","createPolygon","hole","cloneCoordinates","strBuilder","readResolve","instance","instanceObject","jsts_Map","proto","objectOnly","_keys","_values","_itp","sharedSize","list","sharedIterator","itp","array2","MapImpl","Map","HashMap","PrecisionModel","_modelType","_scale","FLOATING","modelType","FIXED","_name","nameToTypeMap","_precisionModel","_coordinateSequenceFactory","coordinateSequenceFactory","precisionModel","getDefaultCoordinateSequenceFactory","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","isFloating","FLOATING_SINGLE","makePrecise","maxSigDigits","mostPrecise","pm1","pm2","maximumPreciseValue","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","geometryTypes","GeoJSONParser","geometryFactory","FeatureCollection","featureCollection","sub","multipoint","geoJson","linestring","multilinestring","shellGeoJson","holeGeoJson","GeoJSONReader","GeoJSONWriter","reducePrecision","regExes","typeStr","emptyTypeStr","parenComma","doubleParenComma","trimParens","WKTParser","matches","WKTParser_parse","extractGeometry","WKTParser_extract","wktType","linearring","components","wktArray","WKTReader","WKTWriter","p2c","olReference","convertFromPoint","convertFromLineString","convertFromLinearRing","convertFromPolygon","convertFromMultiPoint","convertFromMultiLineString","convertFromMultiPolygon","convertFromCollection","convertToPoint","convertToLineString","convertToLinearRing","convertToPolygon","convertToMultiPoint","convertToMultiLineString","convertToMultiPolygon","convertToCollection"],"mappings":"2EAAAA,EAAAC,EAAA,IAKA,MAAAC,GAOAC,YAAA,SAAAC,GACA,MAAAC,EAAAC,EAAA,QAAAC,kBAAAH,GAAA,GACA,OAAAF,EAAAM,kBAAAH,IAQAG,kBAAA,SAAAC,GACA,MAAAC,EAAA,6BAAAC,KAAAF,GACA,OAAAC,OACAE,IAAAF,EAAA,YAEA,GASAG,aAAA,SAAAT,GACA,MAAAC,EAAAC,EAAA,QAAAC,kBAAAH,GAAA,GACAU,EAAAC,KAAAC,MAAAX,GACA,OAAAY,MAAAH,QAAAF,EAAAE,EAAA,KAQAI,YAAA,SAAAd,GACA,MAAAC,EAAAC,EAAA,QAAAC,kBAAAH,GAAA,GACA,OAAAF,EAAAiB,kBAAAd,IAQAc,kBAAA,SAAAV,GAEA,MAAAC,EAAA,4CAAAC,KAAAF,GACA,OAAAC,EACAU,WAAAV,EAAA,SAEA,GASAW,uBAAA,SAAAjB,GACA,MAAAC,EAAAC,EAAA,QAAAC,kBAAAH,GAAA,GACA,OAAAF,EAAAoB,6BAAAjB,IAQAiB,6BAAA,SAAAb,GACA,MAAAC,EAAA,gBAAAC,KAAAF,GACA,OAAAC,EACAa,SAAAb,EAAA,YAEA,GASAc,WAAA,SAAApB,GACA,OAAAE,EAAA,QAAAC,kBAAAH,GAAA,GAAAqB,QAQAC,qBAAA,SAAAtB,EAAAuB,GACAzB,EAAA0B,oBAAAxB,EAAA,YAQAyB,kBAAA,SAAAzB,EAAAK,GACAL,EAAA0B,YAAAxB,EAAA,QAAAyB,SAAAC,mBAAAvB,KAQAwB,sBAAA,SAAA7B,EAAAU,GACA,MAAAoB,EAAA,IAAAnB,KAAA,IAAAD,GACAL,EAAAyB,EAAAC,iBAAA,IACAnC,EAAA,QAAAoC,UAAAF,EAAAG,cAAA,SACArC,EAAA,QAAAoC,UAAAF,EAAAI,aAAA,OACAtC,EAAA,QAAAoC,UAAAF,EAAAK,cAAA,OACAvC,EAAA,QAAAoC,UAAAF,EAAAM,gBAAA,OACAxC,EAAA,QAAAoC,UAAAF,EAAAO,gBAAA,OACArC,EAAA0B,YAAAxB,EAAA,QAAAyB,SAAAW,eAAAjC,KAQAkC,qBAAA,SAAAvC,EAAAwC,GACA,MAAAnC,EAAAmC,EAAAC,cACAzC,EAAA0B,YAAAxB,EAAA,QAAAyB,SAAAW,eAAAjC,KAQAqC,gCAAA,SAAA1C,EAAA2C,GACA,MAAAtC,EAAAsC,EAAAC,WACA5C,EAAA0B,YAAAxB,EAAA,QAAAyB,SAAAW,eAAAjC,KAQAmB,oBAAA,SAAAxB,EAAAK,GACAL,EAAA0B,YAAAxB,EAAA,QAAAyB,SAAAW,eAAAjC,MAEAwC,EAAA,sLClKAC,EAAAjD,EAAA,IA2BA,MAAAkD,EAAA,SAAAC,EAAAC,GAEAC,EAAA,QAAAC,KAAAC,MAMAA,KAAAC,SAMAD,KAAAE,WAAA,EAMAF,KAAAG,mBAAA,EAEAH,KAAAI,eAAAR,EAAAC,IAIAQ,OAAAC,EAAA,SAAAD,CAAAV,EAAAG,EAAA,SAQAH,EAAAY,UAAAC,iBAAA,SAAAC,GACAT,KAAAU,gBAGAL,OAAAM,EAAA,OAAAN,CAAAL,KAAAU,gBAAAD,EAAAG,qBAAAC,SAFAb,KAAAU,gBAAAD,EAAAG,qBAAAC,QAIAb,KAAAC,MAAAa,KAAAd,KAAAU,gBAAAK,QACAf,KAAAgB,WAUArB,EAAAY,UAAAU,MAAA,WACA,MAAAC,EAAA,IAAAvB,EAAA,MAGA,OAFAuB,EAAAC,mBACAnB,KAAAoB,OAAApB,KAAAU,gBAAAG,QAAAb,KAAAC,MAAAY,SACAK,GAOAvB,EAAAY,UAAAc,eAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,OAAAA,EAAApB,OAAAqB,EAAA,yBAAArB,CAAAL,KAAA2B,YAAAL,EAAAC,GACAE,GAEAzB,KAAAG,mBAAAH,KAAA4B,gBACA5B,KAAAE,UAAA2B,KAAAC,KAAAC,EAAA,EAAAC,oBACAhC,KAAAU,gBAAA,EAAAV,KAAAC,MAAAD,KAAAiC,OAAA,IACAjC,KAAAG,kBAAAH,KAAA4B,eAEAG,EAAA,EAAAG,iBACAlC,KAAAU,gBAAA,EAAAV,KAAAC,MAAAD,KAAAiC,OACAjC,KAAAE,WAAA,EAAAoB,EAAAC,EAAAC,EAAAC,KA0BA9B,EAAAY,UAAA4B,iBAAA,SAAAjF,EAAAkF,EAAAC,GACA,GAAArC,KAAAoB,QAAAkB,EAAA,QAAAC,KACAvC,KAAAoB,QAAAkB,EAAA,QAAAE,MACA,IAAAxC,KAAAU,gBAAAK,OACA,YAEA,MAAA0B,OAAArF,IAAAgF,KACAM,OAAAtF,IAAAiF,KACA,OAAAM,EAAA,EAAAC,yBAAA5C,KAAAU,gBAAA,EACAV,KAAAC,MAAAD,KAAAiC,OAAA/E,EAAAuF,EAAAC,IAUA/C,EAAAY,UAAAsC,eAAA,WACA,OAAAC,EAAA,EAAAC,aACA/C,KAAAU,gBAAA,EAAAV,KAAAC,MAAAD,KAAAiC,SAOAtC,EAAAY,UAAAyC,QAAA,WACA,OAAAhD,KAAAC,OAUAN,EAAAY,UAAA0C,cAAA,SAAAC,GACA,GAAAA,EAAA,GAAAlD,KAAAC,MAAAc,QAAAmC,EACA,YAEA,MAAAzC,EAAA,IAAA0C,EAAA,cAGA,OAFA1C,EAAAU,mBAAAnB,KAAAoB,OAAApB,KAAAU,gBAAAG,MACA,IAAAqC,EAAA,EAAAlD,KAAAC,MAAAiD,EAAA,GAAAlD,KAAAC,MAAAiD,KACAzC,GASAd,EAAAY,UAAA6C,eAAA,WACA,MAAA1C,EAAAV,KAAAU,gBACA2C,EAAArD,KAAAC,MACAmB,EAAApB,KAAAoB,OAEAkC,KACA,IACAC,EAAAC,EADAC,EAAA,EAEA,IAAAF,EAAA,EAAAC,EAAAH,EAAAtC,OAA+BwC,EAAAC,IAAQD,EAAA,CACvC,MAAAG,EAAAL,EAAAE,GACA9C,EAAA,IAAA0C,EAAA,cACA1C,EAAAU,mBAAAC,EAAAV,EAAAG,MAAA4C,EAAAC,IACAJ,EAAAxC,KAAAL,GACAgD,EAAAC,EAEA,OAAAJ,GAOA3D,EAAAY,UAAAoD,iBAAA,WACA,MAAAC,KACAlD,EAAAV,KAAAU,gBACA,IAAA+C,EAAA,EACA,MAAAJ,EAAArD,KAAAC,MACAgC,EAAAjC,KAAAiC,OACA,IAAAsB,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAH,EAAAtC,OAA+BwC,EAAAC,IAAQD,EAAA,CACvC,MAAAG,EAAAL,EAAAE,GACAM,EAAAlB,EAAA,EAAAlC,WACAC,EAAA+C,EAAAC,EAAAzB,EAAA,IACA5B,OAAAM,EAAA,OAAAN,CAAAuD,EAAAC,GACAJ,EAAAC,EAEA,OAAAE,GAOAjE,EAAAY,UAAAuD,8BAAA,SAAAC,GACA,MAAAC,KACAC,KACAD,EAAAjD,OAAArB,EAAA,EAAAwE,gBACAlE,KAAAU,gBAAA,EAAAV,KAAAC,MAAAD,KAAAiC,OAAA8B,EACAC,EAAA,EAAAC,GACA,MAAAE,EAAA,IAAAxE,EAAA,MAGA,OAFAwE,EAAAhD,mBACAmB,EAAA,QAAA8B,GAAAJ,EAAAC,GACAE,GAQAxE,EAAAY,UAAA8D,QAAA,WACA,OAAAC,EAAA,QAAAC,mBAQA5E,EAAAY,UAAAiE,iBAAA,SAAAC,GACA,OAAAC,EAAA,EAAApB,YACAtD,KAAAU,gBAAA,EAAAV,KAAAC,MAAAD,KAAAiC,OAAAwC,IAWA9E,EAAAY,UAAAH,eAAA,SAAAR,EAAAC,GACA,GAAAD,EAEG,CACHI,KAAA2E,UAAA9E,EAAAD,EAAA,GACAI,KAAAU,kBACAV,KAAAU,oBAEA,MAAA2C,EAAAuB,EAAA,EAAA7B,aACA/C,KAAAU,gBAAA,EAAAd,EAAAI,KAAAiC,OAAAjC,KAAAC,OACAD,KAAAU,gBAAAK,OAAA,IAAAsC,EAAAtC,OAAA,EAAAsC,IAAAtC,OAAA,GACAf,KAAAgB,eATAhB,KAAAmB,mBAAAmB,EAAA,QAAA8B,GAAA,KAAApE,KAAAC,QAmBAN,EAAAY,UAAAY,mBAAA,SAAAC,EAAAV,EAAA2C,GACArD,KAAA6E,2BAAAzD,EAAAV,GACAV,KAAAC,MAAAoD,EACArD,KAAAgB,WAOArB,EAAAY,UAAAuE,eAAA,SAAAxB,GACA,IAAAlC,EAAApB,KAAA+E,YACA,MAAArE,KACA2C,KACA,IAAAE,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAF,EAAAvC,OAAsCwC,EAAAC,IAAQD,EAAA,CAC9C,MAAA9C,EAAA6C,EAAAC,GACA,IAAAA,IACAnC,EAAAX,EAAAsE,aAEA1E,OAAAM,EAAA,OAAAN,CAAAK,EAAAD,EAAAG,sBACAyC,EAAAvC,KAAAJ,EAAAK,QAEAf,KAAAmB,mBAAAC,EAAAV,EAAA2C,IAEA5D,EAAA,mKCrTAuF,EAAAvI,EAAA,IAwBA,MAAAwI,EAAA,SAAArF,EAAAC,GACAC,EAAA,QAAAC,KAAAC,MACAA,KAAAI,eAAAR,EAAAC,IAGAQ,OAAAC,EAAA,SAAAD,CAAA4E,EAAAnF,EAAA,SAQAmF,EAAA1E,UAAA2E,YAAA,SAAAC,GACAnF,KAAAU,gBAGAL,OAAAM,EAAA,OAAAN,CAAAL,KAAAU,gBAAAyE,EAAAvE,sBAFAZ,KAAAU,gBAAAyE,EAAAvE,qBAAAC,QAIAb,KAAAgB,WAUAiE,EAAA1E,UAAAU,MAAA,WACA,MAAAmE,EAAA,IAAAH,EAAA,MAEA,OADAG,EAAAjE,mBAAAnB,KAAAoB,OAAApB,KAAAU,gBAAAG,SACAuE,GAOAH,EAAA1E,UAAAc,eAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAA,EAAApB,OAAAqB,EAAA,yBAAArB,CAAAL,KAAA2B,YAAAL,EAAAC,GACA,OAAAE,EAEA,MAAAf,EAAAV,KAAAU,gBACAuB,EAAAjC,KAAAiC,OACA,IAAAsB,EAAAC,EAAA6B,EACA,IAAA9B,EAAA,EAAAC,EAAA9C,EAAAK,OAA0CwC,EAAAC,EAAQD,GAAAtB,EAAA,CAClD,MAAAqD,EAAAjF,OAAA2E,EAAA,gBAAA3E,CACAiB,EAAAC,EAAAb,EAAA6C,GAAA7C,EAAA6C,EAAA,IACA,GAAA+B,EAAA7D,EAAA,CAEA,IADAA,EAAA6D,EACAD,EAAA,EAAiBA,EAAApD,IAAYoD,EAC7B7D,EAAA6D,GAAA3E,EAAA6C,EAAA8B,GAEA7D,EAAAT,OAAAkB,GAGA,OAAAR,GAUAwD,EAAA1E,UAAAsC,eAAA,WACA,OAAA0C,EAAA,EAAA3F,YACAI,KAAAU,gBAAA,EAAAV,KAAAU,gBAAAK,OAAAf,KAAAiC,SAUAgD,EAAA1E,UAAAiF,SAAA,SAAAtC,GACA,MAAAuC,EAAAzF,KAAAU,gBACAV,KAAAU,gBAAAK,OAAAf,KAAAiC,OAAA,EACA,GAAAiB,EAAA,GAAAuC,GAAAvC,EACA,YAEA,MAAAiC,EAAA,IAAAO,EAAA,cAGA,OAFAP,EAAAhE,mBAAAnB,KAAAoB,OAAApB,KAAAU,gBAAAG,MACAqC,EAAAlD,KAAAiC,QAAAiB,EAAA,GAAAlD,KAAAiC,SACAkD,GASAF,EAAA1E,UAAAoF,UAAA,WACA,MAAAjF,EAAAV,KAAAU,gBACAU,EAAApB,KAAAoB,OACAa,EAAAjC,KAAAiC,OAEA2D,KACA,IAAArC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA9C,EAAAK,OAA0CwC,EAAAC,EAAQD,GAAAtB,EAAA,CAClD,MAAAkD,EAAA,IAAAO,EAAA,cACAP,EAAAhE,mBAAAC,EAAAV,EAAAG,MAAA0C,IAAAtB,IACA2D,EAAA9E,KAAAqE,GAEA,OAAAS,GAQAX,EAAA1E,UAAA8D,QAAA,WACA,OAAAC,EAAA,QAAAuB,aAQAZ,EAAA1E,UAAAiE,iBAAA,SAAAC,GACA,MAAA/D,EAAAV,KAAAU,gBACAuB,EAAAjC,KAAAiC,OACA,IAAAsB,EAAAC,EAAAlC,EAAAC,EACA,IAAAgC,EAAA,EAAAC,EAAA9C,EAAAK,OAA0CwC,EAAAC,EAAQD,GAAAtB,EAGlD,GAFAX,EAAAZ,EAAA6C,GACAhC,EAAAb,EAAA6C,EAAA,GACAlD,OAAAqB,EAAA,WAAArB,CAAAoE,EAAAnD,EAAAC,GACA,SAGA,UAWA0D,EAAA1E,UAAAH,eAAA,SAAAR,EAAAC,GACAD,GAGAI,KAAA2E,UAAA9E,EAAAD,EAAA,GACAI,KAAAU,kBACAV,KAAAU,oBAEAV,KAAAU,gBAAAK,OAAA+E,EAAA,EAAAlG,YACAI,KAAAU,gBAAA,EAAAd,EAAAI,KAAAiC,QACAjC,KAAAgB,WARAhB,KAAAmB,mBAAAmB,EAAA,QAAA8B,GAAA,OAiBAa,EAAA1E,UAAAY,mBAAA,SAAAC,EAAAV,GACAV,KAAA6E,2BAAAzD,EAAAV,GACAV,KAAAgB,WAEAvB,EAAA,wOCnMAsG,EAAAtJ,EAAA,IAgCA,MAAAuJ,EAAA,SAAApG,EAAAC,GAEAoG,EAAA,QAAAlG,KAAAC,MAMAA,KAAAkG,UAMAlG,KAAAmG,6BAAA,EAMAnG,KAAAoG,oBAAA,KAMApG,KAAAE,WAAA,EAMAF,KAAAG,mBAAA,EAMAH,KAAAqG,mBAAA,EAMArG,KAAAsG,yBAAA,KAEAtG,KAAAI,eAAAR,EAAAC,IAIAQ,OAAAC,EAAA,SAAAD,CAAA2F,EAAAC,EAAA,SAQAD,EAAAzF,UAAAgG,cAAA,SAAAC,GAEA,IAAAnD,EACA,GAAArD,KAAAU,gBAIG,CACH,MAAA+C,EAAAzD,KAAAU,gBAAAK,OAGA,IAAAwC,EAAAC,EACA,IAHAnD,OAAAM,EAAA,OAAAN,CAAAL,KAAAU,gBAAA8F,EAAA5F,sBACAyC,EAAAmD,EAAAxD,UAAAnC,QAEA0C,EAAA,EAAAC,EAAAH,EAAAtC,OAAiCwC,EAAAC,IAAQD,EACzCF,EAAAE,IAAAE,OATAzD,KAAAU,gBAAA8F,EAAA5F,qBAAAC,QACAwC,EAAAmD,EAAAxD,UAAAnC,QACAb,KAAAkG,OAAApF,OAUAd,KAAAkG,OAAApF,KAAAuC,GACArD,KAAAgB,WAUAgF,EAAAzF,UAAAU,MAAA,WACA,MAAAwF,EAAA,IAAAT,EAAA,MAEAU,EAAA1G,KAAAkG,OAAAnF,OACA4F,EAAA,IAAAC,MAAAF,GACA,QAAAnD,EAAA,EAAiBA,EAAAmD,IAASnD,EAC1BoD,EAAApD,GAAAvD,KAAAkG,OAAA3C,GAAA1C,QAKA,OAFA4F,EAAAtF,mBACAnB,KAAAoB,OAAApB,KAAAU,gBAAAG,QAAA8F,GACAF,GAOAT,EAAAzF,UAAAc,eAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,OAAAA,EAAApB,OAAAqB,EAAA,yBAAArB,CAAAL,KAAA2B,YAAAL,EAAAC,GACAE,GAEAzB,KAAAG,mBAAAH,KAAA4B,gBACA5B,KAAAE,UAAA2B,KAAAC,KAAA+E,EAAA,EAAAC,qBACA9G,KAAAU,gBAAA,EAAAV,KAAAkG,OAAAlG,KAAAiC,OAAA,IACAjC,KAAAG,kBAAAH,KAAA4B,eAEAiF,EAAA,EAAAE,kBACA/G,KAAAgH,6BAAA,EAAAhH,KAAAkG,OAAAlG,KAAAiC,OACAjC,KAAAE,WAAA,EAAAoB,EAAAC,EAAAC,EAAAC,KAOAuE,EAAAzF,UAAA0G,WAAA,SAAA3F,EAAAC,GACA,OAAA2F,EAAA,EAAAC,uBACAnH,KAAAgH,6BAAA,EAAAhH,KAAAkG,OAAAlG,KAAAiC,OAAAX,EAAAC,IASAyE,EAAAzF,UAAA6G,QAAA,WACA,OAAAC,EAAA,EAAAC,aACAtH,KAAAgH,6BAAA,EAAAhH,KAAAkG,OAAAlG,KAAAiC,SAkBA+D,EAAAzF,UAAAsC,eAAA,SAAA0E,GACA,IAAA7G,EASA,YARAtD,IAAAmK,GACA7G,EAAAV,KAAAgH,6BAAAnG,QACA2G,EAAA,EAAAC,mBACA/G,EAAA,EAAAV,KAAAkG,OAAAlG,KAAAiC,OAAAsF,IAEA7G,EAAAV,KAAAU,gBAGAgH,EAAA,EAAAC,cACAjH,EAAA,EAAAV,KAAAkG,OAAAlG,KAAAiC,SAOA+D,EAAAzF,UAAAqH,SAAA,WACA,OAAA5H,KAAAkG,QAOAF,EAAAzF,UAAAsH,sBAAA,WACA,GAAA7H,KAAAmG,6BAAAnG,KAAA4B,cAAA,CACA,MAAAkG,EAAAC,EAAA,EAAAT,aACAtH,KAAAU,gBAAA,EAAAV,KAAAkG,OAAAlG,KAAAiC,QACAjC,KAAAoG,oBAAA4B,EAAA,EAAAV,aACAtH,KAAAgH,6BAAA,EAAAhH,KAAAkG,OAAAlG,KAAAiC,OACA6F,GACA9H,KAAAmG,4BAAAnG,KAAA4B,cAEA,OAAA5B,KAAAoG,qBAUAJ,EAAAzF,UAAA0H,kBAAA,WACA,MAAAC,EAAA,IAAAC,EAAA,cAGA,OAFAD,EAAA/G,mBAAAmB,EAAA,QAAAC,IACAvC,KAAA6H,wBAAAhH,SACAqH,GAOAlC,EAAAzF,UAAAyG,2BAAA,WACA,GAAAhH,KAAAqG,mBAAArG,KAAA4B,cAAA,CACA,MAAAlB,EAAAV,KAAAU,gBACA8G,EAAA,EAAAY,wBACA1H,EAAA,EAAAV,KAAAkG,OAAAlG,KAAAiC,QACAjC,KAAAsG,yBAAA5F,GAEAV,KAAAsG,yBAAA5F,EAAAG,QACAb,KAAAsG,yBAAAvF,OACAyG,EAAA,EAAAC,mBACAzH,KAAAsG,yBAAA,EAAAtG,KAAAkG,OAAAlG,KAAAiC,SAEAjC,KAAAqG,kBAAArG,KAAA4B,cAEA,OAAA5B,KAAAsG,0BAOAN,EAAAzF,UAAAuD,8BAAA,SAAAC,GACA,MAAAC,KACAqE,KACArE,EAAAjD,OAAAgF,EAAA,EAAAuC,WACAtI,KAAAU,gBAAA,EAAAV,KAAAkG,OAAAlG,KAAAiC,OACAJ,KAAAC,KAAAiC,GACAC,EAAA,EAAAqE,GACA,MAAAE,EAAA,IAAAvC,EAAA,MAGA,OAFAuC,EAAApH,mBACAmB,EAAA,QAAA8B,GAAAJ,EAAAqE,GACAE,GAUAvC,EAAAzF,UAAAiI,WAAA,SAAAtF,GACA,GAAAA,EAAA,GAAAlD,KAAAkG,OAAAnF,QAAAmC,EACA,YAEA,IAAAO,EACA,OAAAP,EACAO,EAAA,MACG,CACH,MAAAgF,EAAAzI,KAAAkG,OAAAhD,EAAA,GACAO,EAAAgF,IAAA1H,OAAA,GAEA,MAAAsC,EAAArD,KAAAkG,OAAAhD,GAAArC,QACA6C,EAAAL,IAAAtC,OAAA,GACA,OAAA0C,EAAA,CACA,IAAAF,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAH,EAAAtC,OAAiCwC,EAAAC,IAAQD,EACzCF,EAAAE,IAAAE,EAGA,MAAA+C,EAAA,IAAAkC,EAAA,cAGA,OAFAlC,EAAArF,mBACAnB,KAAAoB,OAAApB,KAAAU,gBAAAG,MAAA4C,EAAAC,GAAAL,GACAmD,GASAR,EAAAzF,UAAAoI,YAAA,WACA,MAAAvH,EAAApB,KAAAoB,OACAV,EAAAV,KAAAU,gBACAkI,EAAA5I,KAAAkG,OACA2C,KACA,IACAtF,EAAAC,EAAA6B,EAAAyD,EADArF,EAAA,EAEA,IAAAF,EAAA,EAAAC,EAAAoF,EAAA7H,OAAgCwC,EAAAC,IAAQD,EAAA,CACxC,MAAAF,EAAAuF,EAAArF,GAAA1C,QACA6C,EAAAL,IAAAtC,OAAA,GACA,OAAA0C,EACA,IAAA4B,EAAA,EAAAyD,EAAAzF,EAAAtC,OAAmCsE,EAAAyD,IAAQzD,EAC3ChC,EAAAgC,IAAA5B,EAGA,MAAA+C,EAAA,IAAAkC,EAAA,cACAlC,EAAArF,mBACAC,EAAAV,EAAAG,MAAA4C,EAAAC,GAAAL,GACAwF,EAAA/H,KAAA0F,GACA/C,EAAAC,EAEA,OAAAmF,GAQA7C,EAAAzF,UAAA8D,QAAA,WACA,OAAAC,EAAA,QAAAyE,eAQA/C,EAAAzF,UAAAiE,iBAAA,SAAAC,GACA,OAAAuE,EAAA,EAAA1B,aACAtH,KAAAgH,6BAAA,EAAAhH,KAAAkG,OAAAlG,KAAAiC,OAAAwC,IAWAuB,EAAAzF,UAAAH,eAAA,SAAAR,EAAAC,GACA,GAAAD,EAEG,CACHI,KAAA2E,UAAA9E,EAAAD,EAAA,GACAI,KAAAU,kBACAV,KAAAU,oBAEA,MAAAkI,EAAAK,EAAA,EAAAtB,cACA3H,KAAAU,gBAAA,EAAAd,EAAAI,KAAAiC,OAAAjC,KAAAkG,QACA,OAAA0C,EAAA7H,OACAf,KAAAU,gBAAAK,OAAA,MACK,CACL,MAAAmI,EAAAN,IAAA7H,OAAA,GACAf,KAAAU,gBAAAK,OAAA,IAAAmI,EAAAnI,OACA,EAAAmI,IAAAnI,OAAA,GAEAf,KAAAgB,eAfAhB,KAAAmB,mBAAAmB,EAAA,QAAA8B,GAAA,KAAApE,KAAAkG,SAyBAF,EAAAzF,UAAAY,mBAAA,SAAAC,EAAAV,EAAAkI,GACA5I,KAAA6E,2BAAAzD,EAAAV,GACAV,KAAAkG,OAAA0C,EACA5I,KAAAgB,WAOAgF,EAAAzF,UAAA4I,YAAA,SAAAN,GACA,IAAAzH,EAAApB,KAAA+E,YACA,MAAArE,KACAkI,KACA,QAAArF,EAAA,EAAAC,EAAAqF,EAAA9H,OAAuCwC,EAAAC,IAAQD,EAAA,CAC/C,MAAAiD,EAAAqC,EAAAtF,GACA,IAAAA,IACAnC,EAAAoF,EAAAzB,aAEA,MAAAtB,EAAA/C,EAAAK,OACAsC,EAAAmD,EAAAxD,UACA,QAAAqC,EAAA,EAAAyD,EAAAzF,EAAAtC,OAAqCsE,EAAAyD,IAAQzD,EAC7ChC,EAAAgC,IAAA5B,EAEApD,OAAAM,EAAA,OAAAN,CAAAK,EAAA8F,EAAA5F,sBACAgI,EAAA9H,KAAAuC,GAEArD,KAAAmB,mBAAAC,EAAAV,EAAAkI,IAGAnJ,EAAA,yFCjaA,QAAAhD,EAAA,SACAA,EAAA,MACAA,EAAA,MACY2M,IAAZ3M,EAAA,IACY4M,IAAZ5M,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,iNAoBA,IAAM6M,EAAU,SAASC,EAAOC,EAAWC,EAAIC,EAAiBC,EAAgBC,GAE9EC,EAAAC,QAAoB/J,KAAKC,MAMzBA,KAAK+J,0BAA2B,OACiB3M,IAA7CwM,EAAiBI,0BACnBhK,KAAK+J,yBAA2BH,EAAiBI,yBAOnDhK,KAAKiK,IAAMR,EAMXzJ,KAAKkK,OAASX,EAMdvJ,KAAKmK,cAAW/M,EACZoM,EAAUY,IAAI,gBAChBpK,KAAKmK,SAAWX,EAAUa,IAAI,eAGhCrK,KAAKsK,cAAgB,IACjBd,EAAUY,IAAI,kBAChBpK,KAAKsK,cAAgBd,EAAUa,IAAI,iBAOrCrK,KAAKuK,cAAgB,KACjBf,EAAUY,IAAI,kBAChBpK,KAAKuK,cAAgBf,EAAUa,IAAI,iBAOrCrK,KAAKwK,aAAed,EAMpB1J,KAAK2J,eAAiBA,EAMtB3J,KAAKyK,UAAYhB,EAAGiB,QAMpB1K,KAAK2K,SAAW3K,KAAKyK,UAAUG,QAK/B5K,KAAK6K,QAAS,EAMd7K,KAAK8K,gBAAkB,4LAGzB1B,EAAO2B,SAASzB,EAAhBO,EAAAC,SAQAR,EAAQ0B,yBAA2B,SAASC,EAAQC,GAClD,IAAK,IAAI3H,EAAI,EAAGC,EAAKyH,EAAOlK,OAAQwC,EAAIC,EAAID,IAE1C,IADA,IAAM4H,EAAQF,EAAO1H,GACZ8B,EAAI,EAAGyD,EAAKqC,EAAMC,SAASrK,OAAQsE,EAAIyD,EAAIzD,IAAK,CACvD,IAAMgG,EAAQF,EAAMC,SAAS/F,GACvBiG,KAEN,GADAhC,EAAQiC,aAAaF,EAAOC,GACxBhC,EAAQkC,iBAAiBF,EAAYJ,GACvC,OAAOG,EAIb,OAAO,MAST/B,EAAQmC,gBAAkB,SAASR,EAAQC,GACzC,IAAK,IAAI3H,EAAI,EAAGC,EAAKyH,EAAOlK,OAAQwC,EAAIC,EAAID,IAE1C,IADA,IAAM4H,EAAQF,EAAO1H,GACZ8B,EAAI,EAAGyD,EAAKqC,EAAMC,SAASrK,OAAQsE,EAAIyD,EAAIzD,IAAK,CACvD,IAAMgG,EAAQF,EAAMC,SAAS/F,GACvBqG,KAEN,GADApC,EAAQqC,qBAAqBN,EAAOK,GAChCpC,EAAQkC,iBAAiBE,EAAeR,GAC1C,OAAOG,EAIb,OAAO,MAWT/B,EAAQkC,iBAAmB,SAASI,EAASC,GAC3C,OAAOxC,EAAQyC,KAAKF,EAAS,SAAAG,GAAA,OAAUA,EAAA,OAAmBF,KAU5DvC,EAAQ0C,gBAAkB,SAASf,EAAQgB,GACzC,OAAO3C,EAAQkC,iBAAiBP,EAAQgB,IAW1C3C,EAAQqC,qBAAuB,SAAS/O,EAAMsP,GAC5C,IAAMd,EAAWxO,EAAKwO,SACtB,QAAiBhO,IAAbgO,EAAwB,CAC1Bc,EAAMpL,KAAKlE,GACX,IAAK,IAAI2G,EAAI,EAAGA,EAAI6H,EAASrK,OAAQwC,IACnC+F,EAAQqC,qBAAqBP,EAAS7H,GAAI2I,KAYhD5C,EAAQiC,aAAe,SAAS3O,EAAMsP,GACpC,IAAI3I,SACE6H,EAAWxO,EAAKwO,SACtB,QAAiBhO,IAAbgO,EACF,IAAK7H,EAAI,EAAGA,EAAI6H,EAASrK,OAAQwC,IAC/B+F,EAAQiC,aAAaH,EAAS7H,GAAI2I,QAGpCA,EAAMpL,KAAKlE,IAUf0M,EAAQ/I,UAAU4L,YAAc,SAASC,GAAe,IAAAC,EAAArM,KAChD2J,EAAiB3J,KAAK2J,eAC5B,GAAI3J,KAAK8K,gBACP,OAAO9K,KAAK8K,gBAEd,IAAMrB,EAAKzJ,KAAKiK,IACVqC,EAActM,KAAKwK,aAmBnB+B,EAAW,SAASC,EAAMC,GAC9BA,EAAMC,IAAI,QAASF,EAAKtB,MACxBuB,EAAMC,IAAI,WAAYF,EAAKG,UAC3BF,EAAMC,IAAI,aAAcF,EAAKI,YAC7B,IAAMC,KAGN,OApBa,SAATC,EAAkBN,EAAMO,GAC5BA,EAAMjM,KAAKsI,EAAO4D,OAAOR,KACRA,EAAKpB,cACb6B,QAAQ,SAACC,GAChBJ,EAAOI,EAAOH,KAchBD,CAAON,EAAMK,GACbJ,EAAMC,IAAI,iBAAkBG,GACrBJ,GAQHU,EAAuB,SAASC,EAAYC,GAChD,GAAsB,SAAlBA,EAASC,KAAiB,CAC5B,IAAMC,EAAoDF,EAE1D,OADAG,EAAA1D,QAAY2D,OAAOF,EAAaG,IAAK,yBAC9BpB,EAAYqB,iCACjBJ,EAAaG,IACbH,EAAad,OAAS,GACtBY,EAAST,YACTgB,KAAKrB,EAASsB,KAAK,KAAMR,IAAWO,KAAK,KAAM,SAACE,GAChD,IAAIC,4BAAoCR,EAAad,MAAjD,4BAAkFc,EAAaG,IAA/F,KAIJ,OAHAK,2BAAmCD,EAAA,QACnCE,QAAQC,MAAMF,GAEPtE,EAAGyE,aAAQ9Q,KAEf,GAAsB,QAAlBiQ,EAASC,KAAgB,CAClC,IAAMa,EAAkDd,EACxDG,EAAA1D,QAAY2D,OAAOU,EAAYC,UAAW,6BAC1C,IAAMC,EAASjB,EAAWe,EAAYC,WAItC,OAHAZ,EAAA1D,QAAY2D,OAAOY,EAAQ,gCAC3Bb,EAAA1D,QAAY2D,OAAOY,EAAOX,IAAK,8BAC/BF,EAAA1D,QAAY2D,OAAOY,EAAOC,UAAW,qCAC9B/B,EAASc,EAAUf,EAAYiC,oBACpCF,EAAOX,IACPS,EAAYK,QAAU,GACtBH,EAAOC,UACPD,EAAOf,UACPlQ,EACAiQ,EAAST,WACTyB,EAAOI,WAAa,kBAAoB,cAG5CjB,EAAA1D,QAAY4E,KAAZ,qBAAsCrB,EAASC,OA6B3CqB,EAAmB,SAASC,GAChC,IAAMC,EAAWD,EAAKE,kBAAkBC,IAAI,SAACvC,GAC3C,IAAMwC,EAAWxC,EAAKc,KACtB,MAAiB,SAAb0B,GAAoC,QAAbA,EAClB7B,EAAqByB,EAAKxB,WAAYZ,GACpCA,EAAKpB,SA1BS,SAASgC,EAAYZ,GAEhD,IACMqC,EADkBrC,EAAKpB,SAAS2D,IAAI,SAAAzN,GAAA,OAAKA,IAAG2N,UACjBF,IAAI5B,EAAqBU,KAAK,KAAMT,IACrE,OAAO3D,EAAGyF,IAAIL,GAAUjB,KAAK,SAACY,GAC5B,IAAIW,SACAX,IACFA,EAASA,EAAOY,OAAO,SAAAC,GAAA,OAAKA,IAC5BF,EAAa,IAAAG,EAAAxF,QAAiB0E,IAEhC,IAAMnD,EAAQiB,EAAYiD,iBAAiBJ,GAE3C,OADA5C,EAASC,EAAMnB,GACRA,IAgBEmE,CAAqBZ,EAAKxB,WAAYZ,QAE7C,GAEDxM,MACH,OAAOyJ,EAAGyF,IAAIL,IACdhB,KAAK7N,MAwBP,OAtBAA,KAAK8K,gBAAkB9K,KAAK2K,SAASiD,KAAKe,GAAkBf,KAAK,SAAC6B,GAChE,IAAMjB,KAkBN,OAfInC,EAAKtC,2BAEPJ,EAAe+F,UAAU,SACzBlB,EAAO1N,KAAK,IAAA6O,EAAA7F,SACV8F,MAAS,QACTjD,UAAakD,UAAa,QAK9BJ,EAAOxC,QAAQ,SAACR,GACVA,GACF+B,EAAO1N,KAAK2L,KAGT+B,IAGFxO,KAAK8K,iBAUdxB,EAAQ/I,UAAUuP,eAAiB,SAAS7D,GAC1C,OAAOjM,KAAK2K,SAASiD,KAOnB,SAAAgB,GAAA,OAAQtF,EAAQ0C,gBAAgB4C,EAAK3D,OAAQgB,MASjD3C,EAAQ/I,UAAUwP,gBAAkB,WAClC,OAAO/P,KAAK2K,SAASiD,KAMnB,SAAAgB,GAAA,OAAQA,EAAK3D,UAQjB3B,EAAQ/I,UAAUyP,0BAA4B,WAE5C,OADAxC,EAAA1D,QAAY2D,OAAyB,OAAlBzN,KAAK2K,UACjB3K,KAAK2K,SAASiD,KAMnB,SAAAgB,GAAA,OAAQA,EAAKE,qBAUjBxF,EAAQ/I,UAAU0P,oBAAsB,WAEtC,OADAzC,EAAA1D,QAAY2D,OAAyB,OAAlBzN,KAAK2K,UACjB3K,KAAK2K,SAASiD,KAMnB,SAAAgB,GAAA,OAAQA,EAAKxB,cAQjB9D,EAAQ/I,UAAU2P,kBAAoB,WAEpC,OADA1C,EAAA1D,QAAY2D,OAAyB,OAAlBzN,KAAK2K,UACjB3K,KAAK2K,SAASiD,KAAK5N,KAAKmQ,mBAAmBtC,KAAK7N,QASzDsJ,EAAQ/I,UAAU4P,mBAAqB,SAASvB,GAAM,IAAAwB,EAAApQ,KACpD,OAAO4O,EAAK3D,OAAOoF,KAAK,SAAClF,GAEvB,OAD0BA,EAAMC,SAASiF,KAAKD,EAAKE,uBAAuBzC,KAA5BuC,OAUlD9G,EAAQ/I,UAAU+P,uBAAyB,SAAS1T,GAClD,GAAIA,EAAK2T,SACP,OAAO,EAGT,IAAIL,GAAoB,EAClB9E,EAAWxO,EAAKwO,SAItB,OAHIA,GAAYA,EAASrK,SACvBmP,EAAoB9E,EAASiF,KAAKrQ,KAAKsQ,uBAAuBzC,KAAK7N,QAE9DkQ,GAUT5G,EAAQkH,kBAAoB,SAAS5T,GAGnC,OAFgBA,EAAK+P,eAA6CvP,IAAjCR,EAAK+P,SAAS8D,eAC7C7T,EAAK+P,SAAS8D,eAAiB,MAcnCnH,EAAQoH,qBAAuB,SAASrD,GACtC,IAAMV,EAAWU,EAASV,SACtBgE,EAAgBtD,EAASuD,kBAI7B,YAHsBxT,IAAlBuT,QAA4CvT,IAAbuP,IACjCgE,EAAgBhE,EAASgE,eAEpBA,GAaTrH,EAAQuH,qBAAuB,SAASxD,GACtC,IAAMV,EAAWU,EAASV,SACtBmE,EAAgBzD,EAAS0D,kBAI7B,YAHsB3T,IAAlB0T,QAA4C1T,IAAbuP,IACjCmE,EAAgBnE,EAASmE,eAEpBA,GASTxH,EAAQ/I,UAAUyQ,WAAa,SAASC,GAAY,IAAAC,EAAAlR,KAElDwN,EAAA1D,QAAY2D,OAAOzN,KAAKmK,SAAU,iCAE9BnK,KAAK6K,SAEP7K,KAAKyK,UAAYzK,KAAKiK,IAAIS,QAC1B1K,KAAK2K,SAAW3K,KAAKyK,UAAUG,QAC/B5K,KAAK8K,gBAAkB,KACvB9K,KAAK6K,QAAS,GAGhB7K,KAAKkK,OAAOG,IAAIrK,KAAKmK,UACnBgH,YAAuB/T,IAAf6T,GACNG,KAAQH,EACRI,cAAiBrR,KAAKsK,gBAEtB+G,cAAiBrR,KAAKsK,eAExBgH,OAAO,EACPC,iBAAiB,IAChB3D,KAAK,SAACE,GACP,GAAmC,GAA/BA,EAASc,KAAK4C,OAAOzQ,OAAa,CACpC,IAAMgN,sCACJD,EAASc,KAAK4C,OAAOC,KAAK,MAC5BzD,QAAQC,MAAMF,GACa,OAAvBmD,EAAK3G,eAA0B2G,EAAK3G,cAAcmH,SAAS,UAC7DC,OAAOC,MAAM7D,GAGjBmD,EAAKzG,UAAUyD,QAAQJ,EAASc,MAChCsC,EAAKW,cAAc,UACnBX,EAAKrG,QAAS,GACb,SAACiD,GACFoD,EAAKzG,UAAUqH,OAAOhE,MAQ1BxE,EAAQyI,UACNC,YAAa,aACbC,gBAAiB,gBACjBC,KAAM,OACNC,IAAK,QAOP7I,EAAQ8I,OAASC,QAAQD,OAAO,aAC9BE,EAAAxI,QAAmBsI,OAAOlH,QAEbqH,MAAM,uBACrBjJ,EAAQ8I,OAAOI,QAAQ,YAAalJ,aAGrBA,sFC5kBf,QAAA7M,EAAA,SACAA,EAAA,MACAA,EAAA,MACY2M,0JAAZ3M,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,wDAcA,IAAM6M,EAAU,SAASmJ,EAAQC,EAAYC,GAAQ,IAAAtG,EAAArM,KAE7C4S,OAA4CxV,IAAnCuV,EAAA,qBAMf3S,KAAK4S,OAASA,EAEd,IAAMC,EAAWF,EAAA,cAMjB3S,KAAK8S,WAAaJ,EAMlB1S,KAAK+S,cAML/S,KAAKgT,OAAS,MAMdhT,KAAKpD,KAEDgW,EACFH,EAAOQ,OAAOJ,EAAU,SAACK,EAAQC,GAC/B9G,EAAKzP,KAAOsW,KAGdlT,KAAKpD,KAA+B6V,EAAOW,MAAMP,GACjDrF,EAAA1D,QAAY2D,YAAqBrQ,IAAd4C,KAAKpD,OAG1B,IAAMyW,EAAUV,EAAA,iBACV5D,EAA6B0D,EAAOW,MAAMC,GAChD7F,EAAA1D,QAAY2D,YAAerQ,IAAR2R,GAMnB/O,KAAKsT,OAASb,EAAOc,QAAP,cAMdvT,KAAKoL,YAEDpL,KAAKsT,QACPtT,KAAKsT,OAAOlI,SAAStK,KAAKd,MAG5ByS,EAAOe,IAAI,WAAY,WACrB,GAAInH,EAAKiH,OAAQ,CACf,IAAMpQ,EAAQmJ,EAAKiH,OAAOlI,SAASqI,QAArBpH,GACdmB,EAAA1D,QAAY2D,OAAOvK,GAAS,GAC5BmJ,EAAKiH,OAAOlI,SAASsI,OAAOxQ,EAAO,MAQvClD,KAAK2T,IAAMvK,EAAO4D,OAAOhN,MAMzBA,KAAK4T,MAAQhB,EAAS,EAAI5S,KAAKsT,OAAOM,MAAQ,EAK9CnB,EAAA,IAAgBzS,KAAK2T,IACrBlB,EAAA,MAAkBzS,KAAK4T,MAMvB5T,KAAK+O,IAAMA,EAEX,IAAI8E,EAAgBlB,EAAA,uBACpB,QAAsBvV,IAAlByW,EAA6B,CAC/B,IAAMC,EAAoBnB,EAAA,2BACpBoB,EAAmBtB,EAAOW,MAAMU,GACtCtG,EAAA1D,QAAYkK,aAAaD,GACzBF,EAAgBE,EAelB,GAbAvG,EAAA1D,QAAY2D,YAAyBrQ,IAAlByW,GAMnB7T,KAAK6T,cAAgBA,EAMrB7T,KAAKyM,MAAQ,MACRmG,EAAQ,CACX,IAAMnG,EAAQgG,EAAOW,MAAMS,GAAgBI,SAAYjU,QAAU,KAC7DyM,IACFe,EAAA1D,QAAY2D,OACVhB,wBAAiCA,wBAEnCzM,KAAKyM,MAAQA,GAQjBzM,KAAKkU,YAAc,KAEflU,KAAKyM,QACP0H,EAAArK,QAAiBsK,aAAapU,KAAKyM,MAAOgG,GAC1C0B,EAAArK,QAAiB2C,MAAMzM,KAAKyM,OAE5B4H,EAAAvK,QAASwK,OAAOtU,KAAKyM,MAAO,iBAAkB,WAC5CJ,EAAKyG,WAAWyB,WAAW,yBAA3BlI,MAIJ,IAAImI,EAAgB7B,EAAA,uBACpB,QAAsBvV,IAAlBoX,EAA6B,CAC/B,IAAMC,EAAoB9B,EAAA,2BAC1B6B,EAAgB/B,EAAOW,MAAMqB,QAGTrX,IAAlBoX,GACFhH,EAAA1D,QAAYkK,aAAaQ,GAO3BxU,KAAKwU,cAAgBA,EAGjBA,GACF/B,EAAOW,MAAMoB,GAAgBE,UAAajC,EAAQwB,SAAYjU,OAGhEyS,EAAA,cAA0BzS,4FAS5BsJ,EAAQ/I,UAAUoU,SAAW,WAC3B,OAAO3U,KAAKgT,QAWd1J,EAAQ/I,UAAUqU,SAAW,SAASC,EAAOC,GAAe,IAAA1E,EAAApQ,KAC1D,GAAI6U,IAAU7U,KAAKgT,OAAnB,CAGAhT,KAAK+U,kBAAkBF,GAGnB7U,KAAKsT,QACPtT,KAAKsT,OAAO0B,eAGd,IAAMC,EAAejV,KAAK4S,OAAS5S,KAAKoL,UAAY9B,EAAQ4L,mBAAmBlV,aAEzD5C,IAAlB0X,GAA+BA,IACjCG,EAAahI,QAAQ,SAACkI,GACpB/E,EAAK0C,WAAWyB,WAAW,uBAA3BnE,EAAyD+E,OAS/D7L,EAAQ/I,UAAUwU,kBAAoB,SAASF,GAE7C7U,KAAKgT,OAAmB,OAAV6B,EAAiB,KAAO,MAEtC7U,KAAKoL,SAAS6B,QAAQ,SAASC,GAC7BA,EAAM6H,kBAAkB/U,KAAKgT,SAC5BhT,OASLsJ,EAAQ/I,UAAUyU,aAAe,WAC/B,IAAMI,EAAWpV,KAAKqV,oBAClBrV,KAAKgT,SAAWoC,IAGpBpV,KAAKgT,OAASoC,EACVpV,KAAKsT,QACPtT,KAAKsT,OAAO0B,iBAUhB1L,EAAQ/I,UAAU8U,kBAAoB,WACpC,QAA2BjY,IAAvB4C,KAAKpD,KAAKwO,SACZ,OAAOpL,KAAKgT,OAEd,IAAIsC,SACAC,SAUJ,OATAvV,KAAKoL,SAASiF,KAAK,SAACnD,GAElB,GADAoI,EAAapI,EAAMmI,oBACfE,GACEA,IAAuBD,EACzB,OAAOA,EAAa,gBAGxBC,EAAqBD,IAEhBA,GASThM,EAAQ/I,UAAUiV,aAAe,SAASC,GACxC,IAAMhJ,EAAQzM,KAAKyM,MACbsC,EAAM/O,KAAK+O,IACjB,GAAKtC,EAGL,YAAYrP,IAARqY,EAOK1G,EAAI2G,YAAYC,WAAWlC,QAAQhH,IAAU,OAN/CgJ,EAGH1G,EAAI6G,SAASnJ,GAFbsC,EAAI8G,YAAYpJ,KAetBnD,EAAQ/I,UAAUuV,cAAgB,WAChC,OAAO9V,KAAKkU,aAQd5K,EAAQ/I,UAAUwV,cAAgB,SAASC,GACzChW,KAAKkU,YAAc8B,GAWrB1M,EAAQ4L,mBAAqB,SAASjB,GAEpC,IADA,IAAIgC,EAAOhC,GACHgC,EAAK3C,OAAOV,QAClBqD,EAAOA,EAAK3C,OAEd,OAAO2C,GAOT3M,EAAQ4M,iBACNC,KAAM,OACNC,KAAM,OACNC,QAAS,WAkBX/M,EAAQ/I,UAAU+V,mBAAqB,SAASC,GAI9C,OAFiBA,EAAQvW,OAASsJ,EAAQ4M,gBAAgBG,SAGxD,KAAK/M,EAAQ4M,gBAAgBC,KAC3B,OAAO,EACT,KAAK7M,EAAQ4M,gBAAgBE,KAC3B,OAAO,EACT,KAAK9M,EAAQ4M,gBAAgBG,QAC3B,IAAK,IAAI9S,EAAI,EAAGA,EAAIvD,KAAKoL,SAASrK,SAAUwC,EAAG,CAG7C,GAFcvD,KAAKoL,SAAS7H,GACT+S,mBAAmBC,GAEpC,OAAO,EAGX,OAAO,EACT,QACE/I,EAAA1D,QAAY4E,KAAK,qBAQvBpF,EAAQ8I,OAASC,QAAQD,OAAO,+BACjBoE,WAAW,0BAA2BlN,aAGtCA,mEC3YfmN,EAAAha,EAAA,GAmBA,MAAAia,EAAA,WAMA1W,KAAA2W,eAAA,IAAAC,cAEAC,EAAA,QAAA9W,KAAAC,OAGAK,OAAAC,EAAA,SAAAD,CAAAqW,EAAAG,EAAA,SAMAH,EAAAnW,UAAA8D,QAAA,WACA,OAAAyS,EAAA,EAAAC,KAOAL,EAAAnW,UAAAyW,YAAA,SAAAC,EAAAC,GACA,GAAAT,EAAA,QAAAU,WAAAF,GACA,OAAAjX,KAAAoX,wBAC0B,EAAAF,GACvB,GAAAT,EAAA,QAAAY,OAAAJ,GACH,OAAAjX,KAAAsX,oBAAoD,EAAAJ,GACjD,oBAAAD,EAAA,CACH,MAAAM,EAAAd,EAAA,QAAAjZ,MAAAyZ,GACA,OAAAjX,KAAAoX,wBAAAG,EAAAL,GAEA,aAUAR,EAAAnW,UAAA6W,wBAAA,SACAG,EAAAL,GACA,MAAAM,EAAAxX,KAAAyX,yBAAAF,EAAAL,GACA,OAAAM,EAAAzW,OAAA,EACAyW,EAAA,GAEA,MAUAd,EAAAnW,UAAA+W,oBAAA,SAAA1a,EAAAsa,GACA,aAOAR,EAAAnW,UAAAmX,aAAA,SAAAT,EAAAC,GACA,GAAAT,EAAA,QAAAU,WAAAF,GACA,OAAAjX,KAAAyX,yBAC0B,EAAAP,GACvB,GAAAT,EAAA,QAAAY,OAAAJ,GACH,OAAAjX,KAAA2X,qBAAqD,EAAAT,GAClD,oBAAAD,EAAA,CACH,MAAAM,EAAAd,EAAA,QAAAjZ,MAAAyZ,GACA,OAAAjX,KAAAyX,yBAAAF,EAAAL,GAEA,UAWAR,EAAAnW,UAAAkX,yBAAA,SACAF,EAAAL,GAEA,MAAAM,KACA,IAAA/R,EACA,IAAAA,EAAA8R,EAAAK,WAA0BnS,EAAGA,IAAAoS,YAC7BpS,EAAAqS,UAAAC,KAAAC,cACA3X,OAAAM,EAAA,OAAAN,CAAAmX,EAAAxX,KAAA2X,qBAAAlS,EAAAyR,IAGA,OAAAM,GAWAd,EAAAnW,UAAAoX,qBAAA,SAAA/a,EAAAsa,KAMAR,EAAAnW,UAAA0X,aAAA,SAAAhB,EAAAC,GACA,GAAAT,EAAA,QAAAU,WAAAF,GACA,OAAAjX,KAAAkY,yBAC0B,EAAAhB,GACvB,GAAAT,EAAA,QAAAY,OAAAJ,GACH,OAAAjX,KAAAmY,qBAAqD,EAAAjB,GAClD,oBAAAD,EAAA,CACH,MAAAM,EAAAd,EAAA,QAAAjZ,MAAAyZ,GACA,OAAAjX,KAAAkY,yBAAAX,EAAAL,GAEA,aAWAR,EAAAnW,UAAA2X,yBAAA,SAAAX,EAAAL,GACA,aAUAR,EAAAnW,UAAA4X,qBAAA,SAAAvb,EAAAsa,GACA,aAOAR,EAAAnW,UAAA6X,eAAA,SAAAnB,GACA,GAAAR,EAAA,QAAAU,WAAAF,GACA,OAAAjX,KAAAqY,2BAA+D,GAC5D,GAAA5B,EAAA,QAAAY,OAAAJ,GACH,OAAAjX,KAAAsY,uBAAuD,GACpD,oBAAArB,EAAA,CACH,MAAAM,EAAAd,EAAA,QAAAjZ,MAAAyZ,GACA,OAAAjX,KAAAqY,2BAAAd,GAEA,aAUAb,EAAAnW,UAAA8X,2BAAA,SAAAd,GACA,OAAAvX,KAAAuY,uBASA7B,EAAAnW,UAAA+X,uBAAA,SAAA1b,GACA,OAAAoD,KAAAuY,uBAOA7B,EAAAnW,UAAAiY,aAAA,SAAAC,EAAAvB,GACA,MAAAta,EAAAoD,KAAA0Y,iBAAAD,EAAAvB,GACA,OAAAlX,KAAA2W,eAAAgC,kBAAA/b,IAUA8Z,EAAAnW,UAAAmY,iBAAA,SAAAD,EAAAvB,GACA,aAOAR,EAAAnW,UAAAqY,cAAA,SAAApB,EAAAN,GACA,MAAAta,EAAAoD,KAAA6Y,kBAAArB,EAAAN,GACA,OAAAlX,KAAA2W,eAAAgC,kBAAA/b,IASA8Z,EAAAnW,UAAAsY,kBAAA,SAAArB,EAAAN,GACA,aAOAR,EAAAnW,UAAAuY,cAAA,SAAAC,EAAA7B,GACA,MAAAta,EAAAoD,KAAAgZ,kBAAAD,EAAA7B,GACA,OAAAlX,KAAA2W,eAAAgC,kBAAA/b,IASA8Z,EAAAnW,UAAAyY,kBAAA,SAAAD,EAAA7B,GACA,aAEAzX,EAAA,oFCvQA,QAAAhD,EAAA,SACAA,EAAA,MACAA,EAAA,yDAWA,IAAM6M,EAAU,SAAS2P,EAAcC,GAAmB,IAAA7M,EAAArM,KAMxDA,KAAKmZ,gBAKLnZ,KAAKiZ,aAAeA,EAMpBjZ,KAAKoZ,cAAgBF,EAMrBlZ,KAAKqZ,iBAELrZ,KAAKsZ,oBAAmB,GAMxB,IAAMC,EAAYN,EAAaO,eAAepK,OAAO,SAAAqK,GAAA,MAAc,SAAPA,GAAyB,eAAPA,IAE9E,GAAyB,IAArBF,EAAUxY,QACZ,GAAIf,KAAKqZ,iBAAkB,KAAAK,EAAA,SACdD,GACTjM,EAAA1D,QAAY2D,OAAOgM,GAEnBpN,EAAK+M,cAAc/I,KAAK,SAACsJ,GACvB,GAAIF,EAAIG,MAAMD,GAAY,CACxB,IAAMpH,EAAQZ,OAAOkI,aAAaJ,GAMlC,OAJEpN,EAAK8M,aAAaM,QADNrc,IAAVmV,GAAiC,OAAVA,EACAA,EAEA,IAEpB,MAXb,IAAK,IAAMkH,KAAO9H,OAAOkI,aAAcH,EAA5BD,SAiBbF,EAAUtM,QAAQ,SAACwM,GACjBpN,EAAK+M,cAAc/I,KAAK,SAACsJ,GACvB,GAAIF,EAAIG,MAAMD,GAAY,CACxB,IAAMpH,EAAQlG,EAAK4M,aAAaa,SAASL,GACzC,QAAcrc,IAAVmV,EAEF,OADAlG,EAAK8M,aAAaM,GAAOlH,GAClB,sGAanBjJ,EAAQ/I,UAAU+Y,mBAAqB,SAAS/G,GAI9C,GAHAvS,KAAKqZ,iBAAmB9G,EAGpBvS,KAAKqZ,iBACP,IACM,iBAAkB1H,QACpBA,OAAOkI,aAAP,KAA8B,UACvBlI,OAAOkI,aAAP,MAEP7Z,KAAKqZ,kBAAmB,EAE1B,MAAOU,GACP/L,QAAQC,MAAM8L,GACd/Z,KAAKqZ,kBAAmB,EAG5B,OAAOrZ,KAAKqZ,kBAQd/P,EAAQ/I,UAAUyZ,gBAAkB,SAASP,GAC3C,OAAOzZ,KAAKmZ,aAAaM,IAS3BnQ,EAAQ/I,UAAU0Z,sBAAwB,SAASR,GACjD,IAAMlH,EAAQvS,KAAKmZ,aAAaM,GAChC,QAAcrc,IAAVmV,EAGJ,OAAOA,GASTjJ,EAAQ/I,UAAU2Z,sBAAwB,SAAST,GACjD,IAAMlH,EAAQvS,KAAKmZ,aAAaM,GAChC,QAAcrc,IAAVmV,EAGJ,OAAO3U,WAAW2U,IASpBjJ,EAAQ/I,UAAU4Z,uBAAyB,SAASV,GAClD,IAAMlH,EAAQvS,KAAKmZ,aAAaM,GAChC,QAAcrc,IAAVmV,EAGJ,MAAiB,SAAVA,GAQTjJ,EAAQ/I,UAAU6Z,YAAc,SAASrO,GAEvC,GADA/L,KAAKiZ,aAAaoB,aAAatO,GAC3B/L,KAAKqZ,iBACP,IAAK,IAAMI,KAAO1N,EAAQ,CACxByB,EAAA1D,QAAY2D,OAAOgM,GACnB,IAAMlH,EAAQxG,EAAO0N,GACrBjM,EAAA1D,QAAY2D,YAAiBrQ,IAAVmV,GACnBZ,OAAOkI,aAAaJ,GAAOlH,IAUjCjJ,EAAQ/I,UAAU+Z,YAAc,SAASb,GACvCzZ,KAAKiZ,aAAaqB,YAAYb,GAC1BzZ,KAAKqZ,yBACA1H,OAAOkI,aAAaJ,KAQ/BnQ,EAAQ8I,OAASC,QAAQD,OAAO,oBAC9BmI,EAAAzQ,QAAyBsI,OAAOlH,QAEnBsH,QAAQ,mBAAoBlJ,GAC3CA,EAAQ8I,OAAOG,MAAM,qBAAsB,IAAIiI,OAAO,kBAGvClR,glBCnMf7M,EAAA,SACAA,EAAA,MACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDAKA,IAAM6M,cAiBJ,SAAAA,EAAYmR,gGAASC,CAAA1a,KAAAsJ,GAAA,IAAA+C,mKAAAsO,CAAA3a,MAAAsJ,EAAAsR,WAAAva,OAAAwa,eAAAvR,IAAAvJ,KAAAC,KAEbya,IASNpO,EAAKyO,kBAAoBL,EAAQM,kBAAoB,KAOrD1O,EAAK2O,iBAAmBP,EAAQQ,iBAAmBC,EAAApR,QAAoBqR,IAQvE9O,EAAK+O,aAAeX,EAAQY,aAAe,KAU3ChP,EAAKiP,WAAab,EAAQc,WAAa,KAWvClP,EAAKmP,WAAiC,IAArBf,EAAQgB,SAOzBpP,EAAKqP,YAAcjB,EAAQ7N,YAAc,KAOzCP,EAAKsP,cAAgBlB,EAAQmB,cAC3BtS,EAAQuS,uBAOVxP,EAAKyP,cAAgBrB,EAAQsB,cAAgB,YAS7C1P,EAAK2P,WAAavB,EAAQwB,WAAa,KAOvC5P,EAAK6P,eAAiBzB,EAAQ0B,eAC5B7S,EAAQ8S,WAAWC,UAOrBhQ,EAAKiQ,SAAW7B,EAAQ8B,SAAWjT,EAAQkT,KAAKrK,IAShD9F,EAAKoQ,YAAmC,IAAtBhC,EAAQiC,UAS1BrQ,EAAKsQ,kBAA+C,IAA5BlC,EAAQmC,gBAShCvQ,EAAKwQ,oBAAmD,IAA9BpC,EAAQqC,kBAOlCzQ,EAAK0Q,wBAAmD3f,IAA9Bqd,EAAQuC,kBAChCvC,EAAQuC,kBAAoB,GAO9B3Q,EAAK4Q,mBAAqBxC,EAAQyC,kBAMlC7Q,EAAK8Q,gBAAkB1C,EAAQ2C,eAM/B/Q,EAAKgR,mBAAyCjgB,IAAzBqd,EAAQ6C,aAC3B7C,EAAQ6C,aAAe,KAMzBjR,EAAKkR,gBAAkB9C,EAAQ+C,eAO/BnR,EAAKoR,cAAgBhD,EAAQiD,cAC3BpU,EAAQqU,aAAatR,EAAK6P,gBAO5B7P,EAAKuR,kBAAoBnD,EAAQoD,kBAC/BvU,EAAQwU,iBAAiBC,QAO3B1R,EAAK2R,iBAAmBvD,EAAQwD,iBAC9B3U,EAAQ4U,gBAAgBC,KAO1B9R,EAAK+R,QAAU3D,EAAQ4D,OAOvBhS,EAAKiS,eAAiB7D,EAAQ8D,eAC5BjV,EAAQkV,cAAcC,IAQxBpS,EAAKqS,kBAA+C,IAA5BjE,EAAQkE,gBAOhCtS,EAAKuS,QAAUnE,EAAQoE,OAOvBxS,EAAKyS,WAAarE,EAAQsE,UAO1B1S,EAAK2S,SAAWvE,EAAQwE,QAMxB,IAAMzQ,KACN,GAAInC,EAAK6S,WAAa7S,EAAK4P,UAAW,KAAAkD,GAAA,EAAAC,GAAA,EAAAC,OAAAjiB,EAAA,IACpC,QAAAkiB,EAAAC,EAAuBlT,EAAK4P,UAA5BuD,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAuC,KAA5BS,EAA4BN,EAAA/M,MACjCqN,EAASV,WACX1Q,EAAO1N,KAAK8e,EAAS1U,OAHW,MAAA6O,GAAAqF,GAAA,EAAAC,EAAAtF,EAAA,aAAAoF,GAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,IAQtC,IAAIS,EAAY,KAChB,GAAIzT,EAAK0T,aAAevR,EAAOzN,OAAQ,CACrC,IAAIif,OAAS5iB,EACTiP,EAAK2R,mBAAqB1U,EAAQ4U,gBAAgBC,KACpD6B,EAAS,IAAAC,EAAAnW,QACAuC,EAAK2R,mBAAqB1U,EAAQ4U,gBAAgBgC,OAC3DF,EAAS,IAAAG,EAAArW,SAEX0D,EAAA1D,QAAY2D,OAAOuS,GACnBF,EAAY,IAAAM,EAAAtW,SACVuW,UAAWhU,EAAKqR,aAChB4C,YAAa9R,EACb+R,UAAWP,IAQf3T,EAAKmU,WAAaV,EAElB,IAAIW,EAAY,KAnQG,OAoQfpU,EAAKqU,aAAelS,EAAOzN,QACzBsL,EAAKkS,gBAAkBjV,EAAQkV,cAAcC,MAC/CgC,EAAY,IAAAE,EAAA7W,SACV0E,YAUNnC,EAAKuU,WAAaH,EAjRCpU,EAjBjB,gUAAAwU,CAAAvX,EAAAwX,EAAAhX,SAAAiX,EAAAzX,IAAAmQ,IAAA,gBAAAlH,MAAA,WAgaF,OAAAyO,EAAA1X,EAAA/I,UAAAqa,WAAAva,OAAAwa,eAAAvR,EAAA/I,WAAA,aAAAP,SAhaEyZ,IAAA,gBAAAlH,MAAA,SAsaU0O,GACZD,EAAA1X,EAAA/I,UAAAqa,WAAAva,OAAAwa,eAAAvR,EAAA/I,WAAA,gBAAAP,MAAAD,KAAAC,KAAoBihB,GACpBjhB,KAAKkhB,uCAxaHzH,IAAA,iCAAAlH,MAAA,SAkwB2ByD,GAC7B,OAAOhW,KAAKmhB,kBAAoBnL,EAAWmL,kBACzCnhB,KAAK+f,aAAe/J,EAAW+J,aAC/B/f,KAAKkf,WAAalJ,EAAWkJ,WAC7Blf,KAAKqe,SAAWrI,EAAWqI,QAC3Bre,KAAKohB,4BAA4BpL,MAvwBjCyD,IAAA,iCAAAlH,MAAA,SAixB2ByD,GAC7B,OAAOhW,KAAKqhB,kBAAoBrL,EAAWqL,kBACzCrhB,KAAK0gB,aAAe1K,EAAW0K,aAC/B1gB,KAAKkf,WAAalJ,EAAWkJ,WAC7Blf,KAAK6e,SAAW7I,EAAW6I,QAC3B7e,KAAKohB,4BAA4BpL,MAtxBjCyD,IAAA,uBAAAlH,MAAA,SAiyBiB+O,GAA4B,IAAvBC,EAAuBC,UAAAzgB,OAAA,QAAA3D,IAAAokB,UAAA,IAAAA,UAAA,GAC/C,QAAUxhB,KAAKyhB,wBAAwBH,EAAKC,GAAexgB,UAlyBzD0Y,IAAA,0BAAAlH,MAAA,SA8yBoB+O,GAA4B,IAAvBC,EAAuBC,UAAAzgB,OAAA,QAAA3D,IAAAokB,UAAA,IAAAA,UAAA,GAE5CE,KAEN,GAAI1hB,KAAKic,UAAW,KAAA0F,GAAA,EAAAC,GAAA,EAAAC,OAAAzkB,EAAA,IAClB,QAAA0kB,EAAAC,EAAuB/hB,KAAKic,UAA5BuD,OAAAC,cAAAkC,GAAAG,EAAAC,EAAArC,QAAAC,MAAAgC,GAAA,EAAuC,KAA5B/B,EAA4BkC,EAAAvP,MAC/ByP,EAASpC,EAASjP,cAClBsR,EAASrC,EAAS9O,sBACM1T,IAAX6kB,GAAwBX,GAAOW,UACpB7kB,IAAX4kB,GAAwBV,GAAOU,KAGjCT,IAAiB3B,EAASV,WACzCwC,EAAW5gB,KAAK8e,EAAS1U,OATX,MAAA6O,GAAA6H,GAAA,EAAAC,EAAA9H,EAAA,aAAA4H,GAAAI,EAAAlC,QAAAkC,EAAAlC,SAAA,WAAA+B,EAAA,MAAAC,IAcpB,OAAOH,KAh0BLjI,IAAA,mBAAAlH,MAAA,WA00BoC,IAAvBgP,EAAuBC,UAAAzgB,OAAA,QAAA3D,IAAAokB,UAAA,IAAAA,UAAA,GAEhCE,KAEN,GAAI1hB,KAAKic,UAAW,KAAAiG,GAAA,EAAAC,GAAA,EAAAC,OAAAhlB,EAAA,IAClB,QAAAilB,EAAAC,EAAuBtiB,KAAKic,UAA5BuD,OAAAC,cAAAyC,GAAAG,EAAAC,EAAA5C,QAAAC,MAAAuC,GAAA,EAAuC,KAA5BtC,EAA4ByC,EAAA9P,MAChCgP,IAAiB3B,EAASV,WAC7BwC,EAAW5gB,KAAK8e,EAAS1U,OAHX,MAAA6O,GAAAoI,GAAA,EAAAC,EAAArI,EAAA,aAAAmI,GAAAI,EAAAzC,QAAAyC,EAAAzC,SAAA,WAAAsC,EAAA,MAAAC,IAQpB,OAAOV,KAt1BLjI,IAAA,2BAAAlH,MAAA,WAg2BF/E,EAAA1D,QAAY2D,OAAOzN,KAAKub,WACxB,IAAMmG,EAAa1hB,KAAKuiB,mBAExB,OADA/U,EAAA1D,QAAY2D,OAA6B,IAAtBiU,EAAW3gB,QACvB2gB,EAAW,MAn2BhBjI,IAAA,oCAAAlH,MAAA,WA62BF,IAAIqJ,EAAetS,EAAQuS,uBAE3B,GAAI7b,KAAKihB,WAAY,KAAAuB,GAAA,EAAAC,GAAA,EAAAC,OAAAtlB,EAAA,IACnB,QAAAulB,EAAAC,EAAwB5iB,KAAKihB,WAA7BzB,OAAAC,cAAA+C,GAAAG,EAAAC,EAAAlD,QAAAC,MAAA6C,GAAA,EAAyC,KAA9BK,EAA8BF,EAAApQ,MACvC,GAAIsQ,EAAUvV,OAASwV,EAAAhZ,QAAwBiZ,SAAU,CACvDnH,EAAeiH,EAAU3X,KACzB,QAJe,MAAA6O,GAAA0I,GAAA,EAAAC,EAAA3I,EAAA,aAAAyI,GAAAI,EAAA/C,QAAA+C,EAAA/C,SAAA,WAAA4C,EAAA,MAAAC,IASrB1iB,KAAK2b,cAAgBC,KAx3BnBnC,IAAA,8BAAAlH,MAAA,SAo4BwByD,GAC1B,IAAIgN,GAAQ,EAENC,EAAWjjB,KAAKkjB,iBAChBC,EAAYnN,EAAWkN,iBAE7B,IAAK,IAAMzJ,KAAOwJ,EAChB,GAAIA,EAASxJ,KAAS0J,EAAU1J,GAAM,CACpCuJ,GAAQ,EACR,MAIJ,GAAIA,EACF,IAAK,IAAMvJ,KAAO0J,EAChB,GAAIA,EAAU1J,KAASwJ,EAASxJ,GAAM,CACpCuJ,GAAQ,EACR,MAKN,OAAOA,KA15BLvJ,IAAA,mBAAApP,IAAA,WA8SF,OAAOrK,KAAK8a,mBA9SVpO,IAAA,SAqTiBqO,GACnB/a,KAAK8a,kBAAoBC,KAtTvBtB,IAAA,kBAAApP,IAAA,WA8TF,OAAOrK,KAAKgb,kBA9TVtO,IAAA,SAqUgBuO,GAClBjb,KAAKgb,iBAAmBC,KAtUtBxB,IAAA,cAAApP,IAAA,WA8UF,OAAOrK,KAAKob,cA9UV1O,IAAA,SAqVY2O,GACdrb,KAAKob,aAAeC,KAtVlB5B,IAAA,iBAAApP,IAAA,WA8VF,OAAOrK,KAAKmd,iBA9VVzQ,IAAA,SAqWe0W,GACjBpjB,KAAKmd,gBAAkBiG,KAtWrB3J,IAAA,iBAAApP,IAAA,WA8WF,IAAIgZ,EAAQ,KACNC,EAAQtjB,KAAKod,eACbmG,EAAQvjB,KAAKwd,eAOnB,YANcpgB,IAAVkmB,IACFD,GACE3f,IAAK6f,EACLC,MAAOF,IAGJD,GAvXL3W,IAAA,SA8Xe2W,GACbA,GACFrjB,KAAKwd,eAAiB6F,EAAM3f,IAC5B1D,KAAKod,eAAiBiG,EAAMG,QAE5BxjB,KAAKwd,oBAAiBpgB,EACtB4C,KAAKod,oBAAiBhgB,MApYtBqc,IAAA,iBAAApP,IAAA,WA6YF,OAAOrK,KAAKud,iBA7YV7Q,IAAA,SAoZe0W,GACjBpjB,KAAKud,gBAAkB6F,KArZrB3J,IAAA,WAAApP,IAAA,WAgbF,OAAOrK,KAAKwb,aAhbV/B,IAAA,YAAApP,IAAA,WAwbF,OAAOrK,KAAKsb,YAxbV5O,IAAA,SA+bU6O,GACZvb,KAAKsb,WAAaC,KAhchB9B,IAAA,eAAApP,IAAA,WAwcF,OAAOrK,KAAK2b,iBAxcVlC,IAAA,eAAApP,IAAA,WAgdF,OAAOrK,KAAK8b,iBAhdVrC,IAAA,YAAApP,IAAA,WAwdF,OAAOrK,KAAKgc,cAxdVvC,IAAA,gBAAApP,IAAA,WAgeF,OAAOrK,KAAKkc,kBAheVzC,IAAA,UAAApP,IAAA,WAweF,OAAOrK,KAAKsc,YAxeV7C,IAAA,YAAApP,IAAA,WAgfF,OAAOrK,KAAKyc,cAhfVhD,IAAA,kBAAApP,IAAA,WAwfF,OAAOrK,KAAK2c,oBAxfVlD,IAAA,oBAAApP,IAAA,WAggBF,OAAOrK,KAAK6c,sBAhgBVpD,IAAA,oBAAApP,IAAA,WAwgBF,OAAOrK,KAAK+c,sBAxgBVtD,IAAA,oBAAApP,IAAA,WAghBF,OAAOrK,KAAKid,sBAhhBVxD,IAAA,eAAApP,IAAA,WAwhBF,OAAOrK,KAAKqd,iBAxhBV5D,IAAA,eAAApP,IAAA,WAgiBF,OAAOrK,KAAKyd,iBAhiBVhE,IAAA,mBAAApP,IAAA,WAwiBF,OAAOrK,KAAK4d,qBAxiBVnE,IAAA,kBAAApP,IAAA,WAgjBF,OAAOrK,KAAKge,oBAhjBVvE,IAAA,SAAApP,IAAA,WAwjBF,OAAOrK,KAAKoe,WAxjBV3E,IAAA,gBAAApP,IAAA,WAgkBF,OAAOrK,KAAKse,kBAhkBV7E,IAAA,kBAAApP,IAAA,WAwkBF,OAAOrK,KAAK0e,oBAxkBVjF,IAAA,SAAApP,IAAA,WAilBF,OAAOrK,KAAK4e,WAjlBVnF,IAAA,YAAApP,IAAA,WAylBF,OAAOrK,KAAK8e,cAzlBVrF,IAAA,UAAApP,IAAA,WAkmBF,OAAOrK,KAAKgf,YAlmBVvF,IAAA,mBAAApP,IAAA,WA8mBF,IAAMoZ,KACA7W,EAAa5M,KAAK0b,gBAClBgI,EAAS1jB,KAAK+a,qBAEpB,IAAK,IAAMtB,KAAOiK,EACI,OAAhBA,EAAOjK,QACerc,IAApBwP,EAAW6M,IAA0C,OAApB7M,EAAW6M,KAC9CgK,EAAOhK,GAAO7M,EAAW6M,IAG3BgK,EAAOhK,GAAOiK,EAAOjK,GAIzB,OAAOgK,KA5nBLhK,IAAA,mBAAApP,IAAA,WA4oBF,OAA6B,OAAtBrK,KAAKob,cACc,OAAxBpb,KAAK2jB,kBA7oBLlK,IAAA,mBAAApP,IAAA,WA6pBF,OAA6B,OAAtBrK,KAAKob,cACc,OAAxBpb,KAAK2jB,kBA9pBLlK,IAAA,YAAApP,IAAA,WAwqBF,IAAI6U,GAAY,EAEhB,IAD2Blf,KAAK0gB,aAAe1gB,KAAK+f,cAC1B/f,KAAKic,UAAW,KAAA2H,GAAA,EAAAC,GAAA,EAAAC,OAAA1mB,EAAA,IACxC,QAAA2mB,EAAAC,EAAuBhkB,KAAKic,UAA5BuD,OAAAC,cAAAmE,GAAAG,EAAAC,EAAAtE,QAAAC,MAAAiE,GAAA,EAAuC,CACrC,IAA2B,IADUG,EAAAxR,MACxB2M,UAAoB,CAC/BA,GAAY,EACZ,QAJoC,MAAAnF,GAAA8J,GAAA,EAAAC,EAAA/J,EAAA,aAAA6J,GAAAI,EAAAnE,QAAAmE,EAAAnE,SAAA,WAAAgE,EAAA,MAAAC,IAQ1C,OAAO5E,KAlrBLzF,IAAA,cAAApP,IAAA,WA4rBF,YAAuBjN,IAAhB4C,KAAKqe,UA5rBV5E,IAAA,qBAAApP,IAAA,WA4sBF,OAA2B,OAApBrK,KAAKihB,YACVjhB,KAAK+f,aACc,OAAnB/f,KAAKic,WACqB,IAA1Bjc,KAAKic,UAAUlb,SACiB,IAAhCf,KAAKic,UAAU,GAAGiD,aAhtBlBzF,IAAA,cAAApP,IAAA,WA2tBF,YAAuBjN,IAAhB4C,KAAK6e,UA3tBVpF,IAAA,eAAApP,IAAA,WAouBF,YAAwBjN,IAAjB4C,KAAKif,WApuBVxF,IAAA,YAAApP,IAAA,WA4uBF,OAAOrK,KAAKwgB,cA5uBV/G,IAAA,YAAApP,IAAA,WAovBF,OAAOrK,KAAK4gB,eApvBVtX,KAq6BNA,EAAQ2a,sBAAwB,SAASvW,GASvC,MANI,UAAUwW,KAAKxW,GACVpE,EAAQkT,KAAKtK,KAEb5I,EAAQkT,KAAKrK,KAYxB7I,EAAQuS,uBAAyB,WAOjCvS,EAAQ8S,YACN+H,UAAW,YACX9H,UAAW,YACX+H,WAAY,cAQd9a,EAAQkT,MACNrK,IAAK,MACLD,KAAM,QAQR5I,EAAQqU,cACN0G,UAAa,iCACbC,UAAa,yCACbC,WAAc,2BAQhBjb,EAAQwU,kBACNC,QAAS,WAQXzU,EAAQ4U,iBACNgC,KAAM,OACN/B,KAAM,QAQR7U,EAAQkV,eACNC,IAAK,qCAIQnV,6FC3/Bbkb,QAAS,UAITC,KAAM,OAINC,SAAU,WAIVC,KAAM,OAIN5B,SAAU,WAIV6B,OAAQ,SAIRC,OAAQ,SAIRC,KAAM,oKCvCRC,EAAAtoB,EAAA,GAsCA,MAAAuoB,EAAA,SAAA9N,GACA,MAAAuD,EACAvD,MAMAlX,KAAAsgB,YAAA7F,EAAA6F,YAMAtgB,KAAAqgB,UAAA5F,EAAA4F,UAMArgB,KAAAilB,QAAAxK,EAAAwK,QAMAjlB,KAAAklB,eAAA,GAKAllB,KAAAmlB,8BACAnlB,KAAAmlB,2BAAAH,EAAAI,QACAC,cAAAN,EAAA,QAAAO,aACAN,EAAAzkB,UAAAglB,sBACAC,eAAAT,EAAA,QAAAO,aACAN,EAAAzkB,UAAAglB,uBAGAE,EAAA,EAAA1lB,KAAAC,OAGAK,OAAAC,EAAA,SAAAD,CAAA2kB,EAAAS,EAAA,GAOAT,EAAAI,MAAA,6BAeAJ,EAAAU,oBAAA,cAQAV,EAAAzkB,UAAAglB,qBAAA,SAAA3oB,EAAA+oB,GACA,MAAAC,EAAAhpB,EAAAgpB,UACA,IAAApO,EAAA,KACA,wBAAAoO,EAEApO,EADA,+BAAA5a,EAAAipB,aACAd,EAAA,QAAAe,mBACA9lB,KAAAmlB,2BAAAvoB,EACA+oB,EAAA3lB,MAEA+kB,EAAA,QAAAe,gBAAA,KACA9lB,KAAAmlB,2BAAAvoB,EACA+oB,EAAA3lB,WAEG,qBAAA4lB,GAAA,iBAAAA,EAAA,CACH,MAAAG,EAAAJ,EAAA,GACA,IAEApiB,EAAAC,EAFA8c,EAAAyF,EAAA,YACA1F,EAAA0F,EAAA,UAEA,MAAAC,EAAA,IACAC,EAAA,KACA,IAAA3F,GAAA1jB,EAAA0O,WAAA,CAEA,IADAgV,KAAAD,KACA9c,EAAA,EAAAC,EAAA5G,EAAA0O,WAAAvK,OAA8CwC,EAAAC,IAAQD,EAAA,CACtD,MAAA2J,EAAAtQ,EAAA0O,WAAA/H,GACA,OAAA2J,EAAA4K,SAAA,CACA,MAAAoO,EAAAhZ,EAAAiZ,SAAAC,MAAA,KAAAC,MACA,QAAA/F,EAAA7M,QAAAyS,GAAA,CACA,IAAAzM,EAAA,GACA6M,EAAA,EACA,MAAAC,EAAArZ,EAAA2Y,aACA,UAAAW,KAAAnG,EAAA,CACA,GAAAA,EAAAmG,KAAAD,EAAA,CACA9M,EAAA+M,EACA,QAEAF,EAEA7M,IAEA4G,EADA5G,EAAAuM,EAAAM,GACAC,GAEAjG,EAAAxf,KAAA2Y,EAAA,IAAAyM,KAIA,iBAAAN,IAEAG,EAAA,YAAAzF,EACAyF,EAAA,UAAA1F,GAGA,oBAAAA,EAAA,CACA,MAAAoG,EAAApG,GACAA,MACA4F,GAAAQ,EAEA,MAAAC,KACAC,EAAA/f,MAAAggB,QAAAtG,SACA,UAAAuG,KAAAxG,EAAA,CACA,MAAAyG,KACA,IAAAvjB,EAAA,EAAAC,EAAAmjB,EAAA5lB,OAA2CwC,EAAAC,IAAQD,EAAA,GACnD,IAAAojB,EAAApjB,GAAAkQ,QAAA,KACAwS,EAAAU,EAAApjB,GAAA6iB,MAAA,WACAS,IACAC,EAAAH,EAAApjB,GAAA6iB,MAAA,KAAAC,OACA,kBAAAT,EACAb,EAAA,QAAAgC,gBAAA/mB,KAAAgnB,mBAAAhnB,MACA+kB,EAAA,QAAAO,aAAAtlB,KAAAgnB,mBAAAhnB,OAGA0mB,EAAArG,EAAAwG,IAAAC,EAGAtP,EADA,iBAAAoO,EACAb,EAAA,QAAAe,qBAAA1oB,EAAAspB,EAAA9pB,EAAA+oB,GAEAZ,EAAA,QAAAe,mBAAAY,EAAA9pB,EAAA+oB,GAMA,OAHA,OAAAnO,IACAA,MAEAA,GASAwN,EAAAzkB,UAAA0mB,oBAAA,SAAArqB,EAAA+oB,GACA,MAAAI,EAAoCJ,EAAA,GACpCI,EAAA,QAAAnpB,EAAAsqB,kBAAAC,aAAA,WACApB,EAAA,aAAAnpB,EAAAsqB,kBAAAC,aAAA,gBAEA,MAAApO,EAAAgM,EAAA,QAAAe,gBAAA,KACA9lB,KAAAonB,kBAAAxqB,EAAA+oB,EAAA3lB,MACA,OAAA+Y,EAEkC1Y,OAAAgnB,EAAA,qBADlC,CACkCtO,GAAA,EAAAgN,QAGlC,GAUAf,EAAAzkB,UAAAymB,mBAAA,SAAApqB,EAAA+oB,GACA,IAAAlgB,EACA,MAAA6hB,EAAA1qB,EAAAuqB,aAAA,QACApC,EAAA,QAAAwC,eAAA3qB,EAAAooB,EAAAI,MAAA,MACA3V,KACA,IAAAmM,EACA,IAAAnW,EAAA7I,EAAAsqB,kBAAkCzhB,EAAGA,IAAA+hB,mBAAA,CACrC,MAAA5B,EAAAngB,EAAAmgB,UAIA,OAAAngB,EAAA6F,WAAAvK,QACA,IAAA0E,EAAA6F,WAAAvK,SACA,IAAA0E,EAAAmS,WAAAE,UAAA,IAAArS,EAAAmS,WAAAE,UAAA,CACA,IAAAvF,EAAAwS,EAAA,QAAAhoB,kBAAA0I,GAAA,GACAuf,EAAAU,oBAAAxB,KAAA3R,KACAA,OAAAnV,GAEAqS,EAAAmW,GAAArT,MAGA,cAAAqT,IACAhK,EAAAgK,GAEAnW,EAAAmW,GAAA5lB,KAAAinB,oBAAAxhB,EAAAkgB,GAGA,MAAAlN,EAAA,IAAAgP,EAAA,QAAAhY,GAOA,OANAmM,GACAnD,EAAAiP,gBAAA9L,GAEA0L,GACA7O,EAAAkP,MAAAL,GAEA7O,GASAuM,EAAAzkB,UAAAqnB,UAAA,SAAAhrB,EAAA+oB,GACA,MAAAjlB,EACAV,KAAA6nB,6BAAAjrB,EAAA+oB,GACA,GAAAjlB,EAAA,CACA,MAAAyE,EAAA,IAAA2iB,EAAA,cAEA,OADA3iB,EAAAhE,mBAAA4mB,EAAA,QAAAC,IAAAtnB,GACAyE,IAUA6f,EAAAzkB,UAAA0nB,eAAA,SAAArrB,EAAA+oB,GAEA,MAAA/lB,EAAAmlB,EAAA,QAAAe,mBACA9lB,KAAAkoB,oBAAAtrB,EAAA+oB,EAAA3lB,MACA,OAAAJ,EACA,IAAAuoB,EAAA,QAAAvoB,QAEA,GAUAolB,EAAAzkB,UAAA6nB,oBAAA,SAAAxrB,EAAA+oB,GAEA,MAAAriB,EAAAyhB,EAAA,QAAAe,mBACA9lB,KAAAqoB,yBAAAzrB,EAAA+oB,EAAA3lB,MACA,GAAAsD,EAAA,CACA,MAAApC,EAAA,IAAAonB,EAAA,cAEA,OADApnB,EAAA4D,eAAAxB,GACApC,IAYA8jB,EAAAzkB,UAAAgoB,iBAAA,SAAA3rB,EAAA+oB,GAEA,MAAA9c,EAAAkc,EAAA,QAAAe,mBACA9lB,KAAAwoB,sBAAA5rB,EAAA+oB,EAAA3lB,MACA,GAAA6I,EAAA,CACA,MAAApC,EAAA,IAAAgiB,EAAA,cAEA,OADAhiB,EAAA0C,YAAAN,GACApC,IAYAue,EAAAzkB,UAAAmoB,mBAAA,SAAA9rB,EAAA+oB,GACAZ,EAAA,QAAA4D,UAAA3oB,KAAA4oB,qBACAhsB,EAAA+oB,EAAA3lB,OASAglB,EAAAzkB,UAAAsoB,wBAAA,SAAAjsB,EAAA+oB,GACAZ,EAAA,QAAA4D,UAAA3oB,KAAA8oB,0BACAlsB,EAAA+oB,EAAA3lB,OASAglB,EAAAzkB,UAAAwoB,qBAAA,SAAAnsB,EAAA+oB,GACAZ,EAAA,QAAA4D,UAAA3oB,KAAAgpB,uBAAApsB,EACA+oB,EAAA3lB,OASAglB,EAAAzkB,UAAA0oB,eAAA,SAAArsB,EAAA+oB,GACA,MAAAjlB,EACAV,KAAA6nB,6BAAAjrB,EAAA+oB,GACA,GAAAjlB,EAAA,CACA,MAAAD,EAAA,IAAAyoB,EAAA,cAEA,OADAzoB,EAAAU,mBAAA4mB,EAAA,QAAAC,IAAAtnB,GACAD,IAaAukB,EAAAzkB,UAAA4oB,oBAAA,SAAAvsB,EAAA+oB,GACA,MAAAyD,EAAArE,EAAA,QAAAe,gBAAA,KACA9lB,KAAAqpB,mCAAAzsB,EACA+oB,EAAA3lB,MACA,OAAAopB,QAGA,GAUApE,EAAAzkB,UAAA+oB,eAAA,SAAA1sB,EAAA+oB,GACA,MAAAjlB,EACAV,KAAA6nB,6BAAAjrB,EAAA+oB,GACA,GAAAjlB,EAAA,CACA,MAAA0oB,EAAA,IAAAG,EAAA,QAEA,OADAH,EAAAjoB,mBAAA4mB,EAAA,QAAAC,IAAAtnB,GACA0oB,IAYApE,EAAAzkB,UAAAipB,YAAA,SAAA5sB,EAAA+oB,GAEA,MAAA8D,EAAA1E,EAAA,QAAAe,iBAAA,MACA9lB,KAAA0pB,2BAAA9sB,EAAA+oB,EAAA3lB,MACA,GAAAypB,KAAA,IACA,MAAAjjB,EAAA,IAAAmjB,EAAA,cACAjpB,EAAA+oB,EAAA,GACApmB,GAAA3C,EAAAK,QACA,IAAAwC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAimB,EAAA1oB,OAA4CwC,EAAAC,IAAQD,EACpDlD,OAAAM,EAAA,OAAAN,CAAAK,EAAA+oB,EAAAlmB,IACAF,EAAAvC,KAAAJ,EAAAK,QAIA,OAFAyF,EAAArF,mBACA4mB,EAAA,QAAAC,IAAAtnB,EAAA2C,GACAmD,IAaAwe,EAAAzkB,UAAAsnB,6BAAA,SAAAjrB,EAAA+oB,GACA,OAAAZ,EAAA,QAAAe,gBAAA,KACA9lB,KAAAqpB,mCAAAzsB,EACA+oB,EAAA3lB,OASAglB,EAAAzkB,UAAA2nB,qBACA0B,8BACAC,YAAA9E,EAAA,QAAAgC,gBACA/B,EAAAzkB,UAAAmoB,oBACAoB,aAAA/E,EAAA,QAAAgC,gBACA/B,EAAAzkB,UAAAmoB,sBAUA1D,EAAAzkB,UAAA8nB,0BACAuB,8BACAG,iBAAAhF,EAAA,QAAAgC,gBACA/B,EAAAzkB,UAAAsoB,yBACAmB,kBAAAjF,EAAA,QAAAgC,gBACA/B,EAAAzkB,UAAAsoB,2BAUA7D,EAAAzkB,UAAAioB,uBACAoB,8BACAK,cAAAlF,EAAA,QAAAgC,gBACA/B,EAAAzkB,UAAAwoB,sBACAmB,eAAAnF,EAAA,QAAAgC,gBACA/B,EAAAzkB,UAAAwoB,wBAUA/D,EAAAzkB,UAAAqoB,sBACAgB,8BACAO,MAAApF,EAAA,QAAAgC,gBACA/B,EAAAzkB,UAAAsnB,gCAUA7C,EAAAzkB,UAAAuoB,2BACAc,8BACAQ,WAAArF,EAAA,QAAAgC,gBACA/B,EAAAzkB,UAAA0oB,kBAUAjE,EAAAzkB,UAAAyoB,wBACAY,8BACAS,QAAAtF,EAAA,QAAAgC,gBACA/B,EAAAzkB,UAAAipB,eAUAxE,EAAAzkB,UAAA+pB,cACAV,8BACAW,WAAAxF,EAAA,QAAAO,aACAN,EAAAzkB,UAAA4oB,uBAQAnE,EAAAzkB,UAAA4X,qBAAA,SAAAvb,EAAAsa,GACA,MAAA6B,EAAA/Y,KAAAinB,oBAAArqB,GACAoD,KAAAwqB,eAAA5tB,EAAAsa,SACA,OAAA6B,GAAA,MAaAiM,EAAAzkB,UAAAmX,aAMAsN,EAAAzkB,UAAAoX,qBAAA,SAAA/a,EAAAsa,GACA,MAAAuD,GACA6F,YAAAtgB,KAAAsgB,YACAD,UAAArgB,KAAAqgB,WAMA,OAJAnJ,GACA7W,OAAAoqB,EAAA,OAAApqB,CAAAoa,EAAAza,KAAAwqB,eAAA5tB,EAAAsa,IAEAlX,KAAAulB,qBAAA3oB,GAAA6d,SAQAuK,EAAAzkB,UAAA+X,uBAAA,SAAA1b,GACA,OAAAyD,OAAAqqB,EAAA,IAAArqB,CAAAL,KAAAilB,QAAAjlB,KAAAilB,QACAroB,EAAAsqB,kBAAAC,aAAA,aAEA1nB,EAAA,mFCrlBA,QAAAhD,EAAA,IAEY4M,KADZ5M,EAAA,MACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,KACYkuB,IAAZluB,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,MACYmuB,IAAZnuB,EAAA,iNAYA,IAAM6M,EAAU,SAASG,EAAIF,GAM3BvJ,KAAKiK,IAAMR,EAMXzJ,KAAKkK,OAASX,qDAOhBD,EAAQuhB,UAAY,YAMpBvhB,EAAQwhB,cAAgB,SAkBxBxhB,EAAQ/I,UAAUgO,oBAAsB,SAASwc,EAC/CC,EAAkBC,EAAcC,EAAgBC,EAAUC,EAAYC,GAEtE,IAAMla,GACJma,OAAUL,EACVM,OAAUP,GAERQ,SACAL,IACFha,EAAA,KAAiBga,GAEfD,IACF/Z,EAAA,WAAuB+Z,EAEvBM,EAAeN,EAAeO,QAAQ,aAAc,SAEtD,IAAMxU,EAAS,IAAAyU,EAAA5hB,SACb4D,IAAKqd,EACL5Z,OAAQA,EACRwa,WAAYH,EACZI,YAAaP,IAMf,OAJID,GACFnU,EAAOoD,aAAa+Q,GAGf,IAAAS,EAAA/hB,SAAkBmN,YAY3B3N,EAAQ/I,UAAUurB,kCAAoC,SACpD9V,EAAYqV,GAEZ,IAAM3d,EAAMsI,EAAW6I,OACvBrR,EAAA1D,QAAY2D,OAAOC,GAEnB,IAAMgU,EAAa1L,EAAWuM,mBAAmB9Q,KAAK,KAChDka,EAAa3V,EAAWmG,cACxB7N,EAAY0H,EAAW+F,aAGvBtP,EAAQzM,KAAKuO,oBACjBb,EACAgU,EACApT,EACAqd,OACAvuB,OACAA,EACAiuB,GASF,OALA5e,EAAMsf,WAAW/V,EAAWgW,SAG5Bvf,EAAMC,IAAI,kBAAmBsJ,EAAWiW,KAEjCxf,GAkBTnD,EAAQ/I,UAAUoN,iCAAmC,SAASue,EAAiBC,EAAWC,GACxF,IAAMC,EAAS,IAAAC,EAAAxiB,QACT2C,EAAQ,IAAAkD,EAAA7F,SACZyiB,QAASC,MAEL/iB,EAAKzJ,KAAKiK,IAEhB,OAAOjK,KAAKkK,OAAOG,IAAI6hB,GAAkB5a,OAAO,IAAO1D,KAAK,SAACE,GAC3D,IAAI2e,SAIJ,GAHI3e,EAASc,OACX6d,EAASJ,EAAOK,KAAK5e,EAASc,OAE5B6d,EAAQ,CACV,IAAMhS,EAAUkS,EAAA7iB,QAAa8iB,wBAAwBH,GACnDb,YAAa,YACbnf,MAAO0f,IAET3e,EAAA1D,QAAY2D,OAAOgN,GACnB,IAAMxD,EAAS,IAAA0V,EAAA7iB,QAAwD2Q,GACnE2R,IAAmBzB,EAAMkC,QAAQT,IACnCnV,EAAO6V,iBAAiBV,GAE1B3f,EAAMsgB,UAAU9V,GAGhB,IAAMzI,EAASie,EAAA,eACTpd,EAAIhG,EAAQyC,KAAK0C,EAAQ,SAACwe,EAAK9pB,EAAO6J,GAAb,OAAuBigB,EAAA,YAAqBb,IAG3E,OAFA1f,EAAMC,IAAI,qBAAsB2C,EAAA,OAEzB5F,EAAGyE,QAAQzB,GAEpB,OAAOhD,EAAGqI,OAAH,wCAAkDoa,MAe7D5iB,EAAQ/I,UAAU0sB,oCAAsC,SACtDC,EAAcC,EAAUf,GAGxB,IAAM3R,EAAUkS,EAAA7iB,QAAa8iB,wBAAwBM,GACnDtB,YAAa,YACbnf,MAAO0gB,EAAA,aAGT3f,EAAA1D,QAAY2D,OAAOgN,GACnB,IAAMxD,EAAS,IAAA0V,EAAA7iB,QAC0B2Q,GAMzC,OAJI2R,IAAmBzB,EAAMkC,QAAQT,IACnCnV,EAAO6V,iBAAiBV,GAGnB,IAAAzc,EAAA7F,SACLsjB,mBAAsBD,EAAA,MACtBZ,QAASC,IACTvV,OAAQA,KAaZ3N,EAAQ/I,UAAUgP,iBAAmB,SAAS8d,GAC5C,IAAMhiB,EAAQ,IAAAiiB,EAAAxjB,QAId,OAHIujB,GACFhiB,EAAMkiB,UAAUF,GAEXhiB,GAcT/B,EAAQ/I,UAAUitB,gBAAkB,SAASze,EAAK0e,GAChD,IAAMC,EAAS3e,EAAI4e,gBAAgBjY,YAC/BrK,SAcJ,OAbAqiB,EAAO/X,WAAWtF,KAAK,SAACud,GACtB,OAAIA,EAAcvjB,IAAIf,EAAQuhB,aAAe4C,IAC3CpiB,EAAuCuiB,GAChC,KAKNviB,KACHA,EAAQrL,KAAKuP,oBACP7C,IAAIpD,EAAQuhB,UAAW4C,GAC7B1e,EAAI6G,SAASvK,IAERA,GAWT/B,EAAQ/I,UAAUstB,cAAgB,SAASphB,GACzC,OAAOzM,KAAK8tB,eAAerhB,OAY7BnD,EAAQ/I,UAAUutB,eAAiB,SAASrhB,EAAOM,GAAO,IAAAV,EAAArM,KACpDyM,uBACgBA,EAAMiJ,YACdzI,QAAQ,SAACoC,GACjBhD,EAAKyhB,eAAeze,EAAGtC,KAGrBA,EAAM0G,QAAQhH,GAAS,GACzBM,EAAMjM,KAAK2L,GAGf,OAAOM,GAaTzD,EAAQ/I,UAAUwtB,eAAiB,SAAS5B,EAAW3d,GAAQ,IAAA4B,EAAApQ,KACzDguB,EAAQ,KAWZ,OAVAxf,EAAO6B,KAAK,SAAC5D,GACX,GAAIA,uBAA+B,CACjC,IAAMwhB,EAAYxhB,EAAMiJ,YAAYC,WACpCqY,EAAQ5d,EAAK2d,eAAe5B,EAAW8B,QAC9BxhB,EAAMpC,IAAI,mBAAqB8hB,IACxC6B,EAAQvhB,GAEV,QAASuhB,IAGJA,GAWT1kB,EAAQ/I,UAAU2tB,iBAAmB,SAASzhB,GAE5C,IAAIiB,SACEygB,EAAS1hB,EAAMpC,IAAI,sBACzB,QAAejN,IAAX+wB,EAAsB,CACxB,IAAMC,EAAYD,EAAO,GAAP,eACA/wB,IAAdgxB,IACF1gB,EAAM0gB,EAAU,GAAV,MAGV,OAAO1gB,GAaTpE,EAAQ/I,UAAU8tB,gBAAkB,SAAS3gB,EAC3Cye,EAAWmC,EAAWC,GACtB,GAAK7gB,EAAL,CAGA,IAAM8gB,GACJlD,OAAU,YACVmD,aAAe,EACfC,QAAW,MACXC,QAAW,QACXC,QAAW,mBACXC,MAAS1C,GAQX,YANkB/uB,IAAdkxB,IACFE,EAAA,MAAuBF,QAEFlxB,IAAnBmxB,IACFC,EAAA,KAAsBD,GAEjB3D,EAAMkE,aAAaphB,EAAK8gB,KAUjCllB,EAAQ/I,UAAUwuB,eAAiB,SAAStiB,EAAOsC,GACjD,IAAKtC,EAAMuiB,aACT,OAAO,EAGT,IAAMC,EAAoBlgB,EAAImgB,UAAUC,gBACxC,OAAOF,EAAoBxiB,EAAM2iB,oBAC7BH,EAAoBxiB,EAAM4iB,oBAQhC/lB,EAAQ/I,UAAU+uB,gBAAkB,SAAS7iB,GAC3C,IAAM8iB,EAAU9iB,EAAM+iB,YACtBhiB,EAAA1D,QAAY2D,OACV8hB,wBACAA,wBAEF,IAAMtY,EAA8DsY,EAC9Dpe,EAAS8F,EAAOwY,YACtBte,EAAO7H,EAAQwhB,eAAiBjpB,KAAK6tB,SACrCzY,EAAOoD,aAAalJ,IActB7H,EAAQ/I,UAAUovB,oBAAsB,SAASljB,EAAOmjB,EAAOzE,GAE7D,GAAIyE,EAAM7uB,QAAU,EAClB0L,EAAMsf,YAAW,OACZ,CACLtf,EAAMsf,YAAW,GACjB,IAAM9U,EAA4CxK,EAAM+iB,YACpDrE,EACFlU,EAAOoD,cAAckR,OAAUqE,EAAOjL,KAAQwG,IAE9ClU,EAAOoD,cAAckR,OAAUqE,MAYrCtmB,EAAQ/I,UAAUsvB,kBAAoB,SAASpjB,GAC7C,OACEA,EAAMpC,IAAI,oBAOdf,EAAQ8I,OAASC,QAAQD,OAAO,uBACjBI,QAAQ,kBAAmBlJ,aAG3BA,8FC3cf,QAAA7M,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,KACY4M,IAAZ5M,EAAA,QACAA,EAAA,IACYkuB,IAAZluB,EAAA,gNA2BA,IAAM6M,EAAU,SAASwmB,EAAUtmB,EAAWG,EAAgBD,EAC5DqmB,EAAkBC,EAAWC,GAM7BjwB,KAAKkwB,UAAYJ,EAMjB9vB,KAAKmwB,WAAa3mB,EAMlBxJ,KAAKowB,gBAAkBzmB,EAMvB3J,KAAKwK,aAAed,EAMpB1J,KAAKqwB,kBAAoBN,EAMzB/vB,KAAKswB,WAAaN,EAQlBhwB,KAAKuwB,MACHnlB,aAUFpL,KAAKwwB,SAAW,KAQhBxwB,KAAKywB,oCAAsC,EAM3CzwB,KAAK0wB,gCAML1wB,KAAK2wB,uCAAyC,KAM9C3wB,KAAK4wB,kBAAoBX,EAOzBjwB,KAAK6wB,YAAc,KAEnBxc,EAAAvK,QAASwK,OAAOtU,KAAKswB,WAAY,SAAUtwB,KAAK8wB,oBAAqB9wB,uPAUvEsJ,EAAQ/I,UAAUuwB,oBAAsB,WAAW,IAAAzkB,EAAArM,KACjDA,KAAKswB,WAAWrgB,sBAAsBrC,KAAK,SAACR,GAC1Cf,EAAKwkB,YAAczjB,IAGjBpN,KAAKwwB,UAAYxwB,KAAKwwB,SAASplB,UACjCpL,KAAKswB,WAAWvgB,kBAAkBnC,KAAK,SAAC3C,GACtCoB,EAAK0kB,yBAAyB9lB,MAapC3B,EAAQ/I,UAAUywB,oBAAsB,SAASC,GAG/C,OAFAjxB,KAAKuwB,KAAKnlB,SAASrK,OAAS,EAC5Bf,KAAK4wB,kBAAkBtW,YAAY4W,EAAApnB,QAAQqnB,eAAeC,aACnDpxB,KAAKqxB,oBAAoBJ,IAclC3nB,EAAQ/I,UAAU8wB,oBAAsB,SAASJ,EAC/CK,EAASC,GAAY,IAAAnhB,EAAApQ,KACfwxB,KAWN,OATAP,EAAiBpwB,QAAQoO,UAAUhC,QAAQ,SAAC5B,GACrC+E,EAAKqhB,oBAAoBpmB,IAC5BmmB,EAAc1wB,KAAKuK,KAGnBmmB,EAAczwB,OAAS,IAAMwwB,GAC/BvxB,KAAK0xB,qBAAqBF,GAGI,IAAzBA,EAAczwB,QASvBuI,EAAQ/I,UAAUoxB,uBAAyB,SAASjE,GAClD,IAAMkE,KACNA,EAAgBV,EAAApnB,QAAQqnB,eAAeC,aAAe1D,EAAO3e,IAAI,SAAAnS,GAAA,OAAQA,EAAKsO,OAAMuG,KAAK,KACzFzR,KAAK4wB,kBAAkBxW,YAAYwX,GAC/B5xB,KAAKmwB,WAAW/lB,IAAI,iBACiBpK,KAAKmwB,WAAW9lB,IAAI,gBAAiBwnB,YAAYnE,IAY5FpkB,EAAQ/I,UAAUkxB,oBAAsB,SAASpmB,GAAO,IAAA6F,EAAAlR,KAClD8xB,GAAe,EACbC,EAAU1mB,EAAM4gB,GAWtB,OAVAjsB,KAAKuwB,KAAKnlB,SAASiF,KAAK,SAAC2hB,GACvB,GAAID,IAAYC,EAAU/F,GACxB,OAAO6F,GAAe,GAEvB9xB,MACHA,KAAK0wB,6BAA6BrgB,KAAK,SAAC4hB,GACtC,GAAIF,IAAYE,EAAIhG,GAClB,OAAO6F,GAAe,GAEvB9xB,OACC8xB,IAMJ9xB,KAAK0wB,6BAA6B5vB,KAAKuK,GACvCrL,KAAKywB,oCAAsC,EAGS,OAAhDzwB,KAAK2wB,wCACP3wB,KAAKkwB,UAAUgC,OAAOlyB,KAAK2wB,wCAM7B3wB,KAAK2wB,uCAAyC3wB,KAAKkwB,UAAU,WAE3Dhf,EAAKuf,oCAAsCvf,EAAKwf,6BAA6B3vB,OAE7EmQ,EAAKwf,6BAA6BzjB,QAAQ,SAASglB,GACjDjyB,KAAKuwB,KAAKnlB,SAAS+mB,QAAQF,IAD7B/gB,GAIAA,EAAKygB,uBAAuBzgB,EAAKqf,KAAKnlB,UAKtC8F,EAAKwf,6BAA6B3vB,OAAS,EAC3CmQ,EAAKyf,uCAAyC,QAGzC,IAWTrnB,EAAQ/I,UAAU6xB,eAAiB,SAAS3E,EAAW6D,GAAS,IAAAe,EAAAryB,KAC9DA,KAAKswB,WAAWvgB,kBAAkBnC,KAAK,SAAC3C,GACtC,IAAMI,EAAQinB,EAAAxoB,QAAe2B,gBAAgBR,EAAQwiB,GACjDpiB,GACFgnB,EAAKhB,qBAAqBhmB,GAAQimB,GAAS,MAejDhoB,EAAQ/I,UAAUgyB,oBAAsB,SAASpG,EAAWmF,EAASC,GAAY,IAAAiB,EAAAxyB,KAC/EA,KAAKswB,WAAWvgB,kBAAkBnC,KAAK,SAAC3C,GACtC,IAAMI,EAAQinB,EAAAxoB,QAAekB,yBAAyBC,EAAQkhB,GAC9D,GAAI9gB,EAAO,CACT,IAAMonB,EAAaD,EAAKnB,qBAAqBhmB,GAAQimB,EAASC,GAC9DiB,EAAKtC,UAAU,WACb,IAAMjc,EAAWue,EAAKE,oBAAoBrnB,EAAM4gB,IAChD,GAAKhY,EAAL,CAIA,IAAI0e,SACJ1e,EAASqC,mBAAmB,SAACrC,GAC3B,GAAIA,EAASrX,KAAKsO,OAASihB,EAEzB,OADAwG,EAAmB1e,EACZ2e,EAAA9oB,QAAwBoM,gBAAgBC,OAK/Csc,GACFxe,EAASW,SAAS,OAIhB+d,GACFA,EAAiB/d,SAAS,WAlB1B5G,QAAQ6kB,KAAK,4DAgCvBvpB,EAAQ/I,UAAUuyB,YAAc,SAASznB,GACvC,IAAMD,EAAWpL,KAAKuwB,KAAKnlB,SACvBlI,EAAQ,EAAG8qB,GAAQ,EACvB5iB,EAASiF,KAAK,SAACnD,GACb,GAAIA,EAAMhC,OAASG,EAAMH,KACvB,OAAO8iB,GAAQ,EAEjB9qB,MAEE8qB,IACF5iB,EAASsI,OAAOxQ,EAAO,GACvBlD,KAAK2xB,uBAAuBvmB,KAShC9B,EAAQ/I,UAAUwyB,UAAY,WAC5B,KAAO/yB,KAAKuwB,KAAKnlB,SAASrK,QACxBf,KAAK8yB,YAAY9yB,KAAKuwB,KAAKnlB,SAAS,KAcxC9B,EAAQ/I,UAAUyyB,gBAAkB,SAAS3nB,EAAOukB,GAClD,IAAM3uB,EAA2C0pB,EAAMsI,UAAW5nB,GAElE,OADArL,KAAKkzB,iBAAiBjyB,EAAO2uB,GACtB3uB,GAYTqI,EAAQ/I,UAAU2yB,iBAAmB,SAASt2B,EAAMgzB,GAC7ChzB,EAAKwO,UAGVxO,EAAKwO,SAAS6B,QAAQ,SAASkmB,GACzBA,EAAU/nB,SACZpL,KAAKkzB,iBAAiBC,EAAWvD,GACxBuD,EAAUxmB,WACnBwmB,EAAUxmB,SAASymB,UAAY/pB,EAAQgqB,SAASzD,EAAOuD,EAAUjoB,QAElElL,OAWLsJ,EAAQ/I,UAAUmxB,qBAAuB,SAAShE,GAChD,IAAMkC,KACAjmB,EAAiB3J,KAAKowB,gBAC5B1C,EAAOzgB,QAAQ,SAAC5B,GACdukB,EAAM9uB,KAAKuK,EAAMH,QAEnB,IAAMooB,EAAO1D,EAAM7uB,OAAS,EAC1B4I,EAAe+F,UAAU,4BACzB/F,EAAe+F,UAAU,8BAC3B1P,KAAKqwB,kBAAkBkD,QACrBD,IAAQ1D,EAAMne,KAAK,MAAnB,IAA4B6hB,EAC5BhmB,KAAMkmB,EAAA1pB,QAAmB0S,KAAKiX,eAWlCnqB,EAAQ/I,UAAUmyB,oBAAsB,SAASzG,GAC/C,IAAIyH,EAAwB,KAS5B,OARI1zB,KAAKwwB,UAAYxwB,KAAKwwB,SAASla,oBACjCtW,KAAKwwB,SAASla,mBAAmB,SAACrC,GAChC,GAAIA,EAASrX,KAAKqvB,KAAOA,EAEvB,OADAyH,EAAwBzf,EACjB2e,EAAA9oB,QAAwBoM,gBAAgBC,OAI9Cud,GAUTpqB,EAAQ/I,UAAUozB,aAAe,SAAS1f,GACxC,GAAIA,EAASX,OAAO1W,KAAKg3B,MAAO,CAC9B,IAAMzlB,EAAoD8F,EAASrX,KAEnE,OADA4Q,EAAA1D,QAAY2D,OAAOU,EAAYC,WACxBpO,KAAK6wB,YAAY1iB,EAAYC,WAGpC,IADA,IAAIylB,EAAsB5f,GAClB4f,EAAoBvgB,OAAOV,QACjCihB,EAAsBA,EAAoBvgB,OAE5C,IAAMwgB,EAA8CD,EAAoBj3B,KAExE,OADA4Q,EAAA1D,QAAY2D,OAAOqmB,EAAS1lB,WACrBpO,KAAK6wB,YAAYiD,EAAS1lB,YAcrC9E,EAAQ/I,UAAUwwB,yBAA2B,SAAS9lB,GAAQ,IAAA8oB,EAAA/zB,KACtDg0B,KAGNh0B,KAAKwwB,SAASplB,SAAS2D,IAAI,SAACkF,GAC1B,IAAM/I,EAAO+I,EAASrX,KAAKsO,KAC3B8oB,EAA0B9oB,GAAQ6oB,EAAKE,6BAA6BhgB,KAItE,IAAMigB,KAENl0B,KAAKuwB,KAAKnlB,SAAS2D,IAAI,SAACnS,GACtB,IAAMsO,EAAOtO,EAAKsO,KAGZipB,EAAgB7B,EAAAxoB,QAAe2B,gBAAgBR,EAAQC,GAC7D,GAAIipB,EAAe,CAEjB,IAAMC,EAAYJ,EAA0B9oB,GACxCkpB,GACFL,EAAKM,8BAA8BF,EAAeC,GAEpDF,EAAepzB,KAAKqzB,MAKxBn0B,KAAKgxB,oBAAoBkD,GAGzBl0B,KAAKkwB,UAAU,WACb6D,EAAKpC,uBAAuBoC,EAAKxD,KAAKnlB,aAa1C9B,EAAQ/I,UAAU0zB,6BAA+B,SAAShgB,GAAU,IAAAqgB,EAAAt0B,KAC5DoL,KAEN6I,EAAS7I,SAAS2D,IAAI,SAAC7B,GACrB9B,EAAS8B,EAAMtQ,KAAKsO,MAAQopB,EAAKL,6BAA6B/mB,KAGhE,IAAIkmB,SAAWmB,SAAYC,SAC3B,GAAIvgB,EAAS7I,SAASrK,OAAS,EAAG,CAChC,IAAM0zB,EAAcC,gCAAgCzgB,EAASN,KAEzD8gB,IACFF,EAAaE,EAAYE,SAAS,WAE/B,CAIHvB,EADgB,QADlBA,EAAYnf,EAASU,aAGI,QAAdye,QAGGh2B,EAEd,IAAMw3B,EAAgBF,yBAAyBzgB,EAASN,IAAlC,WAClBihB,IACFJ,EAAmBI,EAAcC,GAAG,aAIxC,OACEzpB,WACAgoB,YACAmB,aACAC,qBAcJlrB,EAAQ/I,UAAU8zB,8BAAgC,SAASz3B,EAAMw3B,GAAW,IAAAU,EAAA90B,KAC1E,IAAKo0B,EACH,OAAOx3B,EAILA,EAAKwO,UACPxO,EAAKwO,SAAS2D,IAAI,SAAC7B,GACjB4nB,EAAKT,8BAA8BnnB,EAAOknB,EAAUhpB,SAAS8B,EAAMhC,SAKvE,IAAMyB,EAAW/P,EAAK+P,SAKtB,OAJAA,EAASymB,UAAYgB,EAAUhB,UAC/BzmB,EAAS4nB,WAAaH,EAAUG,WAChC5nB,EAAS6nB,iBAAmBJ,EAAUI,iBAE/B53B,IAOT0M,EAAQ8I,OAASC,QAAQD,OAAO,kBAC9BkgB,EAAAxoB,QAAesI,OAAOlH,KACtB0nB,EAAA9oB,QAAwBsI,OAAOlH,KAC/B6pB,EAAAjrB,QAAwBsI,OAAOlH,KAC/B8pB,EAAAlrB,QAAwBsI,OAAOlH,QAElBsH,QAAQ,iBAAkBlJ,aAG1BA,kGCxlBf,IAAAxM,EAAAL,EAAA,GAaA,MAAAsa,EAAA,aAQAA,EAAAxW,UAAAmsB,KAAA,SAAAzV,GACA,GAAAna,EAAA,QAAAqa,WAAAF,GACA,OAAAjX,KAAAi1B,iBAAqD,GAClD,GAAAn4B,EAAA,QAAAua,OAAAJ,GACH,OAAAjX,KAAAk1B,aAA6C,GAC1C,oBAAAje,EAAA,CACH,MAAAM,EAAAza,EAAA,QAAAU,MAAAyZ,GACA,OAAAjX,KAAAi1B,iBAAA1d,GAEA,aAUAR,EAAAxW,UAAA00B,iBAAA,SAAA1d,KAQAR,EAAAxW,UAAA20B,aAAA,SAAAt4B,KACA6C,EAAA,yJCjDA01B,EAAA14B,EAAA,GAuBA,MAAAyjB,EAAA,SAAAhJ,GACA,MAAAuD,EACAvD,MAEAke,EAAA,EAAAr1B,KAAAC,KAAAya,GAEAza,KAAAmlB,2BAAAiQ,EAAA,EAAAhQ,OACA,cACA+P,EAAA,QAAApO,gBAAAqO,EAAA,EAAA70B,UAAAglB,sBAKAvlB,KAAAklB,eAAAzK,EAAAyK,eACAzK,EAAAyK,eAAAhF,EAAAmV,iBAIAh1B,OAAAC,EAAA,SAAAD,CAAA6f,EAAAkV,EAAA,GAQAlV,EAAAmV,gBAAAD,EAAA,EAAAhQ,MACA,oDASAlF,EAAA3f,UAAA+0B,qBAAA,SAAA14B,EAAA+oB,GACA,MAAA9oB,EAAAs4B,EAAA,QAAAp4B,kBAAAH,GAAA,GAAA6uB,QAAA,iBAEA8J,EADiD5P,EAAA,GACjD,QACA,IAAA6P,EAAA,MACA,GAAAD,EAAA,CACA,MAAAE,EAAAp1B,OAAAq1B,EAAA,IAAAr1B,CAAAk1B,GACAE,IACAD,EAAAC,EAAAE,sBAGA,MAAAC,EAAA/4B,EAAAoB,OAAAmoB,MAAA,OACA,IAAA9kB,EAAAC,EAAAs0B,EACA,MAAAn1B,KACA,QAAA6C,EAAA,EAAAC,EAAAoyB,EAAA70B,OAA2CwC,EAAAC,EAAQD,IAAA,CACnD,MAAAuyB,EAAAF,EAAAryB,GAAA6iB,MAAA,MACA9kB,EAAA1D,WAAAk4B,EAAA,IACAv0B,EAAA3D,WAAAk4B,EAAA,IACAD,EAAA,IAAAC,EAAA/0B,OAAAnD,WAAAk4B,EAAA,MACA,OAAAN,EAAAO,OAAA,KACAr1B,EAAAI,KAAAQ,EAAAC,EAAAs0B,GAEAn1B,EAAAI,KAAAS,EAAAD,EAAAu0B,GAGA,OAAAn1B,GAUAwf,EAAA3f,UAAAy1B,SAAA,SAAAp5B,EAAA+oB,GAEA,MAAAjlB,EAAAy0B,EAAA,QAAArP,iBAAA,MACA9lB,KAAAi2B,aAAAr5B,EAAA+oB,EAAA3lB,MACA,OAAAK,OAAA61B,EAAA,eAAA71B,CAAAK,EAAA,MACAA,EAAA,MAAAA,EAAA,MACAA,EAAA,QASAwf,EAAA3f,UAAA41B,uBAAA,SAAAv5B,EAAA+oB,GAEA,MAAAyQ,EAAAjB,EAAA,QAAArP,qBAAA1oB,EACA4C,KAAAsqB,aAAA1tB,EAAA+oB,EAAA3lB,MACA,GAAAo2B,EAAA,CAEAzQ,IAAA5kB,OAAA,GACAD,KAAAs1B,KAUAlW,EAAA3f,UAAA81B,uBAAA,SAAAz5B,EAAA+oB,GAEA,MAAAyQ,EAAAjB,EAAA,QAAArP,qBAAA1oB,EACA4C,KAAAsqB,aAAA1tB,EAAA+oB,EAAA3lB,MACA,GAAAo2B,EAAA,CAEAzQ,IAAA5kB,OAAA,GACA,GAAAq1B,IAUAlW,EAAA3f,UAAA8oB,oCACAO,8BACAhqB,YAAAu1B,EAAA,QAAA7P,aACApF,EAAA3f,UAAA+0B,wBAUApV,EAAA3f,UAAAmpB,4BACAE,8BACA0M,gBAAApW,EAAA3f,UAAA41B,uBACAI,gBAAArW,EAAA3f,UAAA81B,yBAUAnW,EAAA3f,UAAA01B,cACArM,8BACAhqB,YAAAu1B,EAAA,QAAApO,gBACA7G,EAAA3f,UAAA+0B,wBAUApV,EAAA3f,UAAA6mB,mBACAwC,8BACAO,MAAAgL,EAAA,QAAA7P,aAAA8P,EAAA,EAAA70B,UAAAqnB,WACA3iB,WAAAkwB,EAAA,QAAA7P,aACA8P,EAAA,EAAA70B,UAAA0nB,gBACAmC,WAAA+K,EAAA,QAAA7P,aACA8P,EAAA,EAAA70B,UAAA0oB,gBACAtpB,gBAAAw1B,EAAA,QAAA7P,aACA8P,EAAA,EAAA70B,UAAA6nB,qBACAmC,WAAA4K,EAAA,QAAA7P,aACA8P,EAAA,EAAA70B,UAAA+oB,gBACAe,QAAA8K,EAAA,QAAA7P,aAAA8P,EAAA,EAAA70B,UAAAipB,aACAxjB,aAAAmvB,EAAA,QAAA7P,aACA8P,EAAA,EAAA70B,UAAAgoB,kBACAiO,IAAArB,EAAA,QAAA7P,aAAApF,EAAA3f,UAAAy1B,YAaA9V,EAAA3f,UAAAk2B,uBAAA,SAAAlkB,EAAAoT,EAAA+Q,GACA,MAAA3Q,EAAAJ,IAAA5kB,OAAA,GACA41B,EAAA5Q,EAAA,aACA6Q,EAAA7Q,EAAA,QACA8Q,EAAA9Q,EAAA,WACA,IAAAI,EAaA,OAZAvf,MAAAggB,QAAArU,GAUA4T,EAAA,WARA,kBADAA,EAA2C,EAAA9hB,aAC3C,IAAAsyB,EACAxQ,EAAA,eACK,YAAAA,IAAA,IAAAyQ,EACLzQ,EAAA,UACK,oBAAAA,IAAA,IAAA0Q,IACL1Q,EAAA,cAKAgP,EAAA,QAAA2B,gBAAA,6BACA3Q,IASAjG,EAAA3f,UAAAw2B,oBAAA,SAAAn6B,EAAA6b,EAAAkN,GACA,MAAA2B,EAAA7O,EAAAue,QACA1P,GACA1qB,EAAAq6B,aAAA,MAAA3P,GAEA,MAAAvB,EAAoCJ,IAAA5kB,OAAA,GACpCsf,EAAA0F,EAAA,UACAnK,EAAAnD,EAAAye,kBACAnR,EAAAoR,cACApR,EAAAoR,eACApR,EAAAoR,YAAA9W,OAEA,MAAAtN,EAAA0F,EAAA2e,gBACAC,KACA5nB,KACA,UAAAgK,KAAA1G,EAAA,CACA,MAAAR,EAAAQ,EAAA0G,GACA,OAAAlH,IACA8kB,EAAAv2B,KAAA2Y,GACAhK,EAAA3O,KAAAyR,GACAkH,GAAAmC,GAAArJ,aAAA+kB,EAAA,QACA7d,KAAAsM,EAAAoR,YAAA9W,KACA0F,EAAAoR,YAAA9W,GAAA5G,GAAA0b,EAAA,QAAAoC,kBACAv3B,KAAAw3B,qBAAAx3B,OAGAyZ,KAAAsM,EAAAoR,YAAA9W,KACA0F,EAAAoR,YAAA9W,GAAA5G,GAAA0b,EAAA,QAAAoC,kBACAE,EAAA,EAAAr5B,uBAKA,MAAAoO,EAAAnM,OAAAq3B,EAAA,OAAAr3B,IAAwB0lB,GACxBvZ,EAAA5P,OACAu4B,EAAA,QAAAwC,oBACA,EAAA5R,EAAAoR,YACAhC,EAAA,QAAAyC,2BAAAx6B,EAAAijB,GACA5Q,EACAkW,EAAA0R,IASAnX,EAAA3f,UAAAi3B,qBAAA,SAAA56B,EAAAmc,EAAA4M,GACA,MAAAI,EAAqDJ,IAAA5kB,OAAA,GACrDyL,EAAAnM,OAAAq3B,EAAA,OAAAr3B,IAAwB0lB,GAExB,IAAAxT,EADA/F,EAAA5P,OAIA2V,EAFA3L,MAAAggB,QAAA7N,GACAgN,EAAA8R,eACAx3B,OAAAq1B,EAAA,gBAAAr1B,CACA0Y,EAAAgN,EAAA+R,kBAAA/R,EAAA8R,gBAEA9e,EAGA1Y,OAAAwW,EAAA,qBAAAxW,CAA6D,KAAA0lB,GAE7DoP,EAAA,QAAAwC,oBACA,EAAAzX,EAAA6X,sBACA/3B,KAAAy2B,wBAAAlkB,GACAoT,OAAAvoB,EAAA4C,OAUAkgB,EAAA3f,UAAAy3B,wBAAA,SAAAp7B,EAAAmc,EAAA4M,GACA,MACAV,EADAU,IAAA5kB,OAAA,GACA,QAIA,GAHA,sBAAAnE,EAAAupB,UAAAlB,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,eAAAroB,EAAAupB,UACA,sBAAAvpB,EAAAupB,SAAA,CACA,MAAAvmB,EAAAI,KAAAi4B,uBAAAr7B,EAAAipB,cACAjpB,EAAA0B,YAAAsB,GACAI,KAAAk4B,kBAAAt4B,EAAAmZ,EAAA4M,QACG,aAAA/oB,EAAAupB,SAAA,CACH,MAAAgS,EAAAhD,EAAA,QAAA2B,gBAAAl6B,EAAAipB,aAAA,YACAjpB,EAAA0B,YAAA65B,GACAn4B,KAAAo4B,oBAAAD,EACApf,EAAA4M,KAUAzF,EAAA3f,UAAA03B,uBAAA,SAAApS,GACA,MAAAjmB,EAAAu1B,EAAA,QAAA2B,gBAAAjR,EAAA,eAKA,OAJAjmB,EAAAq3B,aAAA,eACAr3B,EAAAq3B,aAAA,UACAr3B,EAAAq3B,aAAA,UAEAr3B,GAUAsgB,EAAA3f,UAAA23B,kBAAA,SAAAt7B,EAAA2V,EAAAoT,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAs3B,EAAAtS,EAAA,KACAd,EAAAc,EAAA,QAEAngB,EAAA2M,EAAA1P,iBACA6D,EAAAd,EAAA7E,OACAu3B,EAAA,IAAA1xB,MAAAF,GACA,IAAAvB,EACA,QAAA5B,EAAA,EAAiBA,EAAAmD,IAASnD,EAC1B4B,EAAAS,EAAArC,GACA+0B,EAAA/0B,GAAAvD,KAAAu4B,WAAApzB,EAAA8f,EAAAoT,GAEAZ,EAAA,EAAAr5B,oBAAAxB,EAAA07B,EAAA7mB,KAAA,OAUAyO,EAAA3f,UAAA63B,oBAAA,SAAAx7B,EAAA47B,EAAA7S,GACA,MAAAzY,EAAAioB,EAAA,QAAA2B,gBAAAl6B,EAAAipB,aACA,qBACAjpB,EAAA0B,YAAA4O,GACAlN,KAAAg4B,wBAAA9qB,EAAAsrB,EAAA7S,IAUAzF,EAAA3f,UAAAk4B,uBAAA,SAAA77B,EAAAmc,EAAA4M,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAs3B,EAAAtS,EAAA,KACAd,EAAAc,EAAA,QAIA,GAHA,iBAAAnpB,EAAAupB,UAAAlB,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,YAAAroB,EAAAupB,UAAA,iBAAAvpB,EAAAupB,SAAA,CACA,MAAAuS,EAAA3f,EAAA4f,iBACAxD,EAAA,QAAAwC,qBACO/6B,OAAAy7B,OAAApT,WACP/E,EAAA0Y,kBACA54B,KAAA64B,mBACAH,EAAA/S,OAAAvoB,EAAA4C,WACG,eAAApD,EAAAupB,SAAA,CACH,MAAA2S,EAAA3D,EAAA,QAAA2B,gBAAAl6B,EAAAipB,aAAA,WACAjpB,EAAA0B,YAAAw6B,GACA94B,KAAA+4B,qBACAD,EAAA/f,EAAA4M,KAYAzF,EAAA3f,UAAAs4B,mBAAA,SAAAtmB,EAAAoT,EAAA+Q,GACA,MAAA3Q,EAAAJ,IAAA5kB,OAAA,GACAi4B,EAAAjT,EAAAnpB,KACAq8B,EAAAlT,EAAA,gBAIA,YAHA3oB,IAAA67B,IACAlT,EAAA,oBAEAoP,EAAA,QAAA2B,gBAAAkC,EAAAnT,kBACAzoB,IAAA67B,EAAA,sCAUA/Y,EAAA3f,UAAAw4B,qBAAA,SAAAn8B,EAAA4J,EAAAmf,GACA,MAAAzY,EAAAioB,EAAA,QAAA2B,gBAAAl6B,EAAAipB,aAAA,gBACAjpB,EAAA0B,YAAA4O,GACAlN,KAAAy4B,uBAAAvrB,EAAA1G,EAAAmf,IAUAzF,EAAA3f,UAAA24B,WAAA,SAAAt8B,EAAAwsB,EAAAzD,GACA,MAAAwT,EAAAhE,EAAA,QAAA2B,gBAAAl6B,EAAAipB,aAAA,cACAjpB,EAAA0B,YAAA66B,GACAn5B,KAAAo5B,iBAAAD,EAAA/P,EAAAzD,IAWAzF,EAAA3f,UAAAg4B,WAAA,SAAApzB,EAAAk0B,EAAAC,GACA,IAAA9D,EAAA,MACA6D,IACA7D,EAAAn1B,OAAAq1B,EAAA,IAAAr1B,CAAAg5B,GAAA1D,sBAEA,IAAAG,EAAA,OAAAN,EAAAO,OAAA,KACA5wB,EAAA,OAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,GACA,GAAAm0B,EAAA,CAGAxD,GAAA,KADA3wB,EAAA,OAIA,OAAA2wB,GAUA5V,EAAA3f,UAAAg5B,6BAAA,SAAA38B,EAAAmc,EAAA4M,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAs3B,EAAAtS,EAAA,KACAd,EAAAc,EAAA,QACAyT,EAAAzT,EAAA,MACAd,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MAAAwU,EAAA1gB,EAAA3V,iBACA+xB,EAAA,QAAAwC,qBAAgC/6B,OAAAy7B,OAAApT,UAAAuU,SAChCtZ,EAAAwZ,qCACA15B,KAAA25B,mCAAAF,EACA9T,OAAAvoB,EAAA4C,OAUAkgB,EAAA3f,UAAAq5B,YAAA,SAAAh9B,EAAAmc,EAAA4M,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAs3B,EAAAtS,EAAA,KACAd,EAAAc,EAAA,QACAd,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MAAArlB,EAAAI,KAAAi4B,uBAAAr7B,EAAAipB,cACAjpB,EAAA0B,YAAAsB,GACA,MAAAuF,EAAA4T,EAAAlW,iBACAg3B,EAAA75B,KAAAu4B,WAAApzB,EAAA8f,EAAAoT,GACAZ,EAAA,EAAAr5B,oBAAAwB,EAAAi6B,IAUA3Z,EAAA3f,UAAAu5B,iBAAA,SAAAl9B,EAAAmc,EACA4M,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAs3B,EAAAtS,EAAA,KACAd,EAAAc,EAAA,QACAd,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MAAArf,EAAAmT,EAAApT,YACAwvB,EAAA,QAAAwC,qBAAgC/6B,OAAAy7B,OAAApT,WAChC/E,EAAA6Z,yBACA5E,EAAA,QAAAyC,sBAAA,eAAAhyB,EACA+f,OAAAvoB,EAAA4C,OAUAkgB,EAAA3f,UAAAy5B,kBAAA,SAAAp9B,EAAAuI,EAAAwgB,GACA,MAAAzY,EAAAioB,EAAA,QAAA2B,gBAAAl6B,EAAAipB,aAAA,SACAjpB,EAAA0B,YAAA4O,GACAlN,KAAA45B,YAAA1sB,EAAA/H,EAAAwgB,IAUAzF,EAAA3f,UAAA05B,8BAAA,SAAAr9B,EAAA47B,EAAA7S,GACA,MAAAzY,EAAAlN,KAAAy2B,uBAAA+B,EAAA7S,GACAzY,IACAtQ,EAAA0B,YAAA4O,GACAlN,KAAAg4B,wBAAA9qB,EAAAsrB,EAAA7S,KAWAzF,EAAA3f,UAAA64B,iBAAA,SAAAx8B,EAAAmc,EAAA4M,GACA,MACAV,EADAU,IAAA5kB,OAAA,GACA,QACAkkB,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MAAArlB,EAAAI,KAAAi4B,uBAAAr7B,EAAAipB,cACAjpB,EAAA0B,YAAAsB,GACAI,KAAAk4B,kBAAAt4B,EAAAmZ,EAAA4M,IAUAzF,EAAA3f,UAAA25B,4BAAA,SAAAt9B,EAAAmc,EAAA4M,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAs3B,EAAAtS,EAAA,KACAd,EAAAc,EAAA,QACA6Q,EAAA7Q,EAAA,QACAd,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MAAApc,EAAAkQ,EAAApQ,cACAwsB,EAAA,QAAAwC,qBAAgC/6B,OAAAy7B,OAAApT,UAAA2R,WAChC1W,EAAAia,oCACAn6B,KAAA25B,mCAAA9wB,EACA8c,OAAAvoB,EAAA4C,OAUAkgB,EAAA3f,UAAA65B,6BAAA,SAAAx9B,EAAA4J,EAAAmf,GACA,MAAAzY,EAAAlN,KAAAy2B,uBACAjwB,EAAAmf,GACAzY,IACAtQ,EAAA0B,YAAA4O,GACAlN,KAAAy4B,uBAAAvrB,EAAA1G,EAAAmf,KAWAzF,EAAA3f,UAAA85B,cAAA,SAAAz9B,EAAA6H,EAAAkhB,GACA,MACAV,EADAU,IAAA5kB,OAAA,GACA,QACAkkB,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MACAxV,GAAAhL,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,IACA0wB,EAAA,QAAAwC,qBACM/6B,QAAWsjB,EAAAoa,sBACjBnF,EAAA,QAAAoF,6BACA9qB,EACAkW,GANA,6BAMA3lB,OASAkgB,EAAA6X,uBACAnO,8BACA4Q,MAAArF,EAAA,QAAAoC,kBACArX,EAAA3f,UAAAy3B,yBACAyC,WAAAtF,EAAA,QAAAoC,kBACArX,EAAA3f,UAAAg5B,8BACApP,MAAAgL,EAAA,QAAAoC,kBAAArX,EAAA3f,UAAAq5B,aACA30B,WAAAkwB,EAAA,QAAAoC,kBACArX,EAAA3f,UAAAu5B,kBACA1P,WAAA+K,EAAA,QAAAoC,kBACArX,EAAA3f,UAAAy3B,yBACAr4B,gBAAAw1B,EAAA,QAAAoC,kBACArX,EAAA3f,UAAAg5B,8BACAhP,WAAA4K,EAAA,QAAAoC,kBACArX,EAAA3f,UAAA64B,kBACA/O,QAAA8K,EAAA,QAAAoC,kBACArX,EAAA3f,UAAAk4B,wBACAzyB,aAAAmvB,EAAA,QAAAoC,kBACArX,EAAA3f,UAAA25B,6BACAQ,QAAAvF,EAAA,QAAAoC,kBACArX,EAAA3f,UAAAk4B,wBACAkC,aAAAxF,EAAA,QAAAoC,kBACArX,EAAA3f,UAAA25B,6BACAU,SAAAzF,EAAA,QAAAoC,kBACArX,EAAA3f,UAAA85B,iBASAna,EAAA0Y,mBACAhP,8BACA2M,gBAAApB,EAAA,QAAAoC,kBAAArX,EAAA3f,UAAA24B,YACA5C,gBAAAnB,EAAA,QAAAoC,kBAAArX,EAAA3f,UAAA24B,cASAhZ,EAAA6Z,0BACAnQ,8BACAC,YAAAsL,EAAA,QAAAoC,kBACArX,EAAA3f,UAAAy5B,qBASA9Z,EAAAwZ,sCACA9P,8BACAG,iBAAAoL,EAAA,QAAAoC,kBACArX,EAAA3f,UAAA05B,+BACAY,YAAA1F,EAAA,QAAAoC,kBACArX,EAAA3f,UAAA05B,iCAaA/Z,EAAA3f,UAAAo5B,mCAAA,SAAApnB,EAAAoT,EAAA+Q,GACA,MAAAsC,EAAArT,IAAA5kB,OAAA,GAAAnE,KACA,OAAAu4B,EAAA,QAAA2B,gBAAA,6BACA5W,EAAA4a,kCAAA9B,EAAA7S,YAQAjG,EAAA4a,mCACAn7B,gBAAA,mBACA86B,WAAA,cACAz0B,aAAA,gBACA20B,aAAA,iBASAza,EAAAia,qCACAvQ,8BACAmR,cAAA5F,EAAA,QAAAoC,kBACArX,EAAA3f,UAAA65B,8BACAnQ,cAAAkL,EAAA,QAAAoC,kBACArX,EAAA3f,UAAA65B,gCASAla,EAAAoa,uBACA1Q,8BACAoR,YAAA7F,EAAA,QAAAoC,kBAAAE,EAAA,EAAAr5B,qBACA68B,YAAA9F,EAAA,QAAAoC,kBAAAE,EAAA,EAAAr5B,uBAGAqB,EAAA,0FCvwBA,QAAAhD,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAPA,IAAM6M,GAgBNA,QAAkB,SAASyP,GACzB,IAAImiB,SAaJ,OAZIniB,wBACFmiB,EAAY,IAAAC,EAAArxB,aACF5E,YAAY6T,GACbA,wBACTmiB,EAAY,IAAAE,EAAAtxB,aACFtJ,iBAAiBuY,GAClBA,wBACTmiB,EAAY,IAAAG,EAAAvxB,aACFvD,cAAcwS,GAExBmiB,EAAYniB,EAEPmiB,GAOT5xB,SAAmB,WACjB,OAAiD,GAA1CgyB,UAAUC,UAAU9nB,QAAQ,YAA6D,GAA1C6nB,UAAUC,UAAU9nB,QAAQ,WASpFnK,iBAA2B,SAASkyB,GAClC,OAAqB,GAAdA,EAAIz6B,OAAJ,IAAsBy6B,EAAQA,GAQvClyB,cAAwB,SAASmyB,GAC/B,IAAMC,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRG,EAAIH,EAAI,GACd,GAAIC,IAAU,IAAJA,IAAYC,IAAU,IAAJA,IAAYC,IAAU,IAAJA,GAC5C,MAAMC,WAAWH,EAAX,IAAgBC,EAAhB,IAAqBC,EAArB,+BAKR,UAHatyB,EAAQwyB,iBAAiBJ,EAAEl8B,SAAS,KACpC8J,EAAQwyB,iBAAiBH,EAAEn8B,SAAS,KACpC8J,EAAQwyB,iBAAiBF,EAAEp8B,SAAS,MASnD8J,kBAA4B,SAASklB,GACnC,IAAMuN,KACN,GAAIvN,EAAa,CACf,IAAMwN,EAAQxN,EAAYyN,UAAU,GAAG7V,MAAM,KAD9BjH,GAAA,EAAAC,GAAA,EAAAC,OAAAjiB,EAAA,IAEf,QAAAkiB,EAAAC,EAAmByc,EAAnBxc,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA0B,KAAf+c,EAAe5c,EAAA/M,MAClB4pB,EAAgBD,EAAKzoB,QAAQ,KACnC,GAAI0oB,GAAiB,EAAG,CACtB,IAAMjxB,EAAOgxB,EAAKD,UAAU,EAAGE,GACzB5pB,EAAQ2pB,EAAKD,UAAUE,EAAgB,GAC7CJ,EAAUK,mBAAmBlxB,IAASkxB,mBAAmB7pB,QAEzDwpB,EAAUG,GAAQ,IATP,MAAAniB,GAAAqF,GAAA,EAAAC,EAAAtF,EAAA,aAAAoF,GAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,IAajB,OAAO0c,GAQTzyB,kBAA4B,SAASyyB,GACnC,IAAMM,KACN,IAAK,IAAM5iB,KAAOsiB,EAAW,CAC3B,IAAMxpB,EAAQwpB,EAAUtiB,GACxB4iB,EAAUv7B,KAAQw7B,mBAAmB7iB,GAArC,IAA6C6iB,mBAAmB/pB,IAElE,OAAO8pB,EAAU5qB,KAAK,MASxBnI,gBAA0B,SAASizB,GACjC,OAAOC,EAAA1yB,QAAkB2yB,eAAeF,IAAUC,EAAA1yB,QAAkB4yB,YAAYH,eAInEjzB,6FC5GbqzB,MAAO,IAKPC,MAAO,IAKPC,UAAW,IAKXC,aAAc,IAKdC,QAAS,IAKTC,KAAM,IAKNC,WAAY,IAKZC,QAAS,IAKTC,OAAQ,IAKRC,aAAc,IAKdC,KAAM,IAKNC,OAAQ,uFCzDV,IAAMh0B,EAAU,aAUhBA,EAAQ/I,UAAUg9B,YAAc,SAASxvB,KAWzCzE,EAAQ/I,UAAUi9B,KAAO,SAASzxB,GACb/L,KAAKy9B,kBAAkB1xB,GAC/BkB,QAAQjN,KAAKu9B,YAAav9B,OAUvCsJ,EAAQ/I,UAAU0N,MAAQ,SAASF,GACjC/N,KAAKw9B,KAAKx9B,KAAKy9B,kBAAkB1vB,EAASzE,EAAQkT,KAAKkhB,SASzDp0B,EAAQ/I,UAAUo9B,KAAO,SAAS5vB,GAChC/N,KAAKw9B,KAAKx9B,KAAKy9B,kBAAkB1vB,EAASzE,EAAQkT,KAAKiX,eASzDnqB,EAAQ/I,UAAUq9B,QAAU,SAAS7vB,GACnC/N,KAAKw9B,KAAKx9B,KAAKy9B,kBAAkB1vB,EAASzE,EAAQkT,KAAKqhB,WASzDv0B,EAAQ/I,UAAUsyB,KAAO,SAAS9kB,GAChC/N,KAAKw9B,KAAKx9B,KAAKy9B,kBAAkB1vB,EAASzE,EAAQkT,KAAKshB,WAezDx0B,EAAQ/I,UAAUk9B,kBAAoB,SAAS1xB,EAAQgyB,GACrD,IAAMC,KACFC,EAAY,KACVC,EAAc50B,EAAQkT,KAAKiX,YAiCjC,MA/BsB,iBAAX1nB,EACTiyB,EAAWl9B,MACTwyB,IAAKvnB,EACLuB,UAAmBlQ,IAAb2gC,EAAyBA,EAAWG,IAEnCt3B,MAAMggB,QAAQ7a,GACvBA,EAAOkB,QAAQ,SAACqmB,GACQ,iBAAXvnB,EACTkyB,GACE3K,IAAKA,EACLhmB,UAAmBlQ,IAAb2gC,EAAyBA,EAAWG,IAG5CD,EAAY3K,OACKl2B,IAAb2gC,IACFE,EAAU3wB,KAAOywB,IAGrBC,EAAWl9B,KAAKm9B,IACfj+B,OAEHi+B,EAAYlyB,OACK3O,IAAb2gC,IACFE,EAAU3wB,KAAOywB,QAEI3gC,IAAnB6gC,EAAU3wB,OACZ2wB,EAAU3wB,KAAO4wB,GAEnBF,EAAWl9B,KAAKm9B,IAGXD,GAQT10B,EAAQkT,MAKNkhB,MAAO,QAKPjK,YAAa,cAKboK,QAAS,UAKTC,QAAS,qBAIIx0B,gCC1Jf,MAAA60B,KAcAA,EAAAC,SAAA,SAAAxhC,GACA,OAAAA,EAAA2qB,eARA,+BAQA,SAEA9nB,EAAA,8ICAA,MAAA4+B,EAAA,SAAA55B,EAAA65B,EAAAC,EAAAC,EAAA5S,EAAA6S,GAEAC,EAAA,EAAA3+B,KAAAC,KAAAyE,EAAA65B,EAAAC,EAAAI,EAAA,EAAAC,MAMA5+B,KAAA6+B,KAAAL,EAMAx+B,KAAA8+B,OAAA,IAAAC,MACA,OAAAnT,IACA5rB,KAAA8+B,OAAAlT,eAOA5rB,KAAAg/B,mBAAA,KAMAh/B,KAAA6U,MAAA8pB,EAAA,EAAAC,KAMA5+B,KAAAi/B,mBAAAR,GAIAp+B,OAAA6+B,EAAA,SAAA7+B,CAAAg+B,EAAAK,EAAA,GAOAL,EAAA99B,UAAA4+B,SAAA,WACA,OAAAn/B,KAAA8+B,QASAT,EAAA99B,UAAA6+B,kBAAA,WACAp/B,KAAA6U,MAAA8pB,EAAA,EAAAjB,MACA19B,KAAAq/B,iBACAr/B,KAAAgB,WASAq9B,EAAA99B,UAAA++B,iBAAA,gBACAliC,IAAA4C,KAAAs+B,aACAt+B,KAAAs+B,WAAAj+B,OAAAk/B,EAAA,UAAAl/B,CAAAL,KAAAyE,QAAAzE,KAAA8+B,OAAAU,QAEAx/B,KAAA6U,MAAA8pB,EAAA,EAAAc,OACAz/B,KAAAq/B,iBACAr/B,KAAAgB,WAWAq9B,EAAA99B,UAAAm/B,KAAA,WACA1/B,KAAA6U,OAAA8pB,EAAA,EAAAC,MAAA5+B,KAAA6U,OAAA8pB,EAAA,EAAAjB,QACA19B,KAAA6U,MAAA8pB,EAAA,EAAAgB,QACA3/B,KAAAgB,UACAhB,KAAAg/B,oBACAY,EAAA,QAAAC,WAAA7/B,KAAA8+B,OAAAgB,EAAA,EAAApC,MACA19B,KAAAo/B,kBAAAp/B,MACA4/B,EAAA,QAAAC,WAAA7/B,KAAA8+B,OAAAgB,EAAA,EAAAC,KACA//B,KAAAs/B,iBAAAt/B,OAEAA,KAAAi/B,mBAAAj/B,UAAA6+B,QAQAR,EAAA99B,UAAAy/B,SAAA,SAAAC,GACAjgC,KAAA8+B,OAAAmB,GASA5B,EAAA99B,UAAA8+B,eAAA,WACAr/B,KAAAg/B,mBAAA/xB,QAAA2yB,EAAA,QAAAM,eACAlgC,KAAAg/B,mBAAA,MAEA,IAAAmB,EAAA,iEC5GA,MAAAC,EAAA,SAAAlpB,GAEA,MAAAuD,EAAAvD,MAEAmpB,EAAA,QAAAtgC,KAAAC,MACAsgC,aAAA7lB,EAAA6lB,aACAC,WAAA9lB,EAAA8lB,WACAC,YAAA/lB,EAAA+lB,cAOAxgC,KAAAygC,kBACArjC,IAAAqd,EAAAmR,YAAAnR,EAAAmR,YAAA,KAMA5rB,KAAA0gC,KAAAjmB,EAAA/M,IAMA1N,KAAAi/B,wBAAA7hC,IAAAqd,EAAAgkB,kBACAhkB,EAAAgkB,kBAAA4B,EAAA,QAAAM,yBAMA3gC,KAAA4gC,QAAAnmB,EAAAtJ,WAMAnR,KAAA6gC,MAAA,EACA7gC,KAAA8gC,aAMA9gC,KAAA+gC,YAAkEtmB,EAAA,WAMlEza,KAAAghC,YAAA5jC,IAAAqd,EAAAwmB,OAAAxmB,EAAAwmB,MAMAjhC,KAAA8+B,OAAA,KAMA9+B,KAAAkhC,YAAA,KAMAlhC,KAAAmhC,kBAAA,EAMAnhC,KAAAohC,YAAAhkC,IAAAqd,EAAA4mB,MAAA5mB,EAAA4mB,MAAA,KAIAhhC,OAAA6+B,EAAA,SAAA7+B,CAAA+/B,EAAAC,EAAA,SAQAD,EAAAkB,4BAAA,SAiBAlB,EAAA7/B,UAAAghC,qBAAA,SAAAC,EAAAlD,EAAAiC,EAAApvB,GACA,QAAA/T,IAAA4C,KAAA0gC,KACA,OAEA,MAAAe,EAAAphC,OAAAo1B,EAAA,IAAAp1B,CAAAkgC,GACAmB,EAAA1hC,KAAA2hC,gBAEAD,OAAAD,IACAnD,EAAAsD,EAAA,EAAAC,0BAAAH,EAAAD,EAAAD,EAAAlD,GACAkD,EAAAnhC,OAAAo1B,EAAA,UAAAp1B,CAAAmhC,EAAAC,EAAAC,IAGA,MAAAj9B,EAAApE,OAAAk/B,EAAA,kBAAAl/B,CAAAmhC,EAAAlD,EAAA,EACA8B,EAAAkB,4BAEAQ,GACApT,QAAA,MACAC,QAAAoT,EAAA,EACAnT,QAAA,iBACAtD,OAAA,YACAmD,aAAA,EACAuT,aAAAhiC,KAAA4gC,QAAA,QAEAvgC,OAAA4hC,EAAA,OAAA5hC,CAAAyhC,EAAA9hC,KAAA4gC,QAAAzvB,GAEA,MAAA7P,EAAAO,KAAAqgC,OAAAV,EAAA,GAAA/8B,EAAA,IAAA65B,GACA/8B,EAAAM,KAAAqgC,OAAAz9B,EAAA,GAAA+8B,EAAA,IAAAlD,GAIA,OAHAwD,EAAA9hC,KAAA6gC,KAAA,SAAAv/B,EACAwgC,EAAA9hC,KAAA6gC,KAAA,SAAAt/B,EAEAvB,KAAAmiC,eACA19B,EAAA27B,EAAAkB,2BACA,EAAAI,GAAAD,EAAAK,IAUA1B,EAAA7/B,UAAAkvB,UAAA,WACA,OAAAzvB,KAAA4gC,SAOAR,EAAA7/B,UAAA6hC,iBAAA,SAAA39B,EAAA65B,EAAAC,EAAAgC,GAEA,QAAAnjC,IAAA4C,KAAA0gC,KACA,YAGApC,EAAAt+B,KAAAqiC,sBAAA/D,GAEA,GAAAC,GAAAv+B,KAAAghC,aAAA5jC,IAAA4C,KAAA+gC,cACAxC,EAAA,GAGA,MAAA+D,EAAAhE,EAAAC,EAEAgE,EAAAliC,OAAAk/B,EAAA,UAAAl/B,CAAAoE,GACA+9B,EAAA3gC,KAAA4gC,KAAApiC,OAAAk/B,EAAA,SAAAl/B,CAAAoE,GAAA69B,GACAI,EAAA7gC,KAAA4gC,KAAApiC,OAAAk/B,EAAA,UAAAl/B,CAAAoE,GAAA69B,GACAK,EAAAtiC,OAAAk/B,EAAA,kBAAAl/B,CAAAkiC,EAAAD,EAAA,GACAE,EAAAE,IACAE,EAAA/gC,KAAA4gC,KAAAziC,KAAAohC,OAAA/gC,OAAAk/B,EAAA,SAAAl/B,CAAAoE,GAAA69B,GACAO,EAAAhhC,KAAA4gC,KAAAziC,KAAAohC,OAAA/gC,OAAAk/B,EAAA,UAAAl/B,CAAAoE,GAAA69B,GACAQ,EAAAziC,OAAAk/B,EAAA,kBAAAl/B,CAAAkiC,EAAAD,EAAA,GACAM,EAAAC,IAEA5C,EAAAjgC,KAAA8+B,OACA,GAAAmB,GACAjgC,KAAAmhC,mBAAAnhC,KAAA4B,eACAq+B,EAAA9Q,iBAAAmP,GACA2B,EAAA8C,iBAAAxE,GACAl+B,OAAAk/B,EAAA,eAAAl/B,CAAA4/B,EAAAt+B,YAAAghC,GACA,OAAA1C,EAGA,MAAA9uB,GACAud,QAAA,MACAC,QAAAoT,EAAA,EACAnT,QAAA,SACAtD,OAAA,YACAmD,aAAA,GAEApuB,OAAA4hC,EAAA,OAAA5hC,CAAA8Q,EAAAnR,KAAA4gC,SAEA5gC,KAAAkhC,WAAA,GAAAr/B,KAAAmhC,MAAA3iC,OAAAk/B,EAAA,SAAAl/B,CAAAyiC,GAAAR,GACAtiC,KAAAkhC,WAAA,GAAAr/B,KAAAmhC,MAAA3iC,OAAAk/B,EAAA,UAAAl/B,CAAAyiC,GAAAR,GAEA,MAAA50B,EAAA1N,KAAAmiC,eAAAW,EAAA9iC,KAAAkhC,WAAA3C,EACAgC,EAAApvB,GAUA,OARAnR,KAAA8+B,OAAA,IAAAqB,EAAA2C,EAAAxE,EAAAC,EACA7wB,EAAA1N,KAAAygC,aAAAzgC,KAAAi/B,oBAEAj/B,KAAAmhC,kBAAAnhC,KAAA4B,cAEAg+B,EAAA,QAAAtrB,OAAAtU,KAAA8+B,OAAAgB,EAAA,EAAAmD,OACAjjC,KAAAkjC,kBAAAljC,MAEAA,KAAA8+B,QAUAsB,EAAA7/B,UAAA4iC,qBAAA,WACA,OAAAnjC,KAAAi/B,oBAaAmB,EAAA7/B,UAAA4hC,eAAA,SAAA19B,EAAA2+B,EAAA7E,EAAAgC,EAAApvB,GAUA,GARA9Q,OAAAgjC,EAAA,EAAAhjC,MAAAjD,IAAA4C,KAAA0gC,KAAA,GAEAvvB,EAAAnR,KAAA6gC,KAAA,aAAAN,EAAA+C,UAEA,WAAAtjC,KAAA4gC,UACAzvB,EAAA,WAGA,GAAAotB,EACA,OAAAv+B,KAAA+gC,aACA,KAAAwC,EAAA,EAAApf,UACA,MAAAqf,EAAA,GAAAjF,EAAA,KACA,mBAAAptB,EACAA,EAAA,wBAAwCqyB,EAExCryB,EAAA,sBAAAqyB,EAEA,MACA,KAAAD,EAAA,EAAAlnB,UACAlL,EAAA,kBAAAotB,EACA,MACA,KAAAgF,EAAA,EAAAE,gBACA,KAAAF,EAAA,EAAAG,KACAvyB,EAAA,OAAAotB,EACA,MACA,QACAl+B,OAAAgjC,EAAA,EAAAhjC,EAAA,KAKA8Q,EAAA,MAAAiyB,EAAA,GACAjyB,EAAA,OAAAiyB,EAAA,GAEA,MAAA5N,EAAA+K,EAAA5K,qBACA,IAAAgO,EAQA,OANAA,EADA3jC,KAAA6gC,MAAA,MAAArL,EAAAO,OAAA,MACAtxB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAA,EAEA0M,EAAA,KAAAwyB,EAAAlyB,KAAA,KAEApR,OAAAkmB,EAAA,aAAAlmB,CAAwCL,KAAA,KAAAmR,IASxCivB,EAAA7/B,UAAAqjC,OAAA,WACA,OAAA5jC,KAAA0gC,MASAN,EAAA7/B,UAAAsjC,qBAAA,SACApF,GACAz+B,KAAA8+B,OAAA,KACA9+B,KAAAi/B,mBAAAR,EACAz+B,KAAAgB,WASAo/B,EAAA7/B,UAAAujC,OAAA,SAAAp2B,GACAA,GAAA1N,KAAA0gC,OACA1gC,KAAA0gC,KAAAhzB,EACA1N,KAAA8+B,OAAA,KACA9+B,KAAAgB,YAUAo/B,EAAA7/B,UAAA8Z,aAAA,SAAAlJ,GACA9Q,OAAA4hC,EAAA,OAAA5hC,CAAAL,KAAA4gC,QAAAzvB,GACAnR,KAAA8gC,aACA9gC,KAAA8+B,OAAA,KACA9+B,KAAAgB,WAOAo/B,EAAA7/B,UAAAugC,WAAA,WACA,MAAAiD,EAAA/jC,KAAA4gC,QAAA,SAAAmB,EAAA,EACA/hC,KAAA6gC,KAAA5jC,EAAA,QAAA+mC,gBAAAD,EAAA,WAEAtkC,EAAA,mLCnXAwkC,EAAAxnC,EAAA,GA6BA,MAAAynC,EAAA,SAAAhtB,GACA,MAAAuD,EAAAvD,MAMAlX,KAAAmkC,aAAA1pB,EAAA6F,YAMAtgB,KAAAokC,WAAA3pB,EAAA4F,UAMArgB,KAAAqkC,WAAA5pB,EAAA8F,UACA9F,EAAA8F,UAAA,IAAA+jB,EAAA,QAMAtkC,KAAAq1B,gBAAA5a,EAAAyK,eACAzK,EAAAyK,eACAgf,EAAAK,iBAAAL,EAAAM,iBAEAC,EAAA,EAAA1kC,KAAAC,OAGAK,OAAAC,EAAA,SAAAD,CAAA6jC,EAAAO,EAAA,GAOAP,EAAAQ,eAAA,UAOAR,EAAAS,MAAA,gCAOAT,EAAAU,MAAA,6BAOAV,EAAAW,MAAA,6BAOAX,EAAAY,MAAA,6BAOAZ,EAAAK,kBACAQ,QAAA,0EAEAC,QAAA,2EASAd,EAAAM,gBAAA,QAMAN,EAAA3jC,UAAA0kC,eAAA,WACA,OAAAjlC,KAAAmkC,cAOAD,EAAA3jC,UAAA2kC,eAAA,SAAA5kB,GACAtgB,KAAAmkC,aAAA7jB,GAaA4jB,EAAA3jC,UAAAmX,aAMAwsB,EAAA3jC,UAAAoX,qBAAA,SAAA/a,EAAAsa,GACA,MAAA6O,GACAzF,YAAAtgB,KAAAmkC,aACA9jB,UAAArgB,KAAAokC,YAEA/jC,OAAA8kC,EAAA,OAAA9kC,CAAA0lB,EAAA/lB,KAAAwqB,eAAA5tB,EAAAsa,QACA,MAAAyO,GAAAI,GACA/lB,KAAAqkC,WAAAlf,2BAAAigB,EAAA,EAAAhgB,OACA,cACA6e,EAAA,QAAAld,gBAAAqe,EAAA,EAAA7kC,UAAAglB,sBACA,IAAA/N,EAAAysB,EAAA,QAAAne,mBACA9lB,KAAAqkC,WAAAlf,2BAAAvoB,EACA+oB,EAAA3lB,KAAAqkC,YAIA,OAHA7sB,IACAA,MAEAA,GAWA0sB,EAAA3jC,UAAA8kC,wBAAA,SAAApuB,GACA,GAAAgtB,EAAA,QAAA9sB,WAAAF,GACA,OAAAjX,KAAAslC,oCAC0B,GACvB,GAAArB,EAAA,QAAA5sB,OAAAJ,GACH,OAAAjX,KAAAulC,gCAAgE,GAC7D,oBAAAtuB,EAAA,CACH,MAAAM,EAAA0sB,EAAA,QAAAzmC,MAAAyZ,GACA,OAAAjX,KAAAslC,oCAAA/tB,KAeA2sB,EAAA3jC,UAAAilC,8BAAA,SAAAvuB,GACA,GAAAgtB,EAAA,QAAA9sB,WAAAF,GACA,OAAAjX,KAAAylC,0CAC0B,GACvB,GAAAxB,EAAA,QAAA5sB,OAAAJ,GACH,OAAAjX,KAAA0lC,sCACsB,GACnB,oBAAAzuB,EAAA,CACH,MAAAM,EAAA0sB,EAAA,QAAAzmC,MAAAyZ,GACA,OAAAjX,KAAAylC,0CAAAluB,KAYA2sB,EAAA3jC,UAAAklC,0CAAA,SAAAluB,GACA,QAAA9R,EAAA8R,EAAAK,WAA8BnS,EAAGA,IAAAoS,YACjC,GAAApS,EAAAqS,UAAAC,KAAAC,aACA,OAAAhY,KAAA0lC,sCAAAjgC,IAYAy+B,EAAAyB,6BACA/b,8BACAgc,UAAA3B,EAAA,QAAA4B,yBACAT,EAAA,EAAA7kC,UAAA0mB,oBAAA,YAUAid,EAAA3jC,UAAAmlC,sCAAA,SAAA9oC,GACA,MAAA6vB,KACAla,EAAAuzB,EAAA,EAAAhoC,6BACAlB,EAAAuqB,aAAA,qBAEA,OADAsF,EAAA,iBAAAla,EACA0xB,EAAA,QAAAne,gBAC+C,EAC/Coe,EAAAyB,4BAAA/oC,KAAAoD,KAAAqkC,aASAH,EAAA6B,8BACAC,8BACAC,cAAAhC,EAAA,QAAA4B,yBACAC,EAAA,EAAAjoC,wBACAqoC,aAAAjC,EAAA,QAAA4B,yBACAC,EAAA,EAAAjoC,wBACAsoC,aAAAlC,EAAA,QAAA4B,yBACAC,EAAA,EAAAjoC,0BAWAqmC,EAAAkC,wBAAA,SAAAxpC,EAAA+oB,GACA,OAAAse,EAAA,QAAAne,mBACMoe,EAAA6B,6BAAAnpC,EAAA+oB,IASNue,EAAAmC,kBACAC,8BACAC,UAAAtC,EAAA,QAAAld,gBAAA,SAAAnqB,EAAA+oB,GACA,OAAA/oB,EAAAuqB,aAAA,WAWA+c,EAAAsC,WAAA,SAAA5pC,EAAA+oB,GACAse,EAAA,QAAAtb,UAAAub,EAAAmC,iBAAAzpC,EAAA+oB,IASAue,EAAAuC,yBACAT,8BACAU,QAAAxC,EAAAsC,aAWAtC,EAAAyC,mBAAA,SAAA/pC,EAAA+oB,GACA,OAAAse,EAAA,QAAAne,mBACAoe,EAAAuC,wBAAA7pC,EAAA+oB,IASAue,EAAA0C,+BACAZ,8BACAa,mBAAA5C,EAAA,QAAA4B,yBACA3B,EAAAkC,wBAAA,sBACAU,cAAA7C,EAAA,QAAA4B,yBACA3B,EAAAyC,mBAAA,eASAzC,EAAA3jC,UAAA+kC,oCAAA,SAAA/tB,GACA,QAAA9R,EAAA8R,EAAAK,WAA8BnS,EAAGA,IAAAoS,YACjC,GAAApS,EAAAqS,UAAAC,KAAAC,aACA,OAAAhY,KAAAulC,gCAAA9/B,IAWAy+B,EAAA3jC,UAAAglC,gCAAA,SAAA3oC,GACA,OAAAqnC,EAAA,QAAAne,mBAEAoe,EAAA0C,8BAAAhqC,OAQAsnC,EAAA6C,oBACAf,8BACAgB,aAAA/C,EAAA,QAAA1M,kBAAAuO,EAAA,EAAA1nC,uBAWA8lC,EAAA+C,cAAA,SAAArqC,EAAA6b,EAAAkN,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAuf,EAAAyF,EAAA,YACA1F,EAAA0F,EAAA,UACAmhB,EAAAnhB,EAAA,WACA7Y,EAAA+2B,EAAA,QAAAnN,gBAAAzW,EAAAC,GACA1jB,EAAA0B,YAAA4O,GACA,IAAAg6B,EACAC,EAAA,QAAA5mC,UAAAw2B,oBAAA7pB,EAAAuL,EAAAkN,GAEA2e,EAAA,QAAA/jC,UAAAw2B,oBAAA7pB,EAAAuL,EAAAkN,IAWAue,EAAAkD,mBAAA,SAAAxqC,EAAA0qB,EAAA3B,GACA,MAAAvW,EAAA60B,EAAA,QAAAnN,gBAAAoN,EAAAU,MAAA,UACA13B,EAAA+2B,EAAA,QAAAnN,gBAAAoN,EAAAU,MAAA,aACAx1B,EAAA9Q,YAAA4O,GACAA,EAAA+pB,aAAA,MAAA3P,GACA1qB,EAAA0B,YAAA8Q,IAUA80B,EAAAmD,aAAA,SAAAC,EAAAhnB,GAGA,MAAA0F,GAFAshB,KACApD,EAAAQ,gBACA,IAEA,WAAApkB,EAAA7M,QAAAuS,GACA1F,EAEA0F,EAAA1F,GAWA4jB,EAAAqD,aAAA,SAAA3qC,EAAA6b,EAAAkN,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAV,OAAAmnC,EAAA,EAAAnnC,MAAAjD,IAAAqb,EAAAue,QAAA,IACA,MAAA1W,EAAAyF,EAAA,YACAuhB,EAAAvhB,EAAA,cACA1F,EAAA0F,EAAA,UACA0hB,EAAAvD,EAAAmD,aAAAC,EAAAhnB,GACA1jB,EAAAq6B,aAAA,WAAAwQ,GACAxD,EAAA,QAAAyD,eAAA9qC,EAAAsnC,EAAAS,MAAA,SAAA2C,EACAjnB,GACA,MAAAiH,EAAA7O,EAAAue,aACA55B,IAAAkqB,GACA4c,EAAAkD,mBAAAxqC,EAAA0qB,EAAA3B,IAWAue,EAAAyD,aAAA,SAAA/qC,EAAA6b,EAAAkN,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAV,OAAAmnC,EAAA,EAAAnnC,MAAAjD,IAAAqb,EAAAue,QAAA,IACA,MAAA1W,EAAAyF,EAAA,YACAuhB,EAAAvhB,EAAA,cACA1F,EAAA0F,EAAA,UACA0hB,EAAAvD,EAAAmD,aAAAC,EAAAhnB,GACA1E,EAAAnD,EAAAye,kBACAt6B,EAAAq6B,aAAA,WAAAwQ,GACAxD,EAAA,QAAAyD,eAAA9qC,EAAAsnC,EAAAS,MAAA,SAAA2C,EACAjnB,GACA,MAAAiH,EAAA7O,EAAAue,QACA,QAAA55B,IAAAkqB,EAAA,CACA,MAAA+P,EAAA5e,EAAAmvB,UACAn4B,KACA,QAAAlM,EAAA,EAAAC,EAAA6zB,EAAAt2B,OAAqCwC,EAAAC,EAAQD,IAAA,CAC7C,MAAAgP,EAAAkG,EAAApO,IAAAgtB,EAAA9zB,IACA,QAAAnG,IAAAmV,EAAA,CACA,IAAArH,EAAAmsB,EAAA9zB,GACAgP,aAAAs1B,EAAA,UACA38B,EAAA0Q,GAEAnM,EAAA3O,MAAqBoK,OAAAqH,WAGrB0xB,EAAA,QAAAtM,qBACOuP,WAAAnhB,EAAA,WAAAnpB,OACPy7B,KAAAtS,EAAA,KAAAd,QAAAc,EAAA,SACAme,EAAA4D,yBACA7D,EAAA,QAAArM,sBAAA,YAAAnoB,EACAkW,GACAue,EAAAkD,mBAAAxqC,EAAA0qB,EAAA3B,KAWAue,EAAA6D,eAAA,SAAAnrC,EAAAs/B,EAAAvW,GACA,MAAAza,EAAA+4B,EAAA,QAAAnN,gBAAAoN,EAAAW,MAAA,QAEAqC,EADAvhB,IAAA5kB,OAAA,GACA,WAGA,GAFAnE,EAAA0B,YAAA4M,GACA46B,EAAA,EAAA1nC,oBAAA8M,EAAAgxB,EAAAhxB,WACA9N,IAAA8+B,EAAA3pB,OAAA,OAAA2pB,EAAA3pB,MAAA,CACA,MAAAA,EAAA0xB,EAAA,QAAAnN,gBAAAoN,EAAAW,MAAA,SACAjoC,EAAA0B,YAAAiU,GACA2pB,EAAA3pB,iBAAAs1B,EAAA,QACA,IAAAX,EACAC,EAAA,QAAA5mC,UAAAi3B,qBAAAjlB,EACA2pB,EAAA3pB,MAAAoT,GAEA2e,EAAA,QAAA/jC,UAAAi3B,qBAAAjlB,EACA2pB,EAAA3pB,MAAAoT,GAGAmgB,EAAA,EAAA1nC,oBAAAmU,EAAA2pB,EAAA3pB,SAaA2xB,EAAA8D,aAAA,SAAAprC,EAAAqrC,EAAAtiB,GACAsiB,EAAAC,UACAtrC,EAAAq6B,aAAA,WAAAgR,EAAAC,eAEA9qC,IAAA6qC,EAAAE,cACAvrC,EAAAq6B,aAAA,eAAAgR,EAAAE,mBAEA/qC,IAAA6qC,EAAA11B,OACAuzB,EAAA,EAAA1nC,oBAAAxB,EAAAqrC,EAAA11B,QASA2xB,EAAA4D,0BACA9B,8BACAoC,OAAAnE,EAAA,QAAA1M,kBAAA2M,EAAA+C,eACAoB,OAAApE,EAAA,QAAA1M,kBAAA2M,EAAAyD,cACAW,OAAArE,EAAA,QAAA1M,kBAAA2M,EAAAqD,cACAgB,SAAAtE,EAAA,QAAA1M,kBAAA2M,EAAA6D,gBACAS,OAAAvE,EAAA,QAAA1M,kBAAA2M,EAAA8D,gBAWA9D,EAAAuE,YAAA,SAAA7rC,EAAA0jB,EAAAqF,GACA,MAAAI,EAAoCJ,IAAA5kB,OAAA,GACpCumC,EAAAvhB,EAAA,cACA1F,EAAA0F,EAAA,UACA2iB,EAAA3iB,EAAA,cACAd,EAAAc,EAAA,QACA,IAAA0hB,EAGAA,EADAH,EACApD,EAAAmD,aAAAC,EAAAhnB,GAEAA,EAEA1jB,EAAAq6B,aAAA,WAAAwQ,GACAxiB,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA5E,GACA4jB,EAAA,QAAAyD,eAAA9qC,EAAAsnC,EAAAS,MAAA,SAAA2C,EACAjnB,GAEA,MAAA7T,EAA8CnM,OAAA8kC,EAAA,WAAcpf,GAC5DvZ,EAAA5P,OACAqnC,EAAA,QAAAtM,oBAAAnrB,EACA03B,EAAA6C,mBACA9C,EAAA,QAAArM,sBAAA,gBAAA8Q,EACA/iB,GACA,MAAAvW,EAAA2W,EAAA,OACA,GAAA3W,EAAA,CACA,MAAAlC,EAAA+2B,EAAA,QAAAnN,gBAAAoN,EAAAU,MAAA,UACAhoC,EAAA0B,YAAA4O,GACAg3B,EAAAyE,sBAAAz7B,EAAAkC,EAAAuW,KAWAue,EAAAyE,sBAAA,SAAA/rC,EAAAwS,EAAAuW,GAEA,MAAAnZ,GAAgB5P,QAChBqnC,EAAA,QAAAtM,oBAAAnrB,EACA03B,EAAA0E,wBACA3E,EAAA,QAAArM,sBAAAxoB,EAAAy5B,eACAz5B,GAAAuW,IAUAue,EAAA4E,iBAAA,SAAAlsC,EAAAwS,EAAAuW,GACAA,IAAA5kB,OAAA,GACA,QAAAqO,EAAA6V,QAEAif,EAAA6E,sBAAAnsC,EAAAwS,EAAAwM,cACA0oB,EAAA,QAAA/jC,UAAAi3B,qBAAA56B,EAAAwS,EAAA3K,OAAAkhB,IAUAue,EAAA8E,qBAAA,SAAApsC,EAAAwS,EAAAuW,GACAA,IAAA5kB,OAAA,GACA,QAAAqO,EAAA6V,QAEAif,EAAA6E,sBAAAnsC,EAAAwS,EAAAwM,cACA0oB,EAAA,QAAA/jC,UAAAi3B,qBAAA56B,EAAAwS,EAAA2J,SAAA4M,IAUAue,EAAA+E,uBAAA,SAAArsC,EAAAwS,EAAAuW,GACAA,IAAA5kB,OAAA,GACA,QAAAqO,EAAA6V,QAEAif,EAAA6E,sBAAAnsC,EAAAwS,EAAAwM,cACA0oB,EAAA,QAAA/jC,UAAAi3B,qBAAA56B,EAAAwS,EAAA2J,SAAA4M,IAUAue,EAAAgF,mBAAA,SAAAtsC,EAAAwS,EAAAuW,GACAA,IAAA5kB,OAAA,GACA,QAAAqO,EAAA6V,QAEAif,EAAA6E,sBAAAnsC,EAAAwS,EAAAwM,cACA0oB,EAAA,QAAA/jC,UAAAi3B,qBAAA56B,EAAAwS,EAAA2J,SAAA4M,IAUAue,EAAAiF,mBAAA,SAAAvsC,EAAAwS,EAAAuW,GAEA,MAAAyjB,EAAAnF,EAAA,QAAAnN,gBAAAoN,EAAAY,MAAA,kBACAgB,EAAA,EAAA1nC,oBAAAgrC,EAAAh6B,EAAAi6B,cACAzsC,EAAA0B,YAAA8qC,GAEA,MAAAE,EAAArF,EAAA,QAAAnN,gBAAAsO,EAAA,EAAAhgB,MAAA,cAEAxoB,EAAA0B,YAAAgrC,GAEA,MAAAC,EAAAtF,EAAA,QAAAnN,gBAAAsO,EAAA,EAAAhgB,MAAA,SACAkkB,EAAAhrC,YAAAirC,GACArF,EAAAsF,kBAAAD,EAAAn6B,EAAAm6B,OAEA,MAAA7lC,EAAAugC,EAAA,QAAAnN,gBAAAsO,EAAA,EAAAhgB,MAAA,OACAkkB,EAAAhrC,YAAAoF,GACAwgC,EAAAsF,kBAAA9lC,EAAA0L,EAAA1L,MAUAwgC,EAAAuF,oBAAA,SAAA7sC,EAAAwS,EAAAuW,GAEA,MAAAnZ,GAAgB5P,QAChB8sC,EAAAt6B,EAAAs6B,WACA,QAAAnmC,EAAA,EAAAC,EAAAkmC,EAAA3oC,OAAyCwC,EAAAC,IAAQD,EAAA,CACjD,MAAAomC,EAAAD,EAAAnmC,GACA0gC,EAAA,QAAAtM,oBAAAnrB,EACA03B,EAAA0E,wBACA3E,EAAA,QAAArM,sBAAA+R,EAAAd,eACAc,GAAAhkB,KAWAue,EAAA0F,gBAAA,SAAAhtC,EAAAwS,EAAAuW,GAEA,MAAAnZ,GAAgB5P,QAChB+sC,EAAAv6B,EAAAu6B,UACA1F,EAAA,QAAAtM,oBAAAnrB,EACA03B,EAAA0E,wBACA3E,EAAA,QAAArM,sBAAA+R,EAAAd,eACAc,GAAAhkB,IAUAue,EAAA2F,uBAAA,SAAAjtC,EAAAwS,EAAAuW,QACAvoB,IAAAgS,EAAA06B,WACAltC,EAAAq6B,aAAA,YAAA7nB,EAAA06B,UAAAtqC,YAEA0kC,EAAA6E,sBAAAnsC,EAAAwS,EAAAi6B,cACAnF,EAAA6F,iBAAAntC,EAAA,GAAAwS,EAAA46B,aAUA9F,EAAA+F,mBAAA,SAAArtC,EAAAwS,EAAAuW,GACAue,EAAA6E,sBAAAnsC,EAAAwS,EAAAi6B,eAUAnF,EAAAgG,sBAAA,SAAAttC,EAAAwS,EAAAuW,GACAue,EAAA6E,sBAAAnsC,EAAAwS,EAAAi6B,cAEA,MAAAc,EAAAlG,EAAA,QAAAnN,gBAAAoN,EAAAU,MAAA,iBACAhoC,EAAA0B,YAAA6rC,GACAjG,EAAA6F,iBAAAI,EAAA,GAAA/6B,EAAA+6B,eAEA,MAAAC,EAAAnG,EAAA,QAAAnN,gBAAAoN,EAAAU,MAAA,iBACAhoC,EAAA0B,YAAA8rC,GACAlG,EAAA6F,iBAAAK,EAAA,GAAAh7B,EAAAg7B,gBAUAlG,EAAAmG,mBAAA,SAAAztC,EAAAwS,EAAAuW,GACA/oB,EAAAq6B,aAAA,WAAA7nB,EAAAk7B,UACA1tC,EAAAq6B,aAAA,aAAA7nB,EAAAm7B,YACA3tC,EAAAq6B,aAAA,aAAA7nB,EAAAo7B,iBACAptC,IAAAgS,EAAA06B,WACAltC,EAAAq6B,aAAA,YAAA7nB,EAAA06B,UAAAtqC,YAEA0kC,EAAA6E,sBAAAnsC,EAAAwS,EAAAi6B,cACAnF,EAAA6F,iBAAAntC,EAAA,GAAAwS,EAAAq7B,UAUAvG,EAAAwG,oBAAA,SAAAC,EAAA/tC,EAAA2V,GACA,MAAAq4B,EAAA3G,EAAA,QAAAnN,gBAAAoN,EAAAU,MAAA+F,GACA7E,EAAA,EAAA1nC,oBAAAwsC,EAAAr4B,GACA3V,EAAA0B,YAAAssC,IASA1G,EAAA6E,sBAAA,SAAAnsC,EAAA2V,GACA2xB,EAAAwG,oBAAA,eAAA9tC,EAAA2V,IASA2xB,EAAA6F,iBAAA,SAAAntC,EAAA2V,GACA2xB,EAAAwG,oBAAA,UAAA9tC,EAAA2V,IASA2xB,EAAAsF,kBAAA,SAAA5sC,EAAAwmB,GACA,MAAAynB,EAAA5G,EAAA,QAAAnN,gBAAAsO,EAAA,EAAAhgB,MAAA,eACAxoB,EAAA0B,YAAAusC,GAEA,MAAAC,EAAA7G,EAAA,QAAAnN,gBAAAsO,EAAA,EAAAhgB,MAAA,gBACAylB,EAAAvsC,YAAAwsC,GACAhF,EAAA,EAAA1nC,oBAAA0sC,EAAA1nB,IAQA8gB,EAAA0E,yBACA5C,8BACA+E,MAAA9G,EAAA,QAAA1M,kBAAA2M,EAAAuE,cAEAnC,8BACA0E,OAAA/G,EAAA,QAAA1M,kBAAA2M,EAAAiF,oBACA8B,IAAAhH,EAAA,QAAA1M,kBAAA2M,EAAAuF,qBACAyB,GAAAjH,EAAA,QAAA1M,kBAAA2M,EAAAuF,qBACA0B,IAAAlH,EAAA,QAAA1M,kBAAA2M,EAAA0F,iBACAwB,KAAAnH,EAAA,QAAA1M,kBAAA2M,EAAA4E,kBACAuC,SAAApH,EAAA,QAAA1M,kBAAA2M,EAAA8E,sBACAsC,WAAArH,EAAA,QAAA1M,kBAAA2M,EAAA+E,wBACAsC,OAAAtH,EAAA,QAAA1M,kBAAA2M,EAAAgF,oBACAsC,kBAAAvH,EAAA,QAAA1M,kBAAA2M,EAAA2F,wBACA4B,qBAAAxH,EAAA,QAAA1M,kBAAA2M,EAAA2F,wBACA6B,mBAAAzH,EAAA,QAAA1M,kBAAA2M,EAAA2F,wBACA8B,4BAAA1H,EAAA,QAAA1M,kBAAA2M,EAAA2F,wBACA+B,sBAAA3H,EAAA,QAAA1M,kBAAA2M,EAAA2F,wBACAgC,+BAAA5H,EAAA,QAAA1M,kBAAA2M,EAAA2F,wBACAiC,eAAA7H,EAAA,QAAA1M,kBAAA2M,EAAA+F,oBACA8B,kBAAA9H,EAAA,QAAA1M,kBAAA2M,EAAAgG,uBACA8B,eAAA/H,EAAA,QAAA1M,kBAAA2M,EAAAmG,sBAYAnG,EAAA+H,YAAA,SAAA78B,GACA,MAAAlC,EAAA+2B,EAAA,QAAAnN,gBAAAoN,EAAAU,MAAA,UAEA,OADAV,EAAAyE,sBAAAz7B,EAAAkC,MACAlC,GAUAg3B,EAAAgI,iBAAA,SAAAtvC,EAAA+pB,EAAAhB,GACA,MAAAI,EAAoCJ,IAAA5kB,OAAA,GACpCyL,EAA8CnM,OAAA8kC,EAAA,WAAcpf,GAC5DvZ,EAAA5P,OACAqnC,EAAA,QAAAtM,oBAAAnrB,EACA03B,EAAA0E,wBACA3E,EAAA,QAAArM,sBAAA,SAAAjR,EACAhB,IAWAue,EAAA3jC,UAAA4rC,gBAAA,SAAA1xB,GACA,MAAA7d,EAAAqnC,EAAA,QAAAnN,gBAAAoN,EAAAW,MAAA,cAGA,IAAAz1B,EACA,GAHAxS,EAAAq6B,aAAA,iBACAr6B,EAAAq6B,aAAA,mBAEAxc,IACAA,EAAA2xB,QACAxvC,EAAAq6B,aAAA,SAAAxc,EAAA2xB,QAEA3xB,EAAA4xB,cACAzvC,EAAAq6B,aAAA,eAAAxc,EAAA4xB,mBAEAjvC,IAAAqd,EAAA6xB,aACA1vC,EAAAq6B,aAAA,cAAAxc,EAAA6xB,aAEA7xB,EAAA8xB,YACA3vC,EAAAq6B,aAAA,aAAAxc,EAAA8xB,iBAEAnvC,IAAAqd,EAAA+xB,YACA5vC,EAAAq6B,aAAA,aAAAxc,EAAA+xB,iBAEApvC,IAAAqd,EAAA6L,OACA1pB,EAAAq6B,aAAA,QAAAxc,EAAA6L,OAEAlX,EAAAqL,EAAArL,OACAqL,EAAAkpB,MAAA,CACAtjC,OAAAmnC,EAAA,EAAAnnC,CAAAoa,EAAAmB,aACA,IACA,MAAA+nB,EAAA8I,EAAA,QAAA9I,KAC0BlpB,EAAA,aAAAA,EAAAkpB,KAAAlpB,EAAAwK,SAG1B7V,EAFAA,EAEAq9B,EAAA,QAAAC,IAAAt9B,EAAAu0B,GAEAA,EAIAM,EAAA,QAAAyD,eAAA9qC,EAAA,4CACA,qBAAAoD,KAAAq1B,iBAEA,MAAAtP,GACAnpB,OACAqoB,QAAAxK,EAAAwK,QACA5E,UAAA5F,EAAA4F,UAAA5F,EAAA4F,UAAArgB,KAAAokC,WACAkD,cAAA7sB,EAAA6sB,cACA1rB,aAAAnB,EAAAmB,aACAxM,SACAs5B,cAAAjuB,EAAAiuB,cAAAjuB,EAAAiuB,kBAKA,OAHAroC,OAAAmnC,EAAA,EAAAnnC,CAAAuG,MAAAggB,QAAAnM,EAAAkM,cACA,IACAud,EAAAgI,iBAAAtvC,EAAwD6d,EAAA,cAAAsL,IACxDnpB,GAcAsnC,EAAA3jC,UAAAosC,iBAAA,SAAAC,EAAAC,EAAAC,EACAryB,GACA,MAAAkL,KACA/oB,EAAAqnC,EAAA,QAAAnN,gBAAAoN,EAAAW,MAAA,eACAd,EAAAtpB,EAAAspB,QACAtpB,EAAAspB,QAAAG,EAAAM,gBACA0C,EAAA,UAAAnD,EAAA,IAGA,IAAAgJ,EAEA9K,EAJArlC,EAAAq6B,aAAA,iBACAr6B,EAAAq6B,aAAA,UAAA8M,GAIAtpB,IACAsyB,EAAAtyB,EAAAuyB,WAAAvyB,EAAAuyB,cACAvyB,EAAA2xB,QACAxvC,EAAAq6B,aAAA,SAAAxc,EAAA2xB,SAGA,MAAAlnB,EAAAgf,EAAAK,iBAAAR,GACAE,EAAA,QAAAyD,eAAA9qC,EAAA,4CACA,qBAAAsoB,GACA,MAAAoiB,EAAA7sB,EAAA6sB,cAAA7sB,EAAA6sB,cAAApD,EAAAQ,eAqCA,OApCAkI,IACA3K,GAAWrlC,OAAAyjB,UAAA5F,EAAA4F,UACXC,YAAA7F,EAAA6F,YAAAgnB,gBACAJ,aAAA7O,KAAA5d,EAAA4d,KAAApT,QAAAxK,EAAAwK,SACA5kB,OAAA8kC,EAAA,OAAA9kC,CAAA4hC,EAAA8K,GACA9I,EAAA,QAAAtM,oBAAAsK,EACAiC,EAAA4D,yBACA7D,EAAA,QAAArM,sBAAA,UAAAgV,EACAjnB,IAEAknB,IACA5K,GAAWrlC,OAAAyjB,UAAA5F,EAAA4F,UACXC,YAAA7F,EAAA6F,YAAAgnB,gBACAJ,aAAA7O,KAAA5d,EAAA4d,KAAApT,QAAAxK,EAAAwK,SACA5kB,OAAA8kC,EAAA,OAAA9kC,CAAA4hC,EAAA8K,GACA9I,EAAA,QAAAtM,oBAAAsK,EACAiC,EAAA4D,yBACA7D,EAAA,QAAArM,sBAAA,UAAAiV,EACAlnB,IAEAmnB,GACA7I,EAAA,QAAAtM,qBAAkC/6B,OAAAyjB,UAAA5F,EAAA4F,UAClCC,YAAA7F,EAAA6F,YAAAgnB,gBACAJ,aAAAjiB,QAAAxK,EAAAwK,SACAif,EAAA4D,yBACA7D,EAAA,QAAArM,sBAAA,UAAAkV,EACAnnB,GAEAlL,EAAAwyB,gBACAhJ,EAAA,QAAAtM,qBAAkC/6B,OAAAyjB,UAAA5F,EAAA4F,UAClCC,YAAA7F,EAAA6F,YAAAgnB,gBACAJ,aAAAjiB,QAAAxK,EAAAwK,SACAif,EAAA4D,yBACA7D,EAAA,QAAArM,sBAAA,UAAAnd,EAAAwyB,eACAtnB,GAEA/oB,GAYAsnC,EAAA3jC,UAAA6X,eAMA8rB,EAAA3jC,UAAA8X,2BAAA,SAAAd,GACA,QAAA9R,EAAA8R,EAAAK,WAA8BnS,EAAGA,IAAAoS,YACjC,GAAApS,EAAAqS,UAAAC,KAAAC,aACA,OAAAhY,KAAAsY,uBAAA7S,GAGA,aAOAy+B,EAAA3jC,UAAA+X,uBAAA,SAAA1b,GACA,GAAAA,EAAAsqB,mBACAtqB,EAAAsqB,oCAEA,QAAAzhB,GADA7I,IAAAsqB,qCACAA,kBAAwCzhB,EAAGA,IAAA+hB,mBAC3C,OAAA/hB,EAAA6F,WAAAvK,SACA,IAAA0E,EAAA6F,WAAAvK,QACA,IAAA0E,EAAAmS,WAAAE,UAAA,CACA,MAAA6N,OAEA,OADA3lB,KAAAqkC,WAAApd,oBAAAxhB,EAAAkgB,GACAtlB,OAAA6sC,EAAA,IAAA7sC,CAAAslB,EAAAU,MAAApB,SAKA,aAEAxlB,EAAA,2CC/kCAA,EAAA,wCCOAA,EAAA,GACAgkC,gBAAA,iBACAtf,UAAA,YACA9H,UAAA,YACAqnB,KAAA,oVCXAjnC,EAAA,SACAA,EAAA,MACAA,EAAA,yDAEA,IAAM6M,aAWJ,SAAAA,EAAYmR,gGAASC,CAAA1a,KAAAsJ,GAQnBtJ,KAAKmtC,uBAAyB,IAAA79B,EAAAxF,QAAiB2Q,EAAQ2yB,aASvDptC,KAAKqtC,OAAS5yB,EAAQ6yB,MA5BpB,OAAAvsB,EAAAzX,IAAAmQ,IAAA,UAAAlH,MAAA,WAmCFvS,KAAKmtC,uBAAuBI,WAnC1B9zB,IAAA,qBAAAlH,MAAA,SAiHeyD,GACjB,OAAOA,EAAWgW,QAChB1iB,EAAQkkC,gBAAgBC,GACxBnkC,EAAQkkC,gBAAgBE,OApHxBj0B,IAAA,gBAAAlH,MAAA,SA2HUyD,GACZhW,KAAKmtC,uBAAuBrsC,KAAKkV,MA5H/ByD,IAAA,mBAAAlH,MAAA,SAmIayD,GACfhW,KAAKmtC,uBAAuBQ,OAAO33B,MApIjCyD,IAAA,wBAAAlH,MAAA,WAkJF,IAAMq7B,EACF5tC,KAAK6tC,kBAAoBvkC,EAAQkkC,gBAAgBC,GAF/BtuB,GAAA,EAAAC,GAAA,EAAAC,OAAAjiB,EAAA,IAGtB,QAAAkiB,EAAAC,EAAyBvf,KAAKotC,YAA9B5tB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,KAAhCnJ,EAAgCsJ,EAAA/M,MACrCyD,EAAWgW,UAAY4hB,IACzB53B,EAAWgW,QAAU4hB,IALH,MAAA7zB,GAAAqF,GAAA,EAAAC,EAAAtF,EAAA,aAAAoF,GAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,OAjJpB5F,IAAA,cAAApP,IAAA,WA+CF,OAAOrK,KAAKmtC,uBAAuBx3B,cA/CjC8D,IAAA,wBAAApP,IAAA,WAwDF,OAAOrK,KAAKmtC,0BAxDV1zB,IAAA,QAAApP,IAAA,WAqEF,OAAOrK,KAAKqtC,UArEV5zB,IAAA,kBAAApP,IAAA,WAkFF,IAAIwK,SADgB8M,GAAA,EAAAC,GAAA,EAAAC,OAAAzkB,EAAA,IAGpB,QAAA0kB,EAAAC,EAAyB/hB,KAAKotC,YAA9B5tB,OAAAC,cAAAkC,GAAAG,EAAAC,EAAArC,QAAAC,MAAAgC,GAAA,EAA2C,KAAhC3L,EAAgC8L,EAAAvP,MACzC,QAAcnV,IAAVyX,EACFA,EAAQ7U,KAAK8tC,mBAAmB93B,QAEbhW,KAAK8tC,mBAAmB93B,KACxBnB,IACjBA,EAAQvL,EAAQkkC,gBAAgBO,eAGpC,GAAIl5B,IAAUvL,EAAQkkC,gBAAgBO,cACpC,OAbgB,MAAAh0B,GAAA6H,GAAA,EAAAC,EAAA9H,EAAA,aAAA4H,GAAAI,EAAAlC,QAAAkC,EAAAlC,SAAA,WAAA+B,EAAA,MAAAC,GAmBpB,OAFArU,EAAA1D,QAAYkK,aAAaa,GAElBA,MApGLvL,KAgKNA,EAAQkkC,iBACNO,cAAe,gBACfL,IAAK,MACLD,GAAI,gBAISnkC,4LC9Kf0kC,EAAAvxC,EAAA,IA4BA,MAAAwxC,EAAA,SAAA/2B,GAEA,MAAAuD,EAAAvD,MAEA/F,EAAAsJ,EAAAtJ,WAEA+8B,IAAA,gBAAA/8B,MAAA,YAEAg9B,EAAA,EAAApuC,KAAAC,MACAsgC,aAAA7lB,EAAA6lB,aACA8N,UAAA3zB,EAAA2zB,UACAxiB,YAAAnR,EAAAmR,YACAyiB,QAAAH,EACA3N,WAAA9lB,EAAA8lB,WACA+N,2BAAA7zB,EAAA6zB,2BACAC,UAAA9zB,EAAA8zB,UACAC,SAAA/zB,EAAA+zB,SACAC,iBAAAh0B,EAAAg0B,iBACA/gC,IAAA+M,EAAA/M,IACAghC,KAAAj0B,EAAAi0B,KACAC,WAAAvxC,IAAAqd,EAAAk0B,OAAAl0B,EAAAk0B,MACAC,WAAAn0B,EAAAm0B,aAOA5uC,KAAA6uC,aAAAzxC,IAAAqd,EAAAq0B,OAAAr0B,EAAAq0B,OAAA,EAMA9uC,KAAA4gC,QAAAzvB,EAMAnR,KAAA6gC,MAAA,EAMA7gC,KAAA+gC,YAAkEtmB,EAAA,WAMlEza,KAAAghC,YAAA5jC,IAAAqd,EAAAwmB,OAAAxmB,EAAAwmB,MAMAjhC,KAAA+uC,WAAA1uC,OAAA2uC,EAAA,YAAA3uC,GAEAL,KAAA8gC,aACA9gC,KAAAivC,OAAAjvC,KAAAkvC,qBAIA7uC,OAAA8uC,EAAA,SAAA9uC,CAAA4tC,EAAAE,EAAA,GAiBAF,EAAA1tC,UAAAghC,qBAAA,SAAAC,EAAAlD,EAAAiC,EAAApvB,GACA,MAAAswB,EAAAphC,OAAA+uC,EAAA,IAAA/uC,CAAAkgC,GACAmB,EAAA1hC,KAAA2hC,gBAEA,IAAA6M,EAAAxuC,KAAAqvC,cACAb,IACAA,EAAAxuC,KAAAsvC,yBAAA7N,IAGA,MAAA8N,EAAAf,EAAAgB,kCAAAhO,EAAAlD,GAEA,GAAAkQ,EAAAiB,iBAAA1uC,QAAAwuC,EAAA,GACA,OAGA,IAAAG,EAAAlB,EAAArf,cAAAogB,EAAA,IACAI,EAAAnB,EAAAoB,mBAAAL,EAAAvvC,KAAA+uC,YACAc,EAAAC,EAAA,QAAAC,OAAAvB,EAAAwB,YAAAT,EAAA,IAAAvvC,KAAAiwC,SAGA,MAAAnB,EAAA9uC,KAAA6uC,QACA,IAAAC,IACAe,EAAAC,EAAA,QAAAI,OAAAL,EAAAf,EAAA9uC,KAAAiwC,SACAN,EAAAtvC,OAAA2uC,EAAA,OAAA3uC,CAAAsvC,EAAAD,EAAAZ,EAAAa,IAGAjO,OAAAD,IACAiO,EAAAS,EAAA,EAAAtO,0BAAAH,EAAAD,EAAAD,EAAAkO,GACAC,EAAAtvC,OAAA+uC,EAAA,gBAAA/uC,CAAAsvC,EAAAlO,EAAAC,GACAF,EAAAnhC,OAAA+uC,EAAA,UAAA/uC,CAAAmhC,EAAAC,EAAAC,IAGA,MAAAI,GACApT,QAAA,MACAC,QAAAyhB,EAAA,EACAxhB,QAAA,iBACAtD,OAAA,YACAmD,aAAA,EACAuT,aAAAhiC,KAAA4gC,QAAA,QAEAvgC,OAAAgwC,EAAA,OAAAhwC,CAAAyhC,EAAA9hC,KAAA4gC,QAAAzvB,GAEA,MAAA7P,EAAAO,KAAAqgC,OAAAV,EAAA,GAAAmO,EAAA,IAAAD,GACAnuC,EAAAM,KAAAqgC,OAAAyN,EAAA,GAAAnO,EAAA,IAAAkO,GAKA,OAHA5N,EAAA9hC,KAAA6gC,KAAA,SAAAv/B,EACAwgC,EAAA9hC,KAAA6gC,KAAA,SAAAt/B,EAEAvB,KAAAmiC,eAAAoN,EAAAM,EAAAF,EACA,EAAAjO,GAAAD,EAAAK,IAOAmM,EAAA1tC,UAAA+vC,kBAAA,WACA,OAAAtwC,KAAA6uC,SAUAZ,EAAA1tC,UAAAkvB,UAAA,WACA,OAAAzvB,KAAA4gC,SAcAqN,EAAA1tC,UAAA4hC,eAAA,SAAAoN,EAAAM,EAAAF,EACApR,EAAAgC,EAAApvB,GAEA,MAAAu9B,EAAA1uC,KAAA0uC,KACA,IAAAA,EACA,OAYA,GATAv9B,EAAA,MAAA0+B,EAAA,GACA1+B,EAAA,OAAA0+B,EAAA,GAEA1+B,EAAAnR,KAAA6gC,KAAA,aAAAN,EAAA+C,UAEA,WAAAtjC,KAAA4gC,UACAzvB,EAAA,WAGA,GAAAotB,EACA,OAAAv+B,KAAA+gC,aACA,KAAAwP,EAAA,EAAApsB,UACA,MAAAqf,EAAA,GAAAjF,EAAA,KACA,mBAAAptB,EACAA,EAAA,wBAAwCqyB,EAExCryB,EAAA,sBAAAqyB,EAEA,MACA,KAAA+M,EAAA,EAAAl0B,UACAlL,EAAA,kBAAAotB,EACA,MACA,KAAAgS,EAAA,EAAA9M,gBACA,KAAA8M,EAAA,EAAA7M,KACAvyB,EAAA,OAAAotB,EACA,MACA,QACAl+B,OAAAmwC,EAAA,EAAAnwC,EAAA,MAKA,MAAAm1B,EAAA+K,EAAA5K,qBACAgO,EAAAgM,EACA,GAAA3vC,KAAA6gC,MAAA,MAAArL,EAAAO,OAAA,MACA,IAAA0a,EACAA,EAAAd,EAAA,GACAhM,EAAA,GAAAgM,EAAA,GACAhM,EAAA,GAAA8M,EACAA,EAAAd,EAAA,GACAhM,EAAA,GAAAgM,EAAA,GACAhM,EAAA,GAAA8M,EAIA,IAAA/iC,EACA,GAHAyD,EAAA,KAAAwyB,EAAAlyB,KAAA,KAGA,GAAAi9B,EAAA3tC,OACA2M,EAAAghC,EAAA,OACG,CAEHhhC,EAAAghC,EADAruC,OAAAqwC,EAAA,OAAArwC,CAAAswC,EAAA,EAAAC,KAAArB,GAAAb,EAAA3tC,SAGA,OAAAV,OAAA2tC,EAAA,aAAA3tC,CAAAqN,EAAAyD,IAOA88B,EAAA1tC,UAAAswC,kBAAA,SAAAtS,GACA,OAAAv+B,KAAAghC,aAAA5jC,IAAA4C,KAAA+gC,YACoB,EADpB,GASAkN,EAAA1tC,UAAA2uC,iBAAA,WACA,IAAA3rC,EAAA,EACA,MAAA+d,KACA,UAAA7H,KAAAzZ,KAAA4gC,QACAtf,EAAA/d,KAAAkW,EAAA,IAAAzZ,KAAA4gC,QAAAnnB,GAEA,OAAA6H,EAAA7P,KAAA,MAOAw8B,EAAA1tC,UAAAuwC,qBAAA,SAAAvB,EAAAhR,EAAAgC,GAEA,IAAAiO,EAAAxuC,KAAAqvC,cAKA,GAJAb,IACAA,EAAAxuC,KAAAsvC,yBAAA/O,IAGAiO,EAAAiB,iBAAA1uC,QAAAwuC,EAAA,GACA,OAGA,GAAAhR,GAAAv+B,KAAAghC,aAAA5jC,IAAA4C,KAAA+gC,cACAxC,EAAA,GAGA,MAAAmR,EAAAlB,EAAArf,cAAAogB,EAAA,IACA,IAAAI,EAAAnB,EAAAoB,mBAAAL,EAAAvvC,KAAA+uC,YACAc,EAAAC,EAAA,QAAAC,OACAvB,EAAAwB,YAAAT,EAAA,IAAAvvC,KAAAiwC,SAEA,MAAAnB,EAAA9uC,KAAA6uC,QACA,IAAAC,IACAe,EAAAC,EAAA,QAAAI,OAAAL,EAAAf,EAAA9uC,KAAAiwC,SACAN,EAAAtvC,OAAA2uC,EAAA,OAAA3uC,CAAAsvC,EAAAD,EAAAZ,EAAAa,IAGA,GAAApR,IACAsR,EAAAC,EAAA,QAAAiB,MAAAlB,EAAAtR,EAAAv+B,KAAAiwC,UAGA,MAAAnO,GACApT,QAAA,MACAC,QAAAyhB,EAAA,EACAxhB,QAAA,SACAtD,OAAA,YACAmD,aAAA,GAIA,OAFApuB,OAAAgwC,EAAA,OAAAhwC,CAAAyhC,EAAA9hC,KAAA4gC,SAEA5gC,KAAAmiC,eAAAoN,EAAAM,EAAAF,EACApR,EAAAgC,EAAAuB,IAQAmM,EAAA1tC,UAAA8Z,aAAA,SAAAlJ,GACA9Q,OAAAgwC,EAAA,OAAAhwC,CAAAL,KAAA4gC,QAAAzvB,GACAnR,KAAA8gC,aACA9gC,KAAAivC,OAAAjvC,KAAAkvC,qBAOAjB,EAAA1tC,UAAAugC,WAAA,WACA,MAAAiD,EAAA/jC,KAAA4gC,QAAA,SAAAwP,EAAA,EACApwC,KAAA6gC,KAAAmQ,EAAA,QAAAhN,gBAAAD,EAAA,WAEAtkC,EAAA,yFCrVA,QAAAhD,EAAA,SACAA,EAAA,MACAA,EAAA,yDA6BA,IAAM6M,EAAU,SAAS2nC,EAAUC,GAKjClxC,KAAKmxC,SAAWD,EAMhBlxC,KAAKoxC,QAAUH,EAASI,SAASpV,UAAU,EAAGgV,EAASI,SAAStwC,OAAS,GAMzEf,KAAKsxC,QAAUL,EAASM,SAMxBvxC,KAAKwxC,MAAQP,EAASQ,KAAO1zC,SAASkzC,EAASQ,KAAM,SAAMr0C,EAM3D4C,KAAK0xC,MAAQT,EAASU,SAMtB3xC,KAAK4xC,WAAaC,EAAA/nC,QAAUgoC,kBAAkBb,EAASc,QAMvD/xC,KAAKgyC,UAAYH,EAAA/nC,QAAUgoC,kBAAkBb,EAASL,OAQxDtnC,EAAQ2oC,aAAe,SAASf,EAASr8B,GACvC,IACEq8B,EAAQe,aAAa,KAAM,GAAIp9B,GAC/B,MAAO5G,MAYX3E,EAAQ/I,UAAU2xC,QAAU,WAC1B,OAAOlyC,KAAK0xC,OASdpoC,EAAQ/I,UAAU4xC,aAAe,WAC/B,IAAMC,KAEFpyC,KAAKoxC,SACPgB,EAAItxC,KAAKd,KAAKoxC,QAAS,MAGrBpxC,KAAKsxC,SAA4B,SAAjBtxC,KAAKoxC,WACvBgB,EAAItxC,KAAK,MAETsxC,EAAItxC,KAAKd,KAAKsxC,cAEKl0C,IAAf4C,KAAKwxC,OACPY,EAAItxC,KAAK,IAAKuxC,OAAOryC,KAAKwxC,SAI1BxxC,KAAK0xC,QACH1xC,KAAKsxC,SAAoC,MAAzBtxC,KAAK0xC,MAAMY,OAAO,IACpCF,EAAItxC,KAAK,KAEXsxC,EAAItxC,KAAKd,KAAK0xC,QAGhB,IAAMa,EAAmBV,EAAA/nC,QAAU0oC,kBAAkBxyC,KAAK4xC,YACtDW,EAAiBxxC,OAAS,GAC5BqxC,EAAItxC,KAAK,IAAKyxC,GAGhB,IAAME,EAAkBZ,EAAA/nC,QAAU0oC,kBAAkBxyC,KAAKgyC,WAIzD,OAHIS,EAAgB1xC,OAAS,GAC3BqxC,EAAItxC,KAAK,IAAK2xC,GAETL,EAAI3gC,KAAK,KAUlBnI,EAAQ/I,UAAUmR,SAAW,SAAS+H,GACpC,OAAOA,KAAOzZ,KAAK4xC,YAUrBtoC,EAAQ/I,UAAUmyC,iBAAmB,SAASj5B,GAC5C,OAAOA,KAAOzZ,KAAKgyC,WAUrB1oC,EAAQ/I,UAAUuZ,SAAW,SAASL,GACpC,OAAOzZ,KAAK4xC,WAAWn4B,IAUzBnQ,EAAQ/I,UAAUoyC,iBAAmB,SAASl5B,GAC5C,OAAOzZ,KAAKgyC,UAAUv4B,IAWxBnQ,EAAQ/I,UAAUqyC,cAAgB,SAASn5B,GACzC,IAAMlH,EAAQvS,KAAK8Z,SAASL,GAC5B,QAAcrc,IAAVmV,EAAJ,CAGA/E,EAAA1D,QAAYkK,aAAazB,GACzB,IAAMsgC,EAAa90C,SAASwU,EAAO,IACnC,OAAQ9U,MAAMo1C,QAAez1C,EAAYy1C,IAY3CvpC,EAAQ/I,UAAUuyC,gBAAkB,SAASr5B,GAC3C,IAAMlH,EAAQvS,KAAK8Z,SAASL,GAC5B,QAAcrc,IAAVmV,EAAJ,CAGA/E,EAAA1D,QAAYkK,aAAazB,GACzB,IAAMwgC,EAAen1C,WAAW2U,GAChC,OAAO9U,MAAMs1C,QAAgB31C,EAAY21C,IAW3CzpC,EAAQ/I,UAAUyyC,sBAAwB,SAASv5B,GACjD,IAAMlH,EAAQvS,KAAK2yC,iBAAiBl5B,GACpC,QAAcrc,IAAVmV,EAAJ,CAGA/E,EAAA1D,QAAYkK,aAAazB,GACzB,IAAMsgC,EAAa90C,SAASwU,EAAO,IACnC,OAAQ9U,MAAMo1C,QAAez1C,EAAYy1C,IAS3CvpC,EAAQ/I,UAAUiZ,aAAe,WAC/B,IAAM6d,KACN,IAAK,IAAM5d,KAAOzZ,KAAK4xC,WACrBva,EAAKv2B,KAAK2Y,GAEZ,OAAO4d,GAST/tB,EAAQ/I,UAAU0yC,qBAAuB,WACvC,IAAM5b,KACN,IAAK,IAAM5d,KAAOzZ,KAAKgyC,UACrB3a,EAAKv2B,KAAK2Y,GAEZ,OAAO4d,GAWT/tB,EAAQ/I,UAAU2yC,uBAAyB,SAASltB,GAClD,IAAMqR,KACN,IAAK,IAAM5d,KAAOzZ,KAAK4xC,WACM,GAAvBn4B,EAAIhG,QAAQuS,IACdqR,EAAKv2B,KAAK2Y,GAGd,OAAO4d,GAWT/tB,EAAQ/I,UAAU4yC,+BAAiC,SAASntB,GAC1D,IAAMqR,KACN,IAAK,IAAM5d,KAAOzZ,KAAKgyC,UACM,GAAvBv4B,EAAIhG,QAAQuS,IACdqR,EAAKv2B,KAAK2Y,GAGd,OAAO4d,GAST/tB,EAAQ/I,UAAU8Z,aAAe,SAASlJ,GACxC,IAAK,IAAMsI,KAAOtI,EAChBnR,KAAK4xC,WAAWn4B,GAAOtI,EAAOsI,IAUlCnQ,EAAQ/I,UAAU6yC,qBAAuB,SAASjiC,GAChD,IAAK,IAAMsI,KAAOtI,EAChBnR,KAAKgyC,UAAUv4B,GAAOtI,EAAOsI,IAUjCnQ,EAAQ/I,UAAU+Z,YAAc,SAASb,UAChCzZ,KAAK4xC,WAAWn4B,IASzBnQ,EAAQ/I,UAAU8yC,oBAAsB,SAAS55B,UACxCzZ,KAAKgyC,UAAUv4B,IAQxBnQ,EAAQ/I,UAAU+yC,QAAU,WAC1BhqC,EAAQ2oC,aAAajyC,KAAKmxC,SAAUnxC,KAAKmyC,iBAS3C7oC,EAAQ/I,UAAUgzC,QAAU,SAASC,GACnCxzC,KAAK0xC,MAAQ8B,IAYflqC,EAAQmqC,gBAAkB,SAAS/gC,EAAYghC,GAC7C,IAAMxC,EAAUwC,EAAQxC,QAClB1+B,EAAU,IAAIlJ,EAAQoqC,EAAQzC,SAAUyC,EAAQxC,SAElDyC,EAAUnhC,EAAQ2/B,eActB,OAbAz/B,EAAWO,OAAO,WAChB,IAAM2gC,EAASphC,EAAQ2/B,eACnBwB,IAAYC,GACdlhC,EAAWmhC,WAAW,WACpBF,EAAUC,OACMx2C,IAAZ8zC,QAAkD9zC,IAAzB8zC,EAAQe,cACnC3oC,EAAQ2oC,aAAaf,EAAS0C,GAEhClhC,EAAW6B,WAAW,0BAKrB/B,sCAcTlJ,EAAQwqC,aAAe,SAASC,GAI9BA,EAAA,KAA4B,WA0D1B,OArDEC,OAJqD,WAKnD,MAAO,IAMTpD,KAXqD,SAWhDqD,GACH,YAAoB72C,IAAb62C,EAAyBj0C,KAAO,IAKzCk0C,KAjBqD,WAkBnD,MAAO,IAMTV,KAxBqD,SAwBhDS,GACH,YAAoB72C,IAAb62C,EAAyBj0C,KAAO,IAKzCyxC,KA9BqD,WA+BnD,OAAO,GAKTJ,SApCqD,WAqCnD,MAAO,IAET5lB,QAvCqD,aA8CrDsmB,OA9CqD,SA8C9CoC,EAAYC,GACjB,YAAsBh3C,IAAf+2C,EAA2Bn0C,SAMpC0N,IArDqD,SAqDjD2mC,GACF,MAAO,uCAaf/qC,EAAQ8I,OAASC,QAAQD,OAAO,oBACjBkiC,QAAQ,eAAgBhrC,EAAQmqC,2BAGhCnqC,+UCpefirC,EAAA93C,EAAA,uBAKA,IAAM6M,aAkBJ,SAAAA,EAAYmR,gGAASC,CAAA1a,KAAAsJ,GAiBnBtJ,KAAKw0C,UAA+B,IAApB/5B,EAAQg6B,QAQxBz0C,KAAK00C,UAA+B,IAApBj6B,EAAQuR,QAcxBhsB,KAAKihB,WAAaxG,EAAQwG,YAAc,KAOxCjhB,KAAK20C,IAAMl6B,EAAQwR,GASnBjsB,KAAK40C,qBAAuBn6B,EAAQo6B,oBAOpC70C,KAAK80C,eAAiBr6B,EAAQ9J,cAO9B3Q,KAAK+0C,eAAiBt6B,EAAQ3J,cAO9B9Q,KAAKg1C,MAAQv6B,EAAQvP,KA9FnB,OAAA6V,EAAAzX,IAAAmQ,IAAA,gBAAAlH,MAAA,WA8IF,OAAOvS,KAAKihB,cA9IVxH,IAAA,gBAAAlH,MAAA,SAqJU0O,GACZjhB,KAAKihB,WAAaA,KAtJhBxH,IAAA,UAAApP,IAAA,WA0GF,OAAOrK,KAAKw0C,UA1GV9nC,IAAA,SAiHQ+nC,GACVz0C,KAAKw0C,SAAWC,KAlHdh7B,IAAA,UAAApP,IAAA,WA0HF,OAAOrK,KAAK00C,UA1HVhoC,IAAA,SAiIQsf,GACVhsB,KAAK00C,SAAW1oB,KAlIdvS,IAAA,KAAApP,IAAA,WA8JF,OAAOrK,KAAK20C,OA9JVl7B,IAAA,sBAAApP,IAAA,WAsKF,OAAOrK,KAAK40C,wBAtKVn7B,IAAA,gBAAApP,IAAA,WA8KF,OAAOrK,KAAK80C,kBA9KVr7B,IAAA,gBAAApP,IAAA,WAsLF,OAAOrK,KAAK+0C,kBAtLVt7B,IAAA,OAAApP,IAAA,WA8LF,OAAOrK,KAAKg1C,SA9LVv7B,IAAA,YAAApP,IAAA,WA4MF,OAAO,KA5MLoP,IAAA,yBAAApP,IAAA,WAqNF,OAA8B,OAAvBrK,KAAK2Q,eAAiD,OAAvB3Q,KAAK8Q,kBArNzCxH,eA0NSA,6FClOf2rC,EAAAx4C,EAAA,KAcA,MAAAy4C,EAAA,SAAAh+B,GAEA,MAAAuD,EAAAvD,MAMAlX,KAAAm1C,MAAA16B,EAAA26B,KAMAp1C,KAAAq1C,UAAA56B,EAAA66B,SAMAt1C,KAAAu1C,gBAAA96B,EAAA+6B,eAMAx1C,KAAAy1C,OAAAh7B,EAAAs2B,MAMA/wC,KAAA01C,MAAAj7B,EAAAk7B,KAMA31C,KAAA41C,WAAAn7B,EAAAo7B,UAMA71C,KAAA81C,cAAAr7B,EAAAs7B,aAMA/1C,KAAAg2C,WAAA54C,IAAAqd,EAAAw7B,KAAAx7B,EAAAw7B,KACA,IAAAC,EAAA,SAAcC,MAAAjB,EAAAkB,sBAMdp2C,KAAAq2C,eAAAj5C,IAAAqd,EAAA67B,SAAA77B,EAAA67B,SAAAz0C,KAAA00C,GAAA,EAMAv2C,KAAAw2C,gBAAAp5C,IAAAqd,EAAAg8B,UAAAh8B,EAAAg8B,UAAAxB,EAAA,EAAAyB,MAMA12C,KAAA22C,YAAAl8B,EAAAm8B,SAMA52C,KAAA62C,aAAAz5C,IAAAqd,EAAAq8B,OAAAr8B,EAAAq8B,OAAA,KAMA92C,KAAA+2C,cAAA35C,IAAAqd,EAAAu8B,QAAAv8B,EAAAu8B,QAAA,EAMAh3C,KAAAi3C,cAAA75C,IAAAqd,EAAAy8B,QAAAz8B,EAAAy8B,QAAA,EAMAl3C,KAAAm3C,gBAAA18B,EAAA28B,eAAA38B,EAAA28B,eAAA,KAMAp3C,KAAAq3C,kBAAA58B,EAAA68B,iBAAA78B,EAAA68B,iBAAA,KAMAt3C,KAAAu3C,cAAAn6C,IAAAqd,EAAA+8B,QAAA,KAAA/8B,EAAA+8B,SAWAtC,EAAAkB,oBAAA,OAQAlB,EAAA30C,UAAAU,MAAA,WACA,WAAAi0C,GACAE,KAAAp1C,KAAAy3C,UACAhB,UAAAz2C,KAAA03C,eACApB,SAAAt2C,KAAA23C,cACAf,SAAA52C,KAAA43C,cACAtC,SAAAt1C,KAAA63C,cACArC,eAAAx1C,KAAA83C,oBACA/G,MAAA/wC,KAAA+3C,WACApC,KAAA31C,KAAAg4C,UACAnC,UAAA71C,KAAAi4C,eACAlC,aAAA/1C,KAAAk4C,kBACAjC,KAAAj2C,KAAAm4C,UAAAn4C,KAAAm4C,UAAAl3C,aAAA7D,EACA05C,OAAA92C,KAAAo4C,YAAAp4C,KAAAo4C,YAAAn3C,aAAA7D,EACA45C,QAAAh3C,KAAAq4C,aACAnB,QAAAl3C,KAAAs4C,aACAlB,eAAAp3C,KAAAu4C,oBAAAv4C,KAAAu4C,oBAAAt3C,aAAA7D,EACAk6C,iBAAAt3C,KAAAw4C,sBAAAx4C,KAAAw4C,sBAAAv3C,aAAA7D,KAUA83C,EAAA30C,UAAAq3C,YAAA,WACA,OAAA53C,KAAA22C,WASAzB,EAAA30C,UAAAk3C,QAAA,WACA,OAAAz3C,KAAAm1C,OASAD,EAAA30C,UAAAo3C,YAAA,WACA,OAAA33C,KAAAq2C,WASAnB,EAAA30C,UAAAm3C,aAAA,WACA,OAAA13C,KAAAw2C,YASAtB,EAAA30C,UAAA83C,WAAA,WACA,OAAAr4C,KAAA+2C,UASA7B,EAAA30C,UAAA+3C,WAAA,WACA,OAAAt4C,KAAAi3C,UASA/B,EAAA30C,UAAA43C,QAAA,WACA,OAAAn4C,KAAAg2C,OASAd,EAAA30C,UAAAu3C,kBAAA,WACA,OAAA93C,KAAAu1C,iBASAL,EAAA30C,UAAAs3C,YAAA,WACA,OAAA73C,KAAAq1C,WASAH,EAAA30C,UAAAw3C,SAAA,WACA,OAAA/3C,KAAAy1C,QASAP,EAAA30C,UAAA63C,UAAA,WACA,OAAAp4C,KAAA62C,SASA3B,EAAA30C,UAAAy3C,QAAA,WACA,OAAAh4C,KAAA01C,OASAR,EAAA30C,UAAA03C,aAAA,WACA,OAAAj4C,KAAA41C,YASAV,EAAA30C,UAAA23C,gBAAA,WACA,OAAAl4C,KAAA81C,eASAZ,EAAA30C,UAAAg4C,kBAAA,WACA,OAAAv4C,KAAAm3C,iBASAjC,EAAA30C,UAAAi4C,oBAAA,WACA,OAAAx4C,KAAAq3C,mBASAnC,EAAA30C,UAAAk4C,WAAA,WACA,OAAAz4C,KAAAu3C,UAUArC,EAAA30C,UAAAm4C,YAAA,SAAA9B,GACA52C,KAAA22C,UAAAC,GAUA1B,EAAA30C,UAAAo4C,QAAA,SAAAvD,GACAp1C,KAAAm1C,MAAAC,GAUAF,EAAA30C,UAAAq4C,YAAA,SAAAtC,GACAt2C,KAAAq2C,UAAAC,GAUApB,EAAA30C,UAAAs4C,WAAA,SAAA7B,GACAh3C,KAAA+2C,SAAAC,GAUA9B,EAAA30C,UAAAu4C,WAAA,SAAA5B,GACAl3C,KAAAi3C,SAAAC,GAUAhC,EAAA30C,UAAAw4C,aAAA,SAAAtC,GACAz2C,KAAAw2C,WAAAC,GAUAvB,EAAA30C,UAAAy4C,QAAA,SAAA/C,GACAj2C,KAAAg2C,MAAAC,GAUAf,EAAA30C,UAAA04C,YAAA,SAAA3D,GACAt1C,KAAAq1C,UAAAC,GAUAJ,EAAA30C,UAAA24C,SAAA,SAAAnI,GACA/wC,KAAAy1C,OAAA1E,GAUAmE,EAAA30C,UAAA44C,UAAA,SAAArC,GACA92C,KAAA62C,QAAAC,GAUA5B,EAAA30C,UAAA64C,QAAA,SAAAzD,GACA31C,KAAA01C,MAAAC,GAUAT,EAAA30C,UAAA84C,aAAA,SAAAxD,GACA71C,KAAA41C,WAAAC,GAUAX,EAAA30C,UAAA+4C,gBAAA,SAAAvD,GACA/1C,KAAA81C,cAAAC,GAUAb,EAAA30C,UAAAg5C,kBAAA,SAAAtD,GACAj2C,KAAAm3C,gBAAAlB,GAUAf,EAAA30C,UAAAi5C,oBAAA,SAAA1C,GACA92C,KAAAq3C,kBAAAP,GAUA5B,EAAA30C,UAAAk5C,WAAA,SAAAjC,GACAx3C,KAAAu3C,SAAAC,GAEA/3C,EAAA,wMCxfAi6C,EAAAj9C,EAAA,GA+BA,MAAA0hB,EAAA,SAAAjH,GACA,MAAAuD,EACAvD,MAEAkuB,EAAA,EAAArlC,KAAAC,KAAAya,GAMAza,KAAA25C,cAAAv8C,IAAAqd,EAAAmc,SAAAnc,EAAAmc,QAMA52B,KAAA45C,YAAAx8C,IAAAqd,EAAA+e,OAAA/e,EAAA+e,MAMAx5B,KAAA65C,iBAAAz8C,IAAAqd,EAAAoc,YACApc,EAAAoc,WAMA72B,KAAA85C,mBAAA18C,IAAAqd,EAAAkc,cACAlc,EAAAkc,aAKA32B,KAAAklB,eAAAzK,EAAAyK,eACAzK,EAAAyK,eAAA/G,EAAAkX,gBAMAr1B,KAAAq4B,UAAAj7B,IAAAqd,EAAA4d,MACA5d,EAAA4d,MAIAh4B,OAAAC,EAAA,SAAAD,CAAA8d,EAAAinB,EAAA,GAQAjnB,EAAAkX,gBAAA+P,EAAA,EAAAhgB,MACA,8EAUAjH,EAAA5d,UAAAw5C,gBAAA,SAAAn9C,EAAA+oB,GAEA,MAAAriB,EAAAo2C,EAAA,QAAA5zB,mBACA9lB,KAAAg6C,oBAAAp9C,EAAA+oB,EAAA3lB,MACA,GAAAsD,EAAA,CACA,MAAApC,EAAA,IAAA+4C,EAAA,cAEA,OADA/4C,EAAA4D,eAAAxB,GACApC,IAaAid,EAAA5d,UAAA25C,kBAAA,SAAAt9C,EAAA+oB,GAEA,MAAA9c,EAAA6wC,EAAA,QAAA5zB,mBACA9lB,KAAAm6C,sBAAAv9C,EAAA+oB,EAAA3lB,MACA,GAAA6I,EAAA,CACA,MAAApC,EAAA,IAAAgiB,EAAA,cAEA,OADAhiB,EAAA0C,YAAAN,GACApC,IAYA0X,EAAA5d,UAAA65C,mBAAA,SAAAx9C,EAAA+oB,GACA+zB,EAAA,QAAA/wB,UAAA3oB,KAAAq6C,qBAAAz9C,EAAA+oB,EAAA3lB,OASAme,EAAA5d,UAAA+5C,qBAAA,SAAA19C,EAAA+oB,GACA+zB,EAAA,QAAA/wB,UAAA3oB,KAAAu6C,uBACA39C,EAAA+oB,EAAA3lB,OAUAme,EAAA5d,UAAAi6C,WAAA,SAAA59C,EAAA+oB,GACA,OAAA+zB,EAAA,QAAA5zB,iBAAA,MACA9lB,KAAAy6C,iBAAA79C,EAAA+oB,EAAA3lB,OAUAme,EAAA5d,UAAAm6C,aAAA,SAAA99C,EAAA+oB,GACA,OAAA+zB,EAAA,QAAA5zB,iBAAA,MACA9lB,KAAA26C,kBAAA/9C,EAAA+oB,EAAA3lB,OAUAme,EAAA5d,UAAAq6C,kBAAA,SAAAh+C,EAAA+oB,GACA,OAAA+zB,EAAA,QAAA5zB,iBAAA,MACA9lB,KAAA0pB,2BAAA9sB,EAAA+oB,EAAA3lB,OAUAme,EAAA5d,UAAAs6C,uBAAA,SAAAj+C,EAAA+oB,GACA,OAAA+zB,EAAA,QAAA5zB,iBAAA,MACA9lB,KAAAqpB,mCACAzsB,EAAA+oB,EAAA3lB,OASAme,EAAA5d,UAAAu6C,gBAAA,SAAAl+C,EAAA+oB,GAEA,MAAAyQ,EAAAsjB,EAAA,QAAA5zB,qBAAA1oB,EACA4C,KAAAsqB,aAAA1tB,EAAA+oB,EAAA3lB,MACA,GAAAo2B,EAAA,CAEAzQ,IAAA5kB,OAAA,GACAD,KAAAs1B,KAUAjY,EAAA5d,UAAAw6C,gBAAA,SAAAn+C,EAAA+oB,GAEA,MAAAyQ,EAAAsjB,EAAA,QAAA5zB,qBAAA1oB,EACA4C,KAAAsqB,aAAA1tB,EAAA+oB,EAAA3lB,MACA,GAAAo2B,EAAA,CAEAzQ,IAAA5kB,OAAA,GACA,GAAAq1B,IAWAjY,EAAA5d,UAAAy6C,aAAA,SAAAp+C,EAAA+oB,GAEA,MAAA8D,EAAAiwB,EAAA,QAAA5zB,iBAAA,MACA9lB,KAAAi7C,iBAAAr+C,EAAA+oB,EAAA3lB,MACA,GAAAypB,KAAA,IACA,MAAAjjB,EAAA,IAAA00C,EAAA,cACAx6C,EAAA+oB,EAAA,GACApmB,GAAA3C,EAAAK,QACA,IAAAwC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAimB,EAAA1oB,OAA4CwC,EAAAC,IAAQD,EACpDlD,OAAAM,EAAA,OAAAN,CAAAK,EAAA+oB,EAAAlmB,IACAF,EAAAvC,KAAAJ,EAAAK,QAIA,OAFAyF,EAAArF,mBACAg6C,EAAA,QAAAnzB,IAAAtnB,EAAA2C,GACAmD,IAaA2X,EAAA5d,UAAA66C,WAAA,SAAAx+C,EAAA+oB,GAEA,MAAAjlB,EAAAg5C,EAAA,QAAA5zB,iBAAA,MACA9lB,KAAAq7C,eAAAz+C,EAAA+oB,EAAA3lB,MACA,GAAAU,EAAA,CACA,MAAAD,EAAA,IAAA66C,EAAA,cAEA,OADA76C,EAAAU,mBAAAg6C,EAAA,QAAAnzB,IAAAtnB,GACAD,IAaA0d,EAAA5d,UAAAg7C,cAAA,SAAA3+C,EAAA+oB,GAEA,MAAAjlB,EAAAg5C,EAAA,QAAA5zB,iBAAA,MACA9lB,KAAAw7C,kBAAA5+C,EAAA+oB,EAAA3lB,MACA,OAAAK,OAAAqB,EAAA,eAAArB,CAAAK,EAAA,MACAA,EAAA,MAAAA,EAAA,MACAA,EAAA,QAUAyd,EAAA5d,UAAAk7C,aAAA,SAAA7+C,EAAA+oB,GACA,IAAA9oB,EAAA68C,EAAA,QAAA38C,kBAAAH,GAAA,GACA,MAAA8+C,EAAA,6CAEAh7C,KACA,IAAAxD,EACA,KAAAA,EAAAw+C,EAAAv+C,KAAAN,IACA6D,EAAAI,KAAAlD,WAAAV,EAAA,KACAL,IAAAk5B,OAAA74B,EAAA,GAAA6D,QAEA,QAAAlE,EACA,OAEA,MACA04B,EADA5P,EAAA,GACA,QACA,IAAA6P,EAAA,MACA,GAAAD,EAAA,CAEAC,EADAn1B,OAAAs7C,EAAA,IAAAt7C,CAAAk1B,GACAI,qBAEA,WAAAH,EAAA,CACA,IAAAjyB,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA9C,EAAAK,OAA4CwC,EAAAC,EAAQD,GAAA,GACpD,MAAAhC,EAAAb,EAAA6C,GACAjC,EAAAZ,EAAA6C,EAAA,GACA7C,EAAA6C,GAAAjC,EACAZ,EAAA6C,EAAA,GAAAhC,GAGA,MAAAmF,EAAAhG,EAAAK,OAIA,OAHA,GAAA2F,GACAhG,EAAAI,KAAA,GAEA,IAAA4F,EAGAhG,OAHA,GAaAyd,EAAA5d,UAAAq7C,iBAAA,SAAAh/C,EAAA+oB,GACA,MAAA9oB,EAAA68C,EAAA,QAAA38C,kBAAAH,GAAA,GAAA6uB,QAAA,iBACA1F,EAAAJ,EAAA,GACA4P,EAAAxP,EAAA,QACA81B,EAAA91B,EAAA,aACA,IAAAyP,EAAA,MACA,GAAAD,EAAA,CAEAC,EADAn1B,OAAAs7C,EAAA,IAAAt7C,CAAAk1B,GACAI,qBAEA,MAAAG,EAAAj5B,EAAAupB,MAAA,OAEA,IAaA9kB,EAAAC,EAAAs0B,EAbAimB,EAAA,EACAl/C,EAAAuqB,aAAA,gBACA20B,EAAAC,EAAA,EAAAj+C,6BACAlB,EAAAuqB,aAAA,iBACGvqB,EAAAuqB,aAAA,aACH20B,EAAAC,EAAA,EAAAj+C,6BACAlB,EAAAuqB,aAAA,cACGvqB,EAAAo8B,WAAA7R,aAAA,gBACH20B,EAAAC,EAAA,EAAAj+C,6BACAlB,EAAAo8B,WAAA7R,aAAA,iBACG00B,IACHC,EAAAC,EAAA,EAAAj+C,6BAAA+9C,IAGA,MAAAn7C,KACA,QAAA6C,EAAA,EAAAC,EAAAsyB,EAAA/0B,OAAqCwC,EAAAC,EAAQD,GAAAu4C,EAC7Cx6C,EAAA1D,WAAAk4B,EAAAvyB,IACAhC,EAAA3D,WAAAk4B,EAAAvyB,EAAA,IACAsyB,EAAA,IAAAimB,EAAAl+C,WAAAk4B,EAAAvyB,EAAA,MACA,OAAAiyB,EAAAO,OAAA,KACAr1B,EAAAI,KAAAQ,EAAAC,EAAAs0B,GAEAn1B,EAAAI,KAAAS,EAAAD,EAAAu0B,GAGA,OAAAn1B,GASAyd,EAAA5d,UAAA8oB,oCACAO,8BACAoyB,IAAAtC,EAAA,QAAAp0B,aAAAnH,EAAA5d,UAAAk7C,cACAQ,QAAAvC,EAAA,QAAAp0B,aAAAnH,EAAA5d,UAAAq7C,oBAUAz9B,EAAA5d,UAAAmpB,4BACAE,8BACAsyB,SAAA/9B,EAAA5d,UAAAu6C,gBACAqB,SAAAh+B,EAAA5d,UAAAw6C,kBAUA58B,EAAA5d,UAAA6mB,mBACAwC,8BACAO,MAAAuvB,EAAA,QAAAp0B,aAAA8f,EAAA,EAAA7kC,UAAAqnB,WACA3iB,WAAAy0C,EAAA,QAAAp0B,aACA8f,EAAA,EAAA7kC,UAAA0nB,gBACAmC,WAAAsvB,EAAA,QAAAp0B,aACA8f,EAAA,EAAA7kC,UAAA0oB,gBACAtpB,gBAAA+5C,EAAA,QAAAp0B,aACA8f,EAAA,EAAA7kC,UAAA6nB,qBACAmC,WAAAmvB,EAAA,QAAAp0B,aACA8f,EAAA,EAAA7kC,UAAA+oB,gBACAe,QAAAqvB,EAAA,QAAAp0B,aAAA8f,EAAA,EAAA7kC,UAAAipB,aACAxjB,aAAA0zC,EAAA,QAAAp0B,aACA8f,EAAA,EAAA7kC,UAAAgoB,kBACAmS,QAAAgf,EAAA,QAAAp0B,aAAAnH,EAAA5d,UAAAy6C,cACArgB,aAAA+e,EAAA,QAAAp0B,aACAnH,EAAA5d,UAAA25C,mBACA1f,MAAAkf,EAAA,QAAAp0B,aAAAnH,EAAA5d,UAAA66C,YACA3gB,WAAAif,EAAA,QAAAp0B,aACAnH,EAAA5d,UAAAw5C,iBACAnf,SAAA8e,EAAA,QAAAp0B,aAAAnH,EAAA5d,UAAAg7C,iBAUAp9B,EAAA5d,UAAAy5C,qBACApwB,8BACAiR,YAAA6e,EAAA,QAAA3yB,gBACA5I,EAAA5d,UAAA65C,oBACAgC,aAAA1C,EAAA,QAAA3yB,gBACA5I,EAAA5d,UAAA65C,sBAUAj8B,EAAA5d,UAAA45C,uBACAvwB,8BACAmR,cAAA2e,EAAA,QAAA3yB,gBACA5I,EAAA5d,UAAA+5C,sBACA+B,eAAA3C,EAAA,QAAA3yB,gBACA5I,EAAA5d,UAAA+5C,wBAUAn8B,EAAA5d,UAAA85C,sBACAzwB,8BACAQ,WAAAsvB,EAAA,QAAA3yB,gBACAqe,EAAA,EAAA7kC,UAAA0oB,gBACAuR,MAAAkf,EAAA,QAAA3yB,gBAAA5I,EAAA5d,UAAA66C,cAUAj9B,EAAA5d,UAAAg6C,wBACA3wB,8BACAS,QAAAqvB,EAAA,QAAA3yB,gBAAAqe,EAAA,EAAA7kC,UAAAipB,aACAkR,QAAAgf,EAAA,QAAA3yB,gBAAA5I,EAAA5d,UAAAy6C,gBAUA78B,EAAA5d,UAAA06C,kBACArxB,8BACAkP,QAAA4gB,EAAA,QAAAp0B,aAAAnH,EAAA5d,UAAAi6C,cAUAr8B,EAAA5d,UAAA86C,gBACAzxB,8BACAuO,SAAAuhB,EAAA,QAAAp0B,aAAAnH,EAAA5d,UAAAm6C,gBAUAv8B,EAAA5d,UAAAi7C,mBACA5xB,8BACAoR,YAAA0e,EAAA,QAAA3yB,gBACA5I,EAAA5d,UAAAq7C,kBACA3gB,YAAAye,EAAA,QAAA3yB,gBACA5I,EAAA5d,UAAAq7C,oBAUAz9B,EAAA5d,UAAAk6C,kBACA7wB,8BACA0yB,aAAA5C,EAAA,QAAAp0B,aACAnH,EAAA5d,UAAAq6C,qBAUAz8B,EAAA5d,UAAAo6C,mBACA/wB,8BACA2yB,kBAAA7C,EAAA,QAAAp0B,aACAnH,EAAA5d,UAAAs6C,0BAWA18B,EAAA5d,UAAAi8C,UAAA,SAAA5/C,EAAA2V,EAAAoT,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAs3B,EAAAtS,EAAA,KACA02B,EAAApkB,EAAA,IACAz7B,EAAAq6B,aAAA,eAAAwlB,GACA,MAAAx3B,EAAAc,EAAA,QACA,IAAAyP,EAAA,MACAvQ,IACAuQ,EAAAn1B,OAAAs7C,EAAA,IAAAt7C,CAAA4kB,GAAA0Q,sBAEA,MAAAxwB,EAAAoN,EAAA1P,iBACA,IAAAizB,EAOA,GAJAA,EADA,OAAAN,EAAAO,OAAA,KACA5wB,EAAA,OAAAA,EAAA,GAEAA,EAAA,OAAAA,EAAA,GAEAkzB,EAAA,CAGAvC,GAAA,KADA3wB,EAAA,OAGA42C,EAAA,EAAA39C,oBAAAxB,EAAAk5B,IAWA3X,EAAA5d,UAAAg4B,WAAA,SAAApzB,EAAAk0B,EAAAC,GACA,IAAA9D,EAAA,MACA6D,IACA7D,EAAAn1B,OAAAs7C,EAAA,IAAAt7C,CAAAg5B,GAAA1D,sBAEA,IAAAG,EAAA,OAAAN,EAAAO,OAAA,KACA5wB,EAAA,OAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,GACA,GAAAm0B,EAAA,CAGAxD,GAAA,KADA3wB,EAAA,OAIA,OAAA2wB,GAUA3X,EAAA5d,UAAAm8C,cAAA,SAAA9/C,EAAA2V,EAAAoT,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAs3B,EAAAtS,EAAA,KACA02B,EAAApkB,EAAA,IACAz7B,EAAAq6B,aAAA,eAAAwlB,GACA,MAAAx3B,EAAAc,EAAA,QAEAngB,EAAA2M,EAAA1P,iBACA6D,EAAAd,EAAA7E,OACAu3B,EAAA,IAAA1xB,MAAAF,GACA,IAAAvB,EACA,QAAA5B,EAAA,EAAiBA,EAAAmD,IAASnD,EAC1B4B,EAAAS,EAAArC,GACA+0B,EAAA/0B,GAAAvD,KAAAu4B,WAAApzB,EAAA8f,EAAAoT,GAEA0jB,EAAA,EAAA39C,oBAAAxB,EAAA07B,EAAA7mB,KAAA,OAUA0M,EAAA5d,UAAAq5B,YAAA,SAAAh9B,EAAAmc,EAAA4M,GACA,MACAV,EADAU,IAAA5kB,OAAA,GACA,QACAkkB,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MAAA+2B,EAAAtC,EAAA,QAAA5iB,gBAAAl6B,EAAAipB,aAAA,OACAjpB,EAAA0B,YAAA09C,GACAh8C,KAAAw8C,UAAAR,EAAAjjC,EAAA4M,IAQAxH,EAAAmc,uBACA1Q,8BACAoR,YAAA0e,EAAA,QAAAniB,kBAAAwkB,EAAA,EAAA39C,qBACA68B,YAAAye,EAAA,QAAAniB,kBAAAwkB,EAAA,EAAA39C,uBAUA+f,EAAA5d,UAAA85B,cAAA,SAAAz9B,EAAA6H,EAAAkhB,GACA,MACAV,EADAU,IAAA5kB,OAAA,GACA,QACAkkB,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MACAxV,GAAAhL,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,IACAi1C,EAAA,QAAA/hB,qBACM/6B,QAAWuhB,EAAAmc,sBACjBof,EAAA,QAAAnf,6BACA9qB,EACAkW,GANA,6BAMA3lB,OAUAme,EAAA5d,UAAA64B,iBAAA,SAAAx8B,EAAAmc,EAAA4M,GACA,MACAV,EADAU,IAAA5kB,OAAA,GACA,QACAkkB,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MAAAg3B,EAAAvC,EAAA,QAAA5iB,gBAAAl6B,EAAAipB,aAAA,WACAjpB,EAAA0B,YAAA29C,GACAj8C,KAAA08C,cAAAT,EAAAljC,EAAA4M,IAWAxH,EAAA5d,UAAAs4B,mBAAA,SAAAtmB,EAAAoT,EAAA+Q,GACA,MAAA3Q,EAAAJ,IAAA5kB,OAAA,GACAi4B,EAAAjT,EAAAnpB,KACAq8B,EAAAlT,EAAA,gBAIA,YAHA3oB,IAAA67B,IACAlT,EAAA,oBAEA2zB,EAAA,QAAA5iB,gBAAAkC,EAAAnT,kBACAzoB,IAAA67B,EAAA,wBAUA9a,EAAA5d,UAAAk4B,uBAAA,SAAA77B,EAAAmc,EAAA4M,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAs3B,EAAAtS,EAAA,KACAd,EAAAc,EAAA,QAIA,GAHA,iBAAAnpB,EAAAupB,UAAAlB,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,YAAAroB,EAAAupB,UAAA,iBAAAvpB,EAAAupB,SAAA,CACA,MAAAuS,EAAA3f,EAAA4f,iBACA+gB,EAAA,QAAA/hB,qBACO/6B,OAAAy7B,OAAApT,WACP9G,EAAAya,kBACA54B,KAAA64B,mBACAH,EAAA/S,OAAAvoB,EAAA4C,WACG,eAAApD,EAAAupB,SAAA,CACH,MAAA2S,EAAA4gB,EAAA,QAAA5iB,gBAAAl6B,EAAAipB,aAAA,WACAjpB,EAAA0B,YAAAw6B,GACA94B,KAAA+4B,qBACAD,EAAA/f,EAAA4M,KAWAxH,EAAA5d,UAAAy3B,wBAAA,SAAAp7B,EAAAmc,EAAA4M,GACA,MACAV,EADAU,IAAA5kB,OAAA,GACA,QAIA,GAHA,sBAAAnE,EAAAupB,UAAAlB,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,eAAAroB,EAAAupB,UACA,sBAAAvpB,EAAAupB,SAAA,CACA,MAAA81B,EAAAvC,EAAA,QAAA5iB,gBAAAl6B,EAAAipB,aAAA,WACAjpB,EAAA0B,YAAA29C,GACAj8C,KAAA08C,cAAAT,EAAAljC,EAAA4M,QACG,aAAA/oB,EAAAupB,SAAA,CACH,MAAAgS,EAAAuhB,EAAA,QAAA5iB,gBAAAl6B,EAAAipB,aAAA,YACAjpB,EAAA0B,YAAA65B,GACAn4B,KAAAo4B,oBAAAD,EACApf,EAAA4M,KAWAxH,EAAA5d,UAAA25B,4BAAA,SAAAt9B,EAAAmc,EAAA4M,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAs3B,EAAAtS,EAAA,KACAd,EAAAc,EAAA,QACA6Q,EAAA7Q,EAAA,QACAd,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MAAApc,EAAAkQ,EAAApQ,cACA+wC,EAAA,QAAA/hB,qBAAgC/6B,OAAAy7B,OAAApT,UAAA2R,WAChCzY,EAAAgc,oCACAn6B,KAAA25B,mCAAA9wB,EACA8c,OAAAvoB,EAAA4C,OAUAme,EAAA5d,UAAAu5B,iBAAA,SAAAl9B,EAAAmc,EACA4M,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAkkB,EAAAc,EAAA,QACAsS,EAAAtS,EAAA,KACAd,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MAAArf,EAAAmT,EAAApT,YACA+zC,EAAA,QAAA/hB,qBAAgC/6B,OAAAy7B,OAAApT,WAChC9G,EAAA4b,yBACA2f,EAAA,QAAA9hB,sBAAA,eAAAhyB,EACA+f,OAAAvoB,EAAA4C,OAUAme,EAAA5d,UAAAg5B,6BAAA,SAAA38B,EAAAmc,EAAA4M,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GACAs3B,EAAAtS,EAAA,KACAd,EAAAc,EAAA,QACAyT,EAAAzT,EAAA,MACAd,GACAroB,EAAAq6B,aAAA,UAAAhS,GAEA,MAAAwU,EAAA1gB,EAAA3V,iBACAs2C,EAAA,QAAA/hB,qBAAgC/6B,OAAAy7B,OAAApT,UAAAuU,SAChCrb,EAAAub,qCACA15B,KAAA25B,mCAAAF,EACA9T,OAAAvoB,EAAA4C,OAUAme,EAAA5d,UAAA24B,WAAA,SAAAt8B,EAAAwsB,EAAAzD,GACA,MAAAwT,EAAAugB,EAAA,QAAA5iB,gBAAAl6B,EAAAipB,aAAA,cACAjpB,EAAA0B,YAAA66B,GACAn5B,KAAAo5B,iBAAAD,EAAA/P,EAAAzD,IAUAxH,EAAA5d,UAAA65B,6BAAA,SAAAx9B,EAAA4J,EAAAmf,GACA,MAAAzY,EAAAlN,KAAAy2B,uBACAjwB,EAAAmf,GACAzY,IACAtQ,EAAA0B,YAAA4O,GACAlN,KAAAy4B,uBAAAvrB,EAAA1G,EAAAmf,KAWAxH,EAAA5d,UAAAy5B,kBAAA,SAAAp9B,EAAAuI,EAAAwgB,GACA,MAAAzY,EAAAwsC,EAAA,QAAA5iB,gBAAAl6B,EAAAipB,aAAA,SACAjpB,EAAA0B,YAAA4O,GACAlN,KAAA45B,YAAA1sB,EAAA/H,EAAAwgB,IAUAxH,EAAA5d,UAAA05B,8BAAA,SAAAr9B,EAAA47B,EAAA7S,GACA,MAAAzY,EAAAlN,KAAAy2B,uBAAA+B,EAAA7S,GACAzY,IACAtQ,EAAA0B,YAAA4O,GACAlN,KAAAg4B,wBAAA9qB,EAAAsrB,EAAA7S,KAWAxH,EAAA5d,UAAAw4B,qBAAA,SAAAn8B,EAAA4J,EAAAmf,GACA,MAAAzY,EAAAwsC,EAAA,QAAA5iB,gBAAAl6B,EAAAipB,aAAA,gBACAjpB,EAAA0B,YAAA4O,GACAlN,KAAAy4B,uBAAAvrB,EAAA1G,EAAAmf,IAUAxH,EAAA5d,UAAA63B,oBAAA,SAAAx7B,EAAA47B,EAAA7S,GACA,MAAAzY,EAAAwsC,EAAA,QAAA5iB,gBAAAl6B,EAAAipB,aACA,qBACAjpB,EAAA0B,YAAA4O,GACAlN,KAAAg4B,wBAAA9qB,EAAAsrB,EAAA7S,IASAxH,EAAA5d,UAAAi3B,qBAAA,SAAA56B,EAAAmc,EAAA4M,GACA,MAAAI,EAAqDJ,IAAA5kB,OAAA,GACrDyL,EAAAnM,OAAAs8C,EAAA,OAAAt8C,IAAwB0lB,GAExB,IAAAxT,EADA/F,EAAA5P,OAIA2V,EAFA3L,MAAAggB,QAAA7N,GACAgN,EAAA8R,eACAx3B,OAAAs7C,EAAA,gBAAAt7C,CACA0Y,EAAAgN,EAAA+R,kBAAA/R,EAAA8R,gBAEA9e,EAGA1Y,OAAAgnB,EAAA,qBAAAhnB,CAA6D,KAAA0lB,GAE7D2zB,EAAA,QAAA/hB,oBACA,EAAAxZ,EAAA4Z,sBACA/3B,KAAAy2B,wBAAAlkB,GACAoT,OAAAvoB,EAAA4C,OASAme,EAAA5d,UAAAw2B,oBAAA,SAAAn6B,EAAA6b,EAAAkN,GACA,MAAA2B,EAAA7O,EAAAue,QACA1P,GACA1qB,EAAAq6B,aAAA,MAAA3P,GAEA,MAAAvB,EAAoCJ,IAAA5kB,OAAA,GACpCsf,EAAA0F,EAAA,UACAnK,EAAAnD,EAAAye,kBACAnR,EAAAoR,cACApR,EAAAoR,eACApR,EAAAoR,YAAA9W,OAEA,MAAAtN,EAAA0F,EAAA2e,gBACAC,KACA5nB,KACA,UAAAgK,KAAA1G,EAAA,CACA,MAAAR,EAAAQ,EAAA0G,GACA,OAAAlH,IACA8kB,EAAAv2B,KAAA2Y,GACAhK,EAAA3O,KAAAyR,GACAkH,GAAAmC,GAAArJ,aAAAqqC,EAAA,QACAnjC,KAAAsM,EAAAoR,YAAA9W,KACA0F,EAAAoR,YAAA9W,GAAA5G,GAAAigC,EAAA,QAAAniB,kBACAv3B,KAAAw3B,qBAAAx3B,OAGAyZ,KAAAsM,EAAAoR,YAAA9W,KACA0F,EAAAoR,YAAA9W,GAAA5G,GAAAigC,EAAA,QAAAniB,kBACAwkB,EAAA,EAAA39C,uBAKA,MAAAoO,EAAAnM,OAAAs8C,EAAA,OAAAt8C,IAAwB0lB,GACxBvZ,EAAA5P,OACA88C,EAAA,QAAA/hB,oBACA,EAAA5R,EAAAoR,YACAuiB,EAAA,QAAA9hB,2BAAAx6B,EAAAijB,GACA5Q,EACAkW,EAAA0R,IAUAlZ,EAAA5d,UAAAs8C,qBAAA,SAAAjgD,EAAA4a,EAAAmO,GACA,MAAAI,EAAoCJ,IAAA5kB,OAAA,GACpCuf,EAAAyF,EAAA,YACA1F,EAAA0F,EAAA,UACAoR,KACAA,EAAA9W,MACA8W,EAAA9W,GAAAC,GAAAo5B,EAAA,QAAAniB,kBACAv3B,KAAA+2B,oBAAA/2B,MACA,MAAAwM,EAAAnM,OAAAs8C,EAAA,OAAAt8C,IAAwB0lB,GACxBvZ,EAAA5P,OACA88C,EAAA,QAAA/hB,oBACA,EACAR,EACAuiB,EAAA,QAAA9hB,sBAAAtX,EAAAD,GAAA7I,EACAmO,IAQAxH,EAAAgc,qCACAvQ,8BACAmR,cAAA2e,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAA65B,8BACAnQ,cAAAyvB,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAA65B,gCASAjc,EAAA4b,0BACAnQ,8BACAC,YAAA6vB,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAAy5B,qBASA7b,EAAAub,sCACA9P,8BACAG,iBAAA2vB,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAA05B,+BACAY,YAAA6e,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAA05B,iCASA9b,EAAAya,mBACAhP,8BACAuyB,SAAAzC,EAAA,QAAAniB,kBAAApZ,EAAA5d,UAAA24B,YACAgjB,SAAAxC,EAAA,QAAAniB,kBAAApZ,EAAA5d,UAAA24B,cASA/a,EAAA4Z,uBACAnO,8BACA4Q,MAAAkf,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAAy3B,yBACAyC,WAAAif,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAAg5B,8BACApP,MAAAuvB,EAAA,QAAAniB,kBAAApZ,EAAA5d,UAAAq5B,aACA30B,WAAAy0C,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAAu5B,kBACA1P,WAAAsvB,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAAy3B,yBACAr4B,gBAAA+5C,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAAg5B,8BACAhP,WAAAmvB,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAA64B,kBACA/O,QAAAqvB,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAAk4B,wBACAzyB,aAAA0zC,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAA25B,6BACAQ,QAAAgf,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAAk4B,wBACAkC,aAAA+e,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAA25B,6BACAU,SAAA8e,EAAA,QAAAniB,kBACApZ,EAAA5d,UAAA85B,iBAUAlc,EAAA2c,mCACAn7B,gBAAA,mBACA86B,WAAA,cACAz0B,aAAA,gBACA20B,aAAA,iBAYAxc,EAAA5d,UAAAo5B,mCAAA,SAAApnB,EAAAoT,EAAA+Q,GACA,MAAAsC,EAAArT,IAAA5kB,OAAA,GAAAnE,KACA,OAAA88C,EAAA,QAAA5iB,gBAAA,6BACA3Y,EAAA2c,kCAAA9B,EAAA7S,YAYAhI,EAAA5d,UAAAk2B,uBAAA,SAAAlkB,EAAAoT,EAAA+Q,GACA,MAAA3Q,EAAAJ,IAAA5kB,OAAA,GACA41B,EAAA5Q,EAAA,aACA6Q,EAAA7Q,EAAA,QACAyT,EAAAzT,EAAA,MACA8Q,EAAA9Q,EAAA,WACA,IAAAI,EAeA,OAdAvf,MAAAggB,QAAArU,GAYA4T,EAAA,WAVA,kBADAA,EAA2C,EAAA9hB,aAC3C,IAAAsyB,EACAxQ,EAAA,eACK,YAAAA,IAAA,IAAAyQ,EACLzQ,EAAA,UACK,eAAAA,IAAA,IAAAqT,EACLrT,EAAA,QACK,oBAAAA,IAAA,IAAA0Q,IACL1Q,EAAA,cAKAuzB,EAAA,QAAA5iB,gBAAA,6BACA3Q,IAaAhI,EAAA5d,UAAAyY,kBAAA,SAAAD,EAAA7B,GACAA,EAAAlX,KAAA88C,aAAA5lC,GACA,MAAA6lC,EAAArD,EAAA,QAAA5iB,gBAAA,qCACA/Q,GAAmBnpB,KAAAmgD,EAAA1kB,KAAAr4B,KAAAq4B,KAAApT,QAAAjlB,KAAAilB,QACnBuU,MAAAx5B,KAAA45C,OAAAhjB,QAAA52B,KAAA25C,SACAhjB,aAAA32B,KAAA85C,cAAAjjB,WAAA72B,KAAA65C,aAKA,OAJA3iC,GACA7W,OAAAs8C,EAAA,OAAAt8C,CAAA0lB,EAAA7O,GAEAlX,KAAAw3B,qBAAAulB,EAAAhkC,GAAAgN,IACAg3B,GAaA5+B,EAAA5d,UAAAqY,cAYAuF,EAAA5d,UAAAsY,kBAAA,SAAArB,EAAAN,GACAA,EAAAlX,KAAA88C,aAAA5lC,GACA,MAAAta,EAAA88C,EAAA,QAAA5iB,gBAAA,6BACA,kBACA4iB,EAAA,QAAAhS,eAAA9qC,EAAA,4CACA,qBAAAoD,KAAAklB,gBACA,MAAAa,GACAd,QAAAjlB,KAAAilB,QACAoT,KAAAr4B,KAAAq4B,KACAmB,MAAAx5B,KAAA45C,OACAhjB,QAAA52B,KAAA25C,SACAhjB,aAAA32B,KAAA85C,cACAjjB,WAAA72B,KAAA65C,YACAx5B,UAAArgB,KAAAqgB,UACAC,YAAAtgB,KAAAsgB,aAMA,OAJApJ,GACA7W,OAAAs8C,EAAA,OAAAt8C,CAAA0lB,EAAA7O,GAEAlX,KAAA68C,qBAAAjgD,EAAA4a,GAAAuO,IACAnpB,GAEA6C,EAAA,6FCvuCA,QAAAhD,EAAA,SACAA,EAAA,MACAA,EAAA,OACY2M,IAAZ3M,EAAA,QACAA,EAAA,KACYkuB,IAAZluB,EAAA,QACAA,EAAA,SACAA,EAAA,iNAyBA,IAAM6M,EAAU,WAMdtJ,KAAKg9C,2BAMLh9C,KAAKi9C,WAMLj9C,KAAKuvB,QAAU,IAAA2tB,EAAApzC,SACbqzC,iBAAiB,IAOnBn9C,KAAKo9C,OAAS,IAAAC,EAAAvzC,SACZmN,OAAQjX,KAAKuvB,QACb+tB,MAAOt9C,KAAKu9C,eAAe1vC,KAAK7N,MAChCw9C,sBAAsB,EACtBC,wBAAwB,KAW5Bn0C,EAAQ/I,UAAUm9C,WAAa,SAASjlC,EAASklC,GAC/CnwC,EAAA1D,QAAY2D,OAAOkwC,GAAc,GACjCnwC,EAAA1D,QAAY2D,OAAOkwC,EAAa39C,KAAKi9C,QAAQl8C,QAC7C,IAAM68C,EAAax0C,EAAO4D,OAAOyL,GAASjZ,WAC1CQ,KAAKg9C,wBAAwBY,GAAcD,EAC3C39C,KAAKi9C,QAAQU,GAAYnmC,SAASomC,GAAcnlC,EAChDzY,KAAKuvB,QAAQmuB,WAAWjlC,IAS1BnP,EAAQ/I,UAAUs9C,cAAgB,SAASplC,EAASklC,GAClDnwC,EAAA1D,QAAY2D,OAAOkwC,GAAc,GACjCnwC,EAAA1D,QAAY2D,OAAOkwC,EAAa39C,KAAKi9C,QAAQl8C,QAC7C,IAAM68C,EAAax0C,EAAO4D,OAAOyL,GAASjZ,kBACnCQ,KAAKg9C,wBAAwBY,UAC7B59C,KAAKi9C,QAAQU,GAAYnmC,SAASomC,GACzC59C,KAAKuvB,QAAQsuB,cAAcplC,IAQ7BnP,EAAQ/I,UAAUgtC,MAAQ,SAASoQ,GACjCnwC,EAAA1D,QAAY2D,OAAOkwC,GAAc,GACjCnwC,EAAA1D,QAAY2D,OAAOkwC,EAAa39C,KAAKi9C,QAAQl8C,QAC7C,IAAMsK,EAAQrL,KAAKi9C,QAAQU,GAC3B,IAAK,IAAMC,KAAcvyC,EAAMmM,SAC7BxX,KAAK69C,cAAcxyC,EAAMmM,SAASomC,GAAaD,GAEjDnwC,EAAA1D,QAAY2D,OAAOkd,EAAMkC,QAAQxhB,EAAMmM,YAQzClO,EAAQ/I,UAAUu9C,SAAW,WAC3B,OAAO99C,KAAKo9C,QAQd9zC,EAAQ/I,UAAUw9C,kBAAoB,WACpC,IAAMJ,EAAa39C,KAAKi9C,QAAQl8C,OAKhC,OAJAf,KAAKi9C,QAAQn8C,MACXk9C,cAAeC,EAAAn0C,QAAao0C,gBAC5B1mC,cAEK,IAAA2mC,EAAAr0C,QAA0B9J,KAAM29C,IAQzCr0C,EAAQ/I,UAAU69C,KAAO,SAASrvC,GAChC/O,KAAKo9C,OAAOiB,OAAOtvC,IAUrBzF,EAAQ/I,UAAU+9C,SAAW,SAAShB,EAAOK,GAC3CnwC,EAAA1D,QAAY2D,OAAOkwC,GAAc,GACjCnwC,EAAA1D,QAAY2D,OAAOkwC,EAAa39C,KAAKi9C,QAAQl8C,QAC7Cf,KAAKi9C,QAAQU,GAAYK,cAA0B,OAAVV,EACvCW,EAAAn0C,QAAao0C,gBAAkBD,EAAAn0C,QAAay0C,eAAejB,IAU/Dh0C,EAAQ/I,UAAUg9C,eAAiB,SAAS9kC,EAAS6lB,GACnD,IAAMsf,EAAax0C,EAAO4D,OAAOyL,GAASjZ,WAC1CgO,EAAA1D,QAAY2D,OAAOmwC,KAAc59C,KAAKg9C,yBACtC,IAAMW,EAAa39C,KAAKg9C,wBAAwBY,GAEhD,OADc59C,KAAKi9C,QAAQU,GACdK,cAAcvlC,EAAS6lB,KAOtCh1B,EAAQ8I,OAASC,QAAQD,OAAO,yBAC9B+rC,EAAAr0C,QAAsBsI,OAAOlH,QAEhBsH,QAAQ,wBAAyBlJ,aAGjCA,4FCxKf,SAAAk1C,GACA,MAAAC,EAAAp+C,OAAAg3B,KAAAmnB,EAAAE,MACAh4C,EAAA+3C,EAAA19C,OACA,IAAAwC,EAAA8B,EACA,IAAA9B,EAAA,EAAaA,EAAAmD,IAASnD,EAAA,CACtB,MAAAo7C,EAAAF,EAAAl7C,GACA,IAAAlD,OAAAu+C,EAAA,IAAAv+C,CAAAs+C,GAAA,CACA,MAAAE,EAAAL,EAAAE,KAAAC,GACAt+C,OAAAu+C,EAAA,cAAAv+C,CAAA,IAAAy+C,EAAA,SACAH,OACAnpB,gBAAAqpB,EAAAE,KACAC,cAAAH,EAAAI,SACAC,MAAAL,EAAAK,UAIA,IAAA37C,EAAA,EAAaA,EAAAmD,IAASnD,EAAA,CACtB,MAAA47C,EAAAV,EAAAl7C,GACA67C,EAAA/+C,OAAAu+C,EAAA,IAAAv+C,CAAA8+C,GACA,IAAA95C,EAAA,EAAeA,EAAAqB,IAASrB,EAAA,CACxB,MAAAg6C,EAAAZ,EAAAp5C,GACAi6C,EAAAj/C,OAAAu+C,EAAA,IAAAv+C,CAAAg/C,GACA,IAAAh/C,OAAAk/C,EAAA,EAAAl/C,CAAA8+C,EAAAE,GACA,GAAAb,EAAAE,KAAAS,KAAAX,EAAAE,KAAAW,GACAh/C,OAAAu+C,EAAA,yBAAAv+C,EAAA++C,EAAAE,QACS,CACT,MAAAE,EAAAhB,EAAAW,EAAAE,GACAh/C,OAAAu+C,EAAA,wBAAAv+C,CAAA++C,EAAAE,EAAAE,EAAAC,QAAAD,EAAAE,iCA7CAZ,EAAAriD,EAAA,oFCAA,ICAAkjD,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,oBACAC,EAAAn+C,KAAA00C,GAAA,EAEA0J,EAAA,mBAEAC,EAAA,mBAEAC,EAAA,oBACAC,EAAA,MAIAC,EAAA,oBACAC,EAAA,kBACAC,EAAA1+C,KAAA00C,GAAA,EACAiK,EAAA,EAAA3+C,KAAA00C,GAKAkK,EAAA,cCxBAC,GAGAC,UAAA,EACAC,QAAA,eACAC,MAAA,eACAC,QAAA,gBACAC,QAAA,eACAC,KAAA,gBACAC,KAAA,eACAC,QAAA,iBACAC,OAAA,gBACAC,SAAA,SACAC,UAAA,gBACAC,OAAA,WACAC,KAAA,iBCfArC,GACAh5B,IAAO+4B,SAAA,OACPuC,SAAYvC,SAAA,YCFZwC,EAAA,iBACA,SAAA7nC,EAAAqoB,EAAAxoB,GACA,GAAAwoB,EAAAxoB,GACA,OAAAwoB,EAAAxoB,GAMA,IAJA,IAGAioC,EAHArqB,EAAAh3B,OAAAg3B,KAAA4K,GACA0f,EAAAloC,EAAAmoC,cAAAn2B,QAAAg2B,EAAA,IACAl+C,GAAA,IAEAA,EAAA8zB,EAAAt2B,QAGA,IAFA2gD,EAAArqB,EAAA9zB,IACAq+C,cAAAn2B,QAAAg2B,EAAA,MACAE,EACA,OAAA1f,EAAAyf,GCRA,IAAAG,EAAA,SAAAC,GACA,IAWAC,EAAAC,EAAAC,EAXAC,KACAC,EAAAL,EAAA17B,MAAA,KAAArX,IAAA,SAAAqzC,GACA,OAAAA,EAAAnkD,SACGmR,OAAA,SAAAizC,GACH,OAAAA,IACGC,OAAA,SAAAz7B,EAAAw7B,GACH,IAAAj8B,EAAAi8B,EAAAj8B,MAAA,KAGA,OAFAA,EAAAtlB,MAAA,GACA+lB,EAAAT,EAAA,GAAAw7B,eAAAx7B,EAAA,GACAS,OAGA1V,GACAskB,KAAA,WACA8sB,MAAA,YACAC,GAAA,SAAAJ,GACAF,EAAAM,GAAA5kD,WAAAwkD,IAEAK,MAAA,SAAAL,GACAF,EAAAQ,KAAAN,EAAA/B,GAEAsC,MAAA,SAAAP,GACAF,EAAAU,KAAAR,EAAA/B,GAEAwC,MAAA,SAAAT,GACAF,EAAAY,KAAAV,EAAA/B,GAEA0C,OAAA,SAAAX,GACAF,EAAAa,OAAAX,EAAA/B,GAEA2C,MAAA,SAAAZ,GACAF,EAAAe,MAAAb,EAAA/B,GAEA6C,MAAA,SAAAd,GACAF,EAAAiB,MAAAf,EAAA/B,GAEA+C,MAAA,SAAAhB,GACAF,EAAAmB,MAAAjB,EAAA/B,GAEAiD,MAAA,SAAAlB,GACAF,EAAAoB,MAAA1lD,WAAAwkD,GAAA/B,GAEAkD,KAAA,SAAAnB,GACAF,EAAAsB,MAAApB,EAAA/B,GAEAoD,IAAA,SAAArB,GACAF,EAAAwB,GAAA9lD,WAAAwkD,IAEAuB,IAAA,SAAAvB,GACAF,EAAA0B,GAAAhmD,WAAAwkD,IAEAyB,IAAA,SAAAzB,GACAF,EAAA4B,GAAAlmD,WAAAwkD,IAEA2B,EAAA,SAAA3B,GACAF,EAAA4B,GAAAlmD,WAAAwkD,IAEAC,EAAA,SAAAD,GACAF,EAAAG,EAAAzkD,WAAAwkD,IAEAxmB,EAAA,SAAAwmB,GACAF,EAAAtmB,EAAAh+B,WAAAwkD,IAEA4B,IAAA,WACA9B,EAAA+B,KAAA,GAEAC,KAAA,SAAA9B,GACAF,EAAAgC,KAAAnmD,SAAAqkD,EAAA,KAEA+B,MAAA,WACAjC,EAAAkC,UAAA,GAEAC,QAAA,SAAAjC,GACAF,EAAAoC,aAAAlC,EAAAh8B,MAAA,KAAArX,IAAA,SAAAszC,GACA,OAAAzkD,WAAAykD,MAGApD,SAAA,SAAAmD,GACAF,EAAAjD,SAAArhD,WAAAwkD,IAEAlD,MAAA,SAAAkD,GACAF,EAAAhD,MAAAkD,EACA,IAAAmC,EAAA3qC,EAAAslC,EAAAkD,GACAmC,IACArC,EAAAjD,SAAAsF,EAAAtF,WAGAuF,eAAA,SAAApC,GACAF,EAAAsC,eAAApC,EAAA/B,GAEAoE,GAAA,SAAArC,GACA,IAAAqC,EAAA7qC,EAAA8mC,EAAA0B,GACAF,EAAAsC,gBAAAC,GAAA7mD,WAAAwkD,IAAA/B,GAEAqE,SAAA,SAAAtC,GACA,UAAAA,EACAF,EAAAyC,UAAA,OAGAzC,EAAAwC,SAAAtC,GAGArD,KAAA,SAAAqD,GAEA,IAAAA,EAAArhD,SAAA,IADA,SACA0S,QAAA2uC,EAAArsB,OAAA,YADA,SACAtiB,QAAA2uC,EAAArsB,OAAA,YADA,SACAtiB,QAAA2uC,EAAArsB,OAAA,QACAmsB,EAAAnD,KAAAqD,KAIA,IAAAL,KAAAI,EACAH,EAAAG,EAAAJ,GACAA,KAAA5wC,EAEA,mBADA8wC,EAAA9wC,EAAA4wC,IAEAE,EAAAD,GAGAE,EAAAD,GAAAD,EAIAE,EAAAH,GAAAC,EAMA,MAHA,iBAAAE,EAAAyC,WAAA,UAAAzC,EAAAyC,YACAzC,EAAAyC,UAAAzC,EAAAyC,UAAA/C,eAEAM,GCrIA71B,EAqKA,SAAAu4B,GAEA,OADA,IAAAC,EAAAD,GACAE,UArKAC,EAAA,EAMAC,EAAA,KACAC,EAAA,WACAC,EAAA,aACAC,EAAA,QACAC,EAAA,cAEA,SAAAP,EAAAlP,GACA,oBAAAA,EACA,UAAA9Z,MAAA,gBAEA77B,KAAA21C,OAAA13C,OACA+B,KAAAqlD,MAAA,EACArlD,KAAAslD,MAAA,EACAtlD,KAAAuwB,KAAA,KACAvwB,KAAAulD,SACAvlD,KAAAwlD,cAAA,KACAxlD,KAAA6U,MAAAkwC,ECtBA,SAAAU,EAAAxjB,EAAAxoB,EAAAlH,GACA3L,MAAAggB,QAAAnN,KACAlH,EAAA4f,QAAA1Y,GACAA,EAAA,MAEA,IAAAisC,EAAAjsC,KAAsBwoB,EAEtBmQ,EAAA7/B,EAAA+vC,OAAA,SAAAqD,EAAAn5C,GAEA,OADAo5C,EAAAp5C,EAAAm5C,GACAA,GACGD,GACHjsC,IACAwoB,EAAAxoB,GAAA24B,GAIA,SAAAwT,EAAAxD,EAAAngB,GACA,GAAAr7B,MAAAggB,QAAAw7B,GAAA,CAIA,IAyBA7+C,EAzBAkW,EAAA2oC,EAAAyD,QAIA,GAHA,cAAApsC,IACAA,EAAA2oC,EAAAyD,SAEA,IAAAzD,EAAArhD,OACA,OAAA6F,MAAAggB,QAAAw7B,EAAA,KACAngB,EAAAxoB,WACAmsC,EAAAxD,EAAA,GAAAngB,EAAAxoB,UAGAwoB,EAAAxoB,GAAA2oC,EAAA,IAGA,GAAAA,EAAArhD,OAIA,eAAA0Y,EASA,OALA7S,MAAAggB,QAAAnN,KACAwoB,EAAAxoB,OAIAA,GACA,WACA,aACA,iBAQA,OAPAwoB,EAAAxoB,IACAvO,KAAAk3C,EAAA,GAAAR,cACAkE,QAAA1D,EAAA,SAEA,IAAAA,EAAArhD,QACA6kD,EAAAxD,EAAA,GAAAngB,EAAAxoB,KAGA,eACA,gBASA,OARAwoB,EAAAxoB,IACAvO,KAAAk3C,EAAA,GACAC,EAAAD,EAAA,GACAI,GAAAJ,EAAA,SAEA,IAAAA,EAAArhD,QACA6kD,EAAAxD,EAAA,GAAAngB,EAAAxoB,KAGA,mBACA,cACA,aACA,aACA,aACA,eACA,cACA,kBACA,oBACA,aACA,uBACA,cACA,cACA,kBACA,eACA,kBACA,qBACA,aACA,gBACA,kBACA,YAGA,OAFA2oC,EAAA,WAAAA,EAAA,SACAqD,EAAAxjB,EAAAxoB,EAAA2oC,GAEA,QAEA,IADA7+C,GAAA,IACAA,EAAA6+C,EAAArhD,QACA,IAAA6F,MAAAggB,QAAAw7B,EAAA7+C,IACA,OAAAqiD,EAAAxD,EAAAngB,EAAAxoB,IAGA,OAAAgsC,EAAAxjB,EAAAxoB,EAAA2oC,QA9DAngB,EAAAxoB,GAAA2oC,OAJAngB,EAAAxoB,IAAA,OAjBAwoB,EAAAmgB,IAAA,EDMAyC,EAAAtkD,UAAAwlD,cAAA,WACA,IAAAC,EAAAhmD,KAAA21C,KAAA31C,KAAAslD,SACA,GAvBA,IAuBAtlD,KAAA6U,MACA,KAAAmwC,EAAA9gC,KAAA8hC,IAAA,CACA,GAAAhmD,KAAAslD,OAAAtlD,KAAA21C,KAAA50C,OACA,OAEAilD,EAAAhmD,KAAA21C,KAAA31C,KAAAslD,SAGA,OAAAtlD,KAAA6U,OACA,KAAAkwC,EACA,OAAA/kD,KAAAimD,QAAAD,GACA,KApCA,EAqCA,OAAAhmD,KAAAklD,QAAAc,GACA,KApCA,EAqCA,OAAAhmD,KAAAkmD,OAAAF,GACA,KArCA,EAsCA,OAAAhmD,KAAAmmD,WAAAH,GACA,KAzCA,EA0CA,OAAAhmD,KAAAomD,OAAAJ,GACA,KAxCA,EAyCA,SAGAnB,EAAAtkD,UAAA4lD,WAAA,SAAAH,GACA,SAAAA,EAGA,OAFAhmD,KAAAqmD,MAAA,SACArmD,KAAA6U,MAjDA,GAoDA,GAAAswC,EAAAjhC,KAAA8hC,GAGA,OAFAhmD,KAAAqmD,KAAArmD,KAAAqmD,KAAApoD,YACA+B,KAAAsmD,UAAAN,GAGA,UAAAnqB,MAAA,oBAAAmqB,EAAA,8BAAAhmD,KAAAslD,QAEAT,EAAAtkD,UAAA+lD,UAAA,SAAAN,GACA,YAAAA,GACA,OAAAhmD,KAAAqmD,MACArmD,KAAAwlD,cAAA1kD,KAAAd,KAAAqmD,MAEArmD,KAAAqmD,KAAA,UACArmD,KAAA6U,MAAAkwC,IAGA,MAAAiB,GACAhmD,KAAAqlD,QACA,OAAArlD,KAAAqmD,OACArmD,KAAAwlD,cAAA1kD,KAAAd,KAAAqmD,MACArmD,KAAAqmD,KAAA,MAEArmD,KAAA6U,MAAAkwC,EACA/kD,KAAAwlD,cAAAxlD,KAAAulD,MAAAl/B,WACArmB,KAAAwlD,gBACAxlD,KAAA6U,OA3EA,UAkEA,GAeAgwC,EAAAtkD,UAAA6lD,OAAA,SAAAJ,GACA,IAAAZ,EAAAlhC,KAAA8hC,GAAA,CAIA,GAAAb,EAAAjhC,KAAA8hC,GAGA,OAFAhmD,KAAAqmD,KAAAzoD,WAAAoC,KAAAqmD,WACArmD,KAAAsmD,UAAAN,GAGA,UAAAnqB,MAAA,oBAAAmqB,EAAA,0BAAAhmD,KAAAslD,OARAtlD,KAAAqmD,MAAAL,GAUAnB,EAAAtkD,UAAA2lD,OAAA,SAAAF,GACA,MAAAA,EAIAhmD,KAAAqmD,MAAAL,EAHAhmD,KAAA6U,MAhGA,GAsGAgwC,EAAAtkD,UAAA2kD,QAAA,SAAAc,GACA,GAAAd,EAAAhhC,KAAA8hC,GACAhmD,KAAAqmD,MAAAL,MADA,CAIA,SAAAA,EAAA,CACA,IAAAO,KAWA,OAVAA,EAAAzlD,KAAAd,KAAAqmD,MACArmD,KAAAqlD,QACA,OAAArlD,KAAAuwB,KACAvwB,KAAAuwB,KAAAg2B,EAEAvmD,KAAAwlD,cAAA1kD,KAAAylD,GAEAvmD,KAAAulD,MAAAzkD,KAAAd,KAAAwlD,eACAxlD,KAAAwlD,cAAAe,OACAvmD,KAAA6U,MAAAkwC,GAGA,IAAAI,EAAAjhC,KAAA8hC,GAIA,UAAAnqB,MAAA,oBAAAmqB,EAAA,2BAAAhmD,KAAAslD,OAHAtlD,KAAAsmD,UAAAN,KAKAnB,EAAAtkD,UAAA0lD,QAAA,SAAAD,GACA,GAAAf,EAAA/gC,KAAA8hC,GAGA,OAFAhmD,KAAAqmD,KAAAL,OACAhmD,KAAA6U,MArIA,GAwIA,SAAAmxC,EAGA,OAFAhmD,KAAAqmD,KAAA,QACArmD,KAAA6U,MAxIA,GA2IA,GAAAuwC,EAAAlhC,KAAA8hC,GAGA,OAFAhmD,KAAAqmD,KAAAL,OACAhmD,KAAA6U,MA9IA,GAiJA,IAAAswC,EAAAjhC,KAAA8hC,GAIA,UAAAnqB,MAAA,oBAAAmqB,EAAA,2BAAAhmD,KAAAslD,OAHAtlD,KAAAsmD,UAAAN,IAKAnB,EAAAtkD,UAAAukD,OAAA,WACA,KAAA9kD,KAAAslD,MAAAtlD,KAAA21C,KAAA50C,QACAf,KAAA+lD,gBAEA,IAxJA,IAwJA/lD,KAAA6U,MACA,OAAA7U,KAAAuwB,KAEA,UAAAsL,MAAA,2BAAA77B,KAAA21C,KAAA,eAAA31C,KAAA6U,QElKA,IAAA2xC,EAAA,oBAiBA,SAAAC,EAAAC,GACA,OAAAA,EAAAF,EAuIA,IAAAG,EAAA,SAAAC,GACA,IAAAC,EAAAx6B,EAAAu6B,GACAt5C,EAAAu5C,EAAAhB,QACA36C,EAAA27C,EAAAhB,QACAgB,EAAA10B,SAAA,OAAAjnB,IACA27C,EAAA10B,SAAA,OAAA7kB,IACA,IAAA20B,KAGA,OAFA2jB,EAAAiB,EAAA5kB,GA3IA,SAAA2kB,GACA,WAAAA,EAAAt5C,KACAs5C,EAAAE,SAAA,UACG,aAAAF,EAAAt5C,MACHs5C,EAAAE,SAAA,WACAF,EAAAG,OAAA,GAEA,iBAAAH,EAAAI,WACAJ,EAAAE,SAAAzmD,OAAAg3B,KAAAuvB,EAAAI,YAAA,GAEAJ,EAAAE,SAAAF,EAAAI,WAGAJ,EAAAK,OACAL,EAAA1H,MAAA0H,EAAAK,KAAA/7C,KAAA02C,cACA,UAAAgF,EAAA1H,QACA0H,EAAA1H,MAAA,SAEA0H,EAAAK,KAAAnB,UACA,WAAAc,EAAAt5C,KACAs5C,EAAAM,OAAAN,EAAAM,MAAAC,WACAP,EAAA3H,SAAA2H,EAAAK,KAAAnB,QAAAc,EAAAM,MAAAC,SAAA9E,GAGAuE,EAAA3H,SAAA2H,EAAAK,KAAAnB,UAIA,IAAAsB,EAAAR,EAAAS,OA6DA,SAAAC,EAAAZ,GAEA,OAAAA,GADAE,EAAA3H,UAAA,GA7DA,WAAA2H,EAAAt5C,OACA85C,EAAAR,GAEAQ,IAIAA,EAAAF,MACAN,EAAAjC,UAAAyC,EAAAF,MAAAh8C,KAAA02C,cAEAgF,EAAAjC,UAAAyC,EAAAl8C,KAAA02C,cAEA,OAAAgF,EAAAjC,UAAA9jD,MAAA,OACA+lD,EAAAjC,UAAAiC,EAAAjC,UAAA9jD,MAAA,IAEA,oCAAA+lD,EAAAjC,WAAA,qBAAAiC,EAAAjC,YACAiC,EAAAjC,UAAA,UAEA,aAAAiC,EAAAjC,YACA,8BAAAiC,EAAAI,aACAJ,EAAAW,QAAA,GAEAX,EAAAjC,UAAA,SAEA,WAAAiC,EAAAjC,UAAA9jD,OAAA,KACA+lD,EAAAjC,UAAAiC,EAAAjC,UAAA9jD,MAAA,OAEA,aAAA+lD,EAAAjC,UAAA9jD,OAAA,KACA+lD,EAAAjC,UAAAiC,EAAAjC,UAAA9jD,MAAA,QAEA+lD,EAAAjC,UAAAlxC,QAAA,WACAmzC,EAAAjC,UAAA,SAEAyC,EAAAF,OAAAE,EAAAF,MAAAC,WACAP,EAAAY,MAAAJ,EAAAF,MAAAC,SAAAj8C,KAAAugB,QAAA,UAAAA,QAAA,wBACA,kBAAAm7B,EAAAY,MAAA5F,cAAA/gD,MAAA,QACA+lD,EAAAY,MAAA,QAGAZ,EAAAvE,EAAA+E,EAAAF,MAAAC,SAAA9E,EACAuE,EAAApE,GAAA5kD,WAAAwpD,EAAAF,MAAAC,SAAA3E,GAAA,MAEAoE,EAAAjC,UAAAlxC,QAAA,eACAmzC,EAAAjC,UAAA,WAEAiC,EAAAjC,UAAAlxC,QAAA,eACAmzC,EAAAjC,UAAA,YAEAiC,EAAAjC,UAAAlxC,QAAA,UACAmzC,EAAAjC,UAAAlxC,QAAA,6BACAmzC,EAAAjC,UAAA,SAEA,YAAAiC,EAAAjC,YACAiC,EAAAjC,UAAA,WAGAiC,EAAAhrB,IAAA6rB,SAAAb,EAAAhrB,KACAgrB,EAAAhrB,EAAAgrB,EAAAvE,KAWA,8CACA,8CACA,kCACA,oCACA,wCACA,4CACA,0CACA,gCACA,sBACA,4CACA,4CACA,4BAAAoE,IACA,8CACA,8CACA,8BAAAA,IACA,qBAAAa,IACA,sBAAAA,IACA,2BAAAb,IACA,4BAAAA,IACA,6BAAAA,IACA,6BAAAA,IACA,6BAAAA,IACA,sBACA,kBAAAA,IACA,mBAEAx5C,QA9BA,SAAAo1C,GACA,OA7GApgB,EA6GA2kB,EA5GAc,GADAv2C,EA6GAkxC,GA5GA,GACAsF,EAAAx2C,EAAA,UACAu2C,KAAAzlB,IAAA0lB,KAAA1lB,IACAA,EAAAylB,GAAAzlB,EAAA0lB,GACA,IAAAx2C,EAAApQ,SACAkhC,EAAAylB,GAAAv2C,EAAA,GAAA8wB,EAAAylB,OANA,IAAAzlB,EAAA9wB,EACAu2C,EACAC,IAyIAf,EAAA3D,QAAA2D,EAAApD,OAAA,4BAAAoD,EAAAE,UAAA,iCAAAF,EAAAE,WACAF,EAAA3D,MAAA2D,EAAApD,OAEAoD,EAAA7D,SAAA6D,EAAAhE,MAAA,6BAAAgE,EAAAE,UAAA,oCAAAF,EAAAE,WACAF,EAAAlE,KAAA+D,EAAAG,EAAAhE,KAAA,UACAgE,EAAA7D,OAAA6D,EAAAhE,MAWAgF,CAAA3lB,GACAA,GC9JA,SAAAyc,EAAAxzC,GAEA,IAAA28C,EAAA7nD,KACA,OAAAwhB,UAAAzgB,OAAA,CACA,IAAA89C,EAAAr9B,UAAA,GACA,iBAAAq9B,EACA,MAAAA,EAAAvM,OAAA,GACAoM,EAAAxzC,GAAA22C,EAAArgC,UAAA,IAGAk9B,EAAAxzC,GAAAy7C,EAAAnlC,UAAA,IAGAk9B,EAAAxzC,GAAA2zC,OAGA,OAAAr9B,UAAAzgB,OAAA,CACA,GAAA6F,MAAAggB,QAAA1b,GACA,OAAAA,EAAA6D,IAAA,SAAAqzC,GACAx7C,MAAAggB,QAAAw7B,GACA1D,EAAAoJ,MAAAD,EAAAzF,GAGA1D,EAAA0D,KAIA,oBAAAl3C,GACA,GAAAA,KAAAwzC,EACA,OAAAA,EAAAxzC,OAGA,SAAAA,EACAwzC,EAAA,QAAAxzC,EAAA68C,MAAA78C,EAEA,SAAAA,EACAwzC,EAAA,QAAAxzC,EAAA88C,MAAA98C,EAEA,YAAAA,EACAwzC,EAAA,WAAAxzC,EAAA+8C,SAAA/8C,EAGA8C,QAAAk6C,IAAAh9C,GAEA,SThDA,SAAAwzC,GACAA,EAAA,+FACAA,EAAA,+HACAA,EAAA,gKAEAA,EAAAyJ,MAAAzJ,EAAA,aACAA,EAAA,aAAAA,EAAA,aACAA,EAAA0J,OAAA1J,EAAA,aACAA,EAAA,eAAAA,EAAA,aACAA,EAAA,eAAAA,EAAA,aS4CA2J,CAAA3J,GACA,IAAA4J,EAAA,EC7CA,IAAAC,GAAA,kIA0BA,IAAAC,EAjBA,SAAA7J,GACA,OAhBA,SAAAA,GACA,uBAAAA,EAeA8J,CAAA9J,GAbA,SAAAA,GACA,OAAAA,KAAA2J,EAcAI,CAAA/J,GACA2J,EAAA3J,GAZA,SAAAA,GACA,OAAA4J,EAAAl4C,KAAA,SAAAg2C,GACA,OAAA1H,EAAAlrC,QAAA4yC,IAAA,IAYAsC,CAAAhK,GACAgI,EAAAhI,GAVA,SAAAA,GACA,YAAAA,EAAA,GAWAiK,CAAAjK,GACAkD,EAAAlD,QADA,EAIAA,GC/BAkK,EAAA,SAAAC,EAAA7xC,GAEA,IAAA1E,EAAAq4B,EACA,GAFAke,SAEA7xC,EACA,OAAA6xC,EAEA,IAAAle,KAAA3zB,OAEA7Z,KADAmV,EAAA0E,EAAA2zB,MAEAke,EAAAle,GAAAr4B,GAGA,OAAAu2C,GCZAC,EAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAAC,EACA,OAAAC,EAAArnD,KAAAC,KAAA,EAAAqnD,MCFAC,EAAA,SAAA9nD,GACA,OAAAA,EAAA,QCGA+nD,EAAA,SAAA/nD,GACA,OAAAO,KAAAynD,IAAAhoD,IAAAm/C,EAAAn/C,IAAA8nD,EAAA9nD,GAAAk/C,GCHA+I,EAAA,SAAAP,EAAAQ,EAAAP,GACA,IAAAE,EAAAH,EAAAC,EACAQ,EAAA,GAAAT,EAEA,OADAG,EAAAtnD,KAAA6nD,KAAA,EAAAP,IAAA,EAAAA,GAAAM,GACA5nD,KAAA8nD,IAAA,IAAA3J,EAAAwJ,IAAAL,GCJAS,EAAA,SAAAZ,EAAAa,GAIA,IAHA,IACAV,EAAAW,EADAC,EAAA,GAAAf,EAEAQ,EAAAxJ,EAAA,EAAAn+C,KAAAmoD,KAAAH,GACAtmD,EAAA,EAAiBA,GAAA,GAASA,IAI1B,GAHA4lD,EAAAH,EAAAnnD,KAAAooD,IAAAT,GAEAA,GADAM,EAAA9J,EAAA,EAAAn+C,KAAAmoD,KAAAH,EAAAhoD,KAAA6nD,KAAA,EAAAP,IAAA,EAAAA,GAAAY,IAAAP,EAEA3nD,KAAAynD,IAAAQ,IAAA,MACA,OAAAN,EAIA,aCXA,SAAAU,EAAAC,GACA,OAAAA,EAIA,ICPAC,IC6FAhM,KAzFA,WACA,IAAA+K,EAAAnpD,KAAA47B,EAAA57B,KAAAqiD,EACAriD,KAAAqqD,GAAA,EAAAlB,IACA,OAAAnpD,OACAA,KAAA0jD,GAAA,GAEA,OAAA1jD,OACAA,KAAA4jD,GAAA,GAEA5jD,KAAAsqD,EAAAzoD,KAAAC,KAAA9B,KAAAqqD,IACArqD,KAAA+iD,OACA/iD,KAAAunD,OACAvnD,KAAA8jD,GAAAjiD,KAAA0oD,IAAAvqD,KAAA+iD,QAGA/iD,KAAA8jD,GAAAiF,EAAA/oD,KAAAsqD,EAAAzoD,KAAAooD,IAAAjqD,KAAA+iD,QAAAlhD,KAAA0oD,IAAAvqD,KAAA+iD,SAIA/iD,KAAA8jD,KACA9jD,KAAA+jD,EACA/jD,KAAA8jD,GAAA9jD,KAAA+jD,EAGA/jD,KAAA8jD,GAAA,IAkEArE,QAzDA,SAAA54B,GACA,IAOAvlB,EAAAC,EAPAipD,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAEA,GAAAkpD,EAAAnK,EAAA,IAAAmK,EAAAnK,GAAA,IAAAkK,EAAAlK,EAAA,KAAAkK,EAAAlK,GAAA,IACA,YAIA,GAAAz+C,KAAAynD,IAAAznD,KAAAynD,IAAAmB,GAAAzK,IAAAI,EACA,YAGA,GAAApgD,KAAAunD,OACAjmD,EAAAtB,KAAA0jD,GAAA1jD,KAAAqiD,EAAAriD,KAAA8jD,GAAAuF,EAAAmB,EAAAxqD,KAAAijD,OACA1hD,EAAAvB,KAAA4jD,GAAA5jD,KAAAqiD,EAAAriD,KAAA8jD,GAAAjiD,KAAAqmD,IAAArmD,KAAA8nD,IAAApJ,EAAA,GAAAkK,QAEA,CACA,IAAAxB,EAAApnD,KAAAooD,IAAAQ,GACAZ,EAAAN,EAAAvpD,KAAAsqD,EAAAG,EAAAxB,GACA3nD,EAAAtB,KAAA0jD,GAAA1jD,KAAAqiD,EAAAriD,KAAA8jD,GAAAuF,EAAAmB,EAAAxqD,KAAAijD,OACA1hD,EAAAvB,KAAA4jD,GAAA5jD,KAAAqiD,EAAAriD,KAAA8jD,GAAAjiD,KAAAqmD,IAAA2B,GAIA,OAFAhjC,EAAAvlB,IACAulB,EAAAtlB,IACAslB,GAiCA64B,QA3BA,SAAA74B,GAEA,IAEA2jC,EAAAC,EAFAnpD,EAAAulB,EAAAvlB,EAAAtB,KAAA0jD,GACAniD,EAAAslB,EAAAtlB,EAAAvB,KAAA4jD,GAGA,GAAA5jD,KAAAunD,OACAkD,EAAAzK,EAAA,EAAAn+C,KAAAmoD,KAAAnoD,KAAA6oD,KAAAnpD,GAAAvB,KAAAqiD,EAAAriD,KAAA8jD,UAEA,CACA,IAAA+F,EAAAhoD,KAAA6oD,KAAAnpD,GAAAvB,KAAAqiD,EAAAriD,KAAA8jD,KAEA,YADA2G,EAAAb,EAAA5pD,KAAAsqD,EAAAT,IAEA,YAOA,OAJAW,EAAAnB,EAAArpD,KAAAijD,MAAA3hD,GAAAtB,KAAAqiD,EAAAriD,KAAA8jD,KAEAj9B,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAQA+I,OALA,wGFlFAwuB,KAXA,aAYAqB,QAAAyK,EACAxK,QAAAwK,EACAt6B,OALA,wBCNA+6B,KACAC,KAEA,SAAAC,EAAAp1B,EAAAlyB,GACA,IAAAmD,EAAAkkD,EAAA7pD,OACA,OAAA00B,EAAA7F,OAIAg7B,EAAAlkD,GAAA+uB,EACAA,EAAA7F,MAAA3iB,QAAA,SAAAxH,GACAklD,EAAAllD,EAAAm8C,eAAAl7C,IAEA1G,OAPAgO,QAAAk6C,IAAA3kD,IACA,GAwBA,IAAAunD,GACAtnC,MAJA,WACA4mC,EAAAn9C,QAAA49C,IAIAA,MACAxgD,IAhBA,SAAAa,GACA,IAAAA,EACA,SAEA,IAAAzF,EAAAyF,EAAA02C,cACA,gBAAA+I,EAAAllD,IAAAmlD,EAAAD,EAAAllD,IACAmlD,EAAAD,EAAAllD,SADA,IE1BAslD,GAEAC,OACA3I,EAAA,QACAG,GAAA,QACAyI,YAAA,cAGAC,OACA7I,EAAA,QACAG,GAAA,QACAyI,YAAA,6BAGAE,OACA9I,EAAA,QACAG,GAAA,cACAyI,YAAA,wBAGAG,OACA/I,EAAA,QACAG,GAAA,QACAyI,YAAA,YAGAI,MACAhJ,EAAA,YACAzmB,EAAA,WACAqvB,YAAA,aAGAK,MACAjJ,EAAA,QACAG,GAAA,OACAyI,YAAA,uBAGAM,OACAlJ,EAAA,QACAG,GAAA,OACAyI,YAAA,4BAGAO,UACAnJ,EAAA,YACAzmB,EAAA,YACAqvB,YAAA,iBAGAQ,QACApJ,EAAA,WACAG,GAAA,IACAyI,YAAA,8BAGAS,SACArJ,EAAA,QACAG,GAAA,OACAyI,YAAA,mCAGAU,OACAtJ,EAAA,QACAG,GAAA,cACAyI,YAAA,qBAGAW,QACAvJ,EAAA,YACAG,GAAA,YACAyI,YAAA,eAGAY,UACAxJ,EAAA,YACAG,GAAA,YACAyI,YAAA,yBAGAa,QACAzJ,EAAA,UACAzmB,EAAA,UACAqvB,YAAA,eAGAc,QACA1J,EAAA,YACAG,GAAA,SACAyI,YAAA,oBAGAe,QACA3J,EAAA,kBACAG,GAAA,kBACAyI,YAAA,eAGAgB,KACA5J,EAAA,UACAG,GAAA,OACAyI,YAAA,mCAGAiB,QACA7J,EAAA,QACAG,GAAA,MACAyI,YAAA,2BAGAkB,SACA9J,EAAA,WACAG,GAAA,SACAyI,YAAA,gBAGAmB,SACA/J,EAAA,YACAG,GAAA,SACAyI,YAAA,gBAGAoB,SACAhK,EAAA,YACAG,GAAA,SACAyI,YAAA,gBAGAqB,SACAjK,EAAA,YACAG,GAAA,SACAyI,YAAA,gBAGAsB,SACAlK,EAAA,YACAG,GAAA,SACAyI,YAAA,gBAGAuB,SACAnK,EAAA,YACAG,GAAA,SACAyI,YAAA,6BAGAwB,SACApK,EAAA,QACAG,GAAA,MACAyI,YAAA,gCAGAyB,UACArK,EAAA,QACAG,GAAA,MACAyI,YAAA,gBAGA0B,SACAtK,EAAA,QACAG,GAAA,MACAyI,YAAA,gBAGA2B,SACAvK,EAAA,QACAG,GAAA,MACAyI,YAAA,gBAGA4B,OACAxK,EAAA,QACAG,GAAA,IACAyI,YAAA,SAGA6B,MACAzK,EAAA,QACAG,GAAA,IACAyI,YAAA,gCAGA8B,OACA1K,EAAA,QACAG,GAAA,OACAyI,YAAA,cAGA+B,OACA3K,EAAA,QACAG,GAAA,QACAyI,YAAA,cAGAgC,OACA5K,EAAA,QACAG,GAAA,IACAyI,YAAA,mBAGAiC,UACA7K,EAAA,UACAzmB,EAAA,UACAqvB,YAAA,0BAGAkC,SACA9K,EAAA,QACAG,GAAA,QACAyI,YAAA,yBAGAmC,OACA/K,EAAA,QACAG,GAAA,MACAyI,YAAA,oBAGAoC,QACAhL,EAAA,QACAzmB,EAAA,aACAqvB,YAAA,kBAGAqC,SACAjL,EAAA,QACAzmB,EAAA,aACAqvB,YAAA,WAGAsC,OACAlL,EAAA,QACAG,GAAA,MACAyI,YAAA,UAGAuC,OACAnL,EAAA,QACAG,GAAA,OACAyI,YAAA,UAGAwC,MACApL,EAAA,QACAG,GAAA,OACAyI,YAAA,WAGA9C,EAAA4C,EAAA5C,OACA9F,EAAA,QACAG,GAAA,cACAyI,YAAA,UAGAF,EAAAxD,QACAlF,EAAA,QACAzmB,EAAA,QACAqvB,YAAA,6BCjQA,IAAAyC,MAEAA,GAAAC,OACAtJ,QAAA,QACAuJ,QAAA,QACAC,UAAA,SAGAH,GAAAI,QACAzJ,QAAA,yBACAuJ,QAAA,SACAC,UAAA,SAGAH,GAAAK,QACA1J,QAAA,uBACAuJ,QAAA,QACAC,UAAA,wCAGAH,GAAAM,OACA3J,QAAA,QACAuJ,QAAA,QACAC,UAAA,6BAGAH,GAAAO,OACAvJ,SAAA,2CACAkJ,QAAA,SACAC,UAAA,6BAGAH,GAAAQ,SACA7J,QAAA,mBACAuJ,QAAA,SACAC,UAAA,+BAGAH,GAAAS,UACA9J,QAAA,mBACAuJ,QAAA,UACAC,UAAA,yBAGAH,GAAAU,eACA/J,QAAA,qBACAuJ,QAAA,SACAC,UAAA,iBAGAH,GAAAW,QACAhK,QAAA,qDACAuJ,QAAA,OACAC,UAAA,kBAGAH,GAAAY,OACAjK,QAAA,qDACAuJ,QAAA,WACAC,UAAA,gBAGAH,GAAAa,YACAlK,QAAA,yBACAuJ,QAAA,OACAC,UAAA,cAGAH,GAAAc,QACAnK,QAAA,6CACAuJ,QAAA,OACAC,UAAA,mCAGAH,GAAAe,QACApK,QAAA,yDACAuJ,QAAA,OACAC,UAAA,aAGAH,GAAAgB,QACArK,QAAA,aACAuJ,QAAA,SACAC,UAAA,kBAGAH,GAAAiB,UACAtK,QAAA,eACAuJ,QAAA,SACAC,UAAA,YAGAH,GAAAkB,eACAvK,QAAA,cACAuJ,QAAA,SACAC,UAAA,yBAGAH,GAAAmB,OACAxK,QAAA,wDACAuJ,QAAA,OACAC,UAAA,8BCnEA,IAAAiB,GAhCA,SAAAnK,EAAAL,EAAAjC,EAAAzmB,EAAAyuB,EAAA0E,GACA,IAAA3c,KA4BA,OAzBAA,EAAA4c,gBADA5xD,IAAAunD,GAAA,SAAAA,EACA7E,EAEAD,EAGAyE,IACAlS,EAAAkS,eAAAv1C,IAAAnR,YACA,IAAAw0C,EAAAkS,aAAA,QAAAlS,EAAAkS,aAAA,QAAAlS,EAAAkS,aAAA,KACAlS,EAAA4c,WAAArP,GAEAvN,EAAAkS,aAAAvjD,OAAA,IACA,IAAAqxC,EAAAkS,aAAA,QAAAlS,EAAAkS,aAAA,QAAAlS,EAAAkS,aAAA,QAAAlS,EAAAkS,aAAA,KACAlS,EAAA4c,WAAApP,EACAxN,EAAAkS,aAAA,IAAAvE,EACA3N,EAAAkS,aAAA,IAAAvE,EACA3N,EAAAkS,aAAA,IAAAvE,EACA3N,EAAAkS,aAAA,GAAAlS,EAAAkS,aAAA,YAKAlS,EAAAiQ,IACAjQ,EAAAxW,IACAwW,EAAAiY,KACAjY,EAAA2c,MACA3c,GCvBA,SAAA6c,GAAAC,EAAA3iD,GACA,KAAAvM,gBAAAivD,IACA,WAAAA,GAAAC,GAEA3iD,KAAA,SAAA0B,GACA,GAAAA,EACA,MAAAA,GAGA,IAAAkhD,EAAA3G,EAAA0G,GACA,oBAAAC,EAAA,CAIA,IAAAC,EAAAH,GAAAnE,YAAAzgD,IAAA8kD,EAAArI,UACA,GAAAsI,EAAA,CAIA,GAAAD,EAAAxK,WAAA,SAAAwK,EAAAxK,UAAA,CACA,IAAA0K,EAAAz1C,EAAA8zC,GAAAyB,EAAAxK,WACA0K,IACAF,EAAA7K,aAAA+K,EAAAhL,QAAAgL,EAAAhL,QAAAj+B,MAAA,UACA+oC,EAAA3H,MAAA6H,EAAAzB,QACAuB,EAAAtB,UAAAwB,EAAAxB,UAAAwB,EAAAxB,UAAAsB,EAAAxK,WAGAwK,EAAArL,GAAAqL,EAAArL,IAAA,EACAqL,EAAApQ,KAAAoQ,EAAApQ,MAAA,MACAoQ,EAAA3H,MAAA2H,EAAA3H,OAAA,QACA,IClCAnF,EAAAzmB,EAAAqoB,EACAqL,EACAC,EACAlF,EACAC,ED8BAkF,ECfA,SAAAnN,EAAAzmB,EAAA4mB,EAAAgF,EAAAD,GACA,IAAAlF,EAAA,CACA,IAAAuL,EAAAh0C,EAAAmxC,EAAAvD,GACAoG,IACAA,EAAAzF,GAEA9F,EAAAuL,EAAAvL,EACAzmB,EAAAgyB,EAAAhyB,EACA4mB,EAAAoL,EAAApL,GAUA,OAPAA,IAAA5mB,IACAA,GAAA,IAAA4mB,GAAAH,IAEA,IAAAG,GAAA3gD,KAAAynD,IAAAjH,EAAAzmB,GAAAwkB,KACAmH,GAAA,EACA3rB,EAAAymB,IAGAA,IACAzmB,IACA4mB,KACA+E,UDPAkI,CAAAN,EAAA9M,EAAA8M,EAAAvzB,EAAAuzB,EAAA3M,GAAA2M,EAAA3H,MAAA2H,EAAA5H,QACAmI,GCnCArN,EDmCAmN,EAAAnN,ECnCAzmB,EDmCA4zB,EAAA5zB,EAAA4zB,EAAAhN,GCnCAyB,EDmCAkL,EAAAlL,IChCAoG,IAFAiF,EAAAjN,MACAkN,EAAA3zB,MACA0zB,EACAhF,EAAA,EACArG,GAEAqL,GADAjN,GAAA,EAAAgI,GAAApK,EAAAoK,GAAAnK,EAAAmK,EAAAlK,KACAkC,EACAgI,EAAA,GAEAC,EAAAzoD,KAAAC,KAAAuoD,IAIAA,KACAC,IACAyE,KAJAO,EAAAC,ODwBAI,EAAAR,EAAA5M,OAAAuM,GAAAK,EAAAxK,UAAAwK,EAAA7K,aAAAkL,EAAAnN,EAAAmN,EAAA5zB,EAAA8zB,EAAArF,GAAAqF,EAAAX,KAEAlG,EAAA7oD,KAAAmvD,GACAtG,EAAA7oD,KAAAovD,GAGApvD,KAAAqiD,EAAAmN,EAAAnN,EACAriD,KAAA47B,EAAA4zB,EAAA5zB,EACA57B,KAAAwiD,GAAAgN,EAAAhN,GACAxiD,KAAAunD,OAAAiI,EAAAjI,OAGAvnD,KAAAqqD,GAAAqF,EAAArF,GACArqD,KAAAsqD,EAAAoF,EAAApF,EACAtqD,KAAA+uD,IAAAW,EAAAX,IAGA/uD,KAAAuiD,MAAAoN,EAGA3vD,KAAAo+C,OAGA7xC,EAAA,KAAAvM,WAvCAuM,EAAA2iD,QALA3iD,EAAA2iD,GA+CAD,GAAAnE,cACAmE,GAAAnE,YAAAtnC,QACA,IAAAosC,GAAA,GEjEA,SAAAC,GAAAviD,GACA,OAAAA,IAAAqyC,GAAAryC,IAAAsyC,EAGA,IAAAkQ,GAAA,SAAA74C,EAAA84C,EAAA5qD,GAEA,OCPA,SAAA8R,EAAA84C,GACA,OAAA94C,EAAA+3C,aAAAe,EAAAf,cAEG/3C,EAAAorC,IAAA0N,EAAA1N,GAAAxgD,KAAAynD,IAAAryC,EAAAozC,GAAA0F,EAAA1F,IAAA,SAIApzC,EAAA+3C,aAAArP,EACH1oC,EAAAqtC,aAAA,KAAAyL,EAAAzL,aAAA,IAAArtC,EAAAqtC,aAAA,KAAAyL,EAAAzL,aAAA,IAAArtC,EAAAqtC,aAAA,KAAAyL,EAAAzL,aAAA,GACGrtC,EAAA+3C,aAAApP,GACH3oC,EAAAqtC,aAAA,KAAAyL,EAAAzL,aAAA,IAAArtC,EAAAqtC,aAAA,KAAAyL,EAAAzL,aAAA,IAAArtC,EAAAqtC,aAAA,KAAAyL,EAAAzL,aAAA,IAAArtC,EAAAqtC,aAAA,KAAAyL,EAAAzL,aAAA,IAAArtC,EAAAqtC,aAAA,KAAAyL,EAAAzL,aAAA,IAAArtC,EAAAqtC,aAAA,KAAAyL,EAAAzL,aAAA,IAAArtC,EAAAqtC,aAAA,KAAAyL,EAAAzL,aAAA,IDHA0L,CAAA/4C,EAAA84C,GACA5qD,EAMA8R,EAAA+3C,aAAAlP,GAAAiQ,EAAAf,aAAAlP,EACA36C,EAMA8R,EAAAozC,KAAA0F,EAAA1F,IAAApzC,EAAAorC,IAAA0N,EAAA1N,GAAAwN,GAAA54C,EAAA+3C,aAAAa,GAAAE,EAAAf,aAKA7pD,ECGA,SAAA0hB,EAAAwjC,EAAAhI,GACA,IAIA4N,EACAC,EACAC,EACAC,EAPAC,EAAAxpC,EAAAvlB,EACAgvD,EAAAzpC,EAAAtlB,EACAgvD,EAAA1pC,EAAAgP,EAAAhP,EAAAgP,EAAA,EAYA,GAAAy6B,GAAAtQ,GAAAsQ,GAAA,MAAAtQ,EACAsQ,GAAAtQ,OACG,GAAAsQ,EAAAtQ,GAAAsQ,EAAA,MAAAtQ,EACHsQ,EAAAtQ,OACG,GAAAsQ,GAAAtQ,GAAAsQ,EAAAtQ,EAGH,YAUA,OAPAqQ,EAAAxuD,KAAA00C,KACA8Z,GAAA,EAAAxuD,KAAA00C,IAEA2Z,EAAAruD,KAAAooD,IAAAqG,GACAF,EAAAvuD,KAAA0oD,IAAA+F,GACAH,EAAAD,KAGA5uD,IAFA2uD,EAAA5N,EAAAxgD,KAAAC,KAAA,EAAAuoD,EAAA8F,IAEAI,GAAAH,EAAAvuD,KAAA0oD,IAAA8F,GACA9uD,GAAA0uD,EAAAM,GAAAH,EAAAvuD,KAAAooD,IAAAoG,GACAx6B,GAAAo6B,GAAA,EAAA5F,GAAAkG,GAAAL,GDtCAM,CAAArrD,EAAA8R,EAAAozC,GAAApzC,EAAAorC,GAEAwN,GAAA54C,EAAA+3C,cACA7pD,ECmJA,SAAA0hB,EAAAmoC,EAAA1K,GAEA,GAAA0K,IAAArP,EAGA,OACAr+C,EAAAulB,EAAAvlB,EAAAgjD,EAAA,GACA/iD,EAAAslB,EAAAtlB,EAAA+iD,EAAA,GACAzuB,EAAAhP,EAAAgP,EAAAyuB,EAAA,IAEG,GAAA0K,IAAApP,EAAA,CACH,IAAA6Q,EAAAnM,EAAA,GACAoM,EAAApM,EAAA,GACAqM,EAAArM,EAAA,GACAsM,EAAAtM,EAAA,GACAuM,EAAAvM,EAAA,GACAwM,EAAAxM,EAAA,GACAyM,EAAAzM,EAAA,GAGA,OACAhjD,EAAAyvD,GAAAlqC,EAAAvlB,EAAAwvD,EAAAjqC,EAAAtlB,EAAAsvD,EAAAhqC,EAAAgP,GAAA46B,EACAlvD,EAAAwvD,GAAAD,EAAAjqC,EAAAvlB,EAAAulB,EAAAtlB,EAAAqvD,EAAA/pC,EAAAgP,GAAA66B,EACA76B,EAAAk7B,IAAAF,EAAAhqC,EAAAvlB,EAAAsvD,EAAA/pC,EAAAtlB,EAAAslB,EAAAgP,GAAA86B,ID1KAK,CAAA7rD,EAAA8R,EAAA+3C,WAAA/3C,EAAAqtC,eAEAuL,GAAAE,EAAAf,cACA7pD,ECgLA,SAAA0hB,EAAAmoC,EAAA1K,GAEA,GAAA0K,IAAArP,EAGA,OACAr+C,EAAAulB,EAAAvlB,EAAAgjD,EAAA,GACA/iD,EAAAslB,EAAAtlB,EAAA+iD,EAAA,GACAzuB,EAAAhP,EAAAgP,EAAAyuB,EAAA,IAGG,GAAA0K,IAAApP,EAAA,CACH,IAAA6Q,EAAAnM,EAAA,GACAoM,EAAApM,EAAA,GACAqM,EAAArM,EAAA,GACAsM,EAAAtM,EAAA,GACAuM,EAAAvM,EAAA,GACAwM,EAAAxM,EAAA,GACAyM,EAAAzM,EAAA,GACA2M,GAAApqC,EAAAvlB,EAAAmvD,GAAAM,EACAG,GAAArqC,EAAAtlB,EAAAmvD,GAAAK,EACAI,GAAAtqC,EAAAgP,EAAA86B,GAAAI,EAIA,OACAzvD,EAAA2vD,EAAAH,EAAAI,EAAAL,EAAAM,EACA5vD,GAAAuvD,EAAAG,EAAAC,EAAAN,EAAAO,EACAt7B,EAAAg7B,EAAAI,EAAAL,EAAAM,EAAAC,ID5MAC,CAAAjsD,EAAA4qD,EAAAf,WAAAe,EAAAzL,eCoCA,SAAAz9B,EAAAwjC,EAAAhI,EAAAzmB,GAGA,IAIAy1B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAKA5B,EAEAE,EALA2B,EAAArrC,EAAAvlB,EACA6wD,EAAAtrC,EAAAtlB,EACA6wD,EAAAvrC,EAAAgP,EAAAhP,EAAAgP,EAAA,EASA,GAJAw7B,EAAAxvD,KAAAC,KAAAowD,IAAAC,KACAb,EAAAzvD,KAAAC,KAAAowD,IAAAC,IAAAC,KAGAf,EAAAhP,EA7BA,OAoCA,GAJAgO,EAAA,EAIAiB,EAAAjP,EApCA,MAuCA,OADAkO,GAAA30B,GAEAt6B,EAAAulB,EAAAvlB,EACAC,EAAAslB,EAAAtlB,EACAs0B,EAAAhP,EAAAgP,QAMAw6B,EAAAxuD,KAAAwwD,MAAAF,EAAAD,GAYAX,EAAAa,EAAAd,EAGAM,GAFAJ,EAAAH,EAAAC,IAEA,EAAAjH,IADAoH,EAAA,EAAA5vD,KAAAC,KAAA,EAAAuoD,GAAA,EAAAA,GAAAmH,MAEAK,EAAAN,EAAAE,EACAQ,EAAA,EAIA,GACAA,IAMAP,EAAArH,GALAsH,EAAAtP,EAAAxgD,KAAAC,KAAA,EAAAuoD,EAAAwH,OAKAF,GAFApB,EAAAc,EAAAO,EAAAQ,EAAAP,EAAAF,GAAA,EAAAtH,EAAAwH,OAMAG,GADAD,EAAAR,GAFAE,EAAA,EAAA5vD,KAAAC,KAAA,EAAA4vD,GAAA,EAAAA,GAAAF,OAGAI,GAFAE,EAAAN,GAAA,EAAAE,GAAAD,GAEAI,EACAD,EAAAE,EACAD,EAAAE,QAEAC,IAnFA,OAmFAC,EAlFA,IAsFA,OACA3wD,EAAA+uD,EACA9uD,EAHAM,KAAAmoD,KAAA+H,EAAAlwD,KAAAynD,IAAAwI,IAIAj8B,EAAA06B,GDhIA+B,CAAAntD,EAAA4qD,EAAA1F,GAAA0F,EAAA1N,EAAA0N,EAAAn0B,IAZAz2B,GExBAotD,GAAA,SAAAC,EAAAC,EAAAttD,GACA,IAGAi9C,EAAAsQ,EAAAnvD,EAHAovD,EAAAxtD,EAAA7D,EACAsxD,EAAAztD,EAAA5D,EACAsxD,EAAA1tD,EAAA0wB,GAAA,EAEAuc,KACA,IAAA7uC,EAAA,EAAaA,EAAA,EAAOA,IACpB,IAAAkvD,GAAA,IAAAlvD,QAAAnG,IAAA+H,EAAA0wB,EAeA,OAZA,IAAAtyB,GACA6+C,EAAAuQ,EACAD,EAAA,KAEA,IAAAnvD,GACA6+C,EAAAwQ,EACAF,EAAA,MAGAtQ,EAAAyQ,EACAH,EAAA,KAEAF,EAAAzT,KAAAx7C,IACA,QACA6uC,EAAAsgB,GAAAtQ,EACA,MACA,QACAhQ,EAAAsgB,IAAAtQ,EACA,MACA,QACAhQ,EAAAsgB,GAAAtQ,EACA,MACA,QACAhQ,EAAAsgB,IAAAtQ,EACA,MACA,aACAhlD,IAAA+H,EAAAutD,KACAtgB,EAAAvc,EAAAusB,GAEA,MACA,aACAhlD,IAAA+H,EAAAutD,KACAtgB,EAAAvc,GAAAusB,GAEA,MACA,QAEA,YAGA,OAAAhQ,GClDA0gB,GAAA,SAAA/lD,GACA,IAAAqlC,GACA9wC,EAAAyL,EAAA,GACAxL,EAAAwL,EAAA,IAQA,OANAA,EAAAhM,OAAA,IACAqxC,EAAAvc,EAAA9oB,EAAA,IAEAA,EAAAhM,OAAA,IACAqxC,EAAAl1C,EAAA6P,EAAA,IAEAqlC,GCXA2gB,GAAA,SAAA5tD,GACA6tD,GAAA7tD,EAAA7D,GACA0xD,GAAA7tD,EAAA5D,IAEA,SAAAyxD,GAAAC,GACA,sBAAAC,OAAAzL,SAAA,CACA,GAAAyL,OAAAzL,SAAAwL,GACA,OAEA,UAAAE,UAAA,sCAEA,oBAAAF,UAAAxL,SAAAwL,GACA,UAAAE,UAAA,sCCDA,SAAA3T,GAAAvoC,EAAA84C,EAAA5qD,GACA,IAAAwoD,EAgEA,OA/DA/mD,MAAAggB,QAAAzhB,KACAA,EAAA2tD,GAAA3tD,IAEA4tD,GAAA5tD,GAEA8R,EAAAsrC,OAAAwN,EAAAxN,OAXA,SAAAtrC,EAAA84C,GACA,OAAA94C,EAAAsrC,MAAAyM,aAAArP,GAAA1oC,EAAAsrC,MAAAyM,aAAApP,IAAA,UAAAmQ,EAAApL,YAAAoL,EAAAxN,MAAAyM,aAAArP,GAAAoQ,EAAAxN,MAAAyM,aAAApP,IAAA,UAAA3oC,EAAA0tC,UAUAyO,CAAAn8C,EAAA84C,KAEA5qD,EAAAq6C,GAAAvoC,EADA02C,EAAA,IAAAiC,GAAA,SACAzqD,GACA8R,EAAA02C,GAGA,QAAA12C,EAAA8nC,OACA55C,EAAAotD,GAAAt7C,GAAA,EAAA9R,IAGA,YAAA8R,EAAA6vC,SACA3hD,GACA7D,EAAA6D,EAAA7D,EAAA++C,EACA9+C,EAAA4D,EAAA5D,EAAA8+C,IAIAppC,EAAAgoC,WACA95C,GACA7D,EAAA6D,EAAA7D,EAAA2V,EAAAgoC,SACA19C,EAAA4D,EAAA5D,EAAA0V,EAAAgoC,WAGA95C,EAAA8R,EAAAyoC,QAAAv6C,IAGA8R,EAAAutC,iBACAr/C,EAAA7D,GAAA2V,EAAAutC,gBAIAr/C,EAAA2qD,GAAA74C,EAAAsrC,MAAAwN,EAAAxN,MAAAp9C,GAGA4qD,EAAAvL,iBACAr/C,GACA7D,EAAA6D,EAAA7D,EAAAyuD,EAAAvL,eACAjjD,EAAA4D,EAAA5D,IAIA,YAAAwuD,EAAAjJ,SAEA3hD,GACA7D,EAAA6D,EAAA7D,EAAAg/C,EACA/+C,EAAA4D,EAAA5D,EAAA++C,IAGAn7C,EAAA4qD,EAAAtQ,QAAAt6C,GACA4qD,EAAA9Q,WACA95C,GACA7D,EAAA6D,EAAA7D,EAAAyuD,EAAA9Q,SACA19C,EAAA4D,EAAA5D,EAAAwuD,EAAA9Q,YAMA,QAAA8Q,EAAAhR,KACAwT,GAAAxC,GAAA,EAAA5qD,GAGAA,EC9EA,IAAAkuD,GAAAzD,GAAA,SAEA,SAAA0D,GAAAC,EAAAC,EAAA19B,GACA,IAAA29B,EAAArhB,EAAA/a,EACA,OAAAzwB,MAAAggB,QAAAkP,IACA29B,EAAAjU,GAAA+T,EAAAC,EAAA19B,GACA,IAAAA,EAAA/0B,QACA0yD,EAAAnyD,EAAAmyD,EAAAlyD,EAAAkyD,EAAA59B,IAGA49B,EAAAnyD,EAAAmyD,EAAAlyD,KAIA6wC,EAAAoN,GAAA+T,EAAAC,EAAA19B,GAEA,KADAuB,EAAAh3B,OAAAg3B,KAAAvB,IACA/0B,OACAqxC,GAEA/a,EAAApqB,QAAA,SAAAwM,GACA,MAAAA,GAAA,MAAAA,IAGA24B,EAAA34B,GAAAqc,EAAArc,MAEA24B,IAIA,SAAAshB,GAAAlnD,GACA,OAAAA,aAAAojD,GACApjD,EAEAA,EAAAmnD,MACAnnD,EAAAmnD,MAEA/D,GAAApjD,GAoCA,IAAAonD,GAlCA,SAAAC,EAAAC,EAAAj6B,GACAg6B,EAAAH,GAAAG,GACA,IACA5xB,EADA8xB,GAAA,EAcA,YAZA,IAAAD,GACAA,EAAAD,EACAA,EAAAR,GACAU,GAAA,SAEA,IAAAD,EAAAxyD,GAAAsF,MAAAggB,QAAAktC,MACAj6B,EAAAi6B,EACAA,EAAAD,EACAA,EAAAR,GACAU,GAAA,GAEAD,EAAAJ,GAAAI,GACAj6B,EACAy5B,GAAAO,EAAAC,EAAAj6B,IAGAoI,GACAwd,QAAA,SAAA3pB,GACA,OAAAw9B,GAAAO,EAAAC,EAAAh+B,IAEA4pB,QAAA,SAAA5pB,GACA,OAAAw9B,GAAAQ,EAAAD,EAAA/9B,KAGAi+B,IACA9xB,EAAA0xB,MAAAG,GAEA7xB,IC9DA+xB,GAAA,EAQAC,GAAA,SAQAC,GAAA,SAEAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,IACA/U,QAAAgV,GACA/U,QA4BA,SAAA8U,GACA,IAAA7wB,EAAA+wB,GAAAC,GAAAH,EAAAI,gBACA,GAAAjxB,EAAA8mB,KAAA9mB,EAAA6mB,IACA,OAAA7mB,EAAA6mB,IAAA7mB,EAAA8mB,IAAA9mB,EAAA6mB,IAAA7mB,EAAA8mB,KAEA,OAAA9mB,EAAAkxB,KAAAlxB,EAAAmxB,OAAAnxB,EAAAoxB,MAAApxB,EAAAqxB,MAhCAlC,QAAAmC,IAWA,SAAAR,GAAAS,EAAAC,GAEA,OADAA,KAAA,EA6TA,SAAAC,EAAAD,GAEA,IAAAE,EAAA,QAAAD,EAAAE,QACAC,EAAA,QAAAH,EAAAI,SAEA,OAAAJ,EAAAK,WAAAL,EAAAM,YAaAJ,EAbAF,EAAAE,QAaAE,EAbAJ,EAAAI,SAaAC,EAbAL,EAAAK,WAcAE,EAAAC,GAAAH,GACAI,EAAAh0D,KAAAqgC,MAAAozB,EAAA,KACAQ,EAAAj0D,KAAAqgC,MAAAszB,EAAA,QAoCAO,EAnCAF,EAmCAG,EAnCAF,EAmCAG,EAnCAN,EAqCAzyD,EAAA+yD,EAAA,EACAC,EAAAjC,GAAAkC,WAAAjzD,GACAkzD,EAAAlC,GAAAiC,WAAAjzD,GAGAmzD,EAAAH,EAAAH,EAAA,EACAO,EAAAF,EAAAJ,EACAO,GAAA,EAEAF,EAAA9B,KACA8B,IAAA9B,GAAAJ,GAAA,EACAoC,GAAA,IAGAF,IAAAjC,IAAA8B,EAAA9B,IAAAiC,EAAAjC,KAAAiC,EAAAjC,IAAA8B,EAAA9B,KAAAmC,IACAF,KAGAA,IAAAhC,IAAA6B,EAAA7B,IAAAgC,EAAAhC,KAAAgC,EAAAhC,IAAA6B,EAAA7B,KAAAkC,MACAF,IAEAjC,IACAiC,IAIAA,EAAA9B,KACA8B,IAAA9B,GAAAJ,GAAA,GAGAmC,EAAAhC,IACAgC,IAAAhC,GAAAH,GAAA,EACAoC,GAAA,GAGAA,GAAA,GAGAD,IAAAlC,IAAAgC,EAAAhC,IAAAkC,EAAAlC,KAAAkC,EAAAlC,IAAAgC,EAAAhC,KAAAmC,IACAD,KAGAA,IAAAjC,IAAA+B,EAAA/B,IAAAiC,EAAAjC,KAAAiC,EAAAjC,IAAA+B,EAAA/B,KAAAkC,MACAD,IAEAlC,IACAkC,IAIAA,EAAAhC,KACAgC,IAAAhC,GAAAH,GAAA,GAGA9hB,OAAAmkB,aAAAH,GAAAhkB,OAAAmkB,aAAAF,IA5GAjB,EAAAt/B,OAAAs/B,EAAAt0D,OAAA,EAAAo0D,GAAAI,EAAAx/B,OAAAw/B,EAAAx0D,OAAA,EAAAo0D,GAoDA,IAAAY,EAAAC,EAAAC,EAEA/yD,EACAgzD,EACAE,EAGAC,EACAC,EACAC,EAhDA,IAAAjB,EAAAE,EAAAC,EACAE,EACAE,EACAC,EAjVAW,CA8DA,SAAAvB,GACA,IAOAwB,EAAAC,EAAAC,EAAAC,EAAAC,EAGAC,EACAC,EAXAC,EAAA/B,EAAAzK,IACAyM,EAAAhC,EAAA1K,IACAnI,EAAA,QAMA8U,EAAAC,GAAAH,GACAI,EAAAD,GAAAF,GAIAF,EAAAn1D,KAAAqgC,OAAAg1B,EAAA,UAGA,MAAAA,IACAF,EAAA,IAIAC,GAAA,IAAAA,EAAA,IAAAC,GAAA,GAAAA,EAAA,KACAF,EAAA,IAIAC,GAAA,IAAAA,EAAA,KACAC,GAAA,GAAAA,EAAA,EACAF,EAAA,GAEAE,GAAA,GAAAA,EAAA,GACAF,EAAA,GAEAE,GAAA,IAAAA,EAAA,GACAF,EAAA,GAEAE,GAAA,IAAAA,EAAA,KACAF,EAAA,KAOAD,EAAAK,GAHA,GAAAJ,EAAA,UAKA,oBAEAN,EAAArU,EAAAxgD,KAAAC,KAAA,EA7CA,UA6CAD,KAAAooD,IAAAkN,GAAAt1D,KAAAooD,IAAAkN,IACAR,EAAA90D,KAAA8nD,IAAAwN,GAAAt1D,KAAA8nD,IAAAwN,GACAP,EAJA,oBAIA/0D,KAAA0oD,IAAA4M,GAAAt1D,KAAA0oD,IAAA4M,GACAN,EAAAh1D,KAAA0oD,IAAA4M,IAAAE,EAAAN,GAEAD,EAAAzU,GAAA,kBAAA8U,EAAA,oBAAAt1D,KAAAooD,IAAA,EAAAkN,GAAA,qBAAAt1D,KAAAooD,IAAA,EAAAkN,GAAA,qBAAAt1D,KAAAooD,IAAA,EAAAkN,IAEA,IAAAG,EAnDA,MAmDAZ,GAAAG,GAAA,EAAAF,EAAAC,GAAAC,MAAA,QAAAF,MAAA,GAAAC,EAAA,oBAAAC,UAAA,SAEAU,EArDA,OAqDAT,EAAAJ,EAAA70D,KAAA8nD,IAAAwN,IAAAN,IAAA,KAAAF,EAAA,EAAAC,EAAA,EAAAA,KAAAC,QAAA,UAAAF,MAAA,IAAAC,EAAA,oBAAAC,YAAA,MACAI,EAAA,IACAM,GAAA,KAIA,OACA/B,SAAA3zD,KAAAmhC,MAAAu0B,GACAjC,QAAAzzD,KAAAmhC,MAAAs0B,GACA7B,WAAAuB,EACAtB,WA6GA,SAAAjL,GAGA,IAAA+M,EAAA,IAEA,IAAA/M,MAAA,GACA+M,EAAA,IAEA,GAAA/M,MAAA,GACA+M,EAAA,IAEA,GAAA/M,MAAA,GACA+M,EAAA,IAEA,GAAA/M,MAAA,GACA+M,EAAA,IAEA,GAAA/M,MAAA,GACA+M,EAAA,IAEA,GAAA/M,MAAA,GACA+M,EAAA,IAEA,GAAA/M,MAAA,GACA+M,EAAA,IAEA,GAAA/M,MAAA,GACA+M,EAAA,IAEA,GAAA/M,MAAA,EACA+M,EAAA,IAEA,EAAA/M,MAAA,EACA+M,EAAA,IAEA,EAAA/M,OAAA,EACA+M,EAAA,KAEA,EAAA/M,OAAA,GACA+M,EAAA,KAEA,GAAA/M,OAAA,GACA+M,EAAA,KAEA,GAAA/M,OAAA,GACA+M,EAAA,KAEA,GAAA/M,OAAA,GACA+M,EAAA,KAEA,GAAA/M,OAAA,GACA+M,EAAA,KAEA,GAAA/M,OAAA,GACA+M,EAAA,KAEA,GAAA/M,OAAA,GACA+M,EAAA,KAEA,GAAA/M,OAAA,GACA+M,EAAA,KAEA,GAAA/M,OAAA,KACA+M,EAAA,KAEA,OAAAA,EA9KAC,CAAAR,IAlIAS,EACAjN,IAAAyK,EAAA,GACA1K,IAAA0K,EAAA,KACGC,GAmBH,SAAAF,GAAAT,GACA,IAAA7wB,EAAA+wB,GAAAC,GAAAH,EAAAI,gBACA,OAAAjxB,EAAA8mB,KAAA9mB,EAAA6mB,KACA7mB,EAAA6mB,IAAA7mB,EAAA8mB,OAEA9mB,EAAAkxB,KAAAlxB,EAAAoxB,OAAA,GAAApxB,EAAAqxB,IAAArxB,EAAAmxB,QAAA,GASA,SAAAsC,GAAAO,GACA,OAAAA,GAAA91D,KAAA00C,GAAA,KAUA,SAAAqhB,GAAAC,GACA,OAAAA,EAAAh2D,KAAA00C,GAAA,IAqGA,SAAAme,GAAAU,GAEA,IAAAmC,EAAAnC,EAAAI,SACA8B,EAAAlC,EAAAE,QACAI,EAAAN,EAAAM,WACAD,EAAAL,EAAAK,WAEA,GAAAA,EAAA,GAAAA,EAAA,GACA,YAGA,IAKAqC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EACAC,EAAAC,EANAhW,EAAA,QAGAiW,GAAA,EAAAz2D,KAAAC,KAAA,eAAAD,KAAAC,KAAA,YAMAR,EAAAg2D,EAAA,IACA/1D,EAAAg2D,EAMA7B,EAAA,MACAn0D,GAAA,KAKA42D,EAAA,GAAA1C,EAAA,SASA4C,GAFAD,EADA72D,EA7BA,MA8BA,oBAEA,EAAA+2D,EAAA,KAAAA,MAAA,IAAAz2D,KAAAooD,IAAA,EAAAmO,IAAA,GAAAE,IAAA,MAAAA,QAAA,IAAAz2D,KAAAooD,IAAA,EAAAmO,GAAA,IAAAE,MAAA,GAAAz2D,KAAAooD,IAAA,EAAAmO,GAGAN,EAAAzV,EAAAxgD,KAAAC,KAAA,EAjCA,UAiCAD,KAAAooD,IAAAoO,GAAAx2D,KAAAooD,IAAAoO,IACAN,EAAAl2D,KAAA8nD,IAAA0O,GAAAx2D,KAAA8nD,IAAA0O,GACAL,EAVA,oBAUAn2D,KAAA0oD,IAAA8N,GAAAx2D,KAAA0oD,IAAA8N,GACAJ,EAAA,UAAA5V,EAAAxgD,KAAA6nD,IAAA,EApCA,UAoCA7nD,KAAAooD,IAAAoO,GAAAx2D,KAAAooD,IAAAoO,GAAA,KACAH,EAAA52D,GAvCA,MAuCAw2D,GAEA,IAAArN,EAAA4N,EAAAP,EAAAj2D,KAAA8nD,IAAA0O,GAAAJ,GAAAC,IAAA,OAAAH,EAAA,GAAAC,EAAA,EAAAA,IAAA,oBAAAE,QAAA,UAAAH,EAAA,IAAAC,EAAA,GAAAD,IAAA,qBAAAC,KAAAE,YAAA,KACAzN,EAAAmN,GAAAnN,GAEA,IAGAh+B,EAHA+9B,GAAA0N,GAAA,IAAAH,EAAAC,GAAAE,MAAA,OAAAF,EAAA,GAAAD,EAAA,EAAAC,IAAA,sBAAAD,KAAAG,UAAA,KAAAr2D,KAAA0oD,IAAA8N,GAIA,GAHA7N,EAAA2N,EAAAP,GAAApN,GAGA4K,EAAAD,SAAA,CACA,IAAAoD,EAAA7D,IACAc,SAAAJ,EAAAI,SAAAJ,EAAAD,SACAG,QAAAF,EAAAE,QAAAF,EAAAD,SACAO,WAAAN,EAAAM,WACAD,WAAAL,EAAAK,aAEAhpC,GACAuoC,IAAAuD,EAAA9N,IACAsK,MAAAwD,EAAA/N,IACAsK,OAAArK,EACAoK,KAAArK,QAIA/9B,GACAg+B,MACAD,OAGA,OAAA/9B,EAwHA,SAAAmpC,GAAAryD,GACA,IAAAoyD,EAAApyD,EAAAywD,GAKA,OAJA,IAAA2B,IACAA,EAAA3B,IAGA2B,EAuFA,SAAAhB,GAAA6D,GAEA,GAAAA,GAAA,IAAAA,EAAAz3D,OACA,wCAWA,IARA,IAIA03D,EAJA13D,EAAAy3D,EAAAz3D,OAEA23D,EAAA,KACAC,EAAA,GAEAp1D,EAAA,GAGA,QAAA2gB,KAAAu0C,EAAAD,EAAAlmB,OAAA/uC,KAAA,CACA,GAAAA,GAAA,EACA,uCAAAi1D,EAEAG,GAAAF,EACAl1D,IAGA,IAAAkyD,EAAA13D,SAAA46D,EAAA,IAEA,OAAAp1D,KAAA,EAAAxC,EAGA,uCAAAy3D,EAGA,IAAA9C,EAAA8C,EAAAlmB,OAAA/uC,KAGA,GAAAmyD,GAAA,WAAAA,GAAA,MAAAA,MAAA,WAAAA,GAAA,MAAAA,EACA,8BAAAA,EAAA,iBAAA8C,EAGAE,EAAAF,EAAAv8B,UAAA14B,KAAA,GAWA,IATA,IAAAmJ,EAAAkpD,GAAAH,GAEAmD,EAqDA,SAAAtO,EAAA59C,GAGA,IAAAmsD,EAAA5E,GAAAkC,WAAAzpD,EAAA,GACAosD,EAAA,IACAC,GAAA,EAEA,KAAAF,IAAAvO,EAAA6L,WAAA,KAQA,KAPA0C,IACAzE,IACAyE,IAEAA,IAAAxE,IACAwE,IAEAA,EAAAtE,GAAA,CACA,GAAAwE,EACA,uBAAAzO,EAEAuO,EAAA1E,GACA4E,GAAA,EAEAD,GAAA,IAGA,OAAAA,EA9EAE,CAAAN,EAAApmB,OAAA,GAAA5lC,GACAusD,EAgGA,SAAAxzD,EAAAiH,GAEA,GAAAjH,EAAA,IACA,yCAAAA,EAKA,IAAAyzD,EAAAhF,GAAAiC,WAAAzpD,EAAA,GACAysD,EAAA,EACAJ,GAAA,EAEA,KAAAG,IAAAzzD,EAAA0wD,WAAA,KAUA,KATA+C,IACA9E,IACA8E,IAEAA,IAAA7E,IACA6E,IAIAA,EAAA5E,GAAA,CACA,GAAAyE,EACA,uBAAAtzD,EAEAyzD,EAAA/E,GACA4E,GAAA,EAEAI,GAAA,IAGA,OAAAA,EAhIAC,CAAAV,EAAApmB,OAAA,GAAA5lC,GAMAusD,EAAAI,GAAA3D,IACAuD,GAAA,IAIA,IAAAK,EAAAv4D,EAAAwC,EAEA,GAAA+1D,EAAA,KACA,yKAAAd,EAGA,IAIAe,EAAAC,EAAAC,EAJAC,EAAAJ,EAAA,EAEAK,EAAA,EACAC,EAAA,EAaA,OAXAF,EAAA,IACAH,EAAA,IAAA13D,KAAA6nD,IAAA,GAAAgQ,GACAF,EAAAhB,EAAAv8B,UAAA14B,IAAAm2D,GACAC,EAAA/7D,WAAA47D,GAAAD,EACAE,EAAAjB,EAAAv8B,UAAA14B,EAAAm2D,GACAE,EAAAh8D,WAAA67D,GAAAF,IAOAjE,QAJAqE,EAAAf,EAKApD,SAJAoE,EAAAX,EAKAvD,aACAD,aACAN,SAAAoE,GAuGA,SAAAF,GAAA3D,GACA,IAAAF,EACA,OAAAE,GACA,QACAF,EAAA,KACA,MACA,QACAA,EAAA,IACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,EACA,MACA,QACAA,EAAA,IACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,EAAA,IACA,MACA,QACAA,EAAA,KACA,MACA,QACAA,GAAA,EAEA,GAAAA,GAAA,EACA,OAAAA,EAGA,6BAAAE,ECpuBA,SAAAvrC,GAAA7oB,EAAAC,EAAAs0B,GACA,KAAA71B,gBAAAmqB,IACA,WAAAA,GAAA7oB,EAAAC,EAAAs0B,GAEA,GAAAjvB,MAAAggB,QAAAtlB,GACAtB,KAAAsB,IAAA,GACAtB,KAAAuB,EAAAD,EAAA,GACAtB,KAAA61B,EAAAv0B,EAAA,WACG,oBAAAA,EACHtB,KAAAsB,MACAtB,KAAAuB,EAAAD,EAAAC,EACAvB,KAAA61B,EAAAv0B,EAAAu0B,GAAA,OACG,oBAAAv0B,QAAA,IAAAC,EAAA,CACH,IAAAu0B,EAAAx0B,EAAA8kB,MAAA,KACApmB,KAAAsB,EAAA1D,WAAAk4B,EAAA,OACA91B,KAAAuB,EAAA3D,WAAAk4B,EAAA,OACA91B,KAAA61B,EAAAj4B,WAAAk4B,EAAA,eAEA91B,KAAAsB,IACAtB,KAAAuB,IACAvB,KAAA61B,KAAA,EAEA7nB,QAAA6kB,KAAA,+DAGA1I,GAAA0vC,SAAA,SAAAC,GACA,WAAA3vC,GAAA8qC,GAAA6E,KAEA3vC,GAAA5pB,UAAAw5D,OAAA,SAAA5E,GACA,OAAAV,IAAAz0D,KAAAsB,EAAAtB,KAAAuB,GAAA4zD,IAEA,IAAA6E,GAAA,aC7BAC,GAAA,gBASAC,GAAA,SAAA7P,GACA,IAAA8P,KACAA,EAAA,GAfA,EAeA9P,GAdA,IAcAA,GAbA,QAaAA,GAZA,UAYAA,EAAA4P,MACAE,EAAA,GAAA9P,GAXA,IAWAA,GAdA,QAcAA,GAbA,UAaAA,EAAA4P,MACA,IAAAvH,EAAArI,IAKA,OAJA8P,EAAA,GAAAzH,GAZA,OAYArI,GAXA,oBACA,oBAUAA,IACAqI,GAAArI,EACA8P,EAAA,GAAAzH,GAXA,kBACA,oBAUArI,GACA8P,EAAA,GAAAzH,EAAArI,EAVA,YAWA8P,GCtBAC,GAAA,SAAA5Q,EAAA6Q,EAAAC,EAAAH,GAGA,OAFAG,GAAAD,EACAA,KACAF,EAAA,GAAA3Q,EAAA8Q,GAAAH,EAAA,GAAAE,GAAAF,EAAA,GAAAE,GAAAF,EAAA,GAAAE,EAAAF,EAAA,OCEAI,GAAA,SAAAC,EAAAnQ,EAAA8P,GAGA,IAFA,IAAApW,EAAA,KAAAsG,GACAb,EAAAgR,EACAj3D,EALA,GAKwBA,IAAGA,EAAA,CAC3B,IAAA1G,EAAAgF,KAAAooD,IAAAT,GACAkJ,EAAA,EAAArI,EAAAxtD,IAKA,GADA2sD,GADAkJ,GAAA0H,GAAA5Q,EAAA3sD,EAAAgF,KAAA0oD,IAAAf,GAAA2Q,GAAAK,IAAA9H,EAAA7wD,KAAAC,KAAA4wD,IAAA3O,EAEAliD,KAAAynD,IAAAoJ,GAAAtS,EACA,OAAAoJ,EAIA,OAAAA,GCkJA,IACAiR,IACArc,KA7JA,WACAp+C,KAAA0jD,QAAAtmD,IAAA4C,KAAA0jD,GAAA1jD,KAAA0jD,GAAA,EACA1jD,KAAA4jD,QAAAxmD,IAAA4C,KAAA4jD,GAAA5jD,KAAA4jD,GAAA,EACA5jD,KAAAijD,WAAA7lD,IAAA4C,KAAAijD,MAAAjjD,KAAAijD,MAAA,EACAjjD,KAAA0iD,UAAAtlD,IAAA4C,KAAA0iD,KAAA1iD,KAAA0iD,KAAA,EAEA1iD,KAAAqqD,KACArqD,KAAAm6D,GAAAD,GAAAl6D,KAAAqqD,IACArqD,KAAA06D,IAAAN,GAAAp6D,KAAA0iD,KAAA7gD,KAAAooD,IAAAjqD,KAAA0iD,MAAA7gD,KAAA0oD,IAAAvqD,KAAA0iD,MAAA1iD,KAAAm6D,MAsJA1a,QA9IA,SAAA54B,GACA,IAIAsiC,EACA7nD,EAAAC,EALAipD,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAEAo5D,EAAAtR,EAAAmB,EAAAxqD,KAAAijD,OAGA2X,EAAA/4D,KAAAooD,IAAAQ,GACAoQ,EAAAh5D,KAAA0oD,IAAAE,GAEA,GAAAzqD,KAAAqqD,GA8BA,CACA,IAAAyQ,EAAAD,EAAAF,EACAI,EAAAl5D,KAAA6nD,IAAAoR,EAAA,GACAE,EAAAh7D,KAAA+uD,IAAAltD,KAAA6nD,IAAAmR,EAAA,GACAI,EAAAp5D,KAAA6nD,IAAAsR,EAAA,GACAE,EAAAr5D,KAAAynD,IAAAuR,GAAAza,EAAAv+C,KAAA8nD,IAAAc,GAAA,EACAiI,EAAA7wD,KAAA6nD,IAAAwR,EAAA,GACArR,EAAAhoD,KAAA6nD,IAAAgJ,EAAA,GACAvJ,EAAA,EAAAnpD,KAAAqqD,GAAAxoD,KAAA6nD,IAAAkR,EAAA,GACAE,GAAAj5D,KAAAC,KAAAqnD,GACA,IAAAgS,EAAAf,GAAA3P,EAAAmQ,EAAAC,EAAA76D,KAAAm6D,IAEA74D,EAAAtB,KAAAqiD,GAAAriD,KAAA8jD,GAAAgX,GAAA,EACAC,EAAA,KAAArI,EAAAsI,EACAD,EAAA,SAAArI,EAAA7I,EAAA,GAAAmR,EAAA,GAAAtI,EAAAsI,EACAD,EAAA,WAAAlR,IAAA6I,EAAA,IAAAA,OACA1yD,KAAA0jD,GAEAniD,EAAAvB,KAAAqiD,GAAAriD,KAAA8jD,IAAAqX,EAAAn7D,KAAA06D,IACAE,EAAAD,EAAAG,EAAA,KACAC,EAAA,MAAArI,EAAA,EAAAsI,EAAA,EAAAC,EACAF,EAAA,OAAAlR,EAAA,GAAA6I,EAAA,IAAAsI,EAAA,IAAAtI,EAAAsI,EACAD,EAAA,aAAAlR,IAAA6I,EAAA,KAAAA,QACA1yD,KAAA4jD,OArDA,CACA,IAAAhoB,EAAAi/B,EAAAh5D,KAAAooD,IAAA0Q,GAEA,GAAA94D,KAAAynD,IAAAznD,KAAAynD,IAAA1tB,GAAA,GAAAwkB,EACA,UAOA,GAJA9+C,EAAA,GAAAtB,KAAAqiD,EAAAriD,KAAA8jD,GAAAjiD,KAAAqmD,KAAA,EAAAtsB,IAAA,EAAAA,IAAA57B,KAAA0jD,GACAniD,EAAAs5D,EAAAh5D,KAAA0oD,IAAAoQ,GAAA94D,KAAAC,KAAA,EAAAD,KAAA6nD,IAAA9tB,EAAA,KACAA,EAAA/5B,KAAAynD,IAAA/nD,KAEA,GACA,GAAAq6B,EAAA,EAAAwkB,EACA,UAGA7+C,EAAA,OAIAA,EAAAM,KAAAu5D,KAAA75D,GAGAkpD,EAAA,IACAlpD,MAGAA,EAAAvB,KAAAqiD,EAAAriD,KAAA8jD,IAAAviD,EAAAvB,KAAA0iD,MAAA1iD,KAAA4jD,GAgCA,OAHA/8B,EAAAvlB,IACAulB,EAAAtlB,IAEAslB,GA0EA64B,QApEA,SAAA74B,GACA,IAAAsiC,EAAAK,EACAiB,EAAAD,EACAlpD,GAAAulB,EAAAvlB,EAAAtB,KAAA0jD,KAAA,EAAA1jD,KAAAqiD,GACA9gD,GAAAslB,EAAAtlB,EAAAvB,KAAA4jD,KAAA,EAAA5jD,KAAAqiD,GAEA,GAAAriD,KAAAqqD,GAuBA,GAHAlB,EAAAnpD,KAAA06D,IAAAn5D,EAAAvB,KAAA8jD,GACA0F,EAAA+Q,GAAApR,EAAAnpD,KAAAqqD,GAAArqD,KAAAm6D,IAEAt4D,KAAAynD,IAAAE,GAAAxJ,EAAA,CACA,IAAA4a,EAAA/4D,KAAAooD,IAAAT,GACAqR,EAAAh5D,KAAA0oD,IAAAf,GACA6R,EAAAx5D,KAAAynD,IAAAuR,GAAAza,EAAAv+C,KAAA8nD,IAAAH,GAAA,EACAwR,EAAAh7D,KAAA+uD,IAAAltD,KAAA6nD,IAAAmR,EAAA,GACAI,EAAAp5D,KAAA6nD,IAAAsR,EAAA,GACAtI,EAAA7wD,KAAA6nD,IAAA2R,EAAA,GACAxR,EAAAhoD,KAAA6nD,IAAAgJ,EAAA,GACAvJ,EAAA,EAAAnpD,KAAAqqD,GAAAxoD,KAAA6nD,IAAAkR,EAAA,GACA,IAAAU,EAAAh6D,EAAAO,KAAAC,KAAAqnD,GAAAnpD,KAAA8jD,GACAyX,EAAA15D,KAAA6nD,IAAA4R,EAAA,GAGA7Q,EAAAjB,GAFAL,GAAAkS,GAEAE,GAAA,EAAAv7D,KAAAqqD,IAAA,MACAkR,EAAA,QAAA7I,EAAA,EAAAsI,EAAAtI,EAAAsI,EAAA,EAAAC,EACAM,EAAA,UAAA7I,EAAA,IAAAsI,EAAAtI,EAAA,GAAA7I,EAAA,GAAAmR,EACAO,EAAA,cAAA7I,EAAA,KAAA7I,EAAA,KAAAA,EAAA6I,MAEAlI,EAAAnB,EAAArpD,KAAAijD,MAAAqY,GAAA,EACAC,EAAA,OAAA7I,EAAAsI,EACAO,EAAA,SAAA7I,EAAA,GAAA7I,EAAA,EAAAmR,EAAAtI,EAAA,EAAAsI,EACAO,EAAA,WAAA7I,EAAA,KAAA7I,EAAA,IAAAA,EAAA6I,MAAAmI,QAGApQ,EAAAzK,EAAAoJ,EAAA7nD,GACAipD,EAAA,MAhDA,CACA,IAAAgR,EAAA35D,KAAA6oD,IAAAppD,EAAAtB,KAAA8jD,IACAnoB,EAAA,IAAA6/B,EAAA,EAAAA,GACAC,EAAAz7D,KAAA0iD,KAAAnhD,EAAAvB,KAAA8jD,GACA4X,EAAA75D,KAAA0oD,IAAAkR,GACAtS,EAAAtnD,KAAAC,MAAA,EAAAD,KAAA6nD,IAAAgS,EAAA,OAAA75D,KAAA6nD,IAAA/tB,EAAA,KACA8uB,EAAA5oD,KAAA85D,KAAAxS,GAEA5nD,EAAA,IACAkpD,MAIAD,EADA,IAAA7uB,GAAA,IAAA+/B,EACA,EAGArS,EAAAxnD,KAAAwwD,MAAA12B,EAAA+/B,GAAA17D,KAAAijD,OAuCA,OAHAp8B,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EAEA5jC,GAQA+I,OALA,sDCtKAgsC,GAAA,SAAAt6D,GACA,IAAAo6B,EAAA75B,KAAA6oD,IAAAppD,GAEA,OADAo6B,KAAA,EAAAA,GAAA,GCFAmgC,GAAA,SAAAv6D,EAAAC,GACAD,EAAAO,KAAAynD,IAAAhoD,GACAC,EAAAM,KAAAynD,IAAA/nD,GACA,IAAA8gD,EAAAxgD,KAAAi6D,IAAAx6D,EAAAC,GACAq6B,EAAA/5B,KAAAk6D,IAAAz6D,EAAAC,IAAA8gD,GAAA,GAEA,OAAAA,EAAAxgD,KAAAC,KAAA,EAAAD,KAAA6nD,IAAA9tB,EAAA,KCHAogC,GAAA,SAAA16D,GACA,IAAAC,EAAAM,KAAAynD,IAAAhoD,GAGA,OAFAC,ECLA,SAAAD,GACA,IAAAC,EAAA,EAAAD,EACAu0B,EAAAt0B,EAAA,EAEA,WAAAs0B,EAAAv0B,IAAAO,KAAAqmD,IAAA3mD,GAAAs0B,EDCAomC,CAAA16D,GAAA,EAAAA,GAAAs6D,GAAA,EAAAt6D,GAAA,KAEAD,EAAA,GAAAC,KEPA26D,GAAA,SAAAC,EAAAC,GAOA,IANA,IAIAV,EAJAW,EAAA,EAAAx6D,KAAA0oD,IAAA,EAAA6R,GACA74D,EAAA44D,EAAAp7D,OAAA,EACAu7D,EAAAH,EAAA54D,GACAg5D,EAAA,IAGAh5D,GAAA,GACAm4D,EAAAW,EAAAC,EAAAC,EAAAJ,EAAA54D,GACAg5D,EAAAD,EACAA,EAAAZ,EAGA,OAAAU,EAAAV,EAAA75D,KAAAooD,IAAA,EAAAmS,ICbAI,GAAA,SAAAL,EAAAM,GAOA,IANA,IAIAC,EAJAhhC,EAAA,EAAA75B,KAAA0oD,IAAAkS,GACAl5D,EAAA44D,EAAAp7D,OAAA,EACA47D,EAAAR,EAAA54D,GACAq5D,EAAA,IAGAr5D,GAAA,GACAm5D,EAAAhhC,EAAAihC,EAAAC,EAAAT,EAAA54D,GACAq5D,EAAAD,EACAA,EAAAD,EAGA,OAAA76D,KAAAooD,IAAAwS,GAAAC,GCVAG,GAAA,SAAAV,EAAAM,EAAAK,GAeA,IAdA,IAWAF,EACAG,EAZAC,EAAAn7D,KAAAooD,IAAAwS,GACAQ,EAAAp7D,KAAA0oD,IAAAkS,GACAS,EAAAtB,GAAAkB,GACAK,ECPA,SAAA77D,GACA,IAAAo6B,EAAA75B,KAAA6oD,IAAAppD,GAEA,OADAo6B,KAAA,EAAAA,GAAA,EDKA0hC,CAAAN,GACAphC,EAAA,EAAAuhC,EAAAE,EACA55D,GAAA,EAAAy5D,EAAAE,EACA73D,EAAA82D,EAAAp7D,OAAA,EACA27D,EAAAP,EAAA92D,GACAg4D,EAAA,EACAV,EAAA,EACAW,EAAA,IAIAj4D,GAAA,GACAu3D,EAAAD,EACAI,EAAAM,EAGAX,EAAAhhC,GAFAihC,EAAAD,GAEAE,EAAAr5D,GADA85D,EAAAC,GACAnB,EAAA92D,GACAi4D,EAAA/5D,EAAAo5D,EAAAI,EAAArhC,EAAA2hC,EAMA,QAHA3hC,EAAAshC,EAAAG,GAGAT,GAFAn5D,EAAA05D,EAAAC,GAEAI,EAAA5hC,EAAA4hC,EAAA/5D,EAAAm5D,IEgIA,IACAa,IACAnf,KArJA,WACA,QAAAhhD,IAAA4C,KAAAqqD,IAAArqD,KAAAqqD,IAAA,EACA,UAAAxuB,MAAA,8BAGA77B,KAAA0jD,QAAAtmD,IAAA4C,KAAA0jD,GAAA1jD,KAAA0jD,GAAA,EACA1jD,KAAA4jD,QAAAxmD,IAAA4C,KAAA4jD,GAAA5jD,KAAA4jD,GAAA,EACA5jD,KAAAijD,WAAA7lD,IAAA4C,KAAAijD,MAAAjjD,KAAAijD,MAAA,EACAjjD,KAAA0iD,UAAAtlD,IAAA4C,KAAA0iD,KAAA1iD,KAAA0iD,KAAA,EAEA1iD,KAAAw9D,OACAx9D,KAAAy9D,OACAz9D,KAAA09D,OACA19D,KAAA29D,OAEA,IAAAnC,EAAAx7D,KAAAqqD,IAAA,EAAAxoD,KAAAC,KAAA,EAAA9B,KAAAqqD,KACA5kD,EAAA+1D,GAAA,EAAAA,GACAoC,EAAAn4D,EAEAzF,KAAAw9D,IAAA,GAAA/3D,GAAA,EAAAA,IAAA,IAAAA,MAAA,OAAAA,GAAA,MAAAA,IAAA,iBACAzF,KAAAy9D,IAAA,GAAAh4D,MAAA,IAAAA,GAAA,IAAAA,IAAA,MAAAA,GAAA,MAAAA,GAAA,kBAEAm4D,GAAAn4D,EACAzF,KAAAw9D,IAAA,GAAAI,GAAA,IAAAn4D,OAAA,OAAAA,GAAA,SAAAA,GAAA,kBACAzF,KAAAy9D,IAAA,GAAAG,GAAA,IAAAn4D,IAAA,MAAAA,IAAA,KAAAA,GAAA,QAAAA,IAAA,cAEAm4D,GAAAn4D,EACAzF,KAAAw9D,IAAA,GAAAI,GAAA,MAAAn4D,IAAA,OAAAA,IAAA,SAAAA,GAAA,eACAzF,KAAAy9D,IAAA,GAAAG,IAAA,MAAAn4D,GAAA,MAAAA,GAAA,IAAAA,IAAA,eAEAm4D,GAAAn4D,EACAzF,KAAAw9D,IAAA,GAAAI,GAAA,SAAAn4D,IAAA,OAAAA,IAAA,gBACAzF,KAAAy9D,IAAA,GAAAG,GAAA,SAAAn4D,OAAA,mBAEAm4D,GAAAn4D,EACAzF,KAAAw9D,IAAA,GAAAI,GAAA,SAAAn4D,IAAA,cACAzF,KAAAy9D,IAAA,GAAAG,IAAA,QAAAn4D,GAAA,eAEAm4D,GAAAn4D,EACAzF,KAAAw9D,IAAA,GAAAI,GAAA,cACA59D,KAAAy9D,IAAA,GAAAG,GAAA,eAEAA,EAAA/7D,KAAA6nD,IAAAjkD,EAAA,GACAzF,KAAA69D,GAAA79D,KAAA8jD,IAAA,EAAAr+C,IAAA,EAAAm4D,GAAA,IAAAA,GAAA,KAAAA,EAAA,OAEA59D,KAAA09D,IAAA,GAAAj4D,MAAA,IAAAA,IAAA,MAAAA,GAAA,MAAAA,GAAA,OAAAA,IAAA,sBACAzF,KAAA29D,IAAA,GAAAl4D,GAAA,GAAAA,IAAA,IAAAA,GAAA,KAAAA,GAAA,OAAAA,IAAA,QAAAA,GAAA,iBAEAzF,KAAA09D,IAAA,GAAAE,IAAA,KAAAn4D,IAAA,KAAAA,GAAA,SAAAA,IAAA,OAAAA,GAAA,qBACAzF,KAAA29D,IAAA,GAAAC,GAAA,MAAAn4D,MAAA,SAAAA,GAAA,QAAAA,IAAA,wBAEAm4D,GAAAn4D,EACAzF,KAAA09D,IAAA,GAAAE,IAAA,OAAAn4D,GAAA,OAAAA,GAAA,SAAAA,IAAA,eACAzF,KAAA29D,IAAA,GAAAC,GAAA,OAAAn4D,IAAA,QAAAA,GAAA,YAAAA,GAAA,kBAEAm4D,GAAAn4D,EACAzF,KAAA09D,IAAA,GAAAE,IAAA,YAAAn4D,GAAA,OAAAA,GAAA,kBACAzF,KAAA29D,IAAA,GAAAC,GAAA,aAAAn4D,IAAA,QAAAA,GAAA,mBAEAm4D,GAAAn4D,EACAzF,KAAA09D,IAAA,GAAAE,IAAA,YAAAn4D,GAAA,iBACAzF,KAAA29D,IAAA,GAAAC,GAAA,YAAAn4D,IAAA,kBAEAm4D,GAAAn4D,EACAzF,KAAA09D,IAAA,uBAAAE,EACA59D,KAAA29D,IAAA,qBAAAC,EAEA,IAAAxL,EAAA8J,GAAAl8D,KAAAy9D,IAAAz9D,KAAA0iD,MACA1iD,KAAA89D,IAAA99D,KAAA69D,IAAAzL,EAAAoK,GAAAx8D,KAAA29D,IAAA,EAAAvL,KAkFA3S,QA/EA,SAAA54B,GACA,IAAAk3C,EAAA1U,EAAAxiC,EAAAvlB,EAAAtB,KAAAijD,OACA+a,EAAAn3C,EAAAtlB,EAEAy8D,EAAA9B,GAAAl8D,KAAAy9D,IAAAO,GACA,IAAAC,EAAAp8D,KAAAooD,IAAA+T,GACAE,EAAAr8D,KAAA0oD,IAAAyT,GACAG,EAAAt8D,KAAAooD,IAAA8T,GACAK,EAAAv8D,KAAA0oD,IAAAwT,GAEAC,EAAAn8D,KAAAwwD,MAAA4L,EAAAG,EAAAF,GACAH,EAAAl8D,KAAAwwD,MAAA8L,EAAAD,EAAArC,GAAAoC,EAAAC,EAAAE,IACAL,EAAA/B,GAAAn6D,KAAA8nD,IAAAoU,IAEA,IAKAz8D,EACAC,EANAkvC,EAAAosB,GAAA78D,KAAA29D,IAAA,EAAAK,EAAA,EAAAD,GAoBA,OAlBAC,GAAAvtB,EAAA,GACAstB,GAAAttB,EAAA,GAKA5uC,KAAAynD,IAAAyU,IAAA,gBACAz8D,EAAAtB,KAAAqiD,GAAAriD,KAAA69D,GAAAE,GAAA/9D,KAAA0jD,GACAniD,EAAAvB,KAAAqiD,GAAAriD,KAAA69D,GAAAG,EAAAh+D,KAAA89D,IAAA99D,KAAA4jD,KAGAtiD,EAAAkrB,IACAjrB,EAAAirB,KAGA3F,EAAAvlB,IACAulB,EAAAtlB,IAEAslB,GA8CA64B,QA3CA,SAAA74B,GACA,IAMA2jC,EACAC,EAPAsT,GAAAl3C,EAAAvlB,EAAAtB,KAAA0jD,KAAA,EAAA1jD,KAAAqiD,GACA2b,GAAAn3C,EAAAtlB,EAAAvB,KAAA4jD,KAAA,EAAA5jD,KAAAqiD,GAQA,GANA2b,KAAAh+D,KAAA89D,IAAA99D,KAAA69D,GACAE,GAAA/9D,KAAA69D,GAKAh8D,KAAAynD,IAAAyU,IAAA,gBACA,IAAAttB,EAAAosB,GAAA78D,KAAA09D,IAAA,EAAAM,EAAA,EAAAD,GAEAC,GAAAvtB,EAAA,GACAstB,GAAAttB,EAAA,GACAstB,EAAAl8D,KAAAmoD,KAAA4R,GAAAmC,IAEA,IAAAE,EAAAp8D,KAAAooD,IAAA+T,GACAE,EAAAr8D,KAAA0oD,IAAAyT,GACAG,EAAAt8D,KAAAooD,IAAA8T,GACAK,EAAAv8D,KAAA0oD,IAAAwT,GAEAC,EAAAn8D,KAAAwwD,MAAA4L,EAAAG,EAAAvC,GAAAsC,EAAAC,EAAAF,IACAH,EAAAl8D,KAAAwwD,MAAA8L,EAAAC,EAAAF,GAEA1T,EAAAnB,EAAA0U,EAAA/9D,KAAAijD,OACAwH,EAAAyR,GAAAl8D,KAAAw9D,IAAAQ,QAGAxT,EAAAh+B,IACAi+B,EAAAj+B,IAMA,OAHA3F,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EAEA5jC,GAQA+I,OALA,yEC5JAyuC,GAAA,SAAAna,EAAAsG,GACA,QAAAptD,IAAA8mD,EAAA,CAGA,IAFAA,EAAAriD,KAAAqgC,MAAA,IAAAmnB,EAAAmB,GAAA3oD,KAAA00C,IAAA10C,KAAA00C,IAAA,GAEA,EACA,SACK,GAAA2N,EAAA,GACL,UAGA,OAAAA,GCUA,IACAkR,IACAhX,KAlBA,WACA,IAAA8F,EAAAma,GAAAr+D,KAAAkkD,KAAAlkD,KAAAijD,OACA,QAAA7lD,IAAA8mD,EACA,UAAAroB,MAAA,oBAEA77B,KAAA0iD,KAAA,EACA1iD,KAAAijD,OAAA,EAAAphD,KAAAynD,IAAApF,GAAA,KAAA7D,EACArgD,KAAA0jD,GAAA,IACA1jD,KAAA4jD,GAAA5jD,KAAAokD,SAAA,MACApkD,KAAA8jD,GAAA,MAEAyZ,GAAAnf,KAAA0J,MAAA9nD,MACAA,KAAAy/C,QAAA8d,GAAA9d,QACAz/C,KAAA0/C,QAAA6d,GAAA7d,SAMA9vB,OAHA,8CAIA0uC,UAxBA,UCFAC,GAAA,SAAAC,EAAA9T,GACA,OAAA7oD,KAAA6nD,KAAA,EAAA8U,IAAA,EAAAA,GAAA9T,ICAA+T,GAAA,GA4CA,IACAC,IACAtgB,KA3CA,WACA,IAAAic,EAAAx4D,KAAAooD,IAAAjqD,KAAA0iD,MACA4X,EAAAz4D,KAAA0oD,IAAAvqD,KAAA0iD,MACA4X,KACAt6D,KAAA2+D,GAAA98D,KAAAC,KAAA,EAAA9B,KAAAqqD,KAAA,EAAArqD,KAAAqqD,GAAAgQ,KACAr6D,KAAA42D,EAAA/0D,KAAAC,KAAA,EAAA9B,KAAAqqD,GAAAiQ,KAAA,EAAAt6D,KAAAqqD,KACArqD,KAAA4+D,MAAA/8D,KAAA85D,KAAAtB,EAAAr6D,KAAA42D,GACA52D,KAAA6+D,OAAA,GAAA7+D,KAAA42D,EAAA52D,KAAAsqD,EACAtqD,KAAA8+D,EAAAj9D,KAAA8nD,IAAA,GAAA3pD,KAAA4+D,MAAAre,IAAA1+C,KAAA6nD,IAAA7nD,KAAA8nD,IAAA,GAAA3pD,KAAA0iD,KAAAnC,GAAAvgD,KAAA42D,GAAA2H,GAAAv+D,KAAAsqD,EAAA+P,EAAAr6D,KAAA6+D,UAoCApf,QAjCA,SAAA54B,GACA,IAAA2jC,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAIA,OAFAslB,EAAAtlB,EAAA,EAAAM,KAAAmoD,KAAAhqD,KAAA8+D,EAAAj9D,KAAA6nD,IAAA7nD,KAAA8nD,IAAA,GAAAc,EAAAlK,GAAAvgD,KAAA42D,GAAA2H,GAAAv+D,KAAAsqD,EAAAzoD,KAAAooD,IAAAQ,GAAAzqD,KAAA6+D,SAAA7e,EACAn5B,EAAAvlB,EAAAtB,KAAA42D,EAAApM,EACA3jC,GA4BA64B,QAzBA,SAAA74B,GAKA,IAJA,IACA2jC,EAAA3jC,EAAAvlB,EAAAtB,KAAA42D,EACAnM,EAAA5jC,EAAAtlB,EACA0xD,EAAApxD,KAAA6nD,IAAA7nD,KAAA8nD,IAAA,GAAAc,EAAAlK,GAAAvgD,KAAA8+D,EAAA,EAAA9+D,KAAA42D,GACArzD,EAAAk7D,GAAwBl7D,EAAA,IACxBknD,EAAA,EAAA5oD,KAAAmoD,KAAAiJ,EAAAsL,GAAAv+D,KAAAsqD,EAAAzoD,KAAAooD,IAAApjC,EAAAtlB,IAAA,GAAAvB,KAAAsqD,IAAAtK,IACAn+C,KAAAynD,IAAAmB,EAAA5jC,EAAAtlB,GANA,UAI+BgC,EAK/BsjB,EAAAtlB,EAAAkpD,EAGA,OAAAlnD,GAGAsjB,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAJA,MAYA+I,OALA,UCYA,IACAmvC,IACA3gB,KAxDA,WACAsgB,GAAAtgB,KAAA0J,MAAA9nD,MACAA,KAAA2+D,KAGA3+D,KAAAg/D,MAAAn9D,KAAAooD,IAAAjqD,KAAA4+D,OACA5+D,KAAAi/D,MAAAp9D,KAAA0oD,IAAAvqD,KAAA4+D,OACA5+D,KAAAk/D,GAAA,EAAAl/D,KAAA2+D,GACA3+D,KAAAstC,QACAttC,KAAAstC,MAAA,uCAgDAmS,QA5CA,SAAA54B,GACA,IAAAs4C,EAAAC,EAAAC,EAAAtb,EAWA,OAVAl9B,EAAAvlB,EAAA+nD,EAAAxiC,EAAAvlB,EAAAtB,KAAAijD,OACAyb,GAAAjf,QAAAqI,MAAA9nD,MAAA6mB,IACAs4C,EAAAt9D,KAAAooD,IAAApjC,EAAAtlB,GACA69D,EAAAv9D,KAAA0oD,IAAA1jC,EAAAtlB,GACA89D,EAAAx9D,KAAA0oD,IAAA1jC,EAAAvlB,GACAyiD,EAAA/jD,KAAA8jD,GAAA9jD,KAAAk/D,IAAA,EAAAl/D,KAAAg/D,MAAAG,EAAAn/D,KAAAi/D,MAAAG,EAAAC,GACAx4C,EAAAvlB,EAAAyiD,EAAAqb,EAAAv9D,KAAAooD,IAAApjC,EAAAvlB,GACAulB,EAAAtlB,EAAAwiD,GAAA/jD,KAAAi/D,MAAAE,EAAAn/D,KAAAg/D,MAAAI,EAAAC,GACAx4C,EAAAvlB,EAAAtB,KAAAqiD,EAAAx7B,EAAAvlB,EAAAtB,KAAA0jD,GACA78B,EAAAtlB,EAAAvB,KAAAqiD,EAAAx7B,EAAAtlB,EAAAvB,KAAA4jD,GACA/8B,GAiCA64B,QA9BA,SAAA74B,GACA,IAAAs4C,EAAAC,EAAA5U,EAAAC,EAAA6U,EAMA,GALAz4C,EAAAvlB,GAAAulB,EAAAvlB,EAAAtB,KAAA0jD,IAAA1jD,KAAAqiD,EACAx7B,EAAAtlB,GAAAslB,EAAAtlB,EAAAvB,KAAA4jD,IAAA5jD,KAAAqiD,EAEAx7B,EAAAvlB,GAAAtB,KAAA8jD,GACAj9B,EAAAtlB,GAAAvB,KAAA8jD,GACAwb,EAAAz9D,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,GAAA,CACA,IAAAy5D,EAAA,EAAAn5D,KAAAwwD,MAAAiN,EAAAt/D,KAAAk/D,IACAC,EAAAt9D,KAAAooD,IAAA+Q,GACAoE,EAAAv9D,KAAA0oD,IAAAyQ,GACAvQ,EAAA5oD,KAAA85D,KAAAyD,EAAAp/D,KAAAg/D,MAAAn4C,EAAAtlB,EAAA49D,EAAAn/D,KAAAi/D,MAAAK,GACA9U,EAAA3oD,KAAAwwD,MAAAxrC,EAAAvlB,EAAA69D,EAAAG,EAAAt/D,KAAAi/D,MAAAG,EAAAv4C,EAAAtlB,EAAAvB,KAAAg/D,MAAAG,QAGA1U,EAAAzqD,KAAA4+D,MACApU,EAAA,EAOA,OAJA3jC,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACAiU,GAAAhf,QAAAoI,MAAA9nD,MAAA6mB,IACAA,EAAAvlB,EAAA+nD,EAAAxiC,EAAAvlB,EAAAtB,KAAAijD,OACAp8B,GAQA+I,OALA,wHC6GA,IACA2vC,IACAnhB,KA3JA,WACAp+C,KAAAw/D,QAAA39D,KAAA0oD,IAAAvqD,KAAA0iD,MACA1iD,KAAAy/D,QAAA59D,KAAAooD,IAAAjqD,KAAA0iD,MACA1iD,KAAAunD,OACA,IAAAvnD,KAAA8jD,KAAArmD,MAAAuC,KAAA+iD,SAAAlhD,KAAAynD,IAAAtpD,KAAAw/D,UAAApf,IACApgD,KAAA8jD,GAAA,MAAAsF,EAAAppD,KAAA0iD,MAAA7gD,KAAAooD,IAAAjqD,KAAA+iD,WAIAlhD,KAAAynD,IAAAtpD,KAAAw/D,UAAApf,IACApgD,KAAA0iD,KAAA,EAGA1iD,KAAAmpD,IAAA,EAKAnpD,KAAAmpD,KAAA,GAGAnpD,KAAA0/D,KAAA79D,KAAAC,KAAAD,KAAA6nD,IAAA,EAAA1pD,KAAAsqD,EAAA,EAAAtqD,KAAAsqD,GAAAzoD,KAAA6nD,IAAA,EAAA1pD,KAAAsqD,EAAA,EAAAtqD,KAAAsqD,IACA,IAAAtqD,KAAA8jD,KAAArmD,MAAAuC,KAAA+iD,SAAAlhD,KAAAynD,IAAAtpD,KAAAw/D,UAAApf,IACApgD,KAAA8jD,GAAA,GAAA9jD,KAAA0/D,KAAA3W,EAAA/oD,KAAAsqD,EAAAzoD,KAAAooD,IAAAjqD,KAAA+iD,QAAAlhD,KAAA0oD,IAAAvqD,KAAA+iD,SAAAwG,EAAAvpD,KAAAsqD,EAAAtqD,KAAAmpD,IAAAnpD,KAAA+iD,OAAA/iD,KAAAmpD,IAAAtnD,KAAAooD,IAAAjqD,KAAA+iD,UAEA/iD,KAAA2/D,IAAA5W,EAAA/oD,KAAAsqD,EAAAtqD,KAAAy/D,QAAAz/D,KAAAw/D,SACAx/D,KAAA4/D,GAAA,EAAA/9D,KAAAmoD,KAAAhqD,KAAA6/D,MAAA7/D,KAAA0iD,KAAA1iD,KAAAy/D,QAAAz/D,KAAAsqD,IAAAtK,EACAhgD,KAAA8/D,MAAAj+D,KAAA0oD,IAAAvqD,KAAA4/D,IACA5/D,KAAA+/D,MAAAl+D,KAAAooD,IAAAjqD,KAAA4/D,MAgIAngB,QA3HA,SAAA54B,GACA,IAIAgwC,EAAA3E,EAAA8N,EAAAC,EAAApW,EAAAqW,EAJA1V,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EACA4+D,EAAAt+D,KAAAooD,IAAAQ,GACA2V,EAAAv+D,KAAA0oD,IAAAE,GAEA4V,EAAAhX,EAAAmB,EAAAxqD,KAAAijD,OAEA,OAAAphD,KAAAynD,IAAAznD,KAAAynD,IAAAkB,EAAAxqD,KAAAijD,OAAAphD,KAAA00C,KAAA6J,GAAAv+C,KAAAynD,IAAAmB,EAAAzqD,KAAA0iD,OAAAtC,GAGAv5B,EAAAvlB,EAAAg/D,IACAz5C,EAAAtlB,EAAA++D,IACAz5C,GAEA7mB,KAAAunD,QAEAsP,EAAA,EAAA72D,KAAA8jD,IAAA,EAAA9jD,KAAAy/D,QAAAU,EAAAngE,KAAAw/D,QAAAY,EAAAv+D,KAAA0oD,IAAA8V,IACAx5C,EAAAvlB,EAAAtB,KAAAqiD,EAAAwU,EAAAuJ,EAAAv+D,KAAAooD,IAAAoW,GAAArgE,KAAA0jD,GACA78B,EAAAtlB,EAAAvB,KAAAqiD,EAAAwU,GAAA72D,KAAAw/D,QAAAW,EAAAngE,KAAAy/D,QAAAW,EAAAv+D,KAAA0oD,IAAA8V,IAAArgE,KAAA4jD,GACA/8B,IAGAqrC,EAAA,EAAArwD,KAAAmoD,KAAAhqD,KAAA6/D,MAAApV,EAAA0V,EAAAngE,KAAAsqD,IAAAtK,EACAigB,EAAAp+D,KAAA0oD,IAAA2H,GACA8N,EAAAn+D,KAAAooD,IAAAiI,GACArwD,KAAAynD,IAAAtpD,KAAAw/D,UAAApf,GACAyJ,EAAAN,EAAAvpD,KAAAsqD,EAAAG,EAAAzqD,KAAAmpD,IAAAnpD,KAAAmpD,IAAAgX,GACAD,EAAA,EAAAlgE,KAAAqiD,EAAAriD,KAAA8jD,GAAA+F,EAAA7pD,KAAA0/D,KACA74C,EAAAvlB,EAAAtB,KAAA0jD,GAAAwc,EAAAr+D,KAAAooD,IAAAO,EAAAxqD,KAAAijD,OACAp8B,EAAAtlB,EAAAvB,KAAA4jD,GAAA5jD,KAAAmpD,IAAA+W,EAAAr+D,KAAA0oD,IAAAC,EAAAxqD,KAAAijD,OAEAp8B,IAEAhlB,KAAAynD,IAAAtpD,KAAAy/D,SAAArf,GAGAyW,EAAA,EAAA72D,KAAAqiD,EAAAriD,KAAA8jD,IAAA,EAAAmc,EAAAp+D,KAAA0oD,IAAA8V,IACAx5C,EAAAtlB,EAAAs1D,EAAAmJ,IAKAnJ,EAAA,EAAA72D,KAAAqiD,EAAAriD,KAAA8jD,GAAA9jD,KAAA2/D,KAAA3/D,KAAA8/D,OAAA,EAAA9/D,KAAA+/D,MAAAC,EAAAhgE,KAAA8/D,MAAAG,EAAAp+D,KAAA0oD,IAAA8V,KACAx5C,EAAAtlB,EAAAs1D,GAAA72D,KAAA8/D,MAAAE,EAAAhgE,KAAA+/D,MAAAE,EAAAp+D,KAAA0oD,IAAA8V,IAAArgE,KAAA4jD,IAEA/8B,EAAAvlB,EAAAu1D,EAAAoJ,EAAAp+D,KAAAooD,IAAAoW,GAAArgE,KAAA0jD,GAGA78B,KA2EA64B,QAvEA,SAAA74B,GAGA,IAAA2jC,EAAAC,EAAAZ,EAAA0W,EAAAC,EAFA35C,EAAAvlB,GAAAtB,KAAA0jD,GACA78B,EAAAtlB,GAAAvB,KAAA4jD,GAEA,IAAAsc,EAAAr+D,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,GACA,GAAAvB,KAAAunD,OAAA,CACA,IAAAyT,EAAA,EAAAn5D,KAAAmoD,KAAAkW,GAAA,GAAAlgE,KAAAqiD,EAAAriD,KAAA8jD,KAGA,OAFA0G,EAAAxqD,KAAAijD,MACAwH,EAAAzqD,KAAA0iD,KACAwd,GAAA9f,GACAv5B,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,IAEA4jC,EAAA5oD,KAAA85D,KAAA95D,KAAA0oD,IAAAyQ,GAAAh7D,KAAAy/D,QAAA54C,EAAAtlB,EAAAM,KAAAooD,IAAA+Q,GAAAh7D,KAAAw/D,QAAAU,GAGA1V,EAFA3oD,KAAAynD,IAAAtpD,KAAAw/D,SAAApf,EACApgD,KAAA0iD,KAAA,EACA2G,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,MAAAxrC,EAAAvlB,GAAA,EAAAulB,EAAAtlB,IAGA8nD,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,MAAAxrC,EAAAvlB,EAAAulB,EAAAtlB,IAIA8nD,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,MAAAxrC,EAAAvlB,EAAAO,KAAAooD,IAAA+Q,GAAAkF,EAAAlgE,KAAAw/D,QAAA39D,KAAA0oD,IAAAyQ,GAAAn0C,EAAAtlB,EAAAvB,KAAAy/D,QAAA59D,KAAAooD,IAAA+Q,KAEAn0C,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAGA,GAAAhlB,KAAAynD,IAAAtpD,KAAAw/D,UAAApf,EAAA,CACA,GAAA8f,GAAA9f,EAMA,OALAqK,EAAAzqD,KAAA0iD,KACA8H,EAAAxqD,KAAAijD,MACAp8B,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EAEA5jC,EAEAA,EAAAvlB,GAAAtB,KAAAmpD,IACAtiC,EAAAtlB,GAAAvB,KAAAmpD,IACAU,EAAAqW,EAAAlgE,KAAA0/D,MAAA,EAAA1/D,KAAAqiD,EAAAriD,KAAA8jD,IACA2G,EAAAzqD,KAAAmpD,IAAAS,EAAA5pD,KAAAsqD,EAAAT,GACAW,EAAAxqD,KAAAmpD,IAAAE,EAAArpD,KAAAmpD,IAAAnpD,KAAAijD,MAAAphD,KAAAwwD,MAAAxrC,EAAAvlB,GAAA,EAAAulB,EAAAtlB,SAGAg/D,EAAA,EAAA1+D,KAAAmoD,KAAAkW,EAAAlgE,KAAA8/D,OAAA,EAAA9/D,KAAAqiD,EAAAriD,KAAA8jD,GAAA9jD,KAAA2/D,MACAnV,EAAAxqD,KAAAijD,MACAid,GAAA9f,EACAogB,EAAAxgE,KAAA4/D,IAGAY,EAAA3+D,KAAA85D,KAAA95D,KAAA0oD,IAAAgW,GAAAvgE,KAAA+/D,MAAAl5C,EAAAtlB,EAAAM,KAAAooD,IAAAsW,GAAAvgE,KAAA8/D,MAAAI,GACA1V,EAAAnB,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,MAAAxrC,EAAAvlB,EAAAO,KAAAooD,IAAAsW,GAAAL,EAAAlgE,KAAA8/D,MAAAj+D,KAAA0oD,IAAAgW,GAAA15C,EAAAtlB,EAAAvB,KAAA+/D,MAAAl+D,KAAAooD,IAAAsW,MAEA9V,GAAA,EAAAb,EAAA5pD,KAAAsqD,EAAAzoD,KAAA8nD,IAAA,IAAA3J,EAAAwgB,KAOA,OAJA35C,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EAGA5jC,GASA+I,OALA,sEAMAiwC,MApKA,SAAAY,EAAAxX,EAAAyX,GAEA,OADAzX,GAAAyX,EACA7+D,KAAA8nD,IAAA,IAAA3J,EAAAygB,IAAA5+D,KAAA6nD,KAAA,EAAAT,IAAA,EAAAA,GAAA,GAAAyX,cC0JA,IACAC,IACAviB,KA/JA,WACAp+C,KAAA4gE,OAAA5gE,KAAA4gE,SAAA,EACA5gE,KAAA6gE,OAAA7gE,KAAA6gE,SAAA,EAEApjE,MAAAuC,KAAA8jD,MACA9jD,KAAA8jD,GAAA,GAEA,IAAAqc,EAAAt+D,KAAAooD,IAAAjqD,KAAA0iD,MACA0d,EAAAv+D,KAAA0oD,IAAAvqD,KAAA0iD,MACAyG,EAAAnpD,KAAAsqD,EAAA6V,EAEAngE,KAAA8gE,GAAAj/D,KAAAC,KAAA,EAAA9B,KAAAqqD,IAAA,EAAArqD,KAAAqqD,IAAAxoD,KAAA6nD,IAAA0W,EAAA,IACApgE,KAAA86D,GAAA96D,KAAAqiD,EAAAriD,KAAA8gE,GAAA9gE,KAAA8jD,GAAAjiD,KAAAC,KAAA,EAAA9B,KAAAqqD,KAAA,EAAAlB,KACA,IAKA4X,EACAC,EANAC,EAAA1X,EAAAvpD,KAAAsqD,EAAAtqD,KAAA0iD,KAAAyd,GACAe,EAAAlhE,KAAA8gE,GAAAV,EAAAv+D,KAAAC,MAAA,EAAA9B,KAAAqqD,KAAA,EAAAlB,MAMA,GALA+X,IAAA,IACAA,EAAA,GAIAzjE,MAAAuC,KAAAwjD,OAeA,CAEA,IAAA2d,EAAA5X,EAAAvpD,KAAAsqD,EAAAtqD,KAAA4iD,KAAA/gD,KAAAooD,IAAAjqD,KAAA4iD,OACAwe,EAAA7X,EAAAvpD,KAAAsqD,EAAAtqD,KAAA8iD,KAAAjhD,KAAAooD,IAAAjqD,KAAA8iD,OACA9iD,KAAA0iD,MAAA,EACA1iD,KAAAqhE,IAAAH,EAAAr/D,KAAAC,KAAAo/D,IAAA,IAAAr/D,KAAA6nD,IAAAuX,EAAAjhE,KAAA8gE,IAGA9gE,KAAAqhE,IAAAH,EAAAr/D,KAAAC,KAAAo/D,IAAA,IAAAr/D,KAAA6nD,IAAAuX,EAAAjhE,KAAA8gE,IAEA,IAAAQ,EAAAz/D,KAAA6nD,IAAAyX,EAAAnhE,KAAA8gE,IACA5L,EAAArzD,KAAA6nD,IAAA0X,EAAAphE,KAAA8gE,IAEAE,EAAA,KADAD,EAAA/gE,KAAAqhE,GAAAC,GACA,EAAAP,GACA,IAAAQ,GAAAvhE,KAAAqhE,GAAArhE,KAAAqhE,GAAAnM,EAAAoM,IAAAthE,KAAAqhE,GAAArhE,KAAAqhE,GAAAnM,EAAAoM,GACAE,GAAAtM,EAAAoM,IAAApM,EAAAoM,GACAG,EAAApY,EAAArpD,KAAAmjD,MAAAnjD,KAAAqjD,OACArjD,KAAAijD,MAAA,IAAAjjD,KAAAmjD,MAAAnjD,KAAAqjD,OAAAxhD,KAAAmoD,KAAAuX,EAAA1/D,KAAA8nD,IAAA,GAAA3pD,KAAA8gE,GAAA,GAAAU,GAAAxhE,KAAA8gE,GACA9gE,KAAAijD,MAAAoG,EAAArpD,KAAAijD,OACA,IAAAye,EAAArY,EAAArpD,KAAAmjD,MAAAnjD,KAAAijD,OACAjjD,KAAA2hE,OAAA9/D,KAAAmoD,KAAAnoD,KAAAooD,IAAAjqD,KAAA8gE,GAAA,GAAAE,GACAhhE,KAAAsjD,MAAAzhD,KAAA85D,KAAAuF,EAAAr/D,KAAAooD,IAAAjqD,KAAA2hE,cAhCAZ,EADA/gE,KAAA0iD,MAAA,EACAwe,EAAAr/D,KAAAC,KAAAo/D,IAAA,GAGAA,EAAAr/D,KAAAC,KAAAo/D,IAAA,GAEAlhE,KAAAqhE,GAAAN,EAAAl/D,KAAA6nD,IAAAuX,EAAAjhE,KAAA8gE,IACAE,EAAA,IAAAD,EAAA,EAAAA,GACA/gE,KAAA2hE,OAAA9/D,KAAA85D,KAAA95D,KAAAooD,IAAAjqD,KAAAsjD,OAAA4d,GACAlhE,KAAAijD,MAAAjjD,KAAAwjD,MAAA3hD,KAAA85D,KAAAqF,EAAAn/D,KAAA8nD,IAAA3pD,KAAA2hE,SAAA3hE,KAAA8gE,GA2BA9gE,KAAA4gE,OACA5gE,KAAA4hE,GAAA,EAGA5hE,KAAA0iD,MAAA,EACA1iD,KAAA4hE,GAAA5hE,KAAA86D,GAAA96D,KAAA8gE,GAAAj/D,KAAAwwD,MAAAxwD,KAAAC,KAAAo/D,IAAA,GAAAr/D,KAAA0oD,IAAAvqD,KAAAsjD,QAGAtjD,KAAA4hE,IAAA,EAAA5hE,KAAA86D,GAAA96D,KAAA8gE,GAAAj/D,KAAAwwD,MAAAxwD,KAAAC,KAAAo/D,IAAA,GAAAr/D,KAAA0oD,IAAAvqD,KAAAsjD,SA6FA7D,QArFA,SAAA54B,GACA,IAGAg7C,EAAAC,EACA3Y,EAJAqB,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EACA8+D,EAAAhX,EAAAmB,EAAAxqD,KAAAijD,OAGA,GAAAphD,KAAAynD,IAAAznD,KAAAynD,IAAAmB,GAAAzK,IAAAI,EAEA+I,EADAsB,EAAA,GACA,EAGA,EAEAqX,EAAA9hE,KAAA86D,GAAA96D,KAAA8gE,GAAAj/D,KAAAqmD,IAAArmD,KAAA8nD,IAAApJ,EAAA4I,EAAAnpD,KAAA2hE,OAAA,KACAE,GAAA,EAAA1Y,EAAAnJ,EAAAhgD,KAAA86D,GAAA96D,KAAA8gE,OAEA,CACA,IAAApO,EAAAnJ,EAAAvpD,KAAAsqD,EAAAG,EAAA5oD,KAAAooD,IAAAQ,IACAsX,EAAA/hE,KAAAqhE,GAAAx/D,KAAA6nD,IAAAgJ,EAAA1yD,KAAA8gE,IACAkB,EAAA,IAAAD,EAAA,EAAAA,GACAE,EAAA,IAAAF,EAAA,EAAAA,GACAG,EAAArgE,KAAAooD,IAAAjqD,KAAA8gE,GAAA,GACAqB,GAAAH,EAAAngE,KAAAooD,IAAAjqD,KAAA2hE,QAAAO,EAAArgE,KAAA0oD,IAAAvqD,KAAA2hE,SAAAM,EAEAH,EADAjgE,KAAAynD,IAAAznD,KAAAynD,IAAA6Y,GAAA,IAAA/hB,EACA8S,OAAAkP,kBAGA,GAAApiE,KAAA86D,GAAAj5D,KAAAqmD,KAAA,EAAAia,IAAA,EAAAA,IAAAniE,KAAA8gE,GAGAe,EADAhgE,KAAAynD,IAAAznD,KAAA0oD,IAAAvqD,KAAA8gE,GAAA,KAAA1gB,EACApgD,KAAA86D,GAAA96D,KAAA8gE,GAAA,EAGA9gE,KAAA86D,GAAAj5D,KAAAwwD,MAAA2P,EAAAngE,KAAA0oD,IAAAvqD,KAAA2hE,QAAAO,EAAArgE,KAAAooD,IAAAjqD,KAAA2hE,QAAA9/D,KAAA0oD,IAAAvqD,KAAA8gE,GAAAT,IAAArgE,KAAA8gE,GAcA,OAVA9gE,KAAA6gE,QACAh6C,EAAAvlB,EAAAtB,KAAA0jD,GAAAme,EACAh7C,EAAAtlB,EAAAvB,KAAA4jD,GAAAke,IAIAD,GAAA7hE,KAAA4hE,GACA/6C,EAAAvlB,EAAAtB,KAAA0jD,GAAAoe,EAAAjgE,KAAA0oD,IAAAvqD,KAAAsjD,OAAAue,EAAAhgE,KAAAooD,IAAAjqD,KAAAsjD,OACAz8B,EAAAtlB,EAAAvB,KAAA4jD,GAAAie,EAAAhgE,KAAA0oD,IAAAvqD,KAAAsjD,OAAAwe,EAAAjgE,KAAAooD,IAAAjqD,KAAAsjD,QAEAz8B,GAuCA64B,QApCA,SAAA74B,GACA,IAAAg7C,EAAAC,EACA9hE,KAAA6gE,QACAiB,EAAAj7C,EAAAtlB,EAAAvB,KAAA4jD,GACAie,EAAAh7C,EAAAvlB,EAAAtB,KAAA0jD,KAGAoe,GAAAj7C,EAAAvlB,EAAAtB,KAAA0jD,IAAA7hD,KAAA0oD,IAAAvqD,KAAAsjD,QAAAz8B,EAAAtlB,EAAAvB,KAAA4jD,IAAA/hD,KAAAooD,IAAAjqD,KAAAsjD,OACAue,GAAAh7C,EAAAtlB,EAAAvB,KAAA4jD,IAAA/hD,KAAA0oD,IAAAvqD,KAAAsjD,QAAAz8B,EAAAvlB,EAAAtB,KAAA0jD,IAAA7hD,KAAAooD,IAAAjqD,KAAAsjD,OACAue,GAAA7hE,KAAA4hE,IAEA,IAAAS,EAAAxgE,KAAA6oD,KAAA,EAAA1qD,KAAA8gE,GAAAgB,EAAA9hE,KAAA86D,IACAwH,EAAA,IAAAD,EAAA,EAAAA,GACAE,EAAA,IAAAF,EAAA,EAAAA,GACAG,EAAA3gE,KAAAooD,IAAAjqD,KAAA8gE,GAAAe,EAAA7hE,KAAA86D,IACA2H,GAAAD,EAAA3gE,KAAA0oD,IAAAvqD,KAAA2hE,QAAAW,EAAAzgE,KAAAooD,IAAAjqD,KAAA2hE,SAAAY,EACA1Y,EAAAhoD,KAAA6nD,IAAA1pD,KAAAqhE,GAAAx/D,KAAAC,MAAA,EAAA2gE,IAAA,EAAAA,IAAA,EAAAziE,KAAA8gE,IAaA,OAZAj/D,KAAAynD,IAAAmZ,EAAA,GAAAriB,GACAv5B,EAAAvlB,EAAAtB,KAAAijD,MACAp8B,EAAAtlB,EAAAy+C,GAEAn+C,KAAAynD,IAAAmZ,EAAA,GAAAriB,GACAv5B,EAAAvlB,EAAAtB,KAAAijD,MACAp8B,EAAAtlB,GAAA,EAAAy+C,IAGAn5B,EAAAtlB,EAAAqoD,EAAA5pD,KAAAsqD,EAAAT,GACAhjC,EAAAvlB,EAAA+nD,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,MAAAiQ,EAAAzgE,KAAA0oD,IAAAvqD,KAAA2hE,QAAAa,EAAA3gE,KAAAooD,IAAAjqD,KAAA2hE,QAAA9/D,KAAA0oD,IAAAvqD,KAAA8gE,GAAAe,EAAA7hE,KAAA86D,KAAA96D,KAAA8gE,KAEAj6C,GAQA+I,OALA,wJChCA,IACA8yC,IACAtkB,KAhIA,WAqBA,GATAp+C,KAAA8iD,OACA9iD,KAAA8iD,KAAA9iD,KAAA4iD,MAEA5iD,KAAA8jD,KACA9jD,KAAA8jD,GAAA,GAEA9jD,KAAA0jD,GAAA1jD,KAAA0jD,IAAA,EACA1jD,KAAA4jD,GAAA5jD,KAAA4jD,IAAA,IAEA/hD,KAAAynD,IAAAtpD,KAAA4iD,KAAA5iD,KAAA8iD,MAAA1C,GAAA,CAIA,IAAAqb,EAAAz7D,KAAA47B,EAAA57B,KAAAqiD,EACAriD,KAAAsqD,EAAAzoD,KAAAC,KAAA,EAAA25D,KAEA,IAAAkH,EAAA9gE,KAAAooD,IAAAjqD,KAAA4iD,MACAggB,EAAA/gE,KAAA0oD,IAAAvqD,KAAA4iD,MACA+c,EAAA5W,EAAA/oD,KAAAsqD,EAAAqY,EAAAC,GACAC,EAAAtZ,EAAAvpD,KAAAsqD,EAAAtqD,KAAA4iD,KAAA+f,GAEAG,EAAAjhE,KAAAooD,IAAAjqD,KAAA8iD,MACAigB,EAAAlhE,KAAA0oD,IAAAvqD,KAAA8iD,MACAkgB,EAAAja,EAAA/oD,KAAAsqD,EAAAwY,EAAAC,GACAE,EAAA1Z,EAAAvpD,KAAAsqD,EAAAtqD,KAAA8iD,KAAAggB,GAEAI,EAAA3Z,EAAAvpD,KAAAsqD,EAAAtqD,KAAA0iD,KAAA7gD,KAAAooD,IAAAjqD,KAAA0iD,OAEA7gD,KAAAynD,IAAAtpD,KAAA4iD,KAAA5iD,KAAA8iD,MAAA1C,EACApgD,KAAAymB,GAAA5kB,KAAAqmD,IAAAyX,EAAAqD,GAAAnhE,KAAAqmD,IAAA2a,EAAAI,GAGAjjE,KAAAymB,GAAAk8C,EAEAllE,MAAAuC,KAAAymB,MACAzmB,KAAAymB,GAAAk8C,GAEA3iE,KAAAmjE,GAAAxD,GAAA3/D,KAAAymB,GAAA5kB,KAAA6nD,IAAAmZ,EAAA7iE,KAAAymB,KACAzmB,KAAAkgE,GAAAlgE,KAAAqiD,EAAAriD,KAAAmjE,GAAAthE,KAAA6nD,IAAAwZ,EAAAljE,KAAAymB,IACAzmB,KAAAstC,QACAttC,KAAAstC,MAAA,6BA6EAmS,QAvEA,SAAA54B,GAEA,IAAA2jC,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAGAM,KAAAynD,IAAA,EAAAznD,KAAAynD,IAAAmB,GAAA5oD,KAAA00C,KAAA6J,IACAqK,EAAArB,EAAAqB,IAAAzK,EAAA,EAAAI,IAGA,IACAyJ,EAAAuZ,EADAja,EAAAtnD,KAAAynD,IAAAznD,KAAAynD,IAAAmB,GAAAzK,GAEA,GAAAmJ,EAAA/I,EACAyJ,EAAAN,EAAAvpD,KAAAsqD,EAAAG,EAAA5oD,KAAAooD,IAAAQ,IACA2Y,EAAApjE,KAAAqiD,EAAAriD,KAAAmjE,GAAAthE,KAAA6nD,IAAAG,EAAA7pD,KAAAymB,QAEA,CAEA,IADA0iC,EAAAsB,EAAAzqD,KAAAymB,KACA,EACA,YAEA28C,EAAA,EAEA,IAAAC,EAAArjE,KAAAymB,GAAA4iC,EAAAmB,EAAAxqD,KAAAijD,OAIA,OAHAp8B,EAAAvlB,EAAAtB,KAAA8jD,IAAAsf,EAAAvhE,KAAAooD,IAAAoZ,IAAArjE,KAAA0jD,GACA78B,EAAAtlB,EAAAvB,KAAA8jD,IAAA9jD,KAAAkgE,GAAAkD,EAAAvhE,KAAA0oD,IAAA8Y,IAAArjE,KAAA4jD,GAEA/8B,GA6CA64B,QAxCA,SAAA74B,GAEA,IAAAu8C,EAAAja,EAAAU,EACAY,EAAAD,EACAlpD,GAAAulB,EAAAvlB,EAAAtB,KAAA0jD,IAAA1jD,KAAA8jD,GACAviD,EAAAvB,KAAAkgE,IAAAr5C,EAAAtlB,EAAAvB,KAAA4jD,IAAA5jD,KAAA8jD,GACA9jD,KAAAymB,GAAA,GACA28C,EAAAvhE,KAAAC,KAAAR,IAAAC,KACA4nD,EAAA,IAGAia,GAAAvhE,KAAAC,KAAAR,IAAAC,KACA4nD,GAAA,GAEA,IAAAka,EAAA,EAIA,GAHA,IAAAD,IACAC,EAAAxhE,KAAAwwD,MAAAlJ,EAAA7nD,EAAA6nD,EAAA5nD,IAEA,IAAA6hE,GAAApjE,KAAAymB,GAAA,GAIA,GAHA0iC,EAAA,EAAAnpD,KAAAymB,GACAojC,EAAAhoD,KAAA6nD,IAAA0Z,GAAApjE,KAAAqiD,EAAAriD,KAAAmjE,IAAAha,IAEA,QADAsB,EAAAb,EAAA5pD,KAAAsqD,EAAAT,IAEA,iBAIAY,GAAAzK,EAMA,OAJAwK,EAAAnB,EAAAga,EAAArjE,KAAAymB,GAAAzmB,KAAAijD,OAEAp8B,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAQA+I,OALA,gHCjCA,IACA0zC,IACAllB,KAnGA,WACAp+C,KAAAqiD,EAAA,YACAriD,KAAAqqD,GAAA,iBACArqD,KAAAsqD,EAAAzoD,KAAAC,KAAA9B,KAAAqqD,IACArqD,KAAA0iD,OACA1iD,KAAA0iD,KAAA,kBAEA1iD,KAAAijD,QACAjjD,KAAAijD,MAAA,mBAGAjjD,KAAA8jD,KACA9jD,KAAA8jD,GAAA,OAEA9jD,KAAAujE,IAAA,iBACAvjE,KAAAwjE,IAAA,EAAAxjE,KAAAujE,IACAvjE,KAAAyjE,IAAAzjE,KAAA0iD,KACA1iD,KAAA0jE,GAAA1jE,KAAAqqD,GACArqD,KAAAsqD,EAAAzoD,KAAAC,KAAA9B,KAAA0jE,IACA1jE,KAAA2jE,KAAA9hE,KAAAC,KAAA,EAAA9B,KAAA0jE,GAAA7hE,KAAA6nD,IAAA7nD,KAAA0oD,IAAAvqD,KAAAyjE,KAAA,MAAAzjE,KAAA0jE,KACA1jE,KAAA4jE,GAAA,iBACA5jE,KAAA6jE,GAAAhiE,KAAA85D,KAAA95D,KAAAooD,IAAAjqD,KAAAyjE,KAAAzjE,KAAA2jE,MACA3jE,KAAA27B,EAAA95B,KAAA6nD,KAAA,EAAA1pD,KAAAsqD,EAAAzoD,KAAAooD,IAAAjqD,KAAAyjE,OAAA,EAAAzjE,KAAAsqD,EAAAzoD,KAAAooD,IAAAjqD,KAAAyjE,MAAAzjE,KAAA2jE,KAAA3jE,KAAAsqD,EAAA,GACAtqD,KAAA+jD,EAAAliD,KAAA8nD,IAAA3pD,KAAA6jE,GAAA,EAAA7jE,KAAAujE,KAAA1hE,KAAA6nD,IAAA7nD,KAAA8nD,IAAA3pD,KAAAyjE,IAAA,EAAAzjE,KAAAujE,KAAAvjE,KAAA2jE,MAAA3jE,KAAA27B,EACA37B,KAAA8jE,GAAA9jE,KAAA8jD,GACA9jD,KAAA+jE,GAAA/jE,KAAAqiD,EAAAxgD,KAAAC,KAAA,EAAA9B,KAAA0jE,KAAA,EAAA1jE,KAAA0jE,GAAA7hE,KAAA6nD,IAAA7nD,KAAAooD,IAAAjqD,KAAAyjE,KAAA,IACAzjE,KAAAgkE,GAAA,iBACAhkE,KAAAyF,EAAA5D,KAAAooD,IAAAjqD,KAAAgkE,IACAhkE,KAAAikE,IAAAjkE,KAAA8jE,GAAA9jE,KAAA+jE,GAAAliE,KAAA8nD,IAAA3pD,KAAAgkE,IACAhkE,KAAAkkE,GAAAlkE,KAAAwjE,IAAAxjE,KAAA4jE,IAuEAnkB,QAjEA,SAAA54B,GACA,IAAAs9C,EAAAC,EAAAC,EAAAxnE,EAAAy+D,EAAAgJ,EAAAC,EACA/Z,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EACAo5D,EAAAtR,EAAAmB,EAAAxqD,KAAAijD,OAgBA,OAdAkhB,EAAAtiE,KAAA6nD,KAAA,EAAA1pD,KAAAsqD,EAAAzoD,KAAAooD,IAAAQ,KAAA,EAAAzqD,KAAAsqD,EAAAzoD,KAAAooD,IAAAQ,IAAAzqD,KAAA2jE,KAAA3jE,KAAAsqD,EAAA,GACA8Z,EAAA,GAAAviE,KAAAmoD,KAAAhqD,KAAA+jD,EAAAliD,KAAA6nD,IAAA7nD,KAAA8nD,IAAAc,EAAA,EAAAzqD,KAAAujE,KAAAvjE,KAAA2jE,MAAAQ,GAAAnkE,KAAAujE,KACAc,GAAA1J,EAAA36D,KAAA2jE,KACA9mE,EAAAgF,KAAA85D,KAAA95D,KAAA0oD,IAAAvqD,KAAAkkE,IAAAriE,KAAAooD,IAAAma,GAAAviE,KAAAooD,IAAAjqD,KAAAkkE,IAAAriE,KAAA0oD,IAAA6Z,GAAAviE,KAAA0oD,IAAA8Z,IACA/I,EAAAz5D,KAAA85D,KAAA95D,KAAA0oD,IAAA6Z,GAAAviE,KAAAooD,IAAAoa,GAAAxiE,KAAA0oD,IAAA1tD,IACAynE,EAAAtkE,KAAAyF,EAAA61D,EACAiJ,EAAAvkE,KAAAikE,IAAApiE,KAAA6nD,IAAA7nD,KAAA8nD,IAAA3pD,KAAAgkE,GAAA,EAAAhkE,KAAAujE,KAAAvjE,KAAAyF,GAAA5D,KAAA6nD,IAAA7nD,KAAA8nD,IAAA9sD,EAAA,EAAAmD,KAAAujE,KAAAvjE,KAAAyF,GACAohB,EAAAtlB,EAAAgjE,EAAA1iE,KAAA0oD,IAAA+Z,GAAA,EACAz9C,EAAAvlB,EAAAijE,EAAA1iE,KAAAooD,IAAAqa,GAAA,EAEAtkE,KAAAwkE,QACA39C,EAAAtlB,IAAA,EACAslB,EAAAvlB,IAAA,GAEA,GA8CAo+C,QA1CA,SAAA74B,GACA,IAAAu9C,EAAAC,EAAAxnE,EAAAy+D,EAAAiJ,EAAAE,EACAC,EAIAj0B,EAAA5pB,EAAAvlB,EACAulB,EAAAvlB,EAAAulB,EAAAtlB,EACAslB,EAAAtlB,EAAAkvC,EACAzwC,KAAAwkE,QACA39C,EAAAtlB,IAAA,EACAslB,EAAAvlB,IAAA,GAEAijE,EAAA1iE,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,GAEA+5D,EADAz5D,KAAAwwD,MAAAxrC,EAAAtlB,EAAAslB,EAAAvlB,GACAO,KAAAooD,IAAAjqD,KAAAgkE,IACAnnE,EAAA,GAAAgF,KAAAmoD,KAAAnoD,KAAA6nD,IAAA1pD,KAAAikE,IAAAM,EAAA,EAAAvkE,KAAAyF,GAAA5D,KAAA8nD,IAAA3pD,KAAAgkE,GAAA,EAAAhkE,KAAAujE,MAAAvjE,KAAAujE,KACAa,EAAAviE,KAAA85D,KAAA95D,KAAA0oD,IAAAvqD,KAAAkkE,IAAAriE,KAAAooD,IAAAptD,GAAAgF,KAAAooD,IAAAjqD,KAAAkkE,IAAAriE,KAAA0oD,IAAA1tD,GAAAgF,KAAA0oD,IAAA+Q,IACA+I,EAAAxiE,KAAA85D,KAAA95D,KAAA0oD,IAAA1tD,GAAAgF,KAAAooD,IAAAqR,GAAAz5D,KAAA0oD,IAAA6Z,IACAv9C,EAAAvlB,EAAAtB,KAAAijD,MAAAohB,EAAArkE,KAAA2jE,KACAc,EAAAL,EACAM,EAAA,EACA,IAAAzS,EAAA,EACA,GACAprC,EAAAtlB,EAAA,GAAAM,KAAAmoD,KAAAnoD,KAAA6nD,IAAA1pD,KAAA+jD,GAAA,EAAA/jD,KAAA2jE,MAAA9hE,KAAA6nD,IAAA7nD,KAAA8nD,IAAAya,EAAA,EAAApkE,KAAAujE,KAAA,EAAAvjE,KAAA2jE,MAAA9hE,KAAA6nD,KAAA,EAAA1pD,KAAAsqD,EAAAzoD,KAAAooD,IAAAwa,KAAA,EAAAzkE,KAAAsqD,EAAAzoD,KAAAooD,IAAAwa,IAAAzkE,KAAAsqD,EAAA,IAAAtqD,KAAAujE,KACA1hE,KAAAynD,IAAAmb,EAAA59C,EAAAtlB,GAAA,QACAmjE,EAAA,GAEAD,EAAA59C,EAAAtlB,EACA0wD,GAAA,QACG,IAAAyS,GAAAzS,EAAA,IACH,OAAAA,GAAA,GACA,KAGA,GAQAriC,OALA,oBCnGA+0C,GAAA,SAAAC,EAAAtM,EAAAoL,EAAAmB,EAAArb,GACA,OAAAob,EAAApb,EAAA8O,EAAAz2D,KAAAooD,IAAA,EAAAT,GAAAka,EAAA7hE,KAAAooD,IAAA,EAAAT,GAAAqb,EAAAhjE,KAAAooD,IAAA,EAAAT,ICDAsb,GAAA,SAAAxjE,GACA,aAAAA,GAAA,EAAAA,EAAA,WAAAA,KCDAyjE,GAAA,SAAAzjE,GACA,WAAAA,GAAA,MAAAA,GAAA,SAAAA,KCDA0jE,GAAA,SAAA1jE,GACA,gBAAAA,KAAA,MAAAA,ICDA2jE,GAAA,SAAA3jE,GACA,OAAAA,OAAA,UCDA4jE,GAAA,SAAA7iB,EAAAiI,EAAArB,GACA,IAAAwS,EAAAnR,EAAArB,EACA,OAAA5G,EAAAxgD,KAAAC,KAAA,EAAA25D,MCCA0J,GAAA,SAAA7jE,GACA,OAAAO,KAAAynD,IAAAhoD,GAAA0+C,EAAA1+C,IAAA8nD,EAAA9nD,GAAAO,KAAA00C,ICJA6uB,GAAA,SAAAjK,EAAAyJ,EAAAtM,EAAAoL,EAAAmB,GACA,IAAArb,EACAM,EAEAN,EAAA2R,EAAAyJ,EACA,QAAArhE,EAAA,EAAiBA,EAAA,GAAQA,IAGzB,GADAimD,GADAM,GAAAqR,GAAAyJ,EAAApb,EAAA8O,EAAAz2D,KAAAooD,IAAA,EAAAT,GAAAka,EAAA7hE,KAAAooD,IAAA,EAAAT,GAAAqb,EAAAhjE,KAAAooD,IAAA,EAAAT,MAAAob,EAAA,EAAAtM,EAAAz2D,KAAA0oD,IAAA,EAAAf,GAAA,EAAAka,EAAA7hE,KAAA0oD,IAAA,EAAAf,GAAA,EAAAqb,EAAAhjE,KAAA0oD,IAAA,EAAAf,IAEA3nD,KAAAynD,IAAAQ,IAAA,MACA,OAAAN,EAKA,OAAA8W,KCuFA,IACA+E,IACAjnB,KA5FA,WACAp+C,KAAAunD,SACAvnD,KAAA4kE,GAAAE,GAAA9kE,KAAAqqD,IACArqD,KAAAs4D,GAAAyM,GAAA/kE,KAAAqqD,IACArqD,KAAA0jE,GAAAsB,GAAAhlE,KAAAqqD,IACArqD,KAAA6kE,GAAAI,GAAAjlE,KAAAqqD,IACArqD,KAAA06D,IAAA16D,KAAAqiD,EAAAsiB,GAAA3kE,KAAA4kE,GAAA5kE,KAAAs4D,GAAAt4D,KAAA0jE,GAAA1jE,KAAA6kE,GAAA7kE,KAAA0iD,QAuFAjD,QAjFA,SAAA54B,GAIA,IAAAvlB,EAAAC,EACA+jE,EAAAz+C,EAAAvlB,EACAkoD,EAAA3iC,EAAAtlB,EAGA,GAFA+jE,EAAAjc,EAAAic,EAAAtlE,KAAAijD,OAEAjjD,KAAAunD,OACAjmD,EAAAtB,KAAAqiD,EAAAxgD,KAAA85D,KAAA95D,KAAA0oD,IAAAf,GAAA3nD,KAAAooD,IAAAqb,IACA/jE,EAAAvB,KAAAqiD,GAAAxgD,KAAAwwD,MAAAxwD,KAAA8nD,IAAAH,GAAA3nD,KAAA0oD,IAAA+a,IAAAtlE,KAAA0iD,UAEA,CAEA,IAAAuG,EAAApnD,KAAAooD,IAAAT,GACAN,EAAArnD,KAAA0oD,IAAAf,GACA+b,EAAAL,GAAAllE,KAAAqiD,EAAAriD,KAAAsqD,EAAArB,GACAgZ,EAAApgE,KAAA8nD,IAAAH,GAAA3nD,KAAA8nD,IAAAH,GACAsR,EAAAwK,EAAAzjE,KAAA0oD,IAAAf,GACAgc,EAAA1K,IACA2K,EAAAzlE,KAAAqqD,GAAAnB,KAAA,EAAAlpD,KAAAqqD,IAGA/oD,EAAAikE,EAAAzK,GAAA,EAAA0K,EAAAvD,GAAA,OAAAA,EAAA,EAAAwD,GAAAD,EAAA,MACAjkE,EAHAvB,KAAAqiD,EAAAsiB,GAAA3kE,KAAA4kE,GAAA5kE,KAAAs4D,GAAAt4D,KAAA0jE,GAAA1jE,KAAA6kE,GAAArb,GAGAxpD,KAAA06D,IAAA6K,EAAAtc,EAAAC,EAAAsc,GAAA,MAAAvD,EAAA,EAAAwD,GAAAD,EAAA,IAOA,OAFA3+C,EAAAvlB,IAAAtB,KAAA0jD,GACA78B,EAAAtlB,IAAAvB,KAAA4jD,GACA/8B,GAkDA64B,QA7CA,SAAA74B,GACAA,EAAAvlB,GAAAtB,KAAA0jD,GACA78B,EAAAtlB,GAAAvB,KAAA4jD,GACA,IAEA4F,EAAA8b,EAFAhkE,EAAAulB,EAAAvlB,EAAAtB,KAAAqiD,EACA9gD,EAAAslB,EAAAtlB,EAAAvB,KAAAqiD,EAGA,GAAAriD,KAAAunD,OAAA,CACA,IAAAme,EAAAnkE,EAAAvB,KAAA0iD,KACA8G,EAAA3nD,KAAA85D,KAAA95D,KAAAooD,IAAAyb,GAAA7jE,KAAA0oD,IAAAjpD,IACAgkE,EAAAzjE,KAAAwwD,MAAAxwD,KAAA8nD,IAAAroD,GAAAO,KAAA0oD,IAAAmb,QAEA,CAEA,IAAAC,EAAA3lE,KAAA06D,IAAA16D,KAAAqiD,EAAA9gD,EACAqkE,EAAAR,GAAAO,EAAA3lE,KAAA4kE,GAAA5kE,KAAAs4D,GAAAt4D,KAAA0jE,GAAA1jE,KAAA6kE,IACA,GAAAhjE,KAAAynD,IAAAznD,KAAAynD,IAAAsc,GAAA5lB,IAAAI,EAMA,OALAv5B,EAAAvlB,EAAAtB,KAAAijD,MACAp8B,EAAAtlB,EAAAy+C,EACAz+C,EAAA,IACAslB,EAAAtlB,IAAA,GAEAslB,EAEA,IAAAg/C,EAAAX,GAAAllE,KAAAqiD,EAAAriD,KAAAsqD,EAAAzoD,KAAAooD,IAAA2b,IAEAE,EAAAD,MAAA7lE,KAAAqiD,EAAAriD,KAAAqiD,GAAA,EAAAriD,KAAAqqD,IACA0b,EAAAlkE,KAAA6nD,IAAA7nD,KAAA8nD,IAAAic,GAAA,GACA1E,EAAA5/D,EAAAtB,KAAAqiD,EAAAwjB,EACAG,EAAA9E,IACA1X,EAAAoc,EAAAC,EAAAhkE,KAAA8nD,IAAAic,GAAAE,EAAA5E,KAAA,QAAA6E,GAAA7E,IAAA,IACAoE,EAAApE,GAAA,EAAA8E,GAAAD,EAAA,OAAAA,KAAAC,EAAA,KAAAnkE,KAAA0oD,IAAAqb,GAMA,OAFA/+C,EAAAvlB,EAAA+nD,EAAAic,EAAAtlE,KAAAijD,OACAp8B,EAAAtlB,EAAA4jE,GAAA3b,GACA3iC,GASA+I,OALA,qCCrGAq2C,GAAA,SAAAjd,EAAAC,GACA,IAAAE,EACA,OAAAH,EAAA,MAEA,EAAAA,MAAAC,GAAA,GADAE,EAAAH,EAAAC,GACAE,GAAA,GAAAH,EAAAnnD,KAAAqmD,KAAA,EAAAiB,IAAA,EAAAA,KAGA,EAAAF,GC6PA,IAAAid,GAAA,kBAEAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,kBACAC,GAAA,oBAqBA,IACAC,IACApoB,KA7QA,WACA,IAWA6K,EAXAyJ,EAAA7wD,KAAAynD,IAAAtpD,KAAA0iD,MAUA,GATA7gD,KAAAynD,IAAAoJ,EAAA1S,GAAAI,EACApgD,KAAAymE,KAAAzmE,KAAA0iD,KAAA,EAAA1iD,KAAA0mE,OAAA1mE,KAAA2mE,OAEA9kE,KAAAynD,IAAAoJ,GAAAtS,EACApgD,KAAAymE,KAAAzmE,KAAA4mE,MAGA5mE,KAAAymE,KAAAzmE,KAAA6mE,MAEA7mE,KAAAqqD,GAAA,EAMA,OAHArqD,KAAAqiE,GAAA4D,GAAAjmE,KAAAsqD,EAAA,GACAtqD,KAAA8mE,IAAA,MAAA9mE,KAAAqqD,IACArqD,KAAA+mE,IAwOA,SAAA1c,GACA,IAAAqI,EACAsU,KASA,OARAA,EAAA,GAAA3c,EAAA6b,GACAxT,EAAArI,IACA2c,EAAA,IAAAtU,EAAAyT,GACAa,EAAA,GAAAtU,EAAA2T,GACA3T,GAAArI,EACA2c,EAAA,IAAAtU,EAAA0T,GACAY,EAAA,IAAAtU,EAAA4T,GACAU,EAAA,GAAAtU,EAAA6T,GACAS,EAnPAC,CAAAjnE,KAAAqqD,IACArqD,KAAAymE,MACA,KAAAzmE,KAAA2mE,OAGA,KAAA3mE,KAAA0mE,OACA1mE,KAAA0lE,GAAA,EACA,MACA,KAAA1lE,KAAA4mE,MACA5mE,KAAAknE,GAAArlE,KAAAC,KAAA,GAAA9B,KAAAqiE,IACAriE,KAAA0lE,GAAA,EAAA1lE,KAAAknE,GACAlnE,KAAAmnE,IAAA,EACAnnE,KAAAonE,IAAA,GAAApnE,KAAAqiE,GACA,MACA,KAAAriE,KAAA6mE,MACA7mE,KAAAknE,GAAArlE,KAAAC,KAAA,GAAA9B,KAAAqiE,IACApZ,EAAApnD,KAAAooD,IAAAjqD,KAAA0iD,MACA1iD,KAAAqnE,MAAApB,GAAAjmE,KAAAsqD,EAAArB,GAAAjpD,KAAAqiE,GACAriE,KAAAsnE,MAAAzlE,KAAAC,KAAA,EAAA9B,KAAAqnE,MAAArnE,KAAAqnE,OACArnE,KAAA0lE,GAAA7jE,KAAA0oD,IAAAvqD,KAAA0iD,OAAA7gD,KAAAC,KAAA,EAAA9B,KAAAqqD,GAAApB,KAAAjpD,KAAAknE,GAAAlnE,KAAAsnE,OACAtnE,KAAAonE,KAAApnE,KAAAmnE,IAAAnnE,KAAAknE,IAAAlnE,KAAA0lE,GACA1lE,KAAAmnE,KAAAnnE,KAAA0lE,QAKA1lE,KAAAymE,OAAAzmE,KAAA6mE,QACA7mE,KAAAunE,OAAA1lE,KAAAooD,IAAAjqD,KAAA0iD,MACA1iD,KAAAwnE,OAAA3lE,KAAA0oD,IAAAvqD,KAAA0iD,QAkOAjD,QA3NA,SAAA54B,GAIA,IAAAvlB,EAAAC,EAAAkmE,EAAAC,EAAAze,EAAA0e,EAAAC,EAAAC,EAAAjsC,EAAAstB,EACAoc,EAAAz+C,EAAAvlB,EACAkoD,EAAA3iC,EAAAtlB,EAGA,GADA+jE,EAAAjc,EAAAic,EAAAtlE,KAAAijD,OACAjjD,KAAAunD,QAIA,GAHA0B,EAAApnD,KAAAooD,IAAAT,GACAN,EAAArnD,KAAA0oD,IAAAf,GACAie,EAAA5lE,KAAA0oD,IAAA+a,GACAtlE,KAAAymE,OAAAzmE,KAAA6mE,OAAA7mE,KAAAymE,OAAAzmE,KAAA4mE,MAAA,CAEA,IADArlE,EAAAvB,KAAAymE,OAAAzmE,KAAA4mE,MAAA,EAAA1d,EAAAue,EAAA,EAAAznE,KAAAunE,OAAAte,EAAAjpD,KAAAwnE,OAAAte,EAAAue,IACArnB,EACA,YAGA9+C,GADAC,EAAAM,KAAAC,KAAA,EAAAP,IACA2nD,EAAArnD,KAAAooD,IAAAqb,GACA/jE,GAAAvB,KAAAymE,OAAAzmE,KAAA4mE,MAAA3d,EAAAjpD,KAAAwnE,OAAAve,EAAAjpD,KAAAunE,OAAAre,EAAAue,OAEA,GAAAznE,KAAAymE,OAAAzmE,KAAA2mE,QAAA3mE,KAAAymE,OAAAzmE,KAAA0mE,OAAA,CAIA,GAHA1mE,KAAAymE,OAAAzmE,KAAA2mE,SACAc,MAEA5lE,KAAAynD,IAAAE,EAAAxpD,KAAA8nE,MAAA1nB,EACA,YAEA7+C,EAAAg/C,EAAA,GAAAiJ,EAEAloD,GADAC,EAAA,GAAAvB,KAAAymE,OAAAzmE,KAAA0mE,OAAA7kE,KAAA0oD,IAAAhpD,GAAAM,KAAAooD,IAAA1oD,KACAM,KAAAooD,IAAAqb,GACA/jE,GAAAkmE,OAGA,CAYA,OAXAG,EAAA,EACAC,EAAA,EACAjsC,EAAA,EACA6rC,EAAA5lE,KAAA0oD,IAAA+a,GACAoC,EAAA7lE,KAAAooD,IAAAqb,GACArc,EAAApnD,KAAAooD,IAAAT,GACAme,EAAA1B,GAAAjmE,KAAAsqD,EAAArB,GACAjpD,KAAAymE,OAAAzmE,KAAA6mE,OAAA7mE,KAAAymE,OAAAzmE,KAAA4mE,QACAgB,EAAAD,EAAA3nE,KAAAqiE,GACAwF,EAAAhmE,KAAAC,KAAA,EAAA8lE,MAEA5nE,KAAAymE,MACA,KAAAzmE,KAAA6mE,MACAjrC,EAAA,EAAA57B,KAAAqnE,MAAAO,EAAA5nE,KAAAsnE,MAAAO,EAAAJ,EACA,MACA,KAAAznE,KAAA4mE,MACAhrC,EAAA,EAAAisC,EAAAJ,EACA,MACA,KAAAznE,KAAA2mE,OACA/qC,EAAAokB,EAAAwJ,EACAme,EAAA3nE,KAAAqiE,GAAAsF,EACA,MACA,KAAA3nE,KAAA0mE,OACA9qC,EAAA4tB,EAAAxJ,EACA2nB,EAAA3nE,KAAAqiE,GAAAsF,EAGA,GAAA9lE,KAAAynD,IAAA1tB,GAAAwkB,EACA,YAEA,OAAApgD,KAAAymE,MACA,KAAAzmE,KAAA6mE,MACA,KAAA7mE,KAAA4mE,MACAhrC,EAAA/5B,KAAAC,KAAA,EAAA85B,GAEAr6B,EADAvB,KAAAymE,OAAAzmE,KAAA6mE,MACA7mE,KAAAonE,IAAAxrC,GAAA57B,KAAAsnE,MAAAM,EAAA5nE,KAAAqnE,MAAAQ,EAAAJ,IAGA7rC,EAAA/5B,KAAAC,KAAA,KAAA+lE,EAAAJ,KAAAG,EAAA5nE,KAAAonE,IAEA9lE,EAAAtB,KAAAmnE,IAAAvrC,EAAAisC,EAAAH,EACA,MACA,KAAA1nE,KAAA2mE,OACA,KAAA3mE,KAAA0mE,OACAiB,GAAA,GACArmE,GAAAs6B,EAAA/5B,KAAAC,KAAA6lE,IAAAD,EACAnmE,EAAAkmE,GAAAznE,KAAAymE,OAAAzmE,KAAA0mE,OAAA9qC,OAGAt6B,EAAAC,EAAA,GAQA,OAFAslB,EAAAvlB,EAAAtB,KAAAqiD,EAAA/gD,EAAAtB,KAAA0jD,GACA78B,EAAAtlB,EAAAvB,KAAAqiD,EAAA9gD,EAAAvB,KAAA4jD,GACA/8B,GA+HA64B,QA1HA,SAAA74B,GACAA,EAAAvlB,GAAAtB,KAAA0jD,GACA78B,EAAAtlB,GAAAvB,KAAA4jD,GACA,IAEA0hB,EAAA9b,EAAAue,EAAAC,EAAAL,EAAArI,EAAA2I,EA4GAC,EAAAlB,EACAtU,EA/GApxD,EAAAulB,EAAAvlB,EAAAtB,KAAAqiD,EACA9gD,EAAAslB,EAAAtlB,EAAAvB,KAAAqiD,EAEA,GAAAriD,KAAAunD,OAAA,CACA,IACA2Y,EADAiI,EAAA,EACAC,EAAA,EAIA,IADA5e,EAAA,IADA0W,EAAAr+D,KAAAC,KAAAR,IAAAC,OAEA,EACA,YAOA,OALAioD,EAAA,EAAA3nD,KAAA85D,KAAAnS,GACAxpD,KAAAymE,OAAAzmE,KAAA6mE,OAAA7mE,KAAAymE,OAAAzmE,KAAA4mE,QACAwB,EAAAvmE,KAAAooD,IAAAT,GACA2e,EAAAtmE,KAAA0oD,IAAAf,IAEAxpD,KAAAymE,MACA,KAAAzmE,KAAA4mE,MACApd,EAAA3nD,KAAAynD,IAAA4W,IAAA9f,EAAA,EAAAv+C,KAAA85D,KAAAp6D,EAAA6mE,EAAAlI,GACA5+D,GAAA8mE,EACA7mE,EAAA4mE,EAAAjI,EACA,MACA,KAAAlgE,KAAA6mE,MACArd,EAAA3nD,KAAAynD,IAAA4W,IAAA9f,EAAApgD,KAAA8nE,KAAAjmE,KAAA85D,KAAAwM,EAAAnoE,KAAAunE,OAAAhmE,EAAA6mE,EAAApoE,KAAAwnE,OAAAtH,GACA5+D,GAAA8mE,EAAApoE,KAAAwnE,OACAjmE,GAAA4mE,EAAAtmE,KAAAooD,IAAAT,GAAAxpD,KAAAunE,QAAArH,EACA,MACA,KAAAlgE,KAAA2mE,OACAplE,KACAioD,EAAAxJ,EAAAwJ,EACA,MACA,KAAAxpD,KAAA0mE,OACAld,GAAAxJ,EAGAslB,EAAA,IAAA/jE,GAAAvB,KAAAymE,OAAAzmE,KAAA4mE,OAAA5mE,KAAAymE,OAAAzmE,KAAA6mE,MAAAhlE,KAAAwwD,MAAA/wD,EAAAC,GAAA,MAEA,CAEA,GADA0mE,EAAA,EACAjoE,KAAAymE,OAAAzmE,KAAA6mE,OAAA7mE,KAAAymE,OAAAzmE,KAAA4mE,MAAA,CAIA,GAHAtlE,GAAAtB,KAAA0lE,GACAnkE,GAAAvB,KAAA0lE,IACApG,EAAAz9D,KAAAC,KAAAR,IAAAC,MACA6+C,EAGA,OAFAv5B,EAAAvlB,EAAA,EACAulB,EAAAtlB,EAAAvB,KAAA8nE,KACAjhD,EAEAmhD,EAAA,EAAAnmE,KAAA85D,KAAA,GAAA2D,EAAAt/D,KAAAknE,IACAa,EAAAlmE,KAAA0oD,IAAAyd,GACA1mE,GAAA0mE,EAAAnmE,KAAAooD,IAAA+d,GACAhoE,KAAAymE,OAAAzmE,KAAA6mE,OACAoB,EAAAF,EAAA/nE,KAAAqnE,MAAA9lE,EAAAymE,EAAAhoE,KAAAsnE,MAAAhI,EACAqI,EAAA3nE,KAAAqiE,GAAA4F,EACA1mE,EAAA+9D,EAAAt/D,KAAAsnE,MAAAS,EAAAxmE,EAAAvB,KAAAqnE,MAAAW,IAGAC,EAAA1mE,EAAAymE,EAAA1I,EACAqI,EAAA3nE,KAAAqiE,GAAA4F,EACA1mE,EAAA+9D,EAAAyI,QAGA,GAAA/nE,KAAAymE,OAAAzmE,KAAA2mE,QAAA3mE,KAAAymE,OAAAzmE,KAAA0mE,OAAA,CAKA,GAJA1mE,KAAAymE,OAAAzmE,KAAA2mE,SACAplE,QAEAomE,EAAArmE,IAAAC,KAIA,OAFAslB,EAAAvlB,EAAA,EACAulB,EAAAtlB,EAAAvB,KAAA8nE,KACAjhD,EAEAohD,EAAA,EAAAN,EAAA3nE,KAAAqiE,GACAriE,KAAAymE,OAAAzmE,KAAA0mE,SACAuB,MAGA3C,EAAAzjE,KAAAwwD,MAAA/wD,EAAAC,GAgCA2mE,EA/BArmE,KAAA85D,KAAAsM,GA+BAjB,EA/BAhnE,KAAA+mE,IAgCArU,EAAAwV,IAhCA1e,EAiCA0e,EAAAlB,EAAA,GAAAnlE,KAAAooD,IAAAyI,GAAAsU,EAAA,GAAAnlE,KAAAooD,IAAAyI,KAAAsU,EAAA,GAAAnlE,KAAAooD,IAAAyI,OA5BA,OAFA7rC,EAAAvlB,EAAA+nD,EAAArpD,KAAAijD,MAAAqiB,GACAz+C,EAAAtlB,EAAAioD,EACA3iC,GAoCA+I,OALA,sEAMA82C,OAzRA,EA0RAC,OAxRA,EAyRAC,MAxRA,EAyRAC,MAxRA,GChBAwB,GAAA,SAAA/mE,GAIA,OAHAO,KAAAynD,IAAAhoD,GAAA,IACAA,IAAA,QAEAO,KAAA85D,KAAAr6D,ICqHA,IACAgnE,IACAlqB,KArHA,WAEAv8C,KAAAynD,IAAAtpD,KAAA4iD,KAAA5iD,KAAA8iD,MAAA1C,IAGApgD,KAAAy7D,KAAAz7D,KAAA47B,EAAA57B,KAAAqiD,EACAriD,KAAAqqD,GAAA,EAAAxoD,KAAA6nD,IAAA1pD,KAAAy7D,KAAA,GACAz7D,KAAA6kE,GAAAhjE,KAAAC,KAAA9B,KAAAqqD,IAEArqD,KAAAuoE,OAAA1mE,KAAAooD,IAAAjqD,KAAA4iD,MACA5iD,KAAAwoE,OAAA3mE,KAAA0oD,IAAAvqD,KAAA4iD,MACA5iD,KAAAmhE,GAAAnhE,KAAAuoE,OACAvoE,KAAAmpD,IAAAnpD,KAAAuoE,OACAvoE,KAAA2/D,IAAA5W,EAAA/oD,KAAA6kE,GAAA7kE,KAAAuoE,OAAAvoE,KAAAwoE,QACAxoE,KAAAyoE,IAAAxC,GAAAjmE,KAAA6kE,GAAA7kE,KAAAuoE,OAAAvoE,KAAAwoE,QAEAxoE,KAAAuoE,OAAA1mE,KAAAooD,IAAAjqD,KAAA8iD,MACA9iD,KAAAwoE,OAAA3mE,KAAA0oD,IAAAvqD,KAAA8iD,MACA9iD,KAAAohE,GAAAphE,KAAAuoE,OACAvoE,KAAAgjE,IAAAja,EAAA/oD,KAAA6kE,GAAA7kE,KAAAuoE,OAAAvoE,KAAAwoE,QACAxoE,KAAA0oE,IAAAzC,GAAAjmE,KAAA6kE,GAAA7kE,KAAAuoE,OAAAvoE,KAAAwoE,QAEAxoE,KAAAuoE,OAAA1mE,KAAAooD,IAAAjqD,KAAA0iD,MACA1iD,KAAAwoE,OAAA3mE,KAAA0oD,IAAAvqD,KAAA0iD,MACA1iD,KAAA2oE,GAAA3oE,KAAAuoE,OACAvoE,KAAA4oE,IAAA3C,GAAAjmE,KAAA6kE,GAAA7kE,KAAAuoE,OAAAvoE,KAAAwoE,QAEA3mE,KAAAynD,IAAAtpD,KAAA4iD,KAAA5iD,KAAA8iD,MAAA1C,EACApgD,KAAA6oE,KAAA7oE,KAAA2/D,IAAA3/D,KAAA2/D,IAAA3/D,KAAAgjE,IAAAhjE,KAAAgjE,MAAAhjE,KAAA0oE,IAAA1oE,KAAAyoE,KAGAzoE,KAAA6oE,IAAA7oE,KAAAmpD,IAEAnpD,KAAAg7D,EAAAh7D,KAAA2/D,IAAA3/D,KAAA2/D,IAAA3/D,KAAA6oE,IAAA7oE,KAAAyoE,IACAzoE,KAAAkgE,GAAAlgE,KAAAqiD,EAAAxgD,KAAAC,KAAA9B,KAAAg7D,EAAAh7D,KAAA6oE,IAAA7oE,KAAA4oE,KAAA5oE,KAAA6oE,MAoFAppB,QA/EA,SAAA54B,GAEA,IAAA2jC,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAEAvB,KAAA46D,QAAA/4D,KAAAooD,IAAAQ,GACAzqD,KAAA66D,QAAAh5D,KAAA0oD,IAAAE,GAEA,IAAAqe,EAAA7C,GAAAjmE,KAAA6kE,GAAA7kE,KAAA46D,QAAA56D,KAAA66D,SACAuI,EAAApjE,KAAAqiD,EAAAxgD,KAAAC,KAAA9B,KAAAg7D,EAAAh7D,KAAA6oE,IAAAC,GAAA9oE,KAAA6oE,IACAxF,EAAArjE,KAAA6oE,IAAAxf,EAAAmB,EAAAxqD,KAAAijD,OACA3hD,EAAA8hE,EAAAvhE,KAAAooD,IAAAoZ,GAAArjE,KAAA0jD,GACAniD,EAAAvB,KAAAkgE,GAAAkD,EAAAvhE,KAAA0oD,IAAA8Y,GAAArjE,KAAA4jD,GAIA,OAFA/8B,EAAAvlB,IACAulB,EAAAtlB,IACAslB,GAgEA64B,QA7DA,SAAA74B,GACA,IAAAu8C,EAAA0F,EAAA3f,EAAAka,EAAA7Y,EAAAC,EA4BA,OA1BA5jC,EAAAvlB,GAAAtB,KAAA0jD,GACA78B,EAAAtlB,EAAAvB,KAAAkgE,GAAAr5C,EAAAtlB,EAAAvB,KAAA4jD,GACA5jD,KAAA6oE,KAAA,GACAzF,EAAAvhE,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,GACA4nD,EAAA,IAGAia,GAAAvhE,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,GACA4nD,GAAA,GAEAka,EAAA,EACA,IAAAD,IACAC,EAAAxhE,KAAAwwD,MAAAlJ,EAAAtiC,EAAAvlB,EAAA6nD,EAAAtiC,EAAAtlB,IAEA4nD,EAAAia,EAAApjE,KAAA6oE,IAAA7oE,KAAAqiD,EACAriD,KAAAunD,OACAkD,EAAA5oD,KAAA85D,MAAA37D,KAAAg7D,EAAA7R,MAAA,EAAAnpD,KAAA6oE,OAGAC,GAAA9oE,KAAAg7D,EAAA7R,KAAAnpD,KAAA6oE,IACApe,EAAAzqD,KAAA+oE,MAAA/oE,KAAA6kE,GAAAiE,IAGAte,EAAAnB,EAAAga,EAAArjE,KAAA6oE,IAAA7oE,KAAAijD,OACAp8B,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAiCA+I,OALA,0CAMAm5C,MA5BA,SAAA/f,EAAA8f,GACA,IAAA7f,EAAAE,EAAAM,EAAAK,EACAN,EAAA6e,GAAA,GAAAS,GACA,GAAA9f,EAAA5I,EACA,OAAAoJ,EAIA,IADA,IAAAwf,EAAAhgB,IACAzlD,EAAA,EAAiBA,GAAA,GAASA,IAO1B,GADAimD,GADAM,EAAA,IADAL,EAAA,GADAN,EAAAH,GAFAC,EAAApnD,KAAAooD,IAAAT,KAGAL,GACAM,EAHA5nD,KAAA0oD,IAAAf,IAGAsf,GAAA,EAAAE,GAAA/f,EAAAQ,EAAA,GAAAT,EAAAnnD,KAAAqmD,KAAA,EAAAiB,IAAA,EAAAA,KAEAtnD,KAAAynD,IAAAQ,IAAA,KACA,OAAAN,EAGA,cCrBA,IACAyf,IACA7qB,KAzFA,WAIAp+C,KAAAkpE,QAAArnE,KAAAooD,IAAAjqD,KAAA0iD,MACA1iD,KAAAmpE,QAAAtnE,KAAA0oD,IAAAvqD,KAAA0iD,MAEA1iD,KAAAopE,cAAA,IAAAppE,KAAAqiD,EACAriD,KAAA2+D,GAAA,GAkFAlf,QA7EA,SAAA54B,GACA,IAAAoiC,EAAAC,EACAmX,EACAgJ,EAEA1tC,EACAr6B,EAAAC,EACAipD,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EA8BA,OA3BA8+D,EAAAhX,EAAAmB,EAAAxqD,KAAAijD,OAEAgG,EAAApnD,KAAAooD,IAAAQ,GACAvB,EAAArnD,KAAA0oD,IAAAE,GAEA4e,EAAAxnE,KAAA0oD,IAAA8V,IACA1kC,EAAA37B,KAAAkpE,QAAAjgB,EAAAjpD,KAAAmpE,QAAAjgB,EAAAmgB,GAEA,GAAAxnE,KAAAynD,IAAA3tB,IAAAykB,GACA9+C,EAAAtB,KAAA0jD,GAFA,EAEA1jD,KAAAqiD,EAAA6G,EAAArnD,KAAAooD,IAAAoW,GAAA1kC,EACAp6B,EAAAvB,KAAA4jD,GAHA,EAGA5jD,KAAAqiD,GAAAriD,KAAAmpE,QAAAlgB,EAAAjpD,KAAAkpE,QAAAhgB,EAAAmgB,GAAA1tC,IAWAr6B,EAAAtB,KAAA0jD,GAAA1jD,KAAAopE,cAAAlgB,EAAArnD,KAAAooD,IAAAoW,GACA9+D,EAAAvB,KAAA4jD,GAAA5jD,KAAAopE,eAAAppE,KAAAmpE,QAAAlgB,EAAAjpD,KAAAkpE,QAAAhgB,EAAAmgB,IAGAxiD,EAAAvlB,IACAulB,EAAAtlB,IACAslB,GAwCA64B,QArCA,SAAA74B,GACA,IAAAq5C,EACAf,EAAAC,EACApE,EACAxQ,EAAAC,EA0BA,OAtBA5jC,EAAAvlB,GAAAulB,EAAAvlB,EAAAtB,KAAA0jD,IAAA1jD,KAAAqiD,EACAx7B,EAAAtlB,GAAAslB,EAAAtlB,EAAAvB,KAAA4jD,IAAA5jD,KAAAqiD,EAEAx7B,EAAAvlB,GAAAtB,KAAA8jD,GACAj9B,EAAAtlB,GAAAvB,KAAA8jD,IAEAoc,EAAAr+D,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,KACAy5D,EAAAn5D,KAAAwwD,MAAA6N,EAAAlgE,KAAA2+D,IACAQ,EAAAt9D,KAAAooD,IAAA+Q,GACAoE,EAAAv9D,KAAA0oD,IAAAyQ,GAEAvQ,EAAA4d,GAAAjJ,EAAAp/D,KAAAkpE,QAAAriD,EAAAtlB,EAAA49D,EAAAn/D,KAAAmpE,QAAAjJ,GACA1V,EAAA3oD,KAAAwwD,MAAAxrC,EAAAvlB,EAAA69D,EAAAe,EAAAlgE,KAAAmpE,QAAA/J,EAAAv4C,EAAAtlB,EAAAvB,KAAAkpE,QAAA/J,GACA3U,EAAAnB,EAAArpD,KAAAijD,MAAAuH,KAGAC,EAAAzqD,KAAA4+D,MACApU,EAAA,GAGA3jC,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAQA+I,OALA,SC/FA05C,GAAA,SAAAtgB,EAAA2e,GACA,IAAAlM,EAAA,KAAAzS,MAAA,EAAAA,GAAAnnD,KAAAqmD,KAAA,EAAAc,IAAA,EAAAA,IACA,GAAAnnD,KAAAynD,IAAAznD,KAAAynD,IAAAqe,GAAAlM,GAAA,KACA,OAAAkM,EAAA,GACA,EAAA3nB,EAGAA,EASA,IALA,IACA8J,EACA8Q,EACAC,EACA1R,EAJAK,EAAA3nD,KAAA85D,KAAA,GAAAgM,GAKApkE,EAAA,EAAiBA,EAAA,GAAQA,IAMzB,GALAq3D,EAAA/4D,KAAAooD,IAAAT,GACAqR,EAAAh5D,KAAA0oD,IAAAf,GACAL,EAAAH,EAAA4R,EAEApR,GADAM,EAAAjoD,KAAA6nD,IAAA,EAAAP,IAAA,MAAA0R,IAAA8M,GAAA,EAAA3e,KAAA4R,GAAA,EAAAzR,KAAA,GAAAH,EAAAnnD,KAAAqmD,KAAA,EAAAiB,IAAA,EAAAA,KAEAtnD,KAAAynD,IAAAQ,IAAA,MACA,OAAAN,EAKA,OAAA8W,KCiCA,IACAiJ,IACAnrB,KAtDA,WAEAp+C,KAAAunD,SACAvnD,KAAA8jD,GAAAiF,EAAA/oD,KAAAsqD,EAAAzoD,KAAAooD,IAAAjqD,KAAA+iD,QAAAlhD,KAAA0oD,IAAAvqD,KAAA+iD,WAoDAtD,QA9CA,SAAA54B,GACA,IAEAvlB,EAAAC,EAFAipD,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAIA8+D,EAAAhX,EAAAmB,EAAAxqD,KAAAijD,OACA,GAAAjjD,KAAAunD,OACAjmD,EAAAtB,KAAA0jD,GAAA1jD,KAAAqiD,EAAAge,EAAAx+D,KAAA0oD,IAAAvqD,KAAA+iD,QACAxhD,EAAAvB,KAAA4jD,GAAA5jD,KAAAqiD,EAAAxgD,KAAAooD,IAAAQ,GAAA5oD,KAAA0oD,IAAAvqD,KAAA+iD,YAEA,CACA,IAAA+lB,EAAA7C,GAAAjmE,KAAAsqD,EAAAzoD,KAAAooD,IAAAQ,IACAnpD,EAAAtB,KAAA0jD,GAAA1jD,KAAAqiD,EAAAriD,KAAA8jD,GAAAuc,EACA9+D,EAAAvB,KAAA4jD,GAAA5jD,KAAAqiD,EAAAymB,EAAA,GAAA9oE,KAAA8jD,GAKA,OAFAj9B,EAAAvlB,IACAulB,EAAAtlB,IACAslB,GA4BA64B,QAvBA,SAAA74B,GAGA,IAAA2jC,EAAAC,EAaA,OAfA5jC,EAAAvlB,GAAAtB,KAAA0jD,GACA78B,EAAAtlB,GAAAvB,KAAA4jD,GAGA5jD,KAAAunD,QACAiD,EAAAnB,EAAArpD,KAAAijD,MAAAp8B,EAAAvlB,EAAAtB,KAAAqiD,EAAAxgD,KAAA0oD,IAAAvqD,KAAA+iD,SACA0H,EAAA5oD,KAAA85D,KAAA90C,EAAAtlB,EAAAvB,KAAAqiD,EAAAxgD,KAAA0oD,IAAAvqD,KAAA+iD,WAGA0H,EAAA6e,GAAAtpE,KAAAsqD,EAAA,EAAAzjC,EAAAtlB,EAAAvB,KAAA8jD,GAAA9jD,KAAAqiD,GACAmI,EAAAnB,EAAArpD,KAAAijD,MAAAp8B,EAAAvlB,GAAAtB,KAAAqiD,EAAAriD,KAAA8jD,MAGAj9B,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAQA+I,OALA,QCtBA,IACA45C,IACAprB,KAxCA,WAEAp+C,KAAA0jD,GAAA1jD,KAAA0jD,IAAA,EACA1jD,KAAA4jD,GAAA5jD,KAAA4jD,IAAA,EACA5jD,KAAA0iD,KAAA1iD,KAAA0iD,MAAA,EACA1iD,KAAAijD,MAAAjjD,KAAAijD,OAAA,EACAjjD,KAAA+iD,OAAA/iD,KAAA+iD,QAAA,EACA/iD,KAAAstC,MAAAttC,KAAAstC,OAAA,wCAEAttC,KAAA2+D,GAAA98D,KAAA0oD,IAAAvqD,KAAA+iD,SAgCAtD,QA3BA,SAAA54B,GAEA,IAAA2jC,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAEA8+D,EAAAhX,EAAAmB,EAAAxqD,KAAAijD,OACAwmB,EAAAtE,GAAA1a,EAAAzqD,KAAA0iD,MAGA,OAFA77B,EAAAvlB,EAAAtB,KAAA0jD,GAAA1jD,KAAAqiD,EAAAge,EAAArgE,KAAA2+D,GACA93C,EAAAtlB,EAAAvB,KAAA4jD,GAAA5jD,KAAAqiD,EAAAonB,EACA5iD,GAmBA64B,QAdA,SAAA74B,GAEA,IAAAvlB,EAAAulB,EAAAvlB,EACAC,EAAAslB,EAAAtlB,EAIA,OAFAslB,EAAAvlB,EAAA+nD,EAAArpD,KAAAijD,OAAA3hD,EAAAtB,KAAA0jD,KAAA1jD,KAAAqiD,EAAAriD,KAAA2+D,KACA93C,EAAAtlB,EAAA4jE,GAAAnlE,KAAA0iD,MAAAnhD,EAAAvB,KAAA4jD,IAAA5jD,KAAA,GACA6mB,GAQA+I,OALA,oDC/BA85C,GAAA,GAsHA,IACAC,IACAvrB,KAtHA,WAGAp+C,KAAAy7D,KAAAz7D,KAAA47B,EAAA57B,KAAAqiD,EACAriD,KAAAqqD,GAAA,EAAAxoD,KAAA6nD,IAAA1pD,KAAAy7D,KAAA,GACAz7D,KAAAsqD,EAAAzoD,KAAAC,KAAA9B,KAAAqqD,IACArqD,KAAA4kE,GAAAE,GAAA9kE,KAAAqqD,IACArqD,KAAAs4D,GAAAyM,GAAA/kE,KAAAqqD,IACArqD,KAAA0jE,GAAAsB,GAAAhlE,KAAAqqD,IACArqD,KAAA6kE,GAAAI,GAAAjlE,KAAAqqD,IACArqD,KAAA06D,IAAA16D,KAAAqiD,EAAAsiB,GAAA3kE,KAAA4kE,GAAA5kE,KAAAs4D,GAAAt4D,KAAA0jE,GAAA1jE,KAAA6kE,GAAA7kE,KAAA0iD,OA6GAjD,QAxGA,SAAA54B,GACA,IAEAvlB,EAAAC,EAAA8/D,EAFA7W,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAEA8+D,EAAAhX,EAAAmB,EAAAxqD,KAAAijD,OAEA,GADAoe,EAAAhB,EAAAx+D,KAAAooD,IAAAQ,GACAzqD,KAAAunD,OACA1lD,KAAAynD,IAAAmB,IAAArK,GACA9+C,EAAAtB,KAAAqiD,EAAAge,EACA9+D,GAAA,EAAAvB,KAAAqiD,EAAAriD,KAAA0iD,OAGAphD,EAAAtB,KAAAqiD,EAAAxgD,KAAAooD,IAAAoX,GAAAx/D,KAAA8nD,IAAAc,GACAlpD,EAAAvB,KAAAqiD,GAAA8iB,GAAA1a,EAAAzqD,KAAA0iD,OAAA,EAAA7gD,KAAA0oD,IAAA8W,IAAAx/D,KAAA8nD,IAAAc,UAIA,GAAA5oD,KAAAynD,IAAAmB,IAAArK,EACA9+C,EAAAtB,KAAAqiD,EAAAge,EACA9+D,GAAA,EAAAvB,KAAA06D,QAEA,CACA,IAAA6K,EAAAL,GAAAllE,KAAAqiD,EAAAriD,KAAAsqD,EAAAzoD,KAAAooD,IAAAQ,IAAA5oD,KAAA8nD,IAAAc,GACAnpD,EAAAikE,EAAA1jE,KAAAooD,IAAAoX,GACA9/D,EAAAvB,KAAAqiD,EAAAsiB,GAAA3kE,KAAA4kE,GAAA5kE,KAAAs4D,GAAAt4D,KAAA0jE,GAAA1jE,KAAA6kE,GAAApa,GAAAzqD,KAAA06D,IAAA6K,GAAA,EAAA1jE,KAAA0oD,IAAA8W,IAMA,OAFAx6C,EAAAvlB,IAAAtB,KAAA0jD,GACA78B,EAAAtlB,IAAAvB,KAAA4jD,GACA/8B,GA2EA64B,QAtEA,SAAA74B,GACA,IAAA2jC,EAAAC,EAAAnpD,EAAAC,EAAAgC,EACAu3D,EAAAgG,EACAtX,EAAAM,EAIA,GAHAxoD,EAAAulB,EAAAvlB,EAAAtB,KAAA0jD,GACAniD,EAAAslB,EAAAtlB,EAAAvB,KAAA4jD,GAEA5jD,KAAAunD,OACA,GAAA1lD,KAAAynD,IAAA/nD,EAAAvB,KAAAqiD,EAAAriD,KAAA0iD,OAAAtC,EACAoK,EAAAnB,EAAA/nD,EAAAtB,KAAAqiD,EAAAriD,KAAAijD,OACAwH,EAAA,MAEA,CAIA,IAAAmf,EACA,IAJA9O,EAAA96D,KAAA0iD,KAAAnhD,EAAAvB,KAAAqiD,EACAye,EAAAx/D,IAAAtB,KAAAqiD,EAAAriD,KAAAqiD,EAAAyY,IACAtR,EAAAsR,EAEAv3D,EAAAmmE,GAAwBnmE,IAAGA,EAI3B,GADAimD,GADAM,GAAA,GAAAgR,GAAAtR,GADAogB,EAAA/nE,KAAA8nD,IAAAH,IACA,GAAAA,EAAA,IAAAA,IAAAsX,GAAA8I,KAAApgB,EAAAsR,GAAA8O,EAAA,GAEA/nE,KAAAynD,IAAAQ,IAAA1J,EAAA,CACAqK,EAAAjB,EACA,MAGAgB,EAAAnB,EAAArpD,KAAAijD,MAAAphD,KAAA85D,KAAAr6D,EAAAO,KAAA8nD,IAAAH,GAAAxpD,KAAAqiD,GAAAxgD,KAAAooD,IAAAQ,SAIA,GAAA5oD,KAAAynD,IAAA/nD,EAAAvB,KAAA06D,MAAAta,EACAqK,EAAA,EACAD,EAAAnB,EAAArpD,KAAAijD,MAAA3hD,EAAAtB,KAAAqiD,OAEA,CAKA,IAAAojB,EAAAoE,EAAAC,EAAAC,EACA5gB,EACA,IALA2R,GAAA96D,KAAA06D,IAAAn5D,GAAAvB,KAAAqiD,EACAye,EAAAx/D,IAAAtB,KAAAqiD,EAAAriD,KAAAqiD,EAAAyY,IACAtR,EAAAsR,EAGAv3D,EAAAmmE,GAAwBnmE,IAAGA,EAQ3B,GAPA4lD,EAAAnpD,KAAAsqD,EAAAzoD,KAAAooD,IAAAT,GACAic,EAAA5jE,KAAAC,KAAA,EAAAqnD,KAAAtnD,KAAA8nD,IAAAH,GACAqgB,EAAA7pE,KAAAqiD,EAAAsiB,GAAA3kE,KAAA4kE,GAAA5kE,KAAAs4D,GAAAt4D,KAAA0jE,GAAA1jE,KAAA6kE,GAAArb,GACAsgB,EAAA9pE,KAAA4kE,GAAA,EAAA5kE,KAAAs4D,GAAAz2D,KAAA0oD,IAAA,EAAAf,GAAA,EAAAxpD,KAAA0jE,GAAA7hE,KAAA0oD,IAAA,EAAAf,GAAA,EAAAxpD,KAAA6kE,GAAAhjE,KAAA0oD,IAAA,EAAAf,GAGAA,GADAM,GAAAgR,GAAA2K,GADAsE,EAAAF,EAAA7pE,KAAAqiD,GACA,GAAA0nB,EAAA,GAAAtE,GAAAsE,IAAAjJ,KAAA9gE,KAAAqqD,GAAAxoD,KAAAooD,IAAA,EAAAT,IAAAugB,IAAAjJ,EAAA,EAAAhG,EAAAiP,IAAA,EAAAtE,IAAA3K,EAAAiP,IAAAtE,EAAAqE,EAAA,EAAAjoE,KAAAooD,IAAA,EAAAT,IAAAsgB,GAEAjoE,KAAAynD,IAAAQ,IAAA1J,EAAA,CACAqK,EAAAjB,EACA,MAKAic,EAAA5jE,KAAAC,KAAA,EAAA9B,KAAAqqD,GAAAxoD,KAAA6nD,IAAA7nD,KAAAooD,IAAAQ,GAAA,IAAA5oD,KAAA8nD,IAAAc,GACAD,EAAAnB,EAAArpD,KAAAijD,MAAAphD,KAAA85D,KAAAr6D,EAAAmkE,EAAAzlE,KAAAqiD,GAAAxgD,KAAAooD,IAAAQ,IAMA,OAFA5jC,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAQA+I,OALA,qBC2FA,IACAo6C,IACA5rB,KA3MA,WACAp+C,KAAA62D,KACA72D,KAAA62D,EAAA,eACA72D,KAAA62D,EAAA,gBACA72D,KAAA62D,EAAA,cACA72D,KAAA62D,EAAA,cACA72D,KAAA62D,EAAA,YACA72D,KAAA62D,EAAA,aACA72D,KAAA62D,EAAA,YACA72D,KAAA62D,EAAA,YACA72D,KAAA62D,EAAA,SACA72D,KAAA62D,EAAA,WAEA72D,KAAAiqE,QACAjqE,KAAAkqE,QACAlqE,KAAAiqE,KAAA,eACAjqE,KAAAkqE,KAAA,KACAlqE,KAAAiqE,KAAA,cACAjqE,KAAAkqE,KAAA,cACAlqE,KAAAiqE,KAAA,eACAjqE,KAAAkqE,KAAA,aACAlqE,KAAAiqE,KAAA,cACAjqE,KAAAkqE,KAAA,aACAlqE,KAAAiqE,KAAA,cACAjqE,KAAAkqE,KAAA,cACAlqE,KAAAiqE,KAAA,aACAjqE,KAAAkqE,KAAA,cAEAlqE,KAAAmqE,QACAnqE,KAAAoqE,QACApqE,KAAAmqE,KAAA,gBACAnqE,KAAAoqE,KAAA,KACApqE,KAAAmqE,KAAA,eACAnqE,KAAAoqE,KAAA,eACApqE,KAAAmqE,KAAA,cACAnqE,KAAAoqE,KAAA,eACApqE,KAAAmqE,KAAA,cACAnqE,KAAAoqE,KAAA,aACApqE,KAAAmqE,KAAA,cACAnqE,KAAAoqE,KAAA,cACApqE,KAAAmqE,KAAA,aACAnqE,KAAAoqE,KAAA,aAEApqE,KAAAk4D,KACAl4D,KAAAk4D,EAAA,gBACAl4D,KAAAk4D,EAAA,eACAl4D,KAAAk4D,EAAA,cACAl4D,KAAAk4D,EAAA,aACAl4D,KAAAk4D,EAAA,aACAl4D,KAAAk4D,EAAA,WACAl4D,KAAAk4D,EAAA,SACAl4D,KAAAk4D,EAAA,UACAl4D,KAAAk4D,EAAA,WAwJAzY,QAjJA,SAAA54B,GACA,IAAAphB,EACA+kD,EAAA3jC,EAAAvlB,EAGA+oE,EAFAxjD,EAAAtlB,EAEAvB,KAAA0iD,KACAiY,EAAAnQ,EAAAxqD,KAAAijD,MAIAqnB,EAAAD,EAAAtqB,EAAA,KACAwqB,EAAA5P,EACA6P,EAAA,EAEAC,EAAA,EACA,IAAAhlE,EAAA,EAAaA,GAAA,GAASA,IACtB+kE,GAAAF,EACAG,GAAAzqE,KAAA62D,EAAApxD,GAAA+kE,EAIA,IAOAE,EAPAC,EAAAF,EACAG,EAAAL,EAGAM,EAAA,EACAC,EAAA,EAIAC,EAAA,EACAC,EAAA,EACA,IAAAvlE,EAAA,EAAaA,GAAA,EAAQA,IAErBilE,EAAAI,EAAAH,EAAAE,EAAAD,EACAC,EAFAA,EAAAF,EAAAG,EAAAF,EAGAE,EAAAJ,EACAK,IAAA/qE,KAAAiqE,KAAAxkE,GAAAolE,EAAA7qE,KAAAkqE,KAAAzkE,GAAAqlE,EACAE,IAAAhrE,KAAAkqE,KAAAzkE,GAAAolE,EAAA7qE,KAAAiqE,KAAAxkE,GAAAqlE,EAOA,OAHAjkD,EAAAvlB,EAAA0pE,EAAAhrE,KAAAqiD,EAAAriD,KAAA0jD,GACA78B,EAAAtlB,EAAAwpE,EAAA/qE,KAAAqiD,EAAAriD,KAAA4jD,GAEA/8B,GAqGA64B,QA/FA,SAAA74B,GACA,IAAAphB,EAeAwlE,EAdA3pE,EAAAulB,EAAAvlB,EACAC,EAAAslB,EAAAtlB,EAEA2pE,EAAA5pE,EAAAtB,KAAA0jD,GAIAqnB,GAHAxpE,EAAAvB,KAAA4jD,IAGA5jD,KAAAqiD,EACA2oB,EAAAE,EAAAlrE,KAAAqiD,EAGA8oB,EAAA,EACAC,EAAA,EAIAT,EAAA,EACAC,EAAA,EACA,IAAAnlE,EAAA,EAAaA,GAAA,EAAQA,IAErBwlE,EAAAG,EAAAL,EAAAI,EAAAH,EACAG,EAFAA,EAAAJ,EAAAK,EAAAJ,EAGAI,EAAAH,EACAN,IAAA3qE,KAAAmqE,KAAA1kE,GAAA0lE,EAAAnrE,KAAAoqE,KAAA3kE,GAAA2lE,EACAR,IAAA5qE,KAAAoqE,KAAA3kE,GAAA0lE,EAAAnrE,KAAAmqE,KAAA1kE,GAAA2lE,EAOA,QAAA7nE,EAAA,EAAiBA,EAAAvD,KAAAqrE,WAAqB9nE,IAAA,CACtC,IAGAmnE,EAHAG,EAAAF,EACAG,EAAAF,EAIAU,EAAAP,EACAQ,EAAAP,EACA,IAAAvlE,EAAA,EAAeA,GAAA,EAAQA,IAEvBilE,EAAAI,EAAAH,EAAAE,EAAAD,EACAC,EAFAA,EAAAF,EAAAG,EAAAF,EAGAE,EAAAJ,EACAY,IAAA7lE,EAAA,IAAAzF,KAAAiqE,KAAAxkE,GAAAolE,EAAA7qE,KAAAkqE,KAAAzkE,GAAAqlE,GACAS,IAAA9lE,EAAA,IAAAzF,KAAAkqE,KAAAzkE,GAAAolE,EAAA7qE,KAAAiqE,KAAAxkE,GAAAqlE,GAGAD,EAAA,EACAC,EAAA,EACA,IAAAU,EAAAxrE,KAAAiqE,KAAA,GACAwB,EAAAzrE,KAAAkqE,KAAA,GACA,IAAAzkE,EAAA,EAAeA,GAAA,EAAQA,IAEvBilE,EAAAI,EAAAH,EAAAE,EAAAD,EACAC,EAFAA,EAAAF,EAAAG,EAAAF,EAGAE,EAAAJ,EACAc,GAAA/lE,GAAAzF,KAAAiqE,KAAAxkE,GAAAolE,EAAA7qE,KAAAkqE,KAAAzkE,GAAAqlE,GACAW,GAAAhmE,GAAAzF,KAAAkqE,KAAAzkE,GAAAolE,EAAA7qE,KAAAiqE,KAAAxkE,GAAAqlE,GAIA,IAAAY,EAAAF,IAAAC,IACAd,GAAAW,EAAAE,EAAAD,EAAAE,GAAAC,EACAd,GAAAW,EAAAC,EAAAF,EAAAG,GAAAC,EAIA,IAAAjB,EAAAE,EACAJ,EAAAK,EACAe,EAAA,EAEArB,EAAA,EACA,IAAA7kE,EAAA,EAAaA,GAAA,EAAQA,IACrBkmE,GAAAlB,EACAH,GAAAtqE,KAAAk4D,EAAAzyD,GAAAkmE,EAKA,IAAAlhB,EAAAzqD,KAAA0iD,KAAA4nB,EAAAvqB,EAAA,IACAyK,EAAAxqD,KAAAijD,MAAAsnB,EAKA,OAHA1jD,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EAEA5jC,GAQA+I,OALA,gCC9KA,IACAg8C,IACAxtB,KApCA,aAqCAqB,QA/BA,SAAA54B,GACA,IAAA2jC,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAGA8+D,EAAAhX,EAAAmB,EAAAxqD,KAAAijD,OACA3hD,EAAAtB,KAAA0jD,GAAA1jD,KAAAqiD,EAAAge,EACA9+D,EAAAvB,KAAA4jD,GAAA5jD,KAAAqiD,EAAAxgD,KAAAqmD,IAAArmD,KAAA8nD,IAAA9nD,KAAA00C,GAAA,EAAAkU,EAAA,WAIA,OAFA5jC,EAAAvlB,IACAulB,EAAAtlB,IACAslB,GAqBA64B,QAhBA,SAAA74B,GACAA,EAAAvlB,GAAAtB,KAAA0jD,GACA78B,EAAAtlB,GAAAvB,KAAA4jD,GAEA,IAAA4G,EAAAnB,EAAArpD,KAAAijD,MAAAp8B,EAAAvlB,EAAAtB,KAAAqiD,GACAoI,EAAA,KAAA5oD,KAAAmoD,KAAAnoD,KAAA6oD,IAAA,GAAA7jC,EAAAtlB,EAAAvB,KAAAqiD,IAAAxgD,KAAA00C,GAAA,GAIA,OAFA1vB,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAQA+I,OALA,8BC1CAi8C,GAAA,GAyGA,IACAC,IACA1tB,KAnGA,WAKAp+C,KAAAunD,QAIAvnD,KAAAyF,EAAA,EACAzF,KAAA9C,EAAA,EACA8C,KAAAqqD,GAAA,EACArqD,KAAA+rE,IAAAlqE,KAAAC,MAAA9B,KAAA9C,EAAA,GAAA8C,KAAAyF,GACAzF,KAAAgsE,IAAAhsE,KAAA+rE,KAAA/rE,KAAA9C,EAAA,IAPA8C,KAAAm6D,GAAAD,GAAAl6D,KAAAqqD,KA8FA5K,QAhFA,SAAA54B,GACA,IAAAvlB,EAAAC,EACAipD,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAKA,GAFAipD,EAAAnB,EAAAmB,EAAAxqD,KAAAijD,OAEAjjD,KAAAunD,OAAA,CACA,GAAAvnD,KAAA9C,EAKA,IADA,IAAA6mD,EAAA/jD,KAAAyF,EAAA5D,KAAAooD,IAAAQ,GACAlnD,EAAAsoE,GAA4BtoE,IAAGA,EAAA,CAC/B,IAAA0oE,GAAAjsE,KAAA9C,EAAAutD,EAAA5oD,KAAAooD,IAAAQ,GAAA1G,IAAA/jD,KAAA9C,EAAA2E,KAAA0oD,IAAAE,IAEA,GADAA,GAAAwhB,EACApqE,KAAAynD,IAAA2iB,GAAA7rB,EACA,WARAqK,EAAA,IAAAzqD,KAAAyF,EAAA5D,KAAA85D,KAAA37D,KAAAyF,EAAA5D,KAAAooD,IAAAQ,MAYAnpD,EAAAtB,KAAAqiD,EAAAriD,KAAAgsE,IAAAxhB,GAAAxqD,KAAA9C,EAAA2E,KAAA0oD,IAAAE,IACAlpD,EAAAvB,KAAAqiD,EAAAriD,KAAA+rE,IAAAthB,MAGA,CAEA,IAAA5tD,EAAAgF,KAAAooD,IAAAQ,GACAuQ,EAAAn5D,KAAA0oD,IAAAE,GACAlpD,EAAAvB,KAAAqiD,EAAA+X,GAAA3P,EAAA5tD,EAAAm+D,EAAAh7D,KAAAm6D,IACA74D,EAAAtB,KAAAqiD,EAAAmI,EAAAwQ,EAAAn5D,KAAAC,KAAA,EAAA9B,KAAAqqD,GAAAxtD,KAKA,OAFAgqB,EAAAvlB,IACAulB,EAAAtlB,IACAslB,GA6CA64B,QA1CA,SAAA74B,GACA,IAAA4jC,EAAAgR,EAAAjR,EAAA3tD,EAkCA,OAhCAgqB,EAAAvlB,GAAAtB,KAAA0jD,GACA8G,EAAA3jC,EAAAvlB,EAAAtB,KAAAqiD,EACAx7B,EAAAtlB,GAAAvB,KAAA4jD,GACA6G,EAAA5jC,EAAAtlB,EAAAvB,KAAAqiD,EAEAriD,KAAAunD,QACAkD,GAAAzqD,KAAA+rE,IACAvhB,GAAAxqD,KAAAgsE,KAAAhsE,KAAA9C,EAAA2E,KAAA0oD,IAAAE,IACAzqD,KAAA9C,EACAutD,EAAA4d,IAAAroE,KAAA9C,EAAAutD,EAAA5oD,KAAAooD,IAAAQ,IAAAzqD,KAAAyF,GAEA,IAAAzF,KAAAyF,IACAglD,EAAA4d,GAAAxmE,KAAAooD,IAAAQ,GAAAzqD,KAAAyF,IAEA+kD,EAAAnB,EAAAmB,EAAAxqD,KAAAijD,OACAwH,EAAA0a,GAAA1a,KAGAA,EAAA8P,GAAA1zC,EAAAtlB,EAAAvB,KAAAqiD,EAAAriD,KAAAqqD,GAAArqD,KAAAm6D,KACAt9D,EAAAgF,KAAAynD,IAAAmB,IACAzK,GACAnjD,EAAAgF,KAAAooD,IAAAQ,GACAgR,EAAAz7D,KAAAijD,MAAAp8B,EAAAvlB,EAAAO,KAAAC,KAAA,EAAA9B,KAAAqqD,GAAAxtD,MAAAmD,KAAAqiD,EAAAxgD,KAAA0oD,IAAAE,IAEAD,EAAAnB,EAAAoS,IAEA5+D,EAAAujD,EAAAJ,IACAwK,EAAAxqD,KAAAijD,QAGAp8B,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAQA+I,OALA,sBChCA,IACAs8C,IACA9tB,KA7EA,aA8EAqB,QA1EA,SAAA54B,GAaA,IATA,IAAA2jC,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAEAo5D,EAAAtR,EAAAmB,EAAAxqD,KAAAijD,OACAogB,EAAA5Y,EACAtB,EAAAtnD,KAAA00C,GAAA10C,KAAAooD,IAAAQ,KAIA,CACA,IAAA0hB,IAAA9I,EAAAxhE,KAAAooD,IAAAoZ,GAAAla,IAAA,EAAAtnD,KAAA0oD,IAAA8Y,IAEA,GADAA,GAAA8I,EACAtqE,KAAAynD,IAAA6iB,GAAA/rB,EACA,MAGAijB,GAAA,EAKAxhE,KAAA00C,GAAA,EAAA10C,KAAAynD,IAAAmB,GAAArK,IACAua,EAAA,GAEA,IAAAr5D,EAAA,cAAAtB,KAAAqiD,EAAAsY,EAAA94D,KAAA0oD,IAAA8Y,GAAArjE,KAAA0jD,GACAniD,EAAA,gBAAAvB,KAAAqiD,EAAAxgD,KAAAooD,IAAAoZ,GAAArjE,KAAA4jD,GAIA,OAFA/8B,EAAAvlB,IACAulB,EAAAtlB,IACAslB,GA0CA64B,QAvCA,SAAA74B,GACA,IAAAw8C,EACA7I,EAIA3zC,EAAAvlB,GAAAtB,KAAA0jD,GACA78B,EAAAtlB,GAAAvB,KAAA4jD,GACA4W,EAAA3zC,EAAAtlB,GAAA,gBAAAvB,KAAAqiD,GAKAxgD,KAAAynD,IAAAkR,GAAA,gBACAA,EAAA,eAEA6I,EAAAxhE,KAAA85D,KAAAnB,GACA,IAAAhQ,EAAAnB,EAAArpD,KAAAijD,MAAAp8B,EAAAvlB,GAAA,cAAAtB,KAAAqiD,EAAAxgD,KAAA0oD,IAAA8Y,KACA7Y,GAAA3oD,KAAA00C,KACAiU,GAAA3oD,KAAA00C,IAEAiU,EAAA3oD,KAAA00C,KACAiU,EAAA3oD,KAAA00C,IAEAikB,GAAA,EAAA6I,EAAAxhE,KAAAooD,IAAA,EAAAoZ,IAAAxhE,KAAA00C,GACA10C,KAAAynD,IAAAkR,GAAA,IACAA,EAAA,GAEA,IAAA/P,EAAA5oD,KAAA85D,KAAAnB,GAIA,OAFA3zC,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAQA+I,OALA,qBCkCA,IACAw8C,IACAhuB,KArGA,WAKAv8C,KAAAynD,IAAAtpD,KAAA4iD,KAAA5iD,KAAA8iD,MAAA1C,IAGApgD,KAAA8iD,KAAA9iD,KAAA8iD,MAAA9iD,KAAA4iD,KACA5iD,KAAAy7D,KAAAz7D,KAAA47B,EAAA57B,KAAAqiD,EACAriD,KAAAqqD,GAAA,EAAAxoD,KAAA6nD,IAAA1pD,KAAAy7D,KAAA,GACAz7D,KAAAsqD,EAAAzoD,KAAAC,KAAA9B,KAAAqqD,IACArqD,KAAA4kE,GAAAE,GAAA9kE,KAAAqqD,IACArqD,KAAAs4D,GAAAyM,GAAA/kE,KAAAqqD,IACArqD,KAAA0jE,GAAAsB,GAAAhlE,KAAAqqD,IACArqD,KAAA6kE,GAAAI,GAAAjlE,KAAAqqD,IAEArqD,KAAAipD,OAAApnD,KAAAooD,IAAAjqD,KAAA4iD,MACA5iD,KAAAkpD,OAAArnD,KAAA0oD,IAAAvqD,KAAA4iD,MAEA5iD,KAAA2/D,IAAA5W,EAAA/oD,KAAAsqD,EAAAtqD,KAAAipD,OAAAjpD,KAAAkpD,QACAlpD,KAAA2lE,IAAAhB,GAAA3kE,KAAA4kE,GAAA5kE,KAAAs4D,GAAAt4D,KAAA0jE,GAAA1jE,KAAA6kE,GAAA7kE,KAAA4iD,MAEA/gD,KAAAynD,IAAAtpD,KAAA4iD,KAAA5iD,KAAA8iD,MAAA1C,EACApgD,KAAAymB,GAAAzmB,KAAAipD,QAGAjpD,KAAAipD,OAAApnD,KAAAooD,IAAAjqD,KAAA8iD,MACA9iD,KAAAkpD,OAAArnD,KAAA0oD,IAAAvqD,KAAA8iD,MACA9iD,KAAAgjE,IAAAja,EAAA/oD,KAAAsqD,EAAAtqD,KAAAipD,OAAAjpD,KAAAkpD,QACAlpD,KAAAqsE,IAAA1H,GAAA3kE,KAAA4kE,GAAA5kE,KAAAs4D,GAAAt4D,KAAA0jE,GAAA1jE,KAAA6kE,GAAA7kE,KAAA8iD,MACA9iD,KAAAymB,IAAAzmB,KAAA2/D,IAAA3/D,KAAAgjE,MAAAhjE,KAAAqsE,IAAArsE,KAAA2lE,MAEA3lE,KAAA27B,EAAA37B,KAAA2lE,IAAA3lE,KAAA2/D,IAAA3/D,KAAAymB,GACAzmB,KAAA06D,IAAAiK,GAAA3kE,KAAA4kE,GAAA5kE,KAAAs4D,GAAAt4D,KAAA0jE,GAAA1jE,KAAA6kE,GAAA7kE,KAAA0iD,MACA1iD,KAAAkgE,GAAAlgE,KAAAqiD,GAAAriD,KAAA27B,EAAA37B,KAAA06D,OAmEAjb,QA9DA,SAAA54B,GACA,IAEAu8C,EAFA5Y,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAKA,GAAAvB,KAAAunD,OACA6b,EAAApjE,KAAAqiD,GAAAriD,KAAA27B,EAAA8uB,OAEA,CACA,IAAA0Q,EAAAwJ,GAAA3kE,KAAA4kE,GAAA5kE,KAAAs4D,GAAAt4D,KAAA0jE,GAAA1jE,KAAA6kE,GAAApa,GACA2Y,EAAApjE,KAAAqiD,GAAAriD,KAAA27B,EAAAw/B,GAEA,IAAAkI,EAAArjE,KAAAymB,GAAA4iC,EAAAmB,EAAAxqD,KAAAijD,OACA3hD,EAAAtB,KAAA0jD,GAAA0f,EAAAvhE,KAAAooD,IAAAoZ,GACA9hE,EAAAvB,KAAA4jD,GAAA5jD,KAAAkgE,GAAAkD,EAAAvhE,KAAA0oD,IAAA8Y,GAGA,OAFAx8C,EAAAvlB,IACAulB,EAAAtlB,IACAslB,GA4CA64B,QAvCA,SAAA74B,GAGA,IAAAsiC,EAAAia,EAAA3Y,EAAAD,EAFA3jC,EAAAvlB,GAAAtB,KAAA0jD,GACA78B,EAAAtlB,EAAAvB,KAAAkgE,GAAAr5C,EAAAtlB,EAAAvB,KAAA4jD,GAEA5jD,KAAAymB,IAAA,GACA28C,EAAAvhE,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,GACA4nD,EAAA,IAGAia,GAAAvhE,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,GACA4nD,GAAA,GAEA,IAAAka,EAAA,EAKA,GAJA,IAAAD,IACAC,EAAAxhE,KAAAwwD,MAAAlJ,EAAAtiC,EAAAvlB,EAAA6nD,EAAAtiC,EAAAtlB,IAGAvB,KAAAunD,OAKA,OAJAiD,EAAAnB,EAAArpD,KAAAijD,MAAAogB,EAAArjE,KAAAymB,IACAgkC,EAAA0a,GAAAnlE,KAAA27B,EAAAynC,EAAApjE,KAAAqiD,GACAx7B,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,EAGA,IAAAs0C,EAAAn7D,KAAA27B,EAAAynC,EAAApjE,KAAAqiD,EAKA,OAJAoI,EAAA2a,GAAAjK,EAAAn7D,KAAA4kE,GAAA5kE,KAAAs4D,GAAAt4D,KAAA0jE,GAAA1jE,KAAA6kE,IACAra,EAAAnB,EAAArpD,KAAAijD,MAAAogB,EAAArjE,KAAAymB,IACAI,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAUA+I,OALA,6BCYA,IACA08C,IACAluB,KApHA,WAEAp+C,KAAAusE,EAAAvsE,KAAAqiD,GAmHA5C,QAhHA,SAAA54B,GAEA,IAMAvlB,EAAAC,EANAipD,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAIA8+D,EAAAhX,EAAAmB,EAAAxqD,KAAAijD,OAGAphD,KAAAynD,IAAAmB,IAAArK,IACA9+C,EAAAtB,KAAA0jD,GAAA1jD,KAAAusE,EAAAlM,EACA9+D,EAAAvB,KAAA4jD,IAEA,IAAAyf,EAAAgF,GAAA,EAAAxmE,KAAAynD,IAAAmB,EAAA5oD,KAAA00C,MACA10C,KAAAynD,IAAA+W,IAAAjgB,GAAAv+C,KAAAynD,IAAAznD,KAAAynD,IAAAmB,GAAAzK,IAAAI,KACA9+C,EAAAtB,KAAA0jD,GAEAniD,EADAkpD,GAAA,EACAzqD,KAAA4jD,GAAA/hD,KAAA00C,GAAAv2C,KAAAusE,EAAA1qE,KAAA8nD,IAAA,GAAA0Z,GAGArjE,KAAA4jD,GAAA/hD,KAAA00C,GAAAv2C,KAAAusE,GAAA1qE,KAAA8nD,IAAA,GAAA0Z,IAIA,IAAAvI,EAAA,GAAAj5D,KAAAynD,IAAAznD,KAAA00C,GAAA8pB,IAAAx+D,KAAA00C,IACAivB,EAAA1K,IACA0R,EAAA3qE,KAAAooD,IAAAoZ,GACAoJ,EAAA5qE,KAAA0oD,IAAA8Y,GAEA1nC,EAAA8wC,GAAAD,EAAAC,EAAA,GACAC,EAAA/wC,IACAz+B,EAAAy+B,GAAA,EAAA6wC,EAAA,GACAG,EAAAzvE,IACAisD,EAAAtnD,KAAA00C,GAAAv2C,KAAAusE,GAAAzR,GAAAn/B,EAAAgxC,GAAA9qE,KAAAC,KAAA0jE,GAAA7pC,EAAAgxC,IAAAhxC,EAAAgxC,MAAAnH,IAAAkH,EAAAC,QAAAnH,GACAnF,EAAA,IACAlX,MAEA7nD,EAAAtB,KAAA0jD,GAAAyF,EAEA,IAAAwe,EAAAnC,EAAA7pC,EAYA,OAXAwtB,EAAAtnD,KAAA00C,GAAAv2C,KAAAusE,GAAArvE,EAAAyqE,EAAA7M,EAAAj5D,KAAAC,MAAA6qE,EAAAnH,MAAA,GAAAmC,OAAAgF,EAAAnH,GAGAjkE,EAFAkpD,GAAA,EAEAzqD,KAAA4jD,GAAAuF,EAIAnpD,KAAA4jD,GAAAuF,EAEAtiC,EAAAvlB,IACAulB,EAAAtlB,IACAslB,GA6DA64B,QAxDA,SAAA74B,GACA,IAAA2jC,EAAAC,EACAmiB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EACAC,EACAhkB,EACAikB,EA2CA,OAtCAvmD,EAAAvlB,GAAAtB,KAAA0jD,GACA78B,EAAAtlB,GAAAvB,KAAA4jD,GACAuF,EAAAtnD,KAAA00C,GAAAv2C,KAAAusE,EAGAO,GAFAF,EAAA/lD,EAAAvlB,EAAA6nD,GAEAyjB,GADAC,EAAAhmD,EAAAtlB,EAAA4nD,GACA0jB,EAOA1jB,EAAA,GAHA0jB,KADAI,GAAA,GAFAF,GAAAlrE,KAAAynD,IAAAujB,IAAA,EAAAC,IAEA,IAAAD,IAAAC,MACA,GAFAE,EAAAD,EAAA,EAAAF,IAAAD,KAEAI,IAAAC,MAAA,EAAAF,EAAAC,EAAAC,KAAA,KACAC,GAAAH,EAAAC,IAAA,EAAAC,OACAE,EAAA,EAAAtrE,KAAAC,MAAAorE,EAAA,IAEArrE,KAAAynD,IAAAH,GAAA,IAEAA,EADAA,GAAA,EACA,GAGA,GAGAikB,EAAAvrE,KAAAu5D,KAAAjS,GAAA,EAEAsB,EADA5jC,EAAAtlB,GAAA,IACA4rE,EAAAtrE,KAAA0oD,IAAA6iB,EAAAvrE,KAAA00C,GAAA,GAAAy2B,EAAA,EAAAC,GAAAprE,KAAA00C,MAGA42B,EAAAtrE,KAAA0oD,IAAA6iB,EAAAvrE,KAAA00C,GAAA,GAAAy2B,EAAA,EAAAC,GAAAprE,KAAA00C,GAIAiU,EADA3oD,KAAAynD,IAAAsjB,GAAAxsB,EACApgD,KAAAijD,MAGAoG,EAAArpD,KAAAijD,MAAAphD,KAAA00C,IAAAu2B,EAAA,EAAAjrE,KAAAC,KAAA,KAAA8qE,IAAAC,KAAAC,MAAA,EAAAF,GAGA/lD,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAQA+I,OALA,8CC8EA,IACAy9C,IACAjvB,KA5LA,WACAp+C,KAAAstE,QAAAzrE,KAAAooD,IAAAjqD,KAAA0iD,MACA1iD,KAAAutE,QAAA1rE,KAAA0oD,IAAAvqD,KAAA0iD,OA2LAjD,QAxLA,SAAA54B,GACA,IAKA+9C,EAAAtM,EAAAoL,EAAAmB,EAAA2I,EAAAC,EAAA7D,EAAA8D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjT,EAAAkT,EAAAC,EAAAtxE,EAAAuxE,EAAAC,EAAAC,EALA9jB,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EACA0nD,EAAApnD,KAAAooD,IAAApjC,EAAAtlB,GACA2nD,EAAArnD,KAAA0oD,IAAA1jC,EAAAtlB,GACA8+D,EAAAhX,EAAAmB,EAAAxqD,KAAAijD,OAEA,OAAAjjD,KAAAunD,OACA1lD,KAAAynD,IAAAtpD,KAAAstE,QAAA,IAAAltB,GAEAv5B,EAAAvlB,EAAAtB,KAAA0jD,GAAA1jD,KAAAqiD,GAAArC,EAAAyK,GAAA5oD,KAAAooD,IAAAoW,GACAx5C,EAAAtlB,EAAAvB,KAAA4jD,GAAA5jD,KAAAqiD,GAAArC,EAAAyK,GAAA5oD,KAAA0oD,IAAA8V,GACAx5C,GAEAhlB,KAAAynD,IAAAtpD,KAAAstE,QAAA,IAAAltB,GAEAv5B,EAAAvlB,EAAAtB,KAAA0jD,GAAA1jD,KAAAqiD,GAAArC,EAAAyK,GAAA5oD,KAAAooD,IAAAoW,GACAx5C,EAAAtlB,EAAAvB,KAAA4jD,GAAA5jD,KAAAqiD,GAAArC,EAAAyK,GAAA5oD,KAAA0oD,IAAA8V,GACAx5C,IAIAsnD,EAAAnuE,KAAAstE,QAAArkB,EAAAjpD,KAAAutE,QAAArkB,EAAArnD,KAAA0oD,IAAA8V,GAEA6N,GADAlT,EAAAn5D,KAAAu5D,KAAA+S,IACAtsE,KAAAooD,IAAA+Q,GACAn0C,EAAAvlB,EAAAtB,KAAA0jD,GAAA1jD,KAAAqiD,EAAA6rB,EAAAhlB,EAAArnD,KAAAooD,IAAAoW,GACAx5C,EAAAtlB,EAAAvB,KAAA4jD,GAAA5jD,KAAAqiD,EAAA6rB,GAAAluE,KAAAutE,QAAAtkB,EAAAjpD,KAAAstE,QAAApkB,EAAArnD,KAAA0oD,IAAA8V,IACAx5C,IAIA+9C,EAAAE,GAAA9kE,KAAAqqD,IACAiO,EAAAyM,GAAA/kE,KAAAqqD,IACAqZ,EAAAsB,GAAAhlE,KAAAqqD,IACAwa,EAAAI,GAAAjlE,KAAAqqD,IACAxoD,KAAAynD,IAAAtpD,KAAAstE,QAAA,IAAAltB,GAEAotB,EAAAxtE,KAAAqiD,EAAAsiB,GAAAC,EAAAtM,EAAAoL,EAAAmB,EAAA7kB,GACAytB,EAAAztE,KAAAqiD,EAAAsiB,GAAAC,EAAAtM,EAAAoL,EAAAmB,EAAApa,GACA5jC,EAAAvlB,EAAAtB,KAAA0jD,IAAA8pB,EAAAC,GAAA5rE,KAAAooD,IAAAoW,GACAx5C,EAAAtlB,EAAAvB,KAAA4jD,IAAA4pB,EAAAC,GAAA5rE,KAAA0oD,IAAA8V,GACAx5C,GAEAhlB,KAAAynD,IAAAtpD,KAAAstE,QAAA,IAAAltB,GAEAotB,EAAAxtE,KAAAqiD,EAAAsiB,GAAAC,EAAAtM,EAAAoL,EAAAmB,EAAA7kB,GACAytB,EAAAztE,KAAAqiD,EAAAsiB,GAAAC,EAAAtM,EAAAoL,EAAAmB,EAAApa,GACA5jC,EAAAvlB,EAAAtB,KAAA0jD,IAAA8pB,EAAAC,GAAA5rE,KAAAooD,IAAAoW,GACAx5C,EAAAtlB,EAAAvB,KAAA4jD,IAAA4pB,EAAAC,GAAA5rE,KAAA0oD,IAAA8V,GACAx5C,IAIA+iD,EAAA3gB,EAAAC,EACAwkB,EAAAxI,GAAAllE,KAAAqiD,EAAAriD,KAAAsqD,EAAAtqD,KAAAstE,SACAK,EAAAzI,GAAAllE,KAAAqiD,EAAAriD,KAAAsqD,EAAArB,GACA2kB,EAAA/rE,KAAAmoD,MAAA,EAAAhqD,KAAAqqD,IAAAuf,EAAA5pE,KAAAqqD,GAAAqjB,EAAA1tE,KAAAstE,SAAAK,EAAAzkB,IAGArsD,EADA,KADAgxE,EAAAhsE,KAAAwwD,MAAAxwD,KAAAooD,IAAAoW,GAAArgE,KAAAutE,QAAA1rE,KAAA8nD,IAAAikB,GAAA5tE,KAAAstE,QAAAzrE,KAAA0oD,IAAA8V,KAEAx+D,KAAA85D,KAAA37D,KAAAutE,QAAA1rE,KAAAooD,IAAA2jB,GAAA5tE,KAAAstE,QAAAzrE,KAAA0oD,IAAAqjB,IAEA/rE,KAAAynD,IAAAznD,KAAAynD,IAAAukB,GAAAhsE,KAAA00C,KAAA6J,GACAv+C,KAAA85D,KAAA37D,KAAAutE,QAAA1rE,KAAAooD,IAAA2jB,GAAA5tE,KAAAstE,QAAAzrE,KAAA0oD,IAAAqjB,IAGA/rE,KAAA85D,KAAA95D,KAAAooD,IAAAoW,GAAAx+D,KAAA0oD,IAAAqjB,GAAA/rE,KAAAooD,IAAA4jB,IAEAC,EAAA9tE,KAAAsqD,EAAAtqD,KAAAstE,QAAAzrE,KAAAC,KAAA,EAAA9B,KAAAqqD,IAQA2Q,EAAA0S,EAAA7wE,GAAA,GAJAuxE,EAAAvxE,MADAoxE,GAFAF,EAAA/tE,KAAAsqD,EAAAtqD,KAAAutE,QAAA1rE,KAAA0oD,IAAAsjB,GAAAhsE,KAAAC,KAAA,EAAA9B,KAAAqqD,KAEA0jB,IAKA,EAAAE,GAAA,GAHAI,EAAAD,EAAAvxE,GAGA,GANAmxE,EAAAF,EAAAC,IAMA,IAAAE,IAFAK,EAAAD,EAAAxxE,GAEA,KAAAoxE,GAAA,IAAAA,GAAA,EAAAH,KAAA,IAAAG,IADAK,EAAAzxE,EACA,GAAAmxE,GACAnnD,EAAAvlB,EAAAtB,KAAA0jD,GAAAsX,EAAAn5D,KAAAooD,IAAA4jB,GACAhnD,EAAAtlB,EAAAvB,KAAA4jD,GAAAoX,EAAAn5D,KAAA0oD,IAAAsjB,GACAhnD,KA2GA64B,QApGA,SAAA74B,GAGA,IAAAq5C,EAAArqC,EAAAuyC,EAAAD,EAAA3d,EAAAC,EAAAtB,EAAAyb,EAAAtM,EAAAoL,EAAAmB,EAAA2I,EAAA1V,EAAA8V,EAAAC,EAAAU,EAAA99B,EAAAomB,EAAAuF,EAAAlE,EAAAsW,EAAAC,EACA,GAHA5nD,EAAAvlB,GAAAtB,KAAA0jD,GACA78B,EAAAtlB,GAAAvB,KAAA4jD,GAEA5jD,KAAAunD,OAAA,CAEA,IADA2Y,EAAAr+D,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,IACA,EAAAy+C,EAAAhgD,KAAAqiD,EACA,OAoCA,OAlCAxsB,EAAAqqC,EAAAlgE,KAAAqiD,EAEA+lB,EAAAvmE,KAAAooD,IAAAp0B,GACAsyC,EAAAtmE,KAAA0oD,IAAA10B,GAEA20B,EAAAxqD,KAAAijD,MACAphD,KAAAynD,IAAA4W,IAAA9f,EACAqK,EAAAzqD,KAAA0iD,MAGA+H,EAAA4d,GAAAF,EAAAnoE,KAAAstE,QAAAzmD,EAAAtlB,EAAA6mE,EAAApoE,KAAAutE,QAAArN,GACA/W,EAAAtnD,KAAAynD,IAAAtpD,KAAA0iD,MAAA1C,EAGAwK,EAFA3oD,KAAAynD,IAAAH,IAAA/I,EACApgD,KAAA0iD,MAAA,EACA2G,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,MAAAxrC,EAAAvlB,GAAAulB,EAAAtlB,IAGA8nD,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,OAAAxrC,EAAAvlB,EAAAulB,EAAAtlB,IAWA8nD,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,MAAAxrC,EAAAvlB,EAAA8mE,EAAAlI,EAAAlgE,KAAAutE,QAAApF,EAAAthD,EAAAtlB,EAAAvB,KAAAstE,QAAAlF,KAIAvhD,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,EAOA,OAJA+9C,EAAAE,GAAA9kE,KAAAqqD,IACAiO,EAAAyM,GAAA/kE,KAAAqqD,IACAqZ,EAAAsB,GAAAhlE,KAAAqqD,IACAwa,EAAAI,GAAAjlE,KAAAqqD,IACAxoD,KAAAynD,IAAAtpD,KAAAstE,QAAA,IAAAltB,GAEAotB,EAAAxtE,KAAAqiD,EAAAsiB,GAAAC,EAAAtM,EAAAoL,EAAAmB,EAAA7kB,GACAkgB,EAAAr+D,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,GAEAkpD,EAAA2a,IADAoI,EAAAtN,GACAlgE,KAAAqiD,EAAAuiB,EAAAtM,EAAAoL,EAAAmB,GACAra,EAAAnB,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,MAAAxrC,EAAAvlB,GAAA,EAAAulB,EAAAtlB,IACAslB,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,GAEAhlB,KAAAynD,IAAAtpD,KAAAstE,QAAA,IAAAltB,GAEAotB,EAAAxtE,KAAAqiD,EAAAsiB,GAAAC,EAAAtM,EAAAoL,EAAAmB,EAAA7kB,GACAkgB,EAAAr+D,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,GAGAkpD,EAAA2a,IAFAlF,EAAAsN,GAEAxtE,KAAAqiD,EAAAuiB,EAAAtM,EAAAoL,EAAAmB,GACAra,EAAAnB,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,MAAAxrC,EAAAvlB,EAAAulB,EAAAtlB,IACAslB,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,IAIAq5C,EAAAr+D,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,GACAssE,EAAAhsE,KAAAwwD,MAAAxrC,EAAAvlB,EAAAulB,EAAAtlB,GACAu2D,EAAAoN,GAAAllE,KAAAqiD,EAAAriD,KAAAsqD,EAAAtqD,KAAAstE,SACAiB,EAAA1sE,KAAA0oD,IAAAsjB,GAEAhX,IADApmB,EAAAzwC,KAAAsqD,EAAAtqD,KAAAutE,QAAAgB,GACA99B,GAAA,EAAAzwC,KAAAqqD,IACA+R,EAAA,EAAAp8D,KAAAqqD,IAAA,EAAAwM,GAAA72D,KAAAstE,QAAAttE,KAAAutE,QAAAgB,GAAA,EAAAvuE,KAAAqqD,IAGAokB,EAAA,EAAA5X,GADA2X,GADAtW,EAAAgI,EAAApI,GACAjB,GAAA,EAAAA,GAAAh1D,KAAA6nD,IAAAwO,EAAA,KAAAkE,GAAA,IAAAvF,GAAAh1D,KAAA6nD,IAAAwO,EAAA,OACAsW,EAAA,EAAAtW,EAAAsW,MAAA,EACAZ,EAAA/rE,KAAA85D,KAAA37D,KAAAstE,QAAAzrE,KAAA0oD,IAAAikB,GAAAxuE,KAAAutE,QAAA1rE,KAAAooD,IAAAukB,GAAAD,GACA/jB,EAAAnB,EAAArpD,KAAAijD,MAAAphD,KAAA85D,KAAA95D,KAAAooD,IAAA4jB,GAAAhsE,KAAAooD,IAAAukB,GAAA3sE,KAAA0oD,IAAAqjB,KACAnjB,EAAA5oD,KAAAmoD,MAAA,EAAAhqD,KAAAqqD,GAAAokB,EAAAzuE,KAAAstE,QAAAzrE,KAAAooD,IAAA2jB,IAAA/rE,KAAA8nD,IAAAikB,IAAA,EAAA5tE,KAAAqqD,KACAxjC,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,IAWA+I,OALA,iCCpHA,IACA8+C,IACAtwB,KAlFA,WAKAp+C,KAAAkpE,QAAArnE,KAAAooD,IAAAjqD,KAAA0iD,MACA1iD,KAAAmpE,QAAAtnE,KAAA0oD,IAAAvqD,KAAA0iD,OA6EAjD,QAxEA,SAAA54B,GACA,IAAAoiC,EAAAC,EACAmX,EACAgJ,EAEA1tC,EAAAr6B,EAAAC,EACAipD,EAAA3jC,EAAAvlB,EACAmpD,EAAA5jC,EAAAtlB,EAiBA,OAdA8+D,EAAAhX,EAAAmB,EAAAxqD,KAAAijD,OAEAgG,EAAApnD,KAAAooD,IAAAQ,GACAvB,EAAArnD,KAAA0oD,IAAAE,GAEA4e,EAAAxnE,KAAA0oD,IAAA8V,KACA1kC,EAAA37B,KAAAkpE,QAAAjgB,EAAAjpD,KAAAmpE,QAAAjgB,EAAAmgB,GAEA,GAAAxnE,KAAAynD,IAAA3tB,IAAAykB,KACA9+C,EAFA,EAEAtB,KAAAqiD,EAAA6G,EAAArnD,KAAAooD,IAAAoW,GACA9+D,EAAAvB,KAAA4jD,GAHA,EAGA5jD,KAAAqiD,GAAAriD,KAAAmpE,QAAAlgB,EAAAjpD,KAAAkpE,QAAAhgB,EAAAmgB,IAEAxiD,EAAAvlB,IACAulB,EAAAtlB,IACAslB,GAiDA64B,QA9CA,SAAA74B,GACA,IAAAq5C,EACArqC,EACAuyC,EAAAD,EACAhf,EACAqB,EAAAC,EAYA,OATA5jC,EAAAvlB,GAAAtB,KAAA0jD,GACA78B,EAAAtlB,GAAAvB,KAAA4jD,GACAsc,EAAAr+D,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,GACAs0B,EAAAwyC,GAAAnI,EAAAlgE,KAAAqiD,GAEA+lB,EAAAvmE,KAAAooD,IAAAp0B,GACAsyC,EAAAtmE,KAAA0oD,IAAA10B,GAEA20B,EAAAxqD,KAAAijD,MACAphD,KAAAynD,IAAA4W,IAAA9f,GACAqK,EAAAzqD,KAAA0iD,KACA77B,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,IAEA4jC,EAAA4d,GAAAF,EAAAnoE,KAAAkpE,QAAAriD,EAAAtlB,EAAA6mE,EAAApoE,KAAAmpE,QAAAjJ,GACA/W,EAAAtnD,KAAAynD,IAAAtpD,KAAA0iD,MAAA1C,EACAn+C,KAAAynD,IAAAH,IAAA/I,GAEAoK,EADAxqD,KAAA0iD,MAAA,EACA2G,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,MAAAxrC,EAAAvlB,GAAAulB,EAAAtlB,IAGA8nD,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,OAAAxrC,EAAAvlB,EAAAulB,EAAAtlB,IAEAslB,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,IAEA2jC,EAAAnB,EAAArpD,KAAAijD,MAAAphD,KAAAwwD,MAAAxrC,EAAAvlB,EAAA8mE,EAAAlI,EAAAlgE,KAAAmpE,QAAAhB,EAAAthD,EAAAtlB,EAAAvB,KAAAkpE,QAAAd,IACAvhD,EAAAvlB,EAAAkpD,EACA3jC,EAAAtlB,EAAAkpD,EACA5jC,KAQA+I,OALA,UC9EA++C,IACAC,MAAA,EACAC,MAAA,EACAC,KAAA,EACAC,KAAA,EACAC,IAAA,EACAC,OAAA,GAGAC,IACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,GAmTA,SAAAC,GAAA/lB,EAAAjoD,EAAAD,EAAAkuE,GACA,IAAAnM,EAmBA,OAlBA7Z,EAAApJ,GACAovB,EAAAj9D,MAAA28D,GAAAC,OACA9L,EAAA,IAEAA,EAAAxhE,KAAAwwD,MAAA9wD,EAAAD,GACAO,KAAAynD,IAAA+Z,IAAA9iB,EACAivB,EAAAj9D,MAAA28D,GAAAC,OACK9L,EAAA9iB,GAAA8iB,GAAArjB,EAAAO,GACLivB,EAAAj9D,MAAA28D,GAAAE,OACA/L,GAAArjB,GACKqjB,EAAArjB,EAAAO,GAAA8iB,KAAArjB,EAAAO,IACLivB,EAAAj9D,MAAA28D,GAAAG,OACAhM,KAAA,EAAAA,EAAA5iB,EAAA4iB,EAAA5iB,IAEA+uB,EAAAj9D,MAAA28D,GAAAI,OACAjM,GAAArjB,IAGAqjB,EAIA,SAAAoM,GAAAjlB,EAAA/mD,GACA,IAAAisE,EAAAllB,EAAA/mD,EAMA,OALAisE,GAAAjvB,EACAivB,GAAAlvB,EACGkvB,GAAAjvB,IACHivB,GAAAlvB,GAEAkvB,EAGA,IC/UAlxB,GDgVAmxB,IACAvxB,KApVA,WAEAp+C,KAAA0jD,GAAA1jD,KAAA0jD,IAAA,EACA1jD,KAAA4jD,GAAA5jD,KAAA4jD,IAAA,EACA5jD,KAAA0iD,KAAA1iD,KAAA0iD,MAAA,EACA1iD,KAAAijD,MAAAjjD,KAAAijD,OAAA,EACAjjD,KAAA+iD,OAAA/iD,KAAA+iD,QAAA,EACA/iD,KAAAstC,MAAAttC,KAAAstC,OAAA,mCAGAttC,KAAA0iD,MAAA1C,EAAAO,EAAA,EACAvgD,KAAA4vE,KAAAjB,GAAAK,IACGhvE,KAAA0iD,QAAA1C,EAAAO,EAAA,GACHvgD,KAAA4vE,KAAAjB,GAAAM,OACGptE,KAAAynD,IAAAtpD,KAAAijD,QAAA1C,EACHvgD,KAAA4vE,KAAAjB,GAAAC,MACG/sE,KAAAynD,IAAAtpD,KAAAijD,QAAAjD,EAAAO,EACHvgD,KAAA4vE,KAAA5vE,KAAAijD,MAAA,EAAA0rB,GAAAE,MAAAF,GAAAI,KAEA/uE,KAAA4vE,KAAAjB,GAAAG,KAKA,IAAA9uE,KAAAqqD,KACArqD,KAAA6vE,YAAA,GAAA7vE,KAAAqiD,EAAAriD,KAAA47B,GAAA57B,KAAAqiD,EACAriD,KAAA8vE,oBAAA9vE,KAAA6vE,YAAA7vE,KAAA6vE,cA2TApwB,QArTA,SAAA54B,GACA,IACA4jC,EAAAD,EACA6Y,EAAA7Z,EACAkJ,EAAA0F,EAHA2X,GAAYzuE,EAAA,EAAAC,EAAA,GAKZiuE,GAAcj9D,MAAA,GAoBd,GAjBAsU,EAAAvlB,GAAAtB,KAAAijD,MAMAwH,EADA,IAAAzqD,KAAAqqD,GACAxoD,KAAAmoD,KAAAhqD,KAAA8vE,oBAAAjuE,KAAA8nD,IAAA9iC,EAAAtlB,IAEAslB,EAAAtlB,EAQAipD,EAAA3jC,EAAAvlB,EACAtB,KAAA4vE,OAAAjB,GAAAK,IACAxlB,EAAAxJ,EAAAyK,EACAD,GAAAjK,GAAAiK,GAAAxK,EAAAO,GACAivB,EAAAj9D,MAAA28D,GAAAC,OACA9L,EAAA7Y,EAAAxK,GACKwK,EAAAxK,EAAAO,GAAAiK,KAAAxK,EAAAO,IACLivB,EAAAj9D,MAAA28D,GAAAE,OACA/L,EAAA7Y,EAAA,EAAAA,EAAA/J,EAAA+J,EAAA/J,GACK+J,IAAAxK,EAAAO,IAAAiK,IAAAjK,GACLivB,EAAAj9D,MAAA28D,GAAAG,OACAhM,EAAA7Y,EAAAxK,IAEAwvB,EAAAj9D,MAAA28D,GAAAI,OACAjM,EAAA7Y,QAEG,GAAAxqD,KAAA4vE,OAAAjB,GAAAM,OACHzlB,EAAAxJ,EAAAyK,EACAD,GAAAjK,GAAAiK,GAAAxK,EAAAO,GACAivB,EAAAj9D,MAAA28D,GAAAC,OACA9L,GAAA7Y,EAAAxK,GACKwK,EAAAjK,GAAAiK,IAAAjK,GACLivB,EAAAj9D,MAAA28D,GAAAE,OACA/L,GAAA7Y,GACKA,GAAAjK,GAAAiK,KAAAxK,EAAAO,IACLivB,EAAAj9D,MAAA28D,GAAAG,OACAhM,GAAA7Y,EAAAxK,IAEAwvB,EAAAj9D,MAAA28D,GAAAI,OACAjM,EAAA7Y,EAAA,GAAAA,EAAA/J,GAAA+J,EAAA/J,OAEG,CACH,IAAAknB,EAAAjsC,EAAA7+B,EACAsjE,EAAAC,EACA4P,EAEAhwE,KAAA4vE,OAAAjB,GAAAE,MACArkB,EAAAilB,GAAAjlB,GAAAxK,GACKhgD,KAAA4vE,OAAAjB,GAAAG,KACLtkB,EAAAilB,GAAAjlB,GAAA/J,GACKzgD,KAAA4vE,OAAAjB,GAAAI,OACLvkB,EAAAilB,GAAAjlB,GAAAxK,IAEAmgB,EAAAt+D,KAAAooD,IAAAQ,GACA2V,EAAAv+D,KAAA0oD,IAAAE,GACAulB,EAAAnuE,KAAAooD,IAAAO,GAEAmd,EAAAvH,EADAv+D,KAAA0oD,IAAAC,GAEA9uB,EAAA0kC,EAAA4P,EACAnzE,EAAAsjE,EAEAngE,KAAA4vE,OAAAjB,GAAAC,MAEAvL,EAAAkM,GADA/lB,EAAA3nD,KAAAu5D,KAAAuM,GACA9qE,EAAA6+B,EAAA8zC,GACKxvE,KAAA4vE,OAAAjB,GAAAE,MAELxL,EAAAkM,GADA/lB,EAAA3nD,KAAAu5D,KAAA1/B,GACA7+B,GAAA8qE,EAAA6H,GACKxvE,KAAA4vE,OAAAjB,GAAAG,KAELzL,EAAAkM,GADA/lB,EAAA3nD,KAAAu5D,MAAAuM,GACA9qE,GAAA6+B,EAAA8zC,GACKxvE,KAAA4vE,OAAAjB,GAAAI,KAEL1L,EAAAkM,GADA/lB,EAAA3nD,KAAAu5D,MAAA1/B,GACA7+B,EAAA8qE,EAAA6H,IAGAhmB,EAAA6Z,EAAA,EACAmM,EAAAj9D,MAAA28D,GAAAC,QA2BA,OApBA/W,EAAAv2D,KAAAmoD,KAAA,GAAAvJ,GAAA4iB,EAAAxhE,KAAAu5D,KAAAv5D,KAAAooD,IAAAoZ,GAAAxhE,KAAA0oD,IAAAhK,IAAAP,IACA0S,EAAA7wD,KAAAC,MAAA,EAAAD,KAAA0oD,IAAAf,KAAA3nD,KAAA0oD,IAAA6N,GAAAv2D,KAAA0oD,IAAA6N,KAAA,EAAAv2D,KAAA0oD,IAAA1oD,KAAAmoD,KAAA,EAAAnoD,KAAA0oD,IAAA8Y,OAGAmM,EAAAj9D,QAAA28D,GAAAE,OACAhX,GAAApY,EACGwvB,EAAAj9D,QAAA28D,GAAAG,OACHjX,GAAA3X,EACG+uB,EAAAj9D,QAAA28D,GAAAI,SACHlX,GAAA,IAAA3X,GAIAsvB,EAAAzuE,EAAAoxD,EAAA7wD,KAAA0oD,IAAA6N,GACA2X,EAAAxuE,EAAAmxD,EAAA7wD,KAAAooD,IAAAmO,GACA2X,EAAAzuE,EAAAyuE,EAAAzuE,EAAAtB,KAAAqiD,EAAAriD,KAAA0jD,GACAqsB,EAAAxuE,EAAAwuE,EAAAxuE,EAAAvB,KAAAqiD,EAAAriD,KAAA4jD,GAEA/8B,EAAAvlB,EAAAyuE,EAAAzuE,EACAulB,EAAAtlB,EAAAwuE,EAAAxuE,EACAslB,GAgMA64B,QA3LA,SAAA74B,GACA,IACAuxC,EAAA6X,EAAAC,EAAAC,EACAC,EAAA/M,EAAAna,EAAAM,EACAkJ,EA8HA2d,EACAzG,EAAA0G,EAlIAC,GAAYjL,IAAA,EAAA9b,IAAA,GAIZgmB,GAAcj9D,MAAA,GA4Cd,GAzCAsU,EAAAvlB,GAAAulB,EAAAvlB,EAAAtB,KAAA0jD,IAAA1jD,KAAAqiD,EACAx7B,EAAAtlB,GAAAslB,EAAAtlB,EAAAvB,KAAA4jD,IAAA5jD,KAAAqiD,EAIA4tB,EAAApuE,KAAAmoD,KAAAnoD,KAAAC,KAAA+kB,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,IACA62D,EAAAv2D,KAAAwwD,MAAAxrC,EAAAtlB,EAAAslB,EAAAvlB,GACAulB,EAAAvlB,GAAA,GAAAulB,EAAAvlB,GAAAO,KAAAynD,IAAAziC,EAAAtlB,GACAiuE,EAAAj9D,MAAA28D,GAAAC,OACGtoD,EAAAtlB,GAAA,GAAAslB,EAAAtlB,GAAAM,KAAAynD,IAAAziC,EAAAvlB,IACHkuE,EAAAj9D,MAAA28D,GAAAE,OACAhX,GAAApY,GACGn5B,EAAAvlB,EAAA,IAAAulB,EAAAvlB,GAAAO,KAAAynD,IAAAziC,EAAAtlB,IACHiuE,EAAAj9D,MAAA28D,GAAAG,OACAjX,IAAA,EAAAA,EAAA3X,EAAA2X,EAAA3X,IAEA+uB,EAAAj9D,MAAA28D,GAAAI,OACAlX,GAAApY,GAQA0S,EAAAjS,EAAA,GAAA5+C,KAAA8nD,IAAAyO,GACAgY,EAAAvuE,KAAAooD,IAAAyI,IAAA7wD,KAAA0oD,IAAAmI,GAAA,EAAA7wD,KAAAC,KAAA,IACAuhE,EAAAxhE,KAAAmoD,KAAAomB,IAGAlnB,EAAA,GAFAgnB,EAAAruE,KAAA0oD,IAAA6N,IAEA8X,GADAC,EAAAtuE,KAAA8nD,IAAAsmB,IACAE,GAAA,EAAAtuE,KAAA0oD,IAAA1oD,KAAAmoD,KAAA,EAAAnoD,KAAA0oD,IAAA8Y,QACA,EACAna,GAAA,EACGA,EAAA,IACHA,EAAA,GAOAlpD,KAAA4vE,OAAAjB,GAAAK,IACAxlB,EAAA3nD,KAAAu5D,KAAAlS,GACAqnB,EAAA/mB,IAAAxJ,EAAAwJ,EACAgmB,EAAAj9D,QAAA28D,GAAAC,OACAoB,EAAAjL,IAAAjC,EAAArjB,EACKwvB,EAAAj9D,QAAA28D,GAAAE,OACLmB,EAAAjL,IAAAjC,EAAA,EAAAA,EAAA5iB,EAAA4iB,EAAA5iB,EACK+uB,EAAAj9D,QAAA28D,GAAAG,OACLkB,EAAAjL,IAAAjC,EAAArjB,EAEAuwB,EAAAjL,IAAAjC,OAEG,GAAArjE,KAAA4vE,OAAAjB,GAAAM,OACHzlB,EAAA3nD,KAAAu5D,KAAAlS,GACAqnB,EAAA/mB,MAAAxJ,EACAwvB,EAAAj9D,QAAA28D,GAAAC,OACAoB,EAAAjL,KAAAjC,EAAArjB,EACKwvB,EAAAj9D,QAAA28D,GAAAE,OACLmB,EAAAjL,KAAAjC,EACKmM,EAAAj9D,QAAA28D,GAAAG,OACLkB,EAAAjL,KAAAjC,EAAArjB,EAEAuwB,EAAAjL,IAAAjC,EAAA,GAAAA,EAAA5iB,GAAA4iB,EAAA5iB,MAEG,CAEH,IAAAknB,EAAAjsC,EAAA7+B,EAEA61D,GADAiV,EAAAze,GACAye,EAQAjsC,GAFAg3B,IAJA71D,EADA61D,GAAA,EACA,EAEA7wD,KAAAC,KAAA,EAAA4wD,GAAA7wD,KAAAooD,IAAAoZ,IAEAxmE,IACA,EACA,EAEAgF,KAAAC,KAAA,EAAA4wD,GAGA8c,EAAAj9D,QAAA28D,GAAAE,QACA1c,EAAAh3B,EACAA,GAAA7+B,EACAA,EAAA61D,GACK8c,EAAAj9D,QAAA28D,GAAAG,QACL3zC,KACA7+B,MACK2yE,EAAAj9D,QAAA28D,GAAAI,SACL5c,EAAAh3B,EACAA,EAAA7+B,EACAA,GAAA61D,GAGA1yD,KAAA4vE,OAAAjB,GAAAE,OACAnc,EAAAiV,EACAA,GAAAjsC,EACAA,EAAAg3B,GACK1yD,KAAA4vE,OAAAjB,GAAAG,MACLnH,KACAjsC,MACK17B,KAAA4vE,OAAAjB,GAAAI,OACLrc,EAAAiV,EACAA,EAAAjsC,EACAA,GAAAg3B,GAGA6d,EAAA/mB,IAAA3nD,KAAAu5D,MAAAv+D,GAAAmjD,EACAuwB,EAAAjL,IAAAzjE,KAAAwwD,MAAA32B,EAAAisC,GACA3nE,KAAA4vE,OAAAjB,GAAAE,MACA0B,EAAAjL,IAAAmK,GAAAc,EAAAjL,KAAAtlB,GACKhgD,KAAA4vE,OAAAjB,GAAAG,KACLyB,EAAAjL,IAAAmK,GAAAc,EAAAjL,KAAA7kB,GACKzgD,KAAA4vE,OAAAjB,GAAAI,OACLwB,EAAAjL,IAAAmK,GAAAc,EAAAjL,KAAAtlB,IAqBA,OAfA,IAAAhgD,KAAAqqD,KAGAgmB,EAAAE,EAAA/mB,IAAA,MACAogB,EAAA/nE,KAAA8nD,IAAA4mB,EAAA/mB,KACA8mB,EAAAtwE,KAAA47B,EAAA/5B,KAAAC,KAAA8nE,IAAA5pE,KAAA8vE,qBACAS,EAAA/mB,IAAA3nD,KAAAmoD,KAAAnoD,KAAAC,KAAA9B,KAAAqiD,EAAAriD,KAAAqiD,EAAAiuB,MAAAtwE,KAAA6vE,YAAAS,IACAD,IACAE,EAAA/mB,KAAA+mB,EAAA/mB,MAIA+mB,EAAAjL,KAAAtlE,KAAAijD,MACAp8B,EAAAvlB,EAAAivE,EAAAjL,IACAz+C,EAAAtlB,EAAAgvE,EAAA/mB,IACA3iC,GA4CA+I,OALA,8EE9VAgkC,GAAA4c,aAAA,QACA5c,GAAAhE,QACAgE,GAAAzL,MAAA,IAAAyL,GAAAhE,KAAA,SACAgE,GAAAzpC,MAAA6vC,GACApG,GAAAd,WACAc,GAAAlV,KAAA4J,EACAsL,GAAApU,aACAoU,GAAAY,QACAZ,GAAA7vB,QAAA0sC,GAAA,SDOAjyB,GCNAoV,IDOAhE,KAAA9E,YAAAD,IAAA4P,IACAjc,GAAAoR,KAAA9E,YAAAD,IAAA0S,IACA/e,GAAAoR,KAAA9E,YAAAD,IAAAuK,IACA5W,GAAAoR,KAAA9E,YAAAD,IAAAkU,IACAvgB,GAAAoR,KAAA9E,YAAAD,IAAA0U,IACA/gB,GAAAoR,KAAA9E,YAAAD,IAAA6lB,GAAA,SACAlyB,GAAAoR,KAAA9E,YAAAD,IAAA8V,IACAniB,GAAAoR,KAAA9E,YAAAD,IAAA6X,IACAlkB,GAAAoR,KAAA9E,YAAAD,IAAAyY,IACA9kB,GAAAoR,KAAA9E,YAAAD,IAAAwa,IACA7mB,GAAAoR,KAAA9E,YAAAD,IAAA2b,IACAhoB,GAAAoR,KAAA9E,YAAAD,IAAAyd,IACA9pB,GAAAoR,KAAA9E,YAAAD,IAAAoe,IACAzqB,GAAAoR,KAAA9E,YAAAD,IAAA0e,IACA/qB,GAAAoR,KAAA9E,YAAAD,IAAA2e,IACAhrB,GAAAoR,KAAA9E,YAAAD,IAAA8e,IACAnrB,GAAAoR,KAAA9E,YAAAD,IAAAmf,IACAxrB,GAAAoR,KAAA9E,YAAAD,IAAA+gB,IACAptB,GAAAoR,KAAA9E,YAAAD,IAAAihB,IACAttB,GAAAoR,KAAA9E,YAAAD,IAAAqhB,IACA1tB,GAAAoR,KAAA9E,YAAAD,IAAAuhB,IACA5tB,GAAAoR,KAAA9E,YAAAD,IAAAyhB,IACA9tB,GAAAoR,KAAA9E,YAAAD,IAAAwiB,IACA7uB,GAAAoR,KAAA9E,YAAAD,IAAA6jB,IACAlwB,GAAAoR,KAAA9E,YAAAD,IAAA8kB,IC9BAlwE,EAAA,2ICpBAi4B,EAAAj7B,EAAA,GAoBA,MAAAk0E,EAAA,SAAAC,GAEAC,EAAA,QAAA9wE,KAAAC,MAMAA,KAAA8wE,YAAAF,GAAA,KAEA5wE,KAAA+wE,2BAGA1wE,OAAAC,EAAA,SAAAD,CAAAswE,EAAAE,EAAA,SAQAF,EAAAK,iBAAA,SAAAC,GACA,MAAAC,KACA,IAAA3tE,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAqCwC,EAAAC,IAAQD,EAC7C2tE,EAAApwE,KAAAmwE,EAAA1tE,GAAAtC,SAEA,OAAAiwE,GAOAP,EAAApwE,UAAA4wE,0BAAA,WACA,IAAA5tE,EAAAC,EACA,GAAAxD,KAAA8wE,YAGA,IAAAvtE,EAAA,EAAAC,EAAAxD,KAAA8wE,YAAA/vE,OAA2CwC,EAAAC,IAAQD,EACnD6tE,EAAA,QAAAC,SACArxE,KAAA8wE,YAAAvtE,GAAA+tE,EAAA,EAAAruC,OACAjjC,KAAAgB,QAAAhB,OAQA2wE,EAAApwE,UAAAwwE,wBAAA,WACA,IAAAxtE,EAAAC,EACA,GAAAxD,KAAA8wE,YAGA,IAAAvtE,EAAA,EAAAC,EAAAxD,KAAA8wE,YAAA/vE,OAA2CwC,EAAAC,IAAQD,EACnD6tE,EAAA,QAAA98D,OACAtU,KAAA8wE,YAAAvtE,GAAA+tE,EAAA,EAAAruC,OACAjjC,KAAAgB,QAAAhB,OAWA2wE,EAAApwE,UAAAU,MAAA,WACA,MAAAswE,EAAA,IAAAZ,EAAA,MAEA,OADAY,EAAAC,cAAAxxE,KAAA8wE,aACAS,GAOAZ,EAAApwE,UAAAc,eAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAA,EAAApB,OAAA2uC,EAAA,yBAAA3uC,CAAAL,KAAA2B,YAAAL,EAAAC,GACA,OAAAE,EAEA,MAAAwvE,EAAAjxE,KAAA8wE,YACA,IAAAvtE,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAqCwC,EAAAC,IAAQD,EAC7C9B,EAAAwvE,EAAA1tE,GAAAlC,eACAC,EAAAC,EAAAC,EAAAC,GAEA,OAAAA,GAOAkvE,EAAApwE,UAAA0G,WAAA,SAAA3F,EAAAC,GACA,MAAA0vE,EAAAjxE,KAAA8wE,YACA,IAAAvtE,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAqCwC,EAAAC,IAAQD,EAC7C,GAAA0tE,EAAA1tE,GAAA0D,WAAA3F,EAAAC,GACA,SAGA,UAOAovE,EAAApwE,UAAAkxE,cAAA,SAAAhtE,GACApE,OAAA2uC,EAAA,oBAAA3uC,CAAAoE,GACA,MAAAwsE,EAAAjxE,KAAA8wE,YACA,QAAAvtE,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAyCwC,EAAAC,IAAQD,EACjDlD,OAAA2uC,EAAA,OAAA3uC,CAAAoE,EAAAwsE,EAAA1tE,GAAA5B,aAEA,OAAA8C,GASAksE,EAAApwE,UAAAmxE,cAAA,WACA,OAAAf,EAAAK,iBAAAhxE,KAAA8wE,cAOAH,EAAApwE,UAAAoxE,mBAAA,WACA,OAAA3xE,KAAA8wE,aAOAH,EAAApwE,UAAAqxE,sBAAA,SAAA7tE,GAMA,GALA/D,KAAA6xE,4BAAA7xE,KAAA4B,gBACAvB,OAAAq3B,EAAA,MAAAr3B,CAAAL,KAAA8xE,yBACA9xE,KAAA+xE,yCAAA,EACA/xE,KAAA6xE,2BAAA7xE,KAAA4B,eAEAmC,EAAA,GACA,IAAA/D,KAAA+xE,0CACAhuE,EAAA/D,KAAA+xE,yCACA,OAAA/xE,KAEA,MAAAyZ,EAAA1V,EAAAvE,WACA,GAAAQ,KAAA8xE,wBAAAE,eAAAv4D,GACA,OAAAzZ,KAAA8xE,wBAAAr4D,GACG,CACH,MAAAw4D,KACAhB,EAAAjxE,KAAA8wE,YACA,IACAvtE,EAAAC,EADA0uE,GAAA,EAEA,IAAA3uE,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAuCwC,EAAAC,IAAQD,EAAA,CAC/C,MAAAwV,EAAAk4D,EAAA1tE,GACA4uE,EAAAp5D,EAAA64D,sBAAA7tE,GACAkuE,EAAAnxE,KAAAqxE,GACAA,IAAAp5D,IACAm5D,GAAA,GAGA,GAAAA,EAAA,CACA,MAAAE,EAAA,IAAAzB,EAAA,MAGA,OAFAyB,EAAAC,mBAAAJ,GACAjyE,KAAA8xE,wBAAAr4D,GAAA24D,EACAA,EAGA,OADApyE,KAAA+xE,yCAAAhuE,EACA/D,OAUA2wE,EAAApwE,UAAA8D,QAAA,WACA,OAAAiuE,EAAA,QAAAC,qBAQA5B,EAAApwE,UAAAiE,iBAAA,SAAAC,GACA,MAAAwsE,EAAAjxE,KAAA8wE,YACA,IAAAvtE,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAqCwC,EAAAC,IAAQD,EAC7C,GAAA0tE,EAAA1tE,GAAAiB,iBAAAC,GACA,SAGA,UAOAksE,EAAApwE,UAAAssB,QAAA,WACA,WAAA7sB,KAAA8wE,YAAA/vE,QAQA4vE,EAAApwE,UAAAiyE,OAAA,SAAAC,EAAAC,GACA,MAAAzB,EAAAjxE,KAAA8wE,YACA,QAAAvtE,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAyCwC,EAAAC,IAAQD,EACjD0tE,EAAA1tE,GAAAivE,OAAAC,EAAAC,GAEA1yE,KAAAgB,WAQA2vE,EAAApwE,UAAAwwC,MAAA,SAAA4hC,EAAAC,EAAAC,GACA,IAAAH,EAAAG,EACAH,IACAA,EAAAryE,OAAA2uC,EAAA,UAAA3uC,CAAAL,KAAA2B,cAEA,MAAAsvE,EAAAjxE,KAAA8wE,YACA,QAAAvtE,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAyCwC,EAAAC,IAAQD,EACjD0tE,EAAA1tE,GAAAwtC,MAAA4hC,EAAAC,EAAAF,GAEA1yE,KAAAgB,WASA2vE,EAAApwE,UAAAixE,cAAA,SAAAP,GACAjxE,KAAAqyE,mBACA1B,EAAAK,iBAAAC,KAOAN,EAAApwE,UAAA8xE,mBAAA,SAAApB,GACAjxE,KAAAmxE,4BACAnxE,KAAA8wE,YAAAG,EACAjxE,KAAA+wE,0BACA/wE,KAAAgB,WAQA2vE,EAAApwE,UAAAuyE,eAAA,SAAAC,GACA,MAAA9B,EAAAjxE,KAAA8wE,YACA,IAAAvtE,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAqCwC,EAAAC,IAAQD,EAC7C0tE,EAAA1tE,GAAAuvE,eAAAC,GAEA/yE,KAAAgB,WAWA2vE,EAAApwE,UAAAyyE,UAAA,SAAAC,EAAAC,GACA,MAAAjC,EAAAjxE,KAAA8wE,YACA,IAAAvtE,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAqCwC,EAAAC,IAAQD,EAC7C0tE,EAAA1tE,GAAAyvE,UAAAC,EAAAC,GAEAlzE,KAAAgB,WAOA2vE,EAAApwE,UAAA4yE,gBAAA,WACAnzE,KAAAmxE,4BACAN,EAAA,QAAAtwE,UAAA4yE,gBAAApzE,KAAAC,OAEAP,EAAA,wCC7TA,SAAA2+C,IACA,IAAAg1B,EAAApzE,KAAA0iD,KACA1iD,KAAAqzE,QAAArzE,KAAAijD,MACA,IAAAqwB,EAAAzxE,KAAAooD,IAAAmpB,GACAG,EAAAvzE,KAAAqiD,EAEAmxB,EAAA,EADAxzE,KAAAwiD,GAEAkhB,EAAA,EAAA8P,EAAA3xE,KAAA6nD,IAAA8pB,EAAA,GACAlpB,EAAAtqD,KAAAsqD,EAAAzoD,KAAAC,KAAA4hE,GACA1jE,KAAAusE,EAAAvsE,KAAA8jD,GAAAyvB,EAAA1xE,KAAAC,KAAA,EAAA4hE,IAAA,EAAAA,EAAA7hE,KAAA6nD,IAAA4pB,EAAA,IACAtzE,KAAAsjD,MAAAzhD,KAAAC,KAAA,EAAA4hE,GAAA,EAAAA,GAAA7hE,KAAA6nD,IAAA7nD,KAAA0oD,IAAA6oB,GAAA,IACApzE,KAAAyzE,GAAA5xE,KAAA85D,KAAA2X,EAAAtzE,KAAAsjD,OACA,IAAAwgB,EAAAjiE,KAAAqmD,IAAArmD,KAAA8nD,IAAA9nD,KAAA00C,GAAA,EAAAv2C,KAAAyzE,GAAA,IACAC,EAAA7xE,KAAAqmD,IAAArmD,KAAA8nD,IAAA9nD,KAAA00C,GAAA,EAAA68B,EAAA,IACAO,EAAA9xE,KAAAqmD,KAAA,EAAAoC,EAAAgpB,IAAA,EAAAhpB,EAAAgpB,IACAtzE,KAAA8+D,EAAAgF,EAAA9jE,KAAAsjD,MAAAowB,EAAA1zE,KAAAsjD,MAAAgH,EAAA,EAAAqpB,EAGA,SAAAl0B,EAAA54B,GACA,IAAA+sD,EAAA/xE,KAAAqmD,IAAArmD,KAAA8nD,IAAA9nD,KAAA00C,GAAA,EAAA1vB,EAAAtlB,EAAA,IACAsyE,EAAA7zE,KAAAsqD,EAAA,EAAAzoD,KAAAqmD,KAAA,EAAAloD,KAAAsqD,EAAAzoD,KAAAooD,IAAApjC,EAAAtlB,KAAA,EAAAvB,KAAAsqD,EAAAzoD,KAAAooD,IAAApjC,EAAAtlB,KACAuyE,GAAA9zE,KAAAsjD,OAAAswB,EAAAC,GAAA7zE,KAAA8+D,EAGAljC,EAAA,GAAA/5B,KAAAmoD,KAAAnoD,KAAA6oD,IAAAopB,IAAAjyE,KAAA00C,GAAA,GAGA6d,EAAAp0D,KAAAsjD,OAAAz8B,EAAAvlB,EAAAtB,KAAAqzE,SAGAU,EAAAlyE,KAAAmoD,KAAAnoD,KAAAooD,IAAAmK,IAAAvyD,KAAAooD,IAAAjqD,KAAAyzE,IAAA5xE,KAAA8nD,IAAA/tB,GAAA/5B,KAAA0oD,IAAAvqD,KAAAyzE,IAAA5xE,KAAA0oD,IAAA6J,KAEA4f,EAAAnyE,KAAA85D,KAAA95D,KAAA0oD,IAAAvqD,KAAAyzE,IAAA5xE,KAAAooD,IAAAruB,GAAA/5B,KAAAooD,IAAAjqD,KAAAyzE,IAAA5xE,KAAA0oD,IAAA3uB,GAAA/5B,KAAA0oD,IAAA6J,IAIA,OAFAvtC,EAAAtlB,EAAAvB,KAAAusE,EAAA,EAAA1qE,KAAAqmD,KAAA,EAAArmD,KAAAooD,IAAA+pB,KAAA,EAAAnyE,KAAAooD,IAAA+pB,KAAAh0E,KAAA4jD,GACA/8B,EAAAvlB,EAAAtB,KAAAusE,EAAAwH,EAAA/zE,KAAA0jD,GACA78B,EAGA,SAAA64B,EAAA74B,GAgBA,IAfA,IAAAsrC,EAAAtrC,EAAAvlB,EAAAtB,KAAA0jD,GACAwO,EAAArrC,EAAAtlB,EAAAvB,KAAA4jD,GAEAmwB,EAAA5hB,EAAAnyD,KAAAusE,EACAyH,EAAA,GAAAnyE,KAAAmoD,KAAAnoD,KAAA6oD,IAAAwH,EAAAlyD,KAAAusE,IAAA1qE,KAAA00C,GAAA,GAEA3a,EAAA/5B,KAAA85D,KAAA95D,KAAA0oD,IAAAvqD,KAAAyzE,IAAA5xE,KAAAooD,IAAA+pB,GAAAnyE,KAAAooD,IAAAjqD,KAAAyzE,IAAA5xE,KAAA0oD,IAAAypB,GAAAnyE,KAAA0oD,IAAAwpB,IACA3f,EAAAvyD,KAAAmoD,KAAAnoD,KAAAooD,IAAA8pB,IAAAlyE,KAAA0oD,IAAAvqD,KAAAyzE,IAAA5xE,KAAA0oD,IAAAwpB,GAAAlyE,KAAAooD,IAAAjqD,KAAAyzE,IAAA5xE,KAAA8nD,IAAAqqB,KAEAC,EAAAj0E,KAAAqzE,QAAAjf,EAAAp0D,KAAAsjD,MAEAwwB,EAAA,EACAI,EAAAt4C,EACAu4C,GAAA,IACAC,EAAA,EACAvyE,KAAAynD,IAAA4qB,EAAAC,GAAA,OACA,KAAAC,EAAA,GAEA,OAGAN,EAAA,EAAA9zE,KAAAsjD,OAAAzhD,KAAAqmD,IAAArmD,KAAA8nD,IAAA9nD,KAAA00C,GAAA,EAAA3a,EAAA,IAAA57B,KAAA8+D,GAAA9+D,KAAAsqD,EAAAzoD,KAAAqmD,IAAArmD,KAAA8nD,IAAA9nD,KAAA00C,GAAA,EAAA10C,KAAA85D,KAAA37D,KAAAsqD,EAAAzoD,KAAAooD,IAAAiqB,IAAA,IACAC,EAAAD,EACAA,EAAA,EAAAryE,KAAAmoD,KAAAnoD,KAAA6oD,IAAAopB,IAAAjyE,KAAA00C,GAAA,EAKA,OAFA1vB,EAAAvlB,EAAA2yE,EACAptD,EAAAtlB,EAAA2yE,EACArtD,oFA5EApqB,EAAA6+D,EAAA77D,EAAA,0BAAAmwB,IA+EA,IAAAA,GAAA,UACAnwB,EAAA,SACA2+C,OACAqB,UACAC,UACA9vB,yICvEA,MAAAykD,EAAA,WACAt9D,EAAA,QAAAhX,KAAAC,OAGAK,OAAA6+B,EAAA,SAAA7+B,CAAAg0E,EAAAt9D,EAAA,SAMAs9D,EAAA9zE,UAAA00B,iBAAA,SAAA1d,GACA,QAAA9R,EAAA8R,EAAAK,WAA8BnS,EAAGA,IAAAoS,YACjC,GAAApS,EAAAqS,UAAAC,KAAAC,aACA,OAAAhY,KAAAk1B,aAAAzvB,GAGA,aAOA4uE,EAAA9zE,UAAA20B,aAAA,SAAAt4B,GACA,MAAA03E,EAAAC,EAAA,QAAAzuD,mBACAuuD,EAAAG,SAAA53E,MACA,OAAA03E,GAAA,MAUAD,EAAAI,aAAA,SAAA73E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACAuuD,EAAAK,iBAAA93E,EAAA+oB,IAUA0uD,EAAAM,mBAAA,SAAA/3E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACAuuD,EAAAO,wBAAAh4E,EAAA+oB,IAUA0uD,EAAAQ,gBAAA,SAAAj4E,EAAA+oB,GACA,MAAAza,EAAAtO,EAAAuqB,aAAA,QACA,GAAAjc,EAGA,OAAAqpE,EAAA,QAAAzuD,iBAAmC5a,QACnCmpE,EAAAS,oBAAAl4E,EACA+oB,IAUA0uD,EAAAU,iBAAA,SAAAn4E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACAuuD,EAAAW,sBAAAp4E,EAAA+oB,IAUA0uD,EAAAY,SAAA,SAAAr4E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACAuuD,EAAAa,aAAAt4E,EAAA+oB,IAUA0uD,EAAAc,SAAA,SAAAv4E,EAAA+oB,GACA,MAAAyvD,EAAAj3C,EAAA,EAAAC,SAAAxhC,GACA,GAAAw4E,EAGA,OAAAb,EAAA,QAAAzuD,iBAAmCsvD,QACnCf,EAAAgB,wBAAAz4E,EAAA+oB,IAUA0uD,EAAAiB,UAAA,SAAA14E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBAAoCuuD,EAAAkB,cACpC34E,EAAA+oB,IAUA0uD,EAAAmB,eAAA,SAAA54E,EAAA+oB,GACA,MAAAza,EAAAtO,EAAAuqB,aAAA,QACA5U,EAAAgiE,EAAA,QAAAzuD,mBACAuuD,EAAAoB,mBAAA74E,EAAA+oB,GACApT,IAIAoT,IAAA5kB,OAAA,GACAmK,GAAAqH,IAUA8hE,EAAAqB,wBAAA,SAAA94E,EACA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACAuuD,EAAAsB,6BAAA/4E,EACA+oB,IAUA0uD,EAAAuB,WAAA,SAAAh5E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACAuuD,EAAAwB,eAAAj5E,EAAA+oB,IAUA0uD,EAAAyB,2BAAA,SAAAl5E,EACA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACMuuD,EAAA0B,gCAAAn5E,EACN+oB,IAUA0uD,EAAA2B,oBAAA,SAAAp5E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACMuuD,EAAA4B,yBAAAr5E,EACN+oB,IAUA0uD,EAAA6B,qBAAA,SAAAt5E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACMuuD,EAAA8B,0BAAAv5E,EACN+oB,IAUA0uD,EAAA+B,WAAA,SAAAx5E,EAAA+oB,GACA,OAAAjpB,EAAA,EAAAsB,WAAApB,IASAy3E,EAAAgC,iBACA,KACA,kCASAhC,EAAAG,SAAAD,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAE,sBAAAhC,EAAA,QAAA1uC,yBACAwuC,EAAAyB,4BACAU,gBAAAjC,EAAA,QAAA1uC,yBACAwuC,EAAA6B,sBACAO,mBAAAlC,EAAA,QAAA1uC,yBACAwuC,EAAAqB,2BASArB,EAAAK,iBAAAH,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAK,cAAAnC,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACA24E,KAAApC,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,YACA44E,mBAAArC,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACA64E,WAAAtC,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,YACA84E,QAAAvC,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,YACA+4E,sBAAAxC,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,cASAq2E,EAAAO,wBAAAL,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAW,MAAAzC,EAAA,QAAA0C,yBAAA5C,EAAA+B,cASA/B,EAAAS,oBAAAP,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAa,cAAA3C,EAAA,QAAA1uC,yBACAwuC,EAAAM,sBASAN,EAAAW,sBAAAT,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAc,MAAA5C,EAAA,QAAA1uC,yBAAAwuC,EAAAuB,YACAwB,QAAA7C,EAAA,QAAA1uC,yBAAAwuC,EAAAI,gBASAJ,EAAAa,aAAAX,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAgB,KAAA9C,EAAA,QAAA1uC,yBAAAwuC,EAAAiB,aASAjB,EAAAkB,cAAAhB,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAiB,IAAA/C,EAAA,QAAA0C,yBAAA5C,EAAAc,UACAoC,UAAAn6E,IASAi3E,EAAAoB,mBAAAlB,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAmB,IAAAjD,EAAA,QAAA1uC,yBAAAwuC,EAAAY,YASAZ,EAAAsB,6BAAApB,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAoB,UAAApD,EAAAmB,iBASAnB,EAAAwB,eAAAtB,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAqB,MAAAnD,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,YACA25E,UAAApD,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,cASAq2E,EAAAgB,wBAAAd,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAuB,WAAArD,EAAA,QAAA0C,yBACA5C,EAAAQ,mBASAR,EAAA4B,yBACA1B,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAwB,eAAAtD,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACA85E,aAAAvD,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,YACA+5E,YAAAxD,EAAA,QAAA1uC,yBACAwuC,EAAAU,oBASAV,EAAA0B,gCACAxB,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACA2B,SAAAzD,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,YACAi6E,kBAAA1D,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,YACAk6E,KAAA3D,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,YACAm6E,MAAA5D,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,YACAo6E,mBAAA7D,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACAq6E,YAAA9D,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,cASAq2E,EAAA8B,0BACA5B,EAAA,QAAA+B,gBACAjC,EAAAgC,iBACAiC,aAAA/D,EAAA,QAAA1uC,yBAAAnpC,EAAA,EAAAsB,YACAu6E,aAAAhE,EAAA,QAAA1uC,yBAAA1H,EAAA,EAAAC,UACAo6C,eAAAjE,EAAA,QAAA1uC,yBACAwuC,EAAA2B,uBAEA,IAAAyC,EAAA,EC1ZA,MAAAC,EAAA,WACA3hE,EAAA,QAAAhX,KAAAC,MAMAA,KAAA24E,WAAA,IAAAF,GAGAp4E,OAAA6+B,EAAA,SAAA7+B,CAAAq4E,EAAA3hE,EAAA,SAWA2hE,EAAAn4E,UAAAmsB,KAMAgsD,EAAAn4E,UAAA00B,iBAAA,SAAA1d,GACA,QAAA9R,EAAA8R,EAAAK,WAA8BnS,EAAGA,IAAAoS,YACjC,GAAApS,EAAAqS,UAAAC,KAAAC,aACA,OAAAhY,KAAAk1B,aAAAzvB,GAGA,aAOAizE,EAAAn4E,UAAA20B,aAAA,SAAAt4B,GACA,MAAAmnC,EAAAnnC,EAAAuqB,aAAA,WAAAlpB,OACA,IAAA26E,EAAA54E,KAAA24E,WAAAzjD,aAAAt4B,GACA,OAAAg8E,GAGAA,EAAA,QAAA70C,GACA60C,EAAArE,EAAA,QAAAzuD,gBAAA8yD,EACAF,EAAAlE,SAAA53E,QACA,MALA,MAeA87E,EAAAG,cAAA,SAAAj8E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACA4yD,EAAAI,kBAAAl8E,EAAA+oB,IAUA+yD,EAAAK,WAAA,SAAAn8E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACA4yD,EAAAM,eAAAp8E,EAAA+oB,IAUA+yD,EAAAO,mBAAA,SAAAr8E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACA4yD,EAAAQ,aAAAt8E,EAAA+oB,IAUA+yD,EAAAS,WAAA,SAAAv8E,EAAA+oB,GACA,MAAA23B,EAAAi3B,EAAA,QAAAzuD,mBACA4yD,EAAAU,eAAAx8E,EAAA+oB,GACA,IAAA23B,EACA,OAEA,MAAA+7B,EAAA,SAAAz8E,EAAAuqB,aAAA,aAEA,OADAm2B,EAAA,UAAA+7B,EACA/7B,GAWAo7B,EAAAY,uBAAA,SAAA18E,EACA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACA4yD,EAAAa,mBAAA38E,EAAA+oB,IAUA+yD,EAAAc,gBAAA,SAAA58E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACA4yD,EAAAe,mBAAA78E,EAAA+oB,IAUA+yD,EAAAgB,iBAAA,SAAA98E,EAAA+oB,GACA,MAAA3F,EAAApjB,EAAAuqB,aAAA,UACAwyD,EAAA/8E,EAAAuqB,aAAA,YACAyyD,EAAAh9E,EAAAuqB,aAAA,gBACA0yD,KAUA,OATA75D,IACA65D,EAAA,OAAA75D,GAEA25D,IACAE,EAAA,SAAAF,GAEAC,IACAC,EAAA,aAAAD,GAEAC,GAUAnB,EAAAoB,sBAAA,SAAAl9E,EAAA+oB,GACA,MAAA/lB,EAAA20E,EAAA,QAAAzuD,mBACA4yD,EAAAqB,oBAAAn9E,EAAA+oB,GACA,MAAA/lB,EAAAmB,OAGA,OAAAV,OAAAoE,EAAA,eAAApE,CAAAT,IAUA84E,EAAAsB,eAAA,SAAAp9E,EAAA+oB,GACA,MAAAs0D,KAGA,OAFAA,EAAA,OAAAr9E,EAAAuqB,aAAA,UACA8yD,EAAA,KAAA97C,EAAA,EAAAC,SAAAxhC,GACAq9E,GAUAvB,EAAAwB,iBAAA,SAAAt9E,EAAA+oB,GACA,MAAA/lB,EAAAlD,EAAA,EAAAsB,WAAApB,GAAAwpB,MAAA,KACA,IAAAxmB,GAAA,GAAAA,EAAAmB,OACA,OAEA,MAAAO,GAAA1B,EAAA,GACA2B,GAAA3B,EAAA,GACA,OAAAnC,MAAA6D,IAAA7D,MAAA8D,QAAA,GAGAD,EAAAC,IAUAm3E,EAAAyB,gBAAA,SAAAv9E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACA4yD,EAAA0B,YAAAx9E,EAAA+oB,IAUA+yD,EAAA2B,0BAAA,SAAAz9E,EACA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACA4yD,EAAA4B,yBAAA19E,EACA+oB,IAUA+yD,EAAA6B,sBAAA,SAAA39E,EAAA+oB,GACA,OAAA4uD,EAAA,QAAAzuD,mBACA4yD,EAAA8B,oBAAA59E,EAAA+oB,IASA+yD,EAAArC,iBACA,KACA,mCASAqC,EAAA+B,qBACA,KACA,kCASA/B,EAAAlE,SAAAD,EAAA,QAAA+B,gBACAoC,EAAArC,iBACAqE,SAAAnG,EAAA,QAAA1uC,yBACA6yC,EAAAG,iBASAH,EAAAI,kBAAAvE,EAAA,QAAA+B,gBACAoC,EAAArC,iBACAsE,MAAApG,EAAA,QAAA0C,yBACAyB,EAAAK,YACA6B,cAAArG,EAAA,QAAA0C,yBACAyB,EAAAO,sBASAP,EAAAM,eAAAzE,EAAA,QAAA+B,gBACAoC,EAAArC,iBACAwE,MAAAtG,EAAA,QAAA0C,yBACAyB,EAAAS,YACA2B,OAAAvG,EAAA,QAAA0C,yBACAv6E,EAAA,EAAAsB,YACA+8E,kBAAAxG,EAAA,QAAA0C,yBACAyB,EAAAY,wBACA0B,UAAAzG,EAAA,QAAA0C,yBACAyB,EAAAc,iBACAyB,YAAA1G,EAAA,QAAA0C,yBACAyB,EAAAgB,mBACGnF,EAAA,QAAA+B,gBAAAoC,EAAA+B,qBACHtC,MAAA5D,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACAg6E,SAAAzD,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACAk9E,iBAAA3G,EAAA,QAAA1uC,yBACA6yC,EAAAoB,uBACAqB,WAAA5G,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,eASA06E,EAAAU,eAAA7E,EAAA,QAAA+B,gBACAoC,EAAArC,iBACA+E,UAAA7G,EAAA,QAAA0C,yBACAyB,EAAAsB,iBACGzF,EAAA,QAAA+B,gBAAAoC,EAAA+B,qBACHtC,MAAA5D,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACAm9E,WAAA5G,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,eASA06E,EAAAa,mBAAAhF,EAAA,QAAA+B,gBACAoC,EAAArC,iBACAuE,cAAArG,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACAq9E,oBAAA9G,EAAA,QAAA1uC,yBACA6yC,EAAA2B,6BAQA3B,EAAA4B,yBAAA/F,EAAA,QAAA+B,gBACAoC,EAAArC,iBACAiF,iBAAA/G,EAAA,QAAAxtD,gBACA2xD,EAAA6B,yBASA7B,EAAA8B,oBAAAjG,EAAA,QAAA+B,gBACAoC,EAAArC,iBACAkF,WAAAhH,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACAw9E,WAAAjH,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAmB,wBACA49E,WAAAlH,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAmB,wBACA69E,WAAAnH,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAmB,wBACA89E,WAAApH,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAmB,0BASA66E,EAAAe,mBAAAlF,EAAA,QAAA+B,gBACAoC,EAAArC,iBACAuF,QAAArH,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACAg5E,MAAAzC,EAAA,QAAA0C,yBACAv6E,EAAA,EAAAsB,aACGu2E,EAAA,QAAA+B,gBAAAoC,EAAA+B,qBACHU,WAAA5G,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,eASA06E,EAAAqB,oBAAAxF,EAAA,QAAA+B,gBACAoC,EAAA+B,qBACAoB,YAAAtH,EAAA,QAAAxtD,gBACA2xD,EAAAwB,kBACA4B,YAAAvH,EAAA,QAAAxtD,gBACA2xD,EAAAwB,oBASAxB,EAAAQ,aAAA3E,EAAA,QAAA+B,gBACAoC,EAAArC,iBACA0F,kBAAAxH,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACAu9E,WAAAhH,EAAA,QAAA0C,yBACAyB,EAAAyB,kBACG5F,EAAA,QAAA+B,gBAAAoC,EAAA+B,qBACHuB,aAAAzH,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,YACAm9E,WAAA5G,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,eASA06E,EAAA0B,YAAA7F,EAAA,QAAA+B,gBACAoC,EAAArC,iBACA4F,cAAA1H,EAAA,QAAA1uC,yBACA6yC,EAAAwB,kBACAgC,iBAAA3H,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAgB,aACAy+E,UAAA5H,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAmB,wBACAu+E,WAAA7H,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAmB,wBACAw+E,YAAA9H,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAmB,wBACAy+E,aAAA/H,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAmB,yBACG02E,EAAA,QAAA+B,gBAAAoC,EAAA+B,qBACHU,WAAA5G,EAAA,QAAA1uC,yBACAnpC,EAAA,EAAAsB,eAEAyB,EAAA,yFCxdA,QAAAhD,EAAA,SACAA,EAAA,MACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDARA,IAAM6M,GAsBNA,YAAsB,SAASizE,GAC7B/uE,EAAA1D,QAAY0yE,iBAAiBD,EAA7BE,EAAA3yE,SAEAzJ,OAAOq8E,eAAeH,EAAa,UACjClyE,IAAK,kBAAMkyE,EAAYI,aACvBjwE,IAAK,SAAC+I,GACJ8mE,EAAYK,UAAUnnE,OAiB5BnM,MAAgB,SAASmD,GACvBe,EAAA1D,QAAY0yE,iBAAiB/vE,EAA7BowE,EAAA/yE,SAEAzJ,OAAOq8E,eAAejwE,EAAO,WAC3BqwE,cAAc,EAIdzyE,IAAK,kBAAMoC,EAAMuiB,cAIjBtiB,IAAK,SAAC+I,GACJhJ,EAAMsf,WAAWtW,MAIrBpV,OAAOq8E,eAAejwE,EAAO,WAC3BqwE,cAAc,EAIdzyE,IAAK,kBAAMoC,EAAMswE,cAIjBrwE,IAAK,SAAC+I,GACJhJ,EAAMuwE,WAAWvnE,OAmBvBnM,aAAuB,SAASmD,EAAOgG,GAErC,IAAIwE,SAKAgmE,EAAkB,KAKlBC,EAAkB,KAMhBC,EAoDN,SAASC,EAAW3wE,GAClB,IAAI4wE,EAAoC5wE,EAAMpC,IAAI,cAClD,IAAMiJ,EAAuC7G,EAAMpC,IAAI,gBACvDoC,EAAMC,IAAI,eAAgB2wE,GAAY,GAClC/pE,GACF8pE,EAAW9pE,IAnDTgqE,EA4DN,SAASC,EAAW9wE,GAClB,IAAI4wE,EAAoC5wE,EAAMpC,IAAI,cAClD,IAAMiJ,EAAuC7G,EAAMpC,IAAI,gBACvDoC,EAAMC,IAAI,eAAgB2wE,GAAY,GAClC/pE,GACFiqE,EAAWjqE,IAtDf,GATA7G,EAAMC,IAAI,aAAc,GAAG,GAEvBD,wBACFA,EAAMiJ,YAAY8nE,GAAG,MAAO,SAACC,GACVA,EAAQC,QAChBhxE,IAAI,eAAgBD,KAI7BA,uBAA+B,CAEjC,GAAe,QADfwK,EAASxK,EAAM+iB,aAEb,OACSvY,wBACTgmE,GAAmB,iBACnBC,GAAmB,cAAe,kBACzBjmE,wBACTgmE,GAAmB,kBACnBC,GAAmB,eAAgB,mBAEnC1vE,EAAA1D,QAAY4E,KAAK,2BAGnBuI,EAAOumE,GAAGP,EAAiB,WACzBE,EAAoB1wE,GACpBgG,EAAOkrE,gBAGT1mE,EAAOumE,GAAGN,EAAiB,WACzBI,EAAoB7wE,GACpBgG,EAAOkrE,gBAIXt9E,OAAOq8E,eAAejwE,EAAO,WAC3BqwE,cAAc,EACdzyE,IAAK,kBAA6BoC,EAAMpC,IAAI,cAAiB,iBAiClDf,+FC1Lf,QAAA7M,EAAA,QAGAA,EAAA,UAEAA,EAAA,UACAA,EAAA,MACAA,EAAA,WAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,UAGAA,EAAA,OAEAA,EAAA,WACAA,EAAA,UACAA,EAAA,UAGAA,EAAA,QAEAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,IACY2M,IAAZ3M,EAAA,IACY4M,IAAZ5M,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,MACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,yUA+BA,IAAM6M,EAAU,SAAVA,EAAmBG,EAAIqmB,EAAUpd,EAAYlJ,EAAWo0E,EAAcC,EAC1E5tD,EAAkBhX,GAAc,IAAA5M,EAAArM,KAMhCA,KAAK89E,GAAKr0E,EAMVzJ,KAAK8S,WAAaJ,EAMlB1S,KAAKkwB,UAAYJ,EASjB9vB,KAAK+9E,+BAAiC,KAQtC/9E,KAAKg+E,cAAgBJ,EAMrB59E,KAAKi+E,iBAAmBJ,EAMxB79E,KAAK4wB,kBAAoBX,EAMzBjwB,KAAKk+E,cAAgB10E,EAAUY,IAAI,gBACjCZ,EAAUa,IAAI,gBAAkB,KAMlCrK,KAAKm+E,wBAA0B30E,EAAUY,IAAI,0BAC3CZ,EAAUa,IAAI,0BAA4B,KAK5C,IAAM+zE,EAAwB50E,EAAUY,IAAI,yBAC1CZ,EAAUa,IAAI,yBAA2B,KAM3CrK,KAAKq+E,gBAAkBD,EACrBA,EAAsBrgC,oBAAsB,KAM9C/9C,KAAKs+E,eAAiB90E,EAAUY,IAAI,qBAClCZ,EAAUa,IAAI,qBAAuB,KAMvCrK,KAAKu+E,aAAe/0E,EAAUY,IAAI,eAChCZ,EAAUa,IAAI,eAAiB,KAMjC,IAAMm0E,EAAsBh1E,EAAUY,IAAI,uBACxCZ,EAAUa,IAAI,0BA+FhB,IA9F4C,IAAxCm0E,EAAoBC,iBAEtBz+E,KAAK4wB,kBAAkBtX,oBAAmB,GAO5CtZ,KAAK0+E,6BAA+BF,EAAoBG,0BAMxD3+E,KAAK4+E,+BACHp1E,EAAUY,IAAI,iCACZZ,EAAUa,IAAI,iCAAmC,KAMrDrK,KAAKswB,WAAa9mB,EAAUY,IAAI,aAAeZ,EAAUa,IAAI,aAAe,KAM5ErK,KAAK6+E,yBAA2Br1E,EAAUY,IAAI,2BAC5CZ,EAAUa,IAAI,2BAA6B,KAM7CrK,KAAK8+E,iBAAmBt1E,EAAUY,IAAI,mBACpCZ,EAAUa,IAAI,mBAAqB,KAMrCrK,KAAK++E,cAAgBv1E,EAAUY,IAAI,gBACjCZ,EAAUa,IAAI,qBAAkBjN,EAMlC4C,KAAKg/E,gBAAkBx1E,EAAUY,IAAI,kBACnCZ,EAAUa,IAAI,kBAAoB,KAQpCrK,KAAKuK,cAAgB0O,EAMrBjZ,KAAKi/E,kBAAoBz1E,EAAUY,IAAI,oBACrCZ,EAAUa,IAAI,oBAAsB,KAMtCrK,KAAKk/E,SAAW11E,EAAUY,IAAI,WAC5BZ,EAAUa,IAAI,WAAa,KAM7BrK,KAAKm/E,KAAO,KAMZn/E,KAAKo/E,oBAAsB51E,EAAUY,IAAI,sBACvCZ,EAAUa,IAAI,sBAAwB,KAOxCrK,KAAKq/E,mBAAqB,UACkBjiF,IAAxCohF,EAAoBc,iBAAiCt/E,KAAKo/E,oBAAqB,CACjF,IAAMt0B,EAAc9qD,KAAKo/E,oBAAoBG,kBAAkBf,EAAoBc,iBAC/Ex0B,EAAY/pD,OAAS,IACvBf,KAAKq/E,mBAAqBv0B,GAQ9B9qD,KAAKw/E,kBAAoB,KAMzBx/E,KAAKy/E,qBAEsCriF,IAAvCohF,EAAoBkB,eACtB1/E,KAAKy/E,gBAAkBjB,EAAoBkB,eAE3C1/E,KAAKy/E,iBAAmB,IAAAxhC,EAAAn0C,SACtBm2B,MAAO,IAAA0/C,EAAA71E,SACLgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAO,2BACP0pC,MAAO,IAETj6E,OAAQ,EACRk6E,OAAQ,EACRC,QAAS,EACTtN,MAAO,MAEP,IAAAx0B,EAAAn0C,SACFm2B,MAAO,IAAA0/C,EAAA71E,SACLgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAO,qBACP0pC,MAAO,IAETj6E,OAAQ,EACRk6E,OAAQ,EACRC,QAAS,EACTtN,MAAO,OASbzyE,KAAKggF,YAAc,KAMnBhgF,KAAKigF,mBAAqB,IAAAC,EAAAp2E,SACxBw0C,UAAU,EACV6hC,cAAc,EACdC,gBACEC,UAAaC,EAAAx2E,QAA4B8yB,MACzC2jD,YAAeD,EAAAx2E,QAA4BozB,QAC3CsjD,UAAaF,EAAAx2E,QAA4B8yB,MACzC6jD,SAAYH,EAAAx2E,QAA4BuzB,KACxCqjD,MAASJ,EAAAx2E,QAA4BgzB,aACrC6jD,SAAYL,EAAAx2E,QAA4B+yB,UACxC+jD,QAAWN,EAAAx2E,QAA4BizB,QACvC7xB,KAAQo1E,EAAAx2E,QAA4BkzB,KACpC6jD,YAAeP,EAAAx2E,QAA4BuzB,KAC3CyjD,UAAaR,EAAAx2E,QAA4BmzB,WACzC8jD,YAAeT,EAAAx2E,QAA4BszB,aAC3C4jD,YAAeV,EAAAx2E,QAA4B8yB,MAC3CqkD,YAAeX,EAAAx2E,QAA4BwzB,UAM3Ct9B,KAAKm+E,yBACP9pE,EAAAvK,QAASwK,OACPtU,KAAKm+E,wBACL,SACAn+E,KAAKkhF,oCACLlhF,MAIJA,KAAK8S,WAAWU,IAAI,uBAAwB,SAAC+oB,EAAOtoB,EAAUkB,GAC5D,IAAMC,KACN,GAAID,EAAYvY,KAAKg3B,MAAO,CAC1B,IAAM/e,EAAQZ,EAASU,WACvBnH,EAAA1D,QAAY2D,OAAiB,OAAVoH,GAA4B,QAAVA,GACrC,IAAMmX,EAAoB,OAAVnX,EAChBZ,EAASqC,mBAAmB,SAAC6qE,GAC3B,QAA2B/jF,IAAvB+jF,EAAKvkF,KAAKwO,SAAwB,CACpC,IAAMg2E,EAAQ93E,EAAQ+3E,YAAYC,YAAcH,EAAKvkF,KAAKsO,KAC1DkK,EAASgsE,GAASp1D,SAGjB,CACL,IAAMu1D,KACNpsE,EAAYmB,mBAAmB,SAAC6qE,QACH/jF,IAAvB+jF,EAAKvkF,KAAKwO,UAA8C,OAApB+1E,EAAKxsE,YAC3C4sE,EAAczgF,KAAKqgF,EAAKvkF,KAAKsO,QAGjCkK,EAAS9L,EAAQ+3E,YAAYG,kBAAoBrsE,EAAYvY,KAAKsO,MAAQq2E,EAAc9vE,KAAK,KAE/FpF,EAAKukB,kBAAkBxW,YAAYhF,KAErCpV,KAAK8S,WAAWU,IAAI,yBAA0B,SAAC+oB,EAAOtoB,GACpD,IAAMmB,KACAqsE,EAAUxtE,EAASxH,MAAMswE,aAI/B3nE,GAHmBnB,EAASX,OAAO1W,KAAKg3B,MACtCtqB,EAAQ+3E,YAAYK,aAAep4E,EAAQ+3E,YAAYM,oBACrD1tE,EAASrX,KAAKsO,MACIu2E,EACtBp1E,EAAKukB,kBAAkBxW,YAAYhF,KAMrC,IAAMoC,EAAWxX,KAAK4hF,cAClB5hF,KAAKk+E,gBACP1mE,EAASvK,QAAQ,SAASwL,GACpBzY,KAAKs+E,gBACPt+E,KAAKs+E,eAAehgC,SAAS7lC,GAE/BzY,KAAK6hF,gBAAgBppE,IACpBzY,MAEHA,KAAKk+E,cAAcr1B,OAAOrxC,GAC1BnD,EAAAvK,QAASwK,OAAOtU,KAAKk+E,cAAe,MAAOl+E,KAAK8hF,uBAAwB9hF,MACxEqU,EAAAvK,QAASwK,OAAOtU,KAAKk+E,cAAe,SAAUl+E,KAAK+hF,0BAA2B/hF,OAG5EA,KAAKs+E,gBACPt+E,KAAK8S,WAAWU,IAAI,uBAAwB,WAC1CgE,EAASvK,QAAQ,SAASwL,GACxBzY,KAAKs+E,eAAehgC,SAAS7lC,IAD/BpM,KAMArM,KAAK8+E,kBACP9+E,KAAK8S,WAAWU,IAAIwuE,EAAAl4E,QAAgBg2B,UAAUmiD,eAAgB,SAAC1lD,EAAOrxB,GACpEmB,EAAK61E,eAAeh3E,KAUxBlL,KAAKmiF,oCAAsC,KAEvCniF,KAAKu+E,cAAgBv+E,KAAK4+E,gCAE5B5+E,KAAKoiF,2BAA2Bx0E,KAAK,WAGnCyG,EAAAvK,QAASwK,OACPjI,EAAKuyE,+BAA+ByD,oBACpC,MACAh2E,EAAKi2E,oCAHPj2E,GAMAgI,EAAAvK,QAASwK,OACPjI,EAAKuyE,+BAA+ByD,oBACpC,SACAh2E,EAAKk2E,uCAHPl2E,GAMAgI,EAAAvK,QAASwK,OACPjI,EAAKuyE,+BAA+B4D,qBACpC,MACAn2E,EAAKi2E,oCAHPj2E,GAMAgI,EAAAvK,QAASwK,OACPjI,EAAKuyE,+BAA+B4D,qBACpC,SACAn2E,EAAKk2E,uCAHPl2E,GArByC,IAAA8S,GAAA,EAAAC,GAAA,EAAAC,OAAAjiB,EAAA,IA8BzC,QAAAkiB,EAAAC,EAAuBlT,EAAKuyE,+BAA+B6D,UAA3DjjE,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsE,KAA3DujE,EAA2DpjE,EAAA/M,MACpElG,EAAKs2E,yBAAyBD,IA/BS,MAAA3oE,GAAAqF,GAAA,EAAAC,EAAAtF,EAAA,aAAAoF,GAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,GAAA,IAAAsC,GAAA,EAAAC,GAAA,EAAAC,OAAAzkB,EAAA,IAiCzC,QAAA0kB,EAAAC,EAAwB1V,EAAKuyE,+BAA+BgE,WAA5DpjE,OAAAC,cAAAkC,GAAAG,EAAAC,EAAArC,QAAAC,MAAAgC,GAAA,EAAwE,KAA7DkhE,EAA6D/gE,EAAAvP,MACtElG,EAAKs2E,yBAAyBE,IAlCS,MAAA9oE,GAAA6H,GAAA,EAAAC,EAAA9H,EAAA,aAAA4H,GAAAI,EAAAlC,QAAAkC,EAAAlC,SAAA,WAAA+B,EAAA,MAAAC,MAuC7C7hB,KAAK8iF,+PAUPx5E,EAAQ/I,UAAUwiF,aAAe,WAC/B,IAAMzhF,EAAItB,KAAK4wB,kBAAkB1W,sBAAsBgX,EAAApnB,QAAQqnB,eAAe6xD,OACxEzhF,EAAIvB,KAAK4wB,kBAAkB1W,sBAAsBgX,EAAApnB,QAAQqnB,eAAe8xD,OAE9E,IAAKxlF,MAAM6D,KAAO7D,MAAM8D,GAAI,CAC1B,IAAMghC,GAAUjhC,EAAGC,GACnB,GAAgC,OAA5BvB,KAAKq/E,oBAA+Br/E,KAAKo/E,oBAAqB,CAChE,IAAM8D,EAAmBljF,KAAKm/E,KAAKjwD,UAAUyS,gBACvCwhD,EAAoBnjF,KAAKo/E,oBAAoBgE,4BACjD7gD,EAAQ2gD,EAAiBvhF,YAAauhF,EACtCljF,KAAKq/E,oBACP,GAAI8D,EACF,OAAOA,EAGX,OAAO5gD,EAET,OAAO,MASTj5B,EAAQ/I,UAAU8iF,WAAa,WAC7B,IAAMC,EAAOtjF,KAAK4wB,kBAAkB1W,sBAAsBgX,EAAApnB,QAAQqnB,eAAeoyD,OACjF,OAAO9lF,MAAM6lF,QAAQlmF,EAAYkmF,GAYnCh6E,EAAQ/I,UAAUijF,gBAAkB,WAClC,IAAMC,EAAYzjF,KAAK4wB,kBAAkBzW,uBAAuB+W,EAAApnB,QAAQqnB,eAAeuyD,eACvF,YAAqBtmF,IAAdqmF,EAA0BzjF,KAAK0+E,2BAA6B+E,GASrEn6E,EAAQ/I,UAAUojF,gBAAkB,SAASC,GAC3C,IAAIC,SAEFA,EADED,GAGoB5jF,KAAKm/E,KAAKjwD,UAAU40D,YAE5Ct2E,EAAA1D,QAAYi6E,YAAYF,GAGpB7jF,KAAKw/E,mBACPx/E,KAAKq+E,gBAAgBxgC,cAAc79C,KAAKw/E,mBAG1Cx/E,KAAKw/E,kBAAoB,IAAAwE,EAAAl6E,QACvB,IAAAm6E,EAAAn6E,QAAgB+5E,IAClB7jF,KAAKw/E,kBAAkBlhC,SAASt+C,KAAKy/E,iBAGrCz/E,KAAKq+E,gBAAgB3gC,WAAW19C,KAAKw/E,oBAYvCl2E,EAAQ/I,UAAU2jF,cAAgB,WAChC,OAAOlkF,KAAK4wB,kBAAkB3W,sBAAsBiX,EAAApnB,QAAQqnB,eAAegzD,cAS7E76E,EAAQ/I,UAAU6jF,cAAgB,SAASC,EAAaT,GACtD,IAAIU,SAEFA,EADEV,GAGgB5jF,KAAKm/E,KAAKjwD,UAAU40D,YAExCt2E,EAAA1D,QAAYi6E,YAAYO,GAExB,IAAMC,EAAM7vD,EAAE,UACZ8vD,MAAS,wBACT7uC,KAAQ0uC,IACP,GAEsB,OAArBrkF,KAAKggF,aACPhgF,KAAKm/E,KAAKsF,cAAczkF,KAAKggF,aAG/BhgF,KAAKggF,YAAc,IAAA0E,EAAA56E,SACjB4zE,QAAS6G,EACTI,SAAUL,IAGZtkF,KAAKm/E,KAAKyF,WAAW5kF,KAAKggF,cAY5B12E,EAAQ/I,UAAUqhF,YAAc,WAC9B,IAAMpmB,EAAIx7D,KAAK4wB,kBAAkB3W,sBAAsBiX,EAAApnB,QAAQqnB,eAAe0zD,UAC9E,YAAUznF,IAANo+D,GAAyB,KAANA,EACdhuD,EAAA1D,QAAY2D,OAAOzN,KAAKigF,mBAAmBvoE,aAAa8jD,QAUnElyD,EAAQ/I,UAAUukF,cAAgB,SAASl4E,GAGzC,IAHqD,IAAAwD,EAAApQ,KAE/Cq3B,EAAOr3B,KAAKuK,cAAc2oC,uBAAuB5pC,EAAQ+3E,YAAY0D,YAClExhF,EAAI,EAAGA,EAAI8zB,EAAKt2B,OAAQwC,IAAK,CACpC,IAAMkW,EAAM4d,EAAK9zB,GACXgP,EAAQvS,KAAKuK,cAAcuP,SAASL,GAC1CjM,EAAA1D,QAAY2D,OAAO8E,GACnB3F,EAAW6M,EAAI5Y,MAAMyI,EAAQ+3E,YAAY0D,WAAWhkF,SAAWwR,EAGjEvS,KAAK8S,WAAWkyE,iBAAiB,kBAAMp4E,GAAY,SAACA,GAClD,IAAMuE,KACN,IAAK,IAAMsI,KAAO7M,EAChBuE,EAAO7H,EAAQ+3E,YAAY0D,WAAatrE,GAAO7M,EAAW6M,GAE5DrJ,EAAK7F,cAAc8P,aAAalJ,MAepC7H,EAAQ/I,UAAU89C,OAAS,SAAStvC,GAAK,IAAAmC,EAAAlR,KAEnC+O,IAAQ/O,KAAKm/E,OAIbn/E,KAAKm/E,OACPn/E,KAAKilF,iBACLjlF,KAAKm/E,KAAO,MAGVpwE,IACF/O,KAAKm/E,KAAOpwE,EACR/O,KAAK6+E,yBACP7+E,KAAK6+E,yBAAyBqG,aAAat3E,KAAK,SAAC6K,GAC/CvH,EAAKi0E,aAAap2E,EAAK0J,KAGzBzY,KAAKmlF,aAAap2E,EAAK,SAa7BzF,EAAQ/I,UAAU4kF,aAAe,SAASp2E,EAAKq2E,GAAW,IAAA/yD,EAAAryB,KAElDqlF,EAAOt2E,EAAImgB,UACbqT,SAKJ,GAAI6iD,GAAaA,EAAUE,cAAe,CACxC,IAAMliD,EAAOr0B,EAAIw2E,UACjB/3E,EAAA1D,QAAY2D,OAAO21B,GACnBiiD,EAAKG,IAAIJ,EAAUE,cAAc3jF,YAAayhC,OACzC,CAEL,IADkBpjC,KAAK4wB,kBAAkBzW,uBAAuBsrE,EAAA37E,QAAkB47E,iBAAiBC,SACnF,EACdpjD,EAASviC,KAAK+iF,iBAEZsC,EAAKO,UAAUrjD,GAEjB,IAAM+gD,EAAOtjF,KAAKqjF,kBACLjmF,IAATkmF,GACF+B,EAAKQ,QAAQvC,IAQnBtjF,KAAK+9E,+BAAiC1pE,EAAAvK,QAASwK,OAC7C+wE,EACA,iBACArlF,KAAKg+E,cAAc,WACjB,IAAMz7C,EAAS8iD,EAAKvB,YACdR,EAAO+B,EAAKS,UACZ/5E,KACNA,EAAOmlB,EAAApnB,QAAQqnB,eAAe6xD,OAASnhF,KAAKmhC,MAAMT,EAAO,IACzDx2B,EAAOmlB,EAAApnB,QAAQqnB,eAAe8xD,OAASphF,KAAKmhC,MAAMT,EAAO,IACzDx2B,EAAOmlB,EAAApnB,QAAQqnB,eAAeoyD,OAASD,EACvCjxD,EAAKzB,kBAAkBxW,YAAYrO,IAClC,KAAuB,GAC1B/L,MAGEA,KAAKwjF,mBAAqBxjF,KAAKq+E,iBACjCr+E,KAAK2jF,gBAAgBphD,GAIvB,IAAM8hD,EAAcrkF,KAAKkkF,gBACrBG,GACFrkF,KAAKokF,cAAcC,EAAa9hD,GAIlC,IAAMwjD,EAAmB/lF,KAAKgmF,uBACL,OAArBD,GAA6B/lF,KAAKi/E,mBACpCj/E,KAAKi/E,kBAAkBgH,MAAMF,EAAkBh3E,IASnDzF,EAAQ/I,UAAU0kF,eAAiB,WACjCz3E,EAAA1D,QAAY2D,OACVzN,KAAK+9E,+BAAgC,yBACvC1pE,EAAAvK,QAASo2B,cAAclgC,KAAK+9E,gCAC5B/9E,KAAK+9E,+BAAiC,MAcxCz0E,EAAQ/I,UAAU2lF,mBAAqB,SAAS13E,GAC9C,IAAM2d,EAAYnsB,KAAK4wB,kBAAkB3W,sBAAsBiX,EAAApnB,QAAQqnB,eAAeg1D,UACtF,QAAkB/oF,IAAd+uB,EAAyB,KAAAjK,GAAA,EAAAC,GAAA,EAAAC,OAAAhlB,EAAA,IAC3B,QAAAilB,EAAAC,EAAoB9T,EAApBgR,OAAAC,cAAAyC,GAAAG,EAAAC,EAAA5C,QAAAC,MAAAuC,GAAA,EAA4B,KAAjBzV,EAAiB4V,EAAA9P,MAC1B,GAAI9F,EAAMpC,IAAI,WAAa8hB,EACzB,OAAO1f,GAHgB,MAAAsN,GAAAoI,GAAA,EAAAC,EAAArI,EAAA,aAAAmI,GAAAI,EAAAzC,QAAAyC,EAAAzC,SAAA,WAAAsC,EAAA,MAAAC,IAO7B,OAAO,MAST9Y,EAAQ/I,UAAU2gF,oCAAsC,WACtD,GAAKlhF,KAAKm/E,MAASn/E,KAAKm+E,wBAAxB,CAKA,IACMhyD,EADQnsB,KAAKm+E,wBAAwB9zE,IAAIrK,KAAKm/E,MAC5B90E,IAAI,SAC5BmD,EAAA1D,QAAYkK,aAAamY,GAGzB,IAAMpgB,KACNA,EAAOmlB,EAAApnB,QAAQqnB,eAAeg1D,UAAYh6D,EAC1CnsB,KAAK4wB,kBAAkBxW,YAAYrO,KAYrCzC,EAAQ/I,UAAU6lF,wBAA0B,WAC1C,GAAKpmF,KAAKg/E,gBAAV,CAIA,IACMqH,EADarmF,KAAKg/E,gBAAgBxuD,SAAS5zB,KAAKwO,SACtB2D,IAAI,SAAAnS,GAAA,OAAQA,EAAKsO,OAG3Ca,KACNA,EAAOmlB,EAAApnB,QAAQqnB,eAAeC,aAAei1D,EAAa50E,KAAK,KAC/DzR,KAAK4wB,kBAAkBxW,YAAYrO,KAUrCzC,EAAQ/I,UAAU+lF,YAAc,SAASC,GACvC,IAAMC,EAAeD,EAAa9yE,QAAQ,SAC1C,OAAwB,GAAjB+yE,GAAsBA,GAAgBD,EAAaxlF,OAAS,GAQrEuI,EAAQ/I,UAAU2hF,eAAiB,SAASj2E,GAC1C,GAAIA,EAAW,CACb,IAAMs6E,EAAevmF,KAAKuK,cAAc2nC,UAAU9rB,MAAM,KACxD5Y,EAAA1D,QAAY2D,OAAO84E,EAAaxlF,OAAS,GACK,KAA1CwlF,EAAaA,EAAaxlF,OAAS,IAErCwlF,EAAa7yE,OAAO6yE,EAAaxlF,OAAS,GAExCf,KAAKsmF,YAAYC,GACnBA,EAAaA,EAAaxlF,OAAS,GAAKkL,EAExCs6E,EAAazlF,KAAK,QAASmL,GAE7BjM,KAAKuK,cAAcgpC,QAAQgzC,EAAa90E,KAAK,QAWjDnI,EAAQ/I,UAAUkmF,iBAAmB,WAGnC,IAAMF,EAAevmF,KAAKuK,cAAc2nC,UAAU9rB,MAAM,KACxD,GAAIpmB,KAAKsmF,YAAYC,GACnB,OAAOA,EAAaA,EAAaxlF,OAAS,GAI5C,IAAM2lF,EAAK1mF,KAAK4wB,kBAAkB3W,sBAAsB,SACxD,GAAIysE,EACF,OAAOA,EAGT,IAAMC,EAAe3mF,KAAK4mF,sCAC1B,OAAqB,OAAjBD,EACKA,EAIL3mF,KAAK++E,cACA/+E,KAAK++E,cAGP,MASTz1E,EAAQ/I,UAAUqmF,oCAAsC,WAEtD,IAAK5mF,KAAKk/E,SACR,OAAO,KAET,IAAM2H,EAAkB7mF,KAAKk/E,SAAS2H,gBACtC,GAAIA,GAAmB,kBAAmBA,EAAiB,CACzD,IAAMF,EAAeE,EAAgBC,cACrC,GAAIH,EAAa5lF,OAAS,EACxB,OAAO4lF,EAAa,GAGxB,OAAO,MAOTr9E,EAAQ/I,UAAUuiF,YAAc,WAAW,IAAAtwD,EAAAxyB,KACpCA,KAAKswB,YAGVtwB,KAAKswB,WAAWvgB,kBAAkBnC,KAAK,SAAC3C,GACtC,IAAMgB,EAAYumB,EAAKi0D,mBACvBj5E,EAAA1D,QAAY2D,OAAqB,OAAdxB,GAEfumB,EAAKssD,kBACPtsD,EAAKssD,iBAAiBiI,aAAav0D,EAAKssD,iBAAiBkI,UAAY/6E,EAAY,IAMnF,IAAIglB,KACA9lB,SAEE87E,EAAcz0D,EAAKjoB,cAAcuP,SAASoX,EAAApnB,QAAQqnB,eAAeC,kBACnDh0B,IAAhB6pF,GACFz5E,EAAA1D,QAAYkK,aAAa/H,IACzBd,EAAQmnB,EAAAxoB,QAAekC,gBAAgBf,EAAQgB,MAE7CglB,EAAmB9lB,EAAMC,WAG3B67E,EAAY7gE,MAAM,KAAKnZ,QAAQ,SAACwgB,GAC9B,IAAMpiB,EAAQinB,EAAAxoB,QAAe2B,gBAAgBR,EAAQwiB,GACjDpiB,GACF4lB,EAAiBnwB,KAAKuK,KAKxBmnB,EAAKwsD,iBACPxsD,EAAKwsD,gBAAgBhuD,oBAAoBC,GAG3CuB,EAAKtC,UAAU,WACRsC,EAAKwsD,iBAAoBxsD,EAAKwsD,gBAAgBxuD,WAKnDgC,EAAKwsD,gBAAgBxuD,SAASla,mBAAmB,SAACrC,GAChD,IAAIA,EAASrB,OAAb,CAIA,IAAM6uE,EAAUjvD,EAAK5B,kBAAkB1W,uBACrCjG,EAASX,OAAO1W,KAAKg3B,MACnBtqB,EAAQ+3E,YAAYK,aACpBp4E,EAAQ+3E,YAAYM,oBACpB1tE,EAASrX,KAAKsO,MAIlB,QAHgB9N,IAAZqkF,GAAyBxtE,EAASxH,OACpCwH,EAASxH,MAAMuwE,WAAWyE,GAExBxtE,EAASX,OAAO1W,MAAQqX,EAASX,OAAO1W,KAAKg3B,OAAmCx2B,MAA1B6W,EAASrX,KAAKwO,SAAuB,CAE7F,IAAM87E,EAAS10D,EAAK5B,kBAAkBzW,uBACpC7Q,EAAQ+3E,YAAYC,YAAcrtE,EAASrX,KAAKsO,WAEnC9N,IAAX8pF,GACFjzE,EAASW,SAASsyE,EAAS,KAAO,OAAO,QAEtC,IAAKjzE,EAASrX,KAAKg3B,OAA2B,GAAlB3f,EAASL,MAAY,CAEtD,IAAMuzE,EAAc30D,EAAK5B,kBAAkB3W,sBACzC3Q,EAAQ+3E,YAAYG,kBAAoBvtE,EAASrX,KAAKsO,MAExD,QAAoB9N,IAAhB+pF,EAA2B,CAC7B,IAAMC,EAAmBD,EAAY/gE,MAAM,KAC3CnS,EAASqC,mBAAmB,SAACrC,GAC3B,QAA+B7W,IAA3B6W,EAASrX,KAAKwO,SAAwB,CACxC,IAAM87E,EAAS79E,EAAQgqB,SAAS+zD,EAAkBnzE,EAASrX,KAAKsO,MAChE+I,EAASW,SAASsyE,EAAS,KAAO,OAAO,WAM9B10D,EAAKwsD,gBAAgBxuD,SAASplB,SACtC6B,QAAQ,SAACkI,GACpBA,EAAYmB,mBAAmB,SAACrC,GAC9B,GAA4B,kBAAxBA,EAASU,WAEX,OADA6d,EAAK1f,WAAWyB,WAAW,uBAAwBN,EAAUkB,GACtDyd,EAAA9oB,QAAwBoM,gBAAgBC,eAgB3D7M,EAAQ/I,UAAUuhF,uBAAyB,SAASvlD,GAClD,IAAM9jB,EAAU8jB,EAAMmhD,QACtBlwE,EAAA1D,QAAY0yE,iBAAiB/jE,EAA7BurE,EAAAl6E,SACA9J,KAAK6hF,gBAAgBppE,IAQvBnP,EAAQ/I,UAAUwhF,0BAA4B,SAASxlD,GACrD,IAAM9jB,EAAU8jB,EAAMmhD,QACtBlwE,EAAA1D,QAAY0yE,iBAAiB/jE,EAA7BurE,EAAAl6E,SACA9J,KAAKqnF,mBAAmB5uE,IAU1BnP,EAAQ/I,UAAUshF,gBAAkB,SAASppE,GAC3C,IAAM9E,EAAMvK,EAAO4D,OAAOyL,GAC1BzY,KAAKi+E,iBAAiBqJ,eACpB3zE,EACAU,EAAAvK,QAASwK,OAAOmE,EAAS,SACvBzY,KAAKg+E,cAAch+E,KAAKunF,0BAA2B,KAAK,GAAOvnF,QAUrEsJ,EAAQ/I,UAAU8mF,mBAAqB,SAAS5uE,GAC9C,IAAM9E,EAAMvK,EAAO4D,OAAOyL,GAC1BzY,KAAKi+E,iBAAiBuJ,iBAAiB7zE,GACvC3T,KAAKunF,6BAUPj+E,EAAQ/I,UAAUgnF,0BAA4B,WAC5C,GAAKvnF,KAAKk+E,cAAV,CAGA,IAAM1mE,EAAWxX,KAAKk+E,cAAcvoE,WAC9B/G,EAAO5O,KAAKigF,mBAAmBrnE,cAAcpB,GAE7CzL,KACNA,EAAOmlB,EAAApnB,QAAQqnB,eAAe0zD,UAAYj2E,EAC1C5O,KAAK4wB,kBAAkBxW,YAAYrO,KASrCzC,EAAQ/I,UAAUylF,qBAAuB,WACvC,IAAMyB,EAAWznF,KAAKuK,cAAcuP,SAASoX,EAAApnB,QAAQqnB,eAAeu2D,WACpE,IAAKD,EACH,OAAO,KAGT,IAAME,EAAY3nF,KAAKuK,cAAcqoC,cAAc1hB,EAAApnB,QAAQqnB,eAAey2D,aACpEruE,EAAYvZ,KAAKuK,cAAc2oC,uBAAuB5pC,EAAQ+3E,YAAYn9C,KAE1E2jD,KACFC,SACJ,QAAkB1qF,IAAduqF,EAGkB,QADpBG,EAAc9nF,KAAK+nF,mBAAmBz+E,EAAQ+3E,YAAYn9C,IAAK3qB,KAE7DsuE,EAAa/mF,KAAKgnF,QAKpB,IAAK,IAAIvkF,EAAI,EAAGA,EAAIokF,EAAWpkF,IAET,QADpBukF,EAAc9nF,KAAK+nF,mBAAsBz+E,EAAQ+3E,YAAYn9C,IAAM3gC,EAArD,IAA2DgW,KAEvEsuE,EAAa/mF,KAAKgnF,GAKxB,GAA2B,GAAvBD,EAAa9mF,OACf,OAAO,KAGT,IAAMinF,EAAoBhoF,KAAKuK,cAAcuP,SAASoX,EAAApnB,QAAQqnB,eAAe82D,mBAG7E,OACEC,QAAST,EACTU,eAJ2C,MAAtBH,GAAmD,UAAtBA,GAKlDH,aAAcA,IAYlBv+E,EAAQ/I,UAAUwnF,mBAAqB,SAAS/hE,EAAQzM,GAAW,IAAAwa,EAAA/zB,KAI3DooF,KAwBN,OAtBA7uE,EAAUtM,QAAQ,SAACo7E,GACjB,GAAIA,GAAYn3D,EAAApnB,QAAQqnB,eAAeu2D,WAAaW,GAAYn3D,EAAApnB,QAAQqnB,eAAe82D,mBACnFI,GAAYn3D,EAAApnB,QAAQqnB,eAAey2D,aAA2C,GAA5BS,EAAS50E,QAAQuS,GADvE,CAIA,IAAMzT,EAAQwhB,EAAKxpB,cAAcuP,SAASuuE,GAC1C,GAAK91E,EAAL,CAIA,IAAIo3B,EAAYp3B,EACZA,EAAMkB,QAAQ,MAAQ,IACxBk2B,EAAYp3B,EAAM6T,MAAM,MAG1B,IAAMhX,GACJw7B,SAAUy9C,EAAS58D,QAAQzF,EAAQ,IACnC2jB,UAAWA,GAEby+C,EAAQtnF,KAAKsO,OAGPg5E,EAAQrnF,OAAS,GAAMqnF,WAAW,MAY5C9+E,EAAQ/I,UAAU6hF,yBAA2B,WAAW,IAAA9tD,EAAAt0B,KAEhDsoF,EAAc96E,EAAA1D,QAAY2D,OAAOzN,KAAKu+E,cACtCgK,EAAkB/6E,EAAA1D,QAAY2D,OAClCzN,KAAK4+E,gCAED/vE,KAEA25E,EAAmBxoF,KAAK4wB,kBAAkB5W,gBAC9CkX,EAAApnB,QAAQqnB,eAAes3D,4BACnBC,EAAa1oF,KAAK4wB,kBAAkB5W,gBACxCkX,EAAApnB,QAAQqnB,eAAew3D,2BAEzB,GAAIH,GAAoBE,EAKtB,IAHA,IAAMhnE,EAAa8mE,EAAiBpiE,MAAM9c,EAAQs/E,eAAeC,MAC3Dn6C,EAAOg6C,EAAWtiE,MAAM9c,EAAQs/E,eAAeC,MAHnBnvE,EAAA,SAKzBnW,EAAOC,GAGd,IAAMslF,EAAwBpnE,EAAWne,GAEzC,IAAKulF,EACH,cAGF,IAAMC,EAAkBD,EAAsB1iE,MAC5C9c,EAAQs/E,eAAeI,OACnBt7E,EAAMghC,EAAKnrC,GAEX0lF,EAAcC,EAAAp/E,QAAkBma,sBAAsBvW,GAEtDy7E,EAAuB70D,EAAKwpD,GAAGpzE,QACrCmE,EAAS/N,KAAKqoF,EAAqBv+E,SAE/Bq+E,IAAgBC,EAAAp/E,QAAkB0S,KAAKrK,IACzCm2E,EAAYc,mBAAmB17E,GAAKE,KAClC,SAACsf,GACCi8D,EAAqBj7E,SACnBgf,eACA67D,kBACAE,cACAv7E,SAGJ,WAEEy7E,EAAqBr3E,QACnBi3E,kBACAE,cACAv7E,UAIGu7E,IAAgBC,EAAAp/E,QAAkB0S,KAAKtK,KAChDo2E,EAAYe,oBAAoB37E,GAAKE,KACnC,SAACsf,GACCi8D,EAAqBj7E,SACnBgf,eACA67D,kBACAE,cACAv7E,SAGJ,WAEEy7E,EAAqBr3E,QACnBi3E,kBACAE,cACAv7E,UAMNy7E,EAAqBr3E,QACnBi3E,kBACAE,cACAv7E,SA7DGnK,EAAI,EAAGC,EAAKkrC,EAAK3tC,OAAQwC,EAAIC,EAAID,IAAK,cAAAmW,EAAtCnW,GAML,MA6DN,OAAOvD,KAAK89E,GAAG5uE,IAAIL,GAAUjB,KAC3B,SAAC07E,GAAc,IAAA9mE,GAAA,EAAAC,GAAA,EAAAC,OAAAtlB,EAAA,IACb,QAAAulB,EAAAC,EAAuB0mE,EAAvB9pE,OAAAC,cAAA+C,GAAAG,EAAAC,EAAAlD,QAAAC,MAAA6C,GAAA,EAAkC,KAAvB1U,EAAuB6U,EAAApQ,MAIhC,GAAIzE,EAASm7E,cAAgBC,EAAAp/E,QAAkB0S,KAAKrK,IAAK,KAAAyR,GAAA,EAAAC,GAAA,EAAAC,OAAA1mB,EAAA,IACvD,QAAA2mB,EAAAC,EAAwBlW,EAASi7E,gBAAjCvpE,OAAAC,cAAAmE,GAAAG,EAAAC,EAAAtE,QAAAC,MAAAiE,GAAA,EAAkD,KAAvCuI,EAAuCpI,EAAAxR,MAC1C4a,EAAWm7D,EAAYiB,uBAC3Bz7E,EAASof,aAAT,uBACAf,GAEEgB,GACFo7D,EAAgBiB,wCACdr8D,EACArf,EAASof,aACTpf,EAASJ,MAVwC,MAAAqM,GAAA8J,GAAA,EAAAC,EAAA/J,EAAA,aAAA6J,GAAAI,EAAAnE,QAAAmE,EAAAnE,SAAA,WAAAgE,EAAA,MAAAC,SAiBlD,GAAIhW,EAASm7E,cAAgBC,EAAAp/E,QAAkB0S,KAAKtK,KAAM,KAAAu3E,GAAA,EAAAC,GAAA,EAAAC,OAAAvsF,EAAA,IAI/D,QAAAwsF,EAAAC,EAAwB/7E,EAASi7E,gBAAjCvpE,OAAAC,cAAAgqE,GAAAG,EAAAC,EAAAnqE,QAAAC,MAAA8pE,GAAA,EAAkD,KAAvCt9D,EAAuCy9D,EAAAr3E,MAC1C4a,EAAWm7D,EAAYwB,wBAC3Bh8E,EAASof,aAAT,eACAf,GAEEgB,GACFo7D,EAAgBwB,yCACd58D,EACArf,EAASof,aACTpf,EAASJ,MAbgD,MAAAqM,GAAA2vE,GAAA,EAAAC,EAAA5vE,EAAA,aAAA0vE,GAAAI,EAAAhqE,QAAAgqE,EAAAhqE,SAAA,WAAA6pE,EAAA,MAAAC,MAtBtD,MAAA5vE,GAAA0I,GAAA,EAAAC,EAAA3I,EAAA,aAAAyI,GAAAI,EAAA/C,QAAA+C,EAAA/C,SAAA,WAAA4C,EAAA,MAAAC,KA4Cf,SAACsnE,OAWL1gF,EAAQ/I,UAAU+hF,oCAAsC,SAAS2H,GAC/D,IAAM5+E,EAAQ4+E,EAAIvM,QAClBlwE,EAAA1D,QAAY0yE,iBAAiBnxE,EAA7BiiB,EAAAxjB,SACA9J,KAAK2iF,yBAAyBt3E,GAC9BrL,KAAKkqF,gCAQP5gF,EAAQ/I,UAAUoiF,yBAA2B,SAASt3E,GACpDgJ,EAAAvK,QAASwK,OACPjJ,EAAM8+E,sBACN,MACAnqF,KAAKkqF,6BACLlqF,MAEFqU,EAAAvK,QAASwK,OACPjJ,EAAM8+E,sBACN,SACAnqF,KAAKkqF,6BACLlqF,OAWJsJ,EAAQ/I,UAAU6pF,kBAAoB,SAAS39E,EAAOvB,GACpD,GAAIuB,uBAA+B,KAAA49E,GAAA,EAAAC,GAAA,EAAAC,OAAAntF,EAAA,IACjC,QAAAotF,EAAAC,EAAgBh+E,EAAMiJ,YAAYC,WAAlC6J,OAAAC,cAAA4qE,GAAAG,EAAAC,EAAA/qE,QAAAC,MAAA0qE,GAAA,EAA8C,KAAnCh7E,EAAmCm7E,EAAAj4E,MAE5C,GADA/E,EAAA1D,QAAY2D,OAAO4B,GACfrP,KAAKoqF,kBAAkB/6E,EAAGnE,GAC5B,OAAO,GAJsB,MAAA6O,GAAAuwE,GAAA,EAAAC,EAAAxwE,EAAA,aAAAswE,GAAAI,EAAA5qE,QAAA4qE,EAAA5qE,SAAA,WAAAyqE,EAAA,MAAAC,GAOjC,OAAO,EAEP,OAAO99E,EAAMpC,IAAI,kBAAoBa,GASzC5B,EAAQ/I,UAAUgiF,uCAAyC,SAAS0H,GAClE,IAAM5+E,EAAQ4+E,EAAIvM,QAClBlwE,EAAA1D,QAAY0yE,iBAAiBnxE,EAA7BiiB,EAAAxjB,SACA9J,KAAK0qF,2BAA2Br/E,GAChCrL,KAAKkqF,gCAQP5gF,EAAQ/I,UAAUmqF,2BAA6B,SAASr/E,GACtDgJ,EAAAvK,QAASunE,SACPhmE,EAAM8+E,sBACN,MACAnqF,KAAKkqF,6BACLlqF,MAEFqU,EAAAvK,QAASunE,SACPhmE,EAAM8+E,sBACN,SACAnqF,KAAKkqF,6BACLlqF,OASJsJ,EAAQ/I,UAAU2pF,6BAA+B,WAAW,IAAAp1D,EAAA90B,KAEtDA,KAAKmiF,qCACPniF,KAAKkwB,UAAUgC,OAAOlyB,KAAKmiF,qCAG7BniF,KAAKmiF,oCAAsCniF,KAAKkwB,UAAU,WAAM,IAAAy6D,EACxD/6D,KACA8e,KAFwDk8C,GAAA,EAAAC,GAAA,EAAAC,OAAA1tF,EAAA,IAK9D,QAAA2tF,EAAAC,EAAuBl2D,EAAK8pD,+BAA+B6D,UAA3DjjE,OAAAC,cAAAmrE,GAAAG,EAAAC,EAAAtrE,QAAAC,MAAAirE,GAAA,EAAsE,KAA3DlI,EAA2DqI,EAAAx4E,MAGpEm8B,EAAK5tC,KAAK4hF,EAASh1E,KAGnB,IAAMu9E,KAN8DC,GAAA,EAAAC,GAAA,EAAAC,OAAAhuF,EAAA,IAOpE,QAAAiuF,EAAAC,EAA4B5I,EAASt1C,YAArC5tB,OAAAC,cAAAyrE,GAAAG,EAAAC,EAAA5rE,QAAAC,MAAAurE,GAAA,EAAkD,KAAvCK,EAAuCF,EAAA94E,MAChD/E,EAAA1D,QAAY0yE,iBAAiB+O,EAA7BrC,EAAAp/E,SAKA,IAAMqiB,EAAYo/D,EAAchpE,mBAAmB,GACnD0oE,EAAmBnqF,KAAKqrB,IAd0C,MAAApS,GAAAoxE,GAAA,EAAAC,EAAArxE,EAAA,aAAAmxE,GAAAI,EAAAzrE,QAAAyrE,EAAAzrE,SAAA,WAAAsrE,EAAA,MAAAC,GAgBpEx7D,EAAM9uB,KAAKmqF,EAAmBx5E,KAAKnI,EAAQs/E,eAAeI,SArBE,MAAAjvE,GAAA8wE,GAAA,EAAAC,EAAA/wE,EAAA,aAAA6wE,GAAAI,EAAAnrE,QAAAmrE,EAAAnrE,SAAA,WAAAgrE,EAAA,MAAAC,GAAA,IAAAU,GAAA,EAAAC,GAAA,EAAAC,OAAAtuF,EAAA,IAyB9D,QAAAuuF,EAAAC,EAAwB92D,EAAK8pD,+BAA+BgE,WAA5DpjE,OAAAC,cAAA+rE,GAAAG,EAAAC,EAAAlsE,QAAAC,MAAA6rE,GAAA,EAAwE,KAA7D3I,EAA6D8I,EAAAp5E,MAGtEm8B,EAAK5tC,KAAK+hF,EAAUn1E,KAGpB,IAAMm+E,KANgEC,GAAA,EAAAC,GAAA,EAAAC,OAAA5uF,EAAA,IAOtE,QAAA6uF,EAAAC,EAA6BrJ,EAAUz1C,YAAvC5tB,OAAAC,cAAAqsE,GAAAG,EAAAC,EAAAxsE,QAAAC,MAAAmsE,GAAA,EAAoD,KAAzCK,EAAyCF,EAAA15E,MAClD/E,EAAA1D,QAAY2D,OAAO0+E,EAAeptE,WAClC8sE,EAAoB/qF,KAAKqrF,EAAeptE,YAT4B,MAAAhF,GAAAgyE,GAAA,EAAAC,EAAAjyE,EAAA,aAAA+xE,GAAAI,EAAArsE,QAAAqsE,EAAArsE,SAAA,WAAAksE,EAAA,MAAAC,GAWtEp8D,EAAM9uB,KAAK+qF,EAAoBp6E,KAAKnI,EAAQs/E,eAAeI,SApCC,MAAAjvE,GAAA0xE,GAAA,EAAAC,EAAA3xE,EAAA,aAAAyxE,GAAAI,EAAA/rE,QAAA+rE,EAAA/rE,SAAA,WAAA4rE,EAAA,MAAAC,GAwC9D52D,EAAKlE,kBAAkBxW,aAAvBgyE,EAAAzB,KACGz5D,EAAApnB,QAAQqnB,eAAes3D,2BAA6B74D,EAAMne,KACzDnI,EAAQs/E,eAAeC,OAF3BuD,EAAAzB,EAIGz5D,EAAApnB,QAAQqnB,eAAew3D,0BAA4Bj6C,EAAKj9B,KACvDnI,EAAQs/E,eAAeC,OAL3B8B,IAUA71D,EAAKqtD,oCAAsC,QAS/C74E,EAAQ/I,UAAUsxB,YAAc,SAASnE,GAAQ,IAAA2+D,EAAArsF,KACzCq3B,EAAO7pB,EAAA1D,QAAY2D,OAAOzN,KAAKuK,cAAciP,gBADJ8yE,GAAA,EAAAC,GAAA,EAAAC,OAAApvF,EAAA,IAE/C,QAAAqvF,EAAAC,EAAkBr1D,EAAlB7X,OAAAC,cAAA6sE,GAAAG,EAAAC,EAAAhtE,QAAAC,MAAA2sE,GAAA,EAAwB,KAAb7yE,EAAagzE,EAAAl6E,MACtB,GAAIkH,EAAIkzE,WAAWrjF,EAAQ+3E,YAAYG,mBAAoB,CACzD,IAAMjvE,EAAQkH,EAAIwiB,UAAU3yB,EAAQ+3E,YAAYG,kBAAkBzgF,QADT6rF,GAAA,EAAAC,GAAA,EAAAC,OAAA1vF,EAAA,IAEzD,QAAA2vF,EAAAC,EAAoBt/D,EAApBlO,OAAAC,cAAAmtE,GAAAG,EAAAC,EAAAttE,QAAAC,MAAAitE,GAAA,EAA4B,CAC1B,GAD0BG,EAAAx6E,MAChBrH,MAAQqH,EAAO,CACvBvS,KAAK4wB,kBAAkBtW,YAAYb,GACnC,QALqD,MAAAM,GAAA8yE,GAAA,EAAAC,EAAA/yE,EAAA,aAAA6yE,GAAAI,EAAAntE,QAAAmtE,EAAAntE,SAAA,WAAAgtE,EAAA,MAAAC,IAS3D,GAAIrzE,EAAIkzE,WAAWrjF,EAAQ+3E,YAAYM,oBAAqB,CAC1D,IAAMpvE,EAAQkH,EAAIwiB,UAAU3yB,EAAQ+3E,YAAYM,mBAAmB5gF,QADTksF,GAAA,EAAAC,GAAA,EAAAC,OAAA/vF,EAAA,IAE1D,QAAAgwF,EAAAC,EAAoB3/D,EAApBlO,OAAAC,cAAAwtE,GAAAG,EAAAC,EAAA3tE,QAAAC,MAAAstE,GAAA,EAA4B,CAC1B,GAD0BG,EAAA76E,MAChBrH,MAAQqH,EAAO,CACvBvS,KAAK4wB,kBAAkBtW,YAAYb,GACnC,QALsD,MAAAM,GAAAmzE,GAAA,EAAAC,EAAApzE,EAAA,aAAAkzE,GAAAI,EAAAxtE,QAAAwtE,EAAAxtE,SAAA,WAAAqtE,EAAA,MAAAC,MAZf,MAAApzE,GAAAwyE,GAAA,EAAAC,EAAAzyE,EAAA,aAAAuyE,GAAAI,EAAA7sE,QAAA6sE,EAAA7sE,SAAA,WAAA0sE,EAAA,MAAAC,GAsB/CxsF,KAAKkwB,UAAU,WACb,GAAKm8D,EAAKlN,KAAV,CAGA,IAAM1yE,EAAQ4/E,EAAKlN,KAAKxxD,gBACxBngB,EAAA1D,QAAY2D,OAAOhB,GALA,IAAA6gF,GAAA,EAAAC,GAAA,EAAAC,OAAApwF,EAAA,IAMnB,QAAAqwF,EAAAC,EAAkBr2D,EAAlB7X,OAAAC,cAAA6tE,GAAAG,EAAAC,EAAAhuE,QAAAC,MAAA2tE,GAAA,EAAwB,KAAb7zE,EAAag0E,EAAAl7E,MACtB,GAAIkH,EAAIkzE,WAAWrjF,EAAQ+3E,YAAYC,aAAc,CACnD,IAAM/uE,EAAQkH,EAAIwiB,UAAU3yB,EAAQ+3E,YAAYC,YAAYvgF,QACvDsrF,EAAKjC,kBAAkB39E,EAAO8F,IACjC85E,EAAKz7D,kBAAkBtW,YAAYb,GAGvC,GAAIA,EAAIkzE,WAAWrjF,EAAQ+3E,YAAYK,cAAe,CACpD,IAAMnvE,EAAQkH,EAAIwiB,UAAU3yB,EAAQ+3E,YAAYK,aAAa3gF,QACxDsrF,EAAKjC,kBAAkB39E,EAAO8F,IACjC85E,EAAKz7D,kBAAkBtW,YAAYb,KAhBtB,MAAAM,GAAAwzE,GAAA,EAAAC,EAAAzzE,EAAA,aAAAuzE,GAAAI,EAAA7tE,QAAA6tE,EAAA7tE,SAAA,WAAA0tE,EAAA,MAAAC,SAwBvBlkF,EAAQ8I,OAASC,QAAQD,OAAO,gBAC9Bu7E,EAAA7jF,QAAuBoB,KACvBonB,EAAAxoB,QAAesI,OAAOlH,KACtB82E,EAAAl4E,QAAgBsI,OAAOlH,KACvB0iF,EAAA9jF,QAAiBoB,KACjB2iF,EAAA/jF,QAAoBsI,OAAOlH,KAC3B0nB,EAAA9oB,QAAwBsI,OAAOlH,QAGlBsH,QAAQ,eAAgBlJ,GAMvCA,EAAQwkF,2BACN5wD,QAAS,WAMX5zB,EAAQ+3E,aACN0D,WAAY,OACZzD,YAAa,eACbE,kBAAmB,qBACnBG,mBAAoB,sBACpBD,aAAc,gBACdx9C,IAAK,QAQP56B,EAAQs/E,gBACNC,KAAM,IACNG,MAAO,KAIT1/E,EAAQ8I,OAAOG,MAAM,0BAKrB,WACE,IAAMw7E,KACN,IAAK,IAAMC,KAAQ1kF,EAAQ+3E,YACzB0M,EAAOjtF,KAAK,IAAI0Z,OAAUlR,EAAQ+3E,YAAY2M,GAAlC,OAEd,IAAK,IAAMC,KAAQ/8D,EAAApnB,QAAQqnB,eACzB48D,EAAOjtF,KAAK,IAAI0Z,OAAOlR,EAAQ+3E,YAAY4M,KAE7Cj5D,EAAAlrB,QAAwBsI,OAAOG,MAAM,oBAAqBw7E,GAR5D,aAYezkF,sGC7hDf,QAAA7M,EAAA,SACAA,EAAA,MACAA,EAAA,MACY2M,0JAAZ3M,EAAA,uDAgBA,IAAM6M,EAAU,SAASwmB,GAEvB0D,EAAA1pB,QAAmB/J,KAAKC,MAMxBA,KAAKkuF,SAAWp+D,EAEhB,IAAMq+D,EAAY97E,QAAQqrE,QAAQ,yCAClCrrE,QAAQqrE,QAAQ0Q,SAASC,MAAMC,OAAOH,GAMtCnuF,KAAKuuF,WAAaJ,EAMlBnuF,KAAKwuF,yDAIPplF,EAAO2B,SAASzB,EAAhBkqB,EAAA1pB,SAQAR,EAAQmlF,eAAiB,IAazBnlF,EAAQ/I,UAAUgzB,OAAS,SAASxnB,GAClC/L,KAAKw9B,KAAKzxB,IAQZzC,EAAQ/I,UAAUgtC,MAAQ,WACxB,IAAK,IAAM55B,KAAO3T,KAAKwuF,OACrBxuF,KAAK0uF,yBAAyB1uF,KAAKwuF,OAAOzwF,SAAS4V,EAAK,OAQ5DrK,EAAQ/I,UAAUg9B,YAAc,SAASxvB,GAAS,IAAA1B,EAAArM,KAC1CsN,EAAOS,EAAQT,KACrBE,EAAA1D,QAAYkK,aAAa1G,EAAM,uBAE/B,IAAMqhF,GAAc,QAAS,QAC7B,OAAQrhF,GACN,KAAKkmB,EAAA1pB,QAAmB0S,KAAKkhB,MAC3BixD,EAAW7tF,KAAK,gBAChB,MACF,KAAK0yB,EAAA1pB,QAAmB0S,KAAKiX,YAC3Bk7D,EAAW7tF,KAAK,cAChB,MACF,KAAK0yB,EAAA1pB,QAAmB0S,KAAKqhB,QAC3B8wD,EAAW7tF,KAAK,iBAChB,MACF,KAAK0yB,EAAA1pB,QAAmB0S,KAAKshB,QAC3B6wD,EAAW7tF,KAAK,iBAMpB,IAAMugE,EAAKhvD,QAAQqrE,QAAR,eAA+BiR,EAAWl9E,KAAK,KAA/C,aAGP1D,EAAQ6gF,OACEv8E,QAAQqrE,QAAQ3vE,EAAQ6gF,QAExB5uF,KAAKuuF,YAGTD,OAAOjtB,GACjBA,EAAGwtB,KAAK9gF,EAAQulB,KAAKw7D,SAAS,MAE9B,IAAMC,OAA0B3xF,IAAlB2Q,EAAQghF,MAAsBhhF,EAAQghF,MAClDzlF,EAAQmlF,eAEJjiF,GACJ60D,MAKI1tD,EAAMvK,EAAO4D,OAAOq0D,GAC1B70D,EAAK5B,QAAU5K,KAAKkuF,SAAS,WAC3B7sB,EAAGzvD,MAAM,gBACFvF,EAAKmiF,OAAO76E,IAClBo7E,GAEH/uF,KAAKwuF,OAAO76E,GAAOnH,GASrBlD,EAAQ/I,UAAUmuF,yBAA2B,SAASliF,GACpD,IAAM60D,EAAK70D,EAAK60D,GACVz2D,EAAU4B,EAAK5B,QACf+I,EAAMvK,EAAO4D,OAAOq0D,GAG1BA,EAAGzvD,MAAM,SAIT5R,KAAKkuF,SAASh8D,OAAOtnB,UAGd5K,KAAKwuF,OAAO76E,KAgBrBrK,EAAQ8I,OAASC,QAAQD,OAAO,wBAGjBI,QAAQ,mBAAoBlJ,aAG5BA,0kBCnLf7M,EAAA,SACAA,EAAA,MACAA,EAAA,OACAA,EAAA,UACAA,EAAA,KACY4M,0JAAZ5M,EAAA,uDAEA,IAAM6M,cAaJ,SAAAA,EAAYmR,gGAASC,CAAA1a,KAAAsJ,GAAA,IAAA+C,mKAAAsO,CAAA3a,MAAAsJ,EAAAsR,WAAAva,OAAAwa,eAAAvR,IAAAvJ,KAAAC,KAEbya,IAEAu0E,EAAWv0E,EAAQu0E,SAJN,OAanB3iF,EAAK+wC,OAML/wC,EAAK4iF,iBAAmBD,EAAS3kF,IAAI,mBAMrCgC,EAAKyG,WAAak8E,EAAS3kF,IAAI,cAQ/BgC,EAAK6iF,4BAGL7iF,EAAK8iF,QApCc9iF,EAbjB,gUAAAwU,CAAAvX,EAAA8lF,EAAAtlF,SAAAiX,EAAAzX,IAAAmQ,IAAA,QAAAlH,MAAA,WAwDF/E,EAAA1D,QAAY2D,OACVzN,KAAKotC,YAAYrsC,OAAQ,yCAFrB,IAAAoe,GAAA,EAAAC,GAAA,EAAAC,OAAAjiB,EAAA,IAIN,QAAAkiB,EAAAC,EAAyBvf,KAAKotC,YAA9B5tB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,KAAhCnJ,EAAgCsJ,EAAA/M,MACzC/E,EAAA1D,QAAY0yE,iBAAiBxmE,EAA7BkzE,EAAAp/E,SACA9J,KAAKqvF,oBAAoBr5E,IANrB,MAAA+D,GAAAqF,GAAA,EAAAC,EAAAtF,EAAA,aAAAoF,GAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,OAvDJ5F,IAAA,UAAAlH,MAAA,WAoEM,IAAAoP,GAAA,EAAAC,GAAA,EAAAC,OAAAzkB,EAAA,IACR,QAAA0kB,EAAAC,EAAyB/hB,KAAKotC,YAA9B5tB,OAAAC,cAAAkC,GAAAG,EAAAC,EAAArC,QAAAC,MAAAgC,GAAA,EAA2C,KAAhC3L,EAAgC8L,EAAAvP,MACzC/E,EAAA1D,QAAY0yE,iBAAiBxmE,EAA7BkzE,EAAAp/E,SACA9J,KAAKsvF,sBAAsBt5E,IAHrB,MAAA+D,GAAA6H,GAAA,EAAAC,EAAA9H,EAAA,aAAA4H,GAAAI,EAAAlC,QAAAkC,EAAAlC,SAAA,WAAA+B,EAAA,MAAAC,GAKRb,EAAA1X,EAAA/I,UAAAqa,WAAAva,OAAAwa,eAAAvR,EAAA/I,WAAA,UAAAP,MAAAD,KAAAC,SAzEEyZ,IAAA,gBAAAlH,MAAA,SAiGUyD,GACZgL,EAAA1X,EAAA/I,UAAAqa,WAAAva,OAAAwa,eAAAvR,EAAA/I,WAAA,gBAAAP,MAAAD,KAAAC,KAAoBgW,GACpBxI,EAAA1D,QAAY0yE,iBAAiBxmE,EAA7BkzE,EAAAp/E,SACA9J,KAAKqvF,oBAAoBr5E,MApGvByD,IAAA,sBAAAlH,MAAA,SA2GgByD,GAElB,IAAMiW,EAAKjW,EAAWiW,GAEtBjsB,KAAKkvF,yBAAyBjjE,GAAMjsB,KAAK8S,WAAWG,OAClD,kBAAM+C,EAAWgW,SACjBhsB,KAAKuvF,+BAA+B1hF,KAAK7N,OAGtCA,KAAKo9C,QAKRp9C,KAAKo9C,OAAO/yC,IAAI,kBAAkBvJ,KAAKmrB,GACvCjsB,KAAKwvF,gBALLxvF,KAAKo9C,OAASp9C,KAAKivF,iBAAiBnjE,kCAClC9V,MAtHFyD,IAAA,iCAAAlH,MAAA,SAmI2BA,EAAOk9E,QACtBryF,IAAVmV,GAAuBA,IAAUk9E,GACnCzvF,KAAKwvF,kBArIL/1E,IAAA,eAAAlH,MAAA,WA6IF,IAAM9F,EAAQzM,KAAKyM,MACfiV,KAFSQ,GAAA,EAAAC,GAAA,EAAAC,OAAAhlB,EAAA,IAKb,QAAAilB,EAAAC,EAAyBtiB,KAAKotC,YAA9B5tB,OAAAC,cAAAyC,GAAAG,EAAAC,EAAA5C,QAAAC,MAAAuC,GAAA,EAA2C,KAAhClM,EAAgCqM,EAAA9P,MACzC/E,EAAA1D,QAAY0yE,iBAAiBxmE,EAA7BkzE,EAAAp/E,SACIkM,EAAWgW,UACbtK,EAAaA,EAAWguE,OAAO15E,EAAWuM,sBARjC,MAAAxI,GAAAoI,GAAA,EAAAC,EAAArI,EAAA,aAAAmI,GAAAI,EAAAzC,QAAAyC,EAAAzC,SAAA,WAAAsC,EAAA,MAAAC,GAabpiB,KAAKivF,iBAAiBt/D,oBAAoBljB,EAAOiV,EAAWjQ,KAAK,SAzJ/DgI,IAAA,mBAAAlH,MAAA,SA+JayD,GACfgL,EAAA1X,EAAA/I,UAAAqa,WAAAva,OAAAwa,eAAAvR,EAAA/I,WAAA,mBAAAP,MAAAD,KAAAC,KAAuBgW,GACvBxI,EAAA1D,QAAY0yE,iBAAiBxmE,EAA7BkzE,EAAAp/E,SACA9J,KAAKsvF,sBAAsBt5E,MAlKzByD,IAAA,wBAAAlH,MAAA,SAyKkByD,GAEpB,IAAMiW,EAAKjW,EAAWiW,GAChBxf,EAAQzM,KAAKyM,OAInBkjF,EADmB3vF,KAAKkvF,yBAAyBjjE,aAE1CjsB,KAAKkvF,yBAAyBjjE,GAGrC5iB,EAAQskC,OAAO3tC,KAAKotC,YAAap3B,GAGjC,IAAMnJ,EAAM7M,KAAKivF,iBAAiBp/D,kBAAkBpjB,GAChDI,GACFxD,EAAQskC,OAAO9gC,EAAKof,GAGlBjsB,KAAKotC,YAAYrsC,QACnBf,KAAKwvF,kBA7LL/1E,IAAA,QAAApP,IAAA,WAsFF,OAAOrK,KAAKo9C,WAtFV9zC,eAmMSA,+UC1Mf7M,EAAA,MACAA,EAAA,yDAEA,IAAM6M,cAQJ,SAAAA,EAAYmR,gGAASC,CAAA1a,KAAAsJ,GAAA,IAAA+C,mKAAAsO,CAAA3a,MAAAsJ,EAAAsR,WAAAva,OAAAwa,eAAAvR,IAAAvJ,KAAAC,KAEbya,IAFa,OAQnBpO,EAAKq0B,KAAOjmB,EAAQ/M,IARDrB,EARjB,gUAAAwU,CAAAvX,EAAAgkB,EAAAxjB,SAAAiX,EAAAzX,IAAAmQ,IAAA,MAAApP,IAAA,WAwBF,OAAOrK,KAAK0gC,SAxBVp3B,eA6BSA,sGCpBf,MAAAsmF,EAAA,SAAAjlD,GAMA3qC,KAAA6vF,SAAAllD,GAOAilD,EAAArvF,UAAAsoC,WAAA,WACA,OAAA7oC,KAAA6vF,UAGA,IAAAC,EAAA,ECdA,MAAAC,EAAA,SAAAplD,EAAAjB,GAEAomD,EAAA/vF,KAAAC,KAAA2qC,GAMA3qC,KAAA0pC,WAAA9iC,MAAArG,UAAAM,MAAAd,KAAAyhB,UAAA,GACAnhB,OAAAgjC,EAAA,EAAAhjC,CAAAL,KAAA0pC,WAAA3oC,QAAA,OAGAV,OAAA6+B,EAAA,SAAA7+B,CAAA0vF,EAAAD,GACA,IAAAE,EAAA,EChBA,MAAA/kD,EAAA,SAAAvB,GACA,MAAAv4B,GAAA,OAAAu+E,OAAA9oF,MAAArG,UAAAM,MAAAd,KAAAyhB,YACAwuE,EAAAloC,MAAA9nD,KAAAmR,IAGA9Q,OAAA6+B,EAAA,SAAA7+B,CAAA4qC,EAAA+kD,GAEA,IAAAC,EAAA,ECHA,MAAAC,EAAA,SAAAt0E,EAAAnX,EAAA40B,GAEAy2D,EAAA/vF,KAAAC,KAAA,QAMAA,KAAA4b,eAMA5b,KAAAyE,SAMAzE,KAAAilB,QAAAoU,GAGAh5B,OAAA6+B,EAAA,SAAA7+B,CAAA6vF,EAAAJ,GAEA,IAAAK,EAAA,ECvBA,MAAAC,EAAA,SAAAzlD,EAAA/uB,EAAA7C,EAAAsgB,GAEAy2D,EAAA/vF,KAAAC,KAAA2qC,GAMA3qC,KAAA4b,gBAAA,WAMA5b,KAAA+Y,WAMA/Y,KAAAilB,QAAAoU,GAGAh5B,OAAA6+B,EAAA,SAAA7+B,CAAA+vF,EAAAN,GAEA,IAAAO,EAAA,EC3BA,MAAAhlD,EAAA,SAAAzvB,EAAA7C,EAAAsgB,GAEAg3D,EAAAtwF,KAAAC,KAAA,WAAA4b,EAAA7C,EAAAsgB,IAIAh5B,OAAA6+B,EAAA,SAAA7+B,CAAAgrC,EAAAglD,GACA,IAAAC,EAAA,ECTA,MAAAC,EAAA,SAAA5lD,EAAAtB,GAEAymD,EAAA/vF,KAAAC,KAAA2qC,GAMA3qC,KAAAqpC,gBAGAhpC,OAAA6+B,EAAA,SAAA7+B,CAAAkwF,EAAAT,GAEA,IAAAU,EAAA,ECbA,MAAAxlD,EAAA,SAAA3B,EAAAE,EAAA7lC,GACA8sF,EAAAzwF,KAAAC,KAAA,SAAAqpC,GAMArpC,KAAAupC,QAMAvpC,KAAA0D,OAGArD,OAAA6+B,EAAA,SAAA7+B,CAAA2qC,EAAAwlD,GACA,IAAAC,EAAA,ECfA,MAAAC,EAAA,SAAA/lD,EAAAtB,EAAAW,EAAA2mD,GAEAH,EAAAzwF,KAAAC,KAAA2qC,EAAAtB,GAMArpC,KAAAgqC,aAMAhqC,KAAA8pC,UAAA6mD,GAGAtwF,OAAA6+B,EAAA,SAAA7+B,CAAAqwF,EAAAF,GACA,IAAAI,EAAA,ECpBA,MAAAC,EAAA,SAAAxnD,EAAAW,EAAA2mD,GACAC,EAAA7wF,KAAAC,KAAA,oBAAAqpC,EAAAW,EAAA2mD,IAGAtwF,OAAA6+B,EAAA,SAAA7+B,CAAAwwF,EAAAD,GACA,IAAAE,EAAA,ECNA,MAAAC,EAAA,SAAA1nD,EAAAW,GACA4mD,EAAA7wF,KAAAC,KAAA,wBAAAqpC,EAAAW,IAGA3pC,OAAA6+B,EAAA,SAAA7+B,CAAA0wF,EAAAH,GACA,IAAAI,EAAA,ECLA,MAAAC,EAAA,SAAA5nD,EAAAW,GACA4mD,EAAA7wF,KAAAC,KAAA,iCAAAqpC,EAAAW,IAGA3pC,OAAA6+B,EAAA,SAAA7+B,CAAA4wF,EAAAL,GACA,IAAAM,EAAA,ECFA,MAAA5lD,EAAA,SAAA1vB,EAAA7C,EAAAsgB,GAEAg3D,EAAAtwF,KAAAC,KAAA,aAAA4b,EAAA7C,EAAAsgB,IAIAh5B,OAAA6+B,EAAA,SAAA7+B,CAAAirC,EAAA+kD,GACA,IAAAc,EAAA,ECTA,MAAAC,EAAA,SAAA/nD,EAAAc,EAAAC,GACAomD,EAAAzwF,KAAAC,KAAA,oBAAAqpC,GAMArpC,KAAAmqC,gBAMAnqC,KAAAoqC,iBAGA/pC,OAAA6+B,EAAA,SAAA7+B,CAAA+wF,EAAAZ,GACA,IAAAa,EAAA,ECXA,MAAAC,EAAA,SAAAjoD,EAAAoB,EAAA8mD,EAAAC,EAAAC,EAAAd,GACAH,EAAAzwF,KAAAC,KAAA,iBAAAqpC,GAMArpC,KAAAyqC,UAMAzqC,KAAAsqC,cAAAltC,IAAAm0F,IAAA,IAMAvxF,KAAAuqC,gBAAAntC,IAAAo0F,IAAA,IAMAxxF,KAAAwqC,gBAAAptC,IAAAq0F,IAAA,IAMAzxF,KAAA8pC,UAAA6mD,GAGAtwF,OAAA6+B,EAAA,SAAA7+B,CAAAixF,EAAAd,GACA,IAAAkB,EAAA,EC3CA,MAAAC,EAAA,SAAAtoD,GACAmnD,EAAAzwF,KAAAC,KAAA,iBAAAqpC,IAGAhpC,OAAA6+B,EAAA,SAAA7+B,CAAAsxF,EAAAnB,GACA,IAAAoB,EAAA,ECJA,MAAAC,EAAA,SAAAxoD,EAAAW,GACA4mD,EAAA7wF,KAAAC,KAAA,qBAAAqpC,EAAAW,IAGA3pC,OAAA6+B,EAAA,SAAA7+B,CAAAwxF,EAAAjB,GACA,IAAAkB,EAAA,ECLA,MAAAC,EAAA,SAAA1oD,EAAAW,GACA4mD,EAAA7wF,KAAAC,KAAA,8BAAAqpC,EAAAW,IAGA3pC,OAAA6+B,EAAA,SAAA7+B,CAAA0xF,EAAAnB,GACA,IAAAoB,EAAA,ECNA,MAAA7mD,EAAA,SAAAxB,GAEAmmD,EAAA/vF,KAAAC,KAAA,OAMAA,KAAA2pC,aAGAtpC,OAAA6+B,EAAA,SAAA7+B,CAAA8qC,EAAA2kD,GACA,IAAAmC,EAAA,ECVA,MAAAC,EAAA,SAAA7oD,EAAAW,EAAA2mD,GACAC,EAAA7wF,KAAAC,KAAA,uBAAAqpC,EAAAW,EAAA2mD,IAGAtwF,OAAA6+B,EAAA,SAAA7+B,CAAA6xF,EAAAtB,GACA,IAAAuB,EAAA,ECPA,MAAAjnD,EAAA,SAAAxB,GACA,MAAAv4B,GAAA,MAAAu+E,OAAA9oF,MAAArG,UAAAM,MAAAd,KAAAyhB,YACAwuE,EAAAloC,MAAA9nD,KAAAmR,IAGA9Q,OAAA6+B,EAAA,SAAA7+B,CAAA6qC,EAAA8kD,GACA,IAAAoC,EAAA,ECFA,MAAA7mD,EAAA,SAAA3vB,EAAA7C,EAAAsgB,GAEAg3D,EAAAtwF,KAAAC,KAAA,SAAA4b,EAAA7C,EAAAsgB,IAIAh5B,OAAA6+B,EAAA,SAAA7+B,CAAAkrC,EAAA8kD,GACA,IAAAgC,EAAA,ECNA,MAAAC,GAUA5lD,IAAA,SAAAhD,GACA,MAAAv4B,GAAA,MAAAu+E,OAAA9oF,MAAArG,UAAAM,MAAAd,KAAAyhB,YACA,WAAA+wE,SAAAhyF,UAAAsN,KAAAi6C,MAAAmoC,EAAA9+E,KAWAqhF,GAAA,SAAA9oD,GACA,MAAAv4B,GAAA,MAAAu+E,OAAA9oF,MAAArG,UAAAM,MAAAd,KAAAyhB,YACA,WAAA+wE,SAAAhyF,UAAAsN,KAAAi6C,MAAAsqC,EAAAjhF,KAWAshF,IAAA,SAAA9oD,GACA,WAAAsoD,EAAAtoD,IAeAhG,KAAA,SAAA/nB,EAAAnX,EAAA40B,GACA,WAAA82D,EAAAv0E,EAAAnX,EAAA40B,IAcAq5D,SAAA,SAAA92E,EAAA7C,EAAAsgB,GACA,WAAAi3D,EAAA10E,EAAA7C,EAAAsgB,IAcAs5D,WAAA,SAAA/2E,EAAA7C,EAAAsgB,GACA,WAAA83D,EAAAv1E,EAAA7C,EAAAsgB,IAcAu5D,OAAA,SAAAh3E,EAAA7C,EAAAsgB,GACA,WAAAg5D,EAAAz2E,EAAA7C,EAAAsgB,IAaAw5D,QAAA,SAAAxpD,EAAAW,EAAA2mD,GACA,WAAAG,EAAAznD,EAAAW,EAAA2mD,IAaAmC,WAAA,SAAAzpD,EAAAW,EAAA2mD,GACA,WAAAwB,EAAA9oD,EAAAW,EAAA2mD,IAYAoC,SAAA,SAAA1pD,EAAAW,GACA,WAAA8nD,EAAAzoD,EAAAW,IAYAgpD,kBAAA,SAAA3pD,EAAAW,GACA,WAAAgoD,EAAA3oD,EAAAW,IAYAipD,YAAA,SAAA5pD,EAAAW,GACA,WAAAgnD,EAAA3nD,EAAAW,IAYAkpD,qBAAA,SAAA7pD,EAAAW,GACA,WAAAknD,EAAA7nD,EAAAW,IAYAmpD,OAAA,SAAA9pD,GACA,WAAAuoD,EAAAvoD,IAcA+pD,QAAA,SAAA/pD,EAAAc,EAAAC,GACA,WAAAinD,EAAAhoD,EAAAc,EAAAC,IAoBAipD,KAAA,SAAAhqD,EAAAoB,EACA8mD,EAAAC,EAAAC,EAAAd,GACA,WAAAe,EAAAroD,EAAAoB,EACA8mD,EAAAC,EAAAC,EAAAd,IAaA2C,OAAA,SAAAjqD,EAAAE,EAAA7lC,GACA,WAAA+sF,EAAApnD,EAAAE,EAAA7lC,KAEAjE,EAAA,2FCtQAhD,EAAA,YACAA,EAAA,uDAWA,IAAM6M,EAAU,WAMdtJ,KAAKuzF,kBAYPjqF,EAAQ/I,UAAU+mF,eAAiB,SAAS3zE,EAAK8F,GAC1CzZ,KAAKuzF,cAAc5/E,IACtB3T,KAAKwzF,iBAAiB7/E,GAExB3T,KAAKuzF,cAAc5/E,GAAK7S,KAAkC2Y,IAS5DnQ,EAAQ/I,UAAUinF,iBAAmB,SAAS7zE,GAC5C3T,KAAKwzF,iBAAiB7/E,IAaxBrK,EAAQ/I,UAAUizF,iBAAmB,SAAS7/E,GACvC3T,KAAKuzF,cAAc5/E,GAGlB3T,KAAKuzF,cAAc5/E,GAAK5S,SAC1Bf,KAAKuzF,cAAc5/E,GAAK1G,QAAQoH,EAAAvK,QAASo2B,eACzClgC,KAAKuzF,cAAc5/E,GAAK5S,OAAS,GAJnCf,KAAKuzF,cAAc5/E,QAavBrK,EAAQ8I,OAASC,QAAQD,OAAO,uBACjBI,QAAQ,kBAAmBlJ,aAG3BA,6FCnEb6R,IAAK,KAKLs4E,IAAK,IAKLC,GAAI,sFCnBN,QAAAj3F,EAAA,SACAA,EAAA,MACAA,EAAA,SACAA,EAAA,wDAKA,IAAM6M,EAAU+I,QAAQD,OAAO,cAgC/B9I,EAAQqqF,WAAa,SAASjgD,GAC5B,OACEkgD,SAAU,IAMVC,KAAM,SAACC,EAAOpW,EAASqW,GAErB,IACMC,EAAOD,EAAA,QAEPhlF,EAAM+kF,EAAM1gF,MAAM4gF,GACxBxmF,EAAA1D,QAAY0yE,iBAAiBztE,EAA7BklF,EAAAnqF,SAEAiF,EAAImlF,UAAUxW,EAAQ,IAOtB,IACMyW,EAAmBJ,EAAA,oBAGzB,GAFqBD,EAAM1gF,MAAM+gF,GAEf,CAChB,IACMC,EAAuBL,EAAA,wBAEvBM,EACJP,EAAM1gF,MAAMghF,GAEd//E,EAAAvK,QAASwK,OACPo/B,EACA,SACA,WACE,GAAI2gD,EAAkB,CAEpB,IAAM7wE,EAAQjmB,KAAK+2F,MACfC,GAAO,GACQ,SAAbC,IACJzlF,EAAI0lF,aACJ1lF,EAAI2lF,aACAH,GACF7gD,EAAQihD,sBAAsBH,GAE5Bj3F,KAAK+2F,MAAQ9wE,EAAQ6wE,IACvBE,GAAO,GAGXC,QAGAzlF,EAAI0lF,mBAvDlBnrF,EAAQqqF,+BAiERrqF,EAAQsrF,UAAU,UAAWtrF,EAAQqqF,sBAGtBrqF,mFC5Gf7M,EAAA,YACAA,EAAA,UACAA,EAAA,OACAA,EAAA,yDAyBA,IAAM6M,EAAU,SAASoJ,EAAYsd,EAAW6kE,EAC9CC,EAAgB7kE,GAMhBjwB,KAAK+0F,YAAcriF,EAMnB1S,KAAKswB,WAAaN,EAMlBhwB,KAAKgnF,UAAY6N,EAMjB70F,KAAKg/E,gBAAkB8V,EAMvB90F,KAAK4wB,kBAAoBX,EAMzBjwB,KAAKg1F,WAAa,0MAYpB1rF,EAAQ/I,UAAU00F,SAAW,SAAS9pF,EAAOomB,GACvCvxB,KAAKgnF,WACPhnF,KAAK4wB,kBAAkBxW,aACrBjP,MAASA,EAAMD,OAEjBlL,KAAK+mF,aAAa57E,EAAMD,MACxBlL,KAAKg/E,gBAAgBhuD,oBAAoB7lB,EAAMC,WAE/CpL,KAAKg/E,gBAAgB3tD,oBAAoBlmB,EAAMC,UAAU,EAAOmmB,IASpEjoB,EAAQ/I,UAAU20F,aAAe,WAC/B,OAAOl1F,KAAKg1F,YAQd1rF,EAAQ/I,UAAU40F,UAAY,WAC5B,OAAQn1F,KAAKswB,WAAWzlB,QAO1BvB,EAAQ/I,UAAUwmF,aAAe,SAAS77E,EAAMqmB,GAC9CvxB,KAAKg1F,WAAa9pF,EACbqmB,GACHvxB,KAAK+0F,YAAYK,MAAM9rF,EAAQw2B,UAAUmiD,eAAgB/2E,IAS7D5B,EAAQ/I,UAAUwyB,UAAY,WAC5B/yB,KAAKg/E,gBAAgBjsD,aAOvBzpB,EAAQw2B,WAINmiD,eAAgB,oCAOlB34E,EAAQ8I,OAASC,QAAQD,OAAO,mBAC9BijF,EAAAvrF,QAAwBsI,OAAOlH,KAC/B8pB,EAAAlrB,QAAwBsI,OAAOlH,QAMlBqH,MAAM,2BAA2B,GAEhDjJ,EAAQ8I,OAAOI,QAAQ,kBAAmBlJ,aAG3BA,iFC3Jf,QAAA7M,EAAA,SACAA,EAAA,MACAA,EAAA,OACY2M,0JAAZ3M,EAAA,uDAaA,IAAM6M,EAAU,SAASgsF,EAAS3rF,GAMhC3J,KAAKu1F,SAAWD,EAMhBt1F,KAAKowB,gBAAkBzmB,EAEvB6rF,EAAA1rF,QAAa/J,KAAKC,qFAGpBoJ,EAAO2B,SAASzB,EAAhBksF,EAAA1rF,SAYAR,EAAQ/I,UAAUk1F,gBAAkB,SAASryE,EAAMkb,EAAYo3D,EAAkBC,GAC/E,IAAMj3F,EAAO,IAAInB,KAAK6lB,GAChBwyE,EAAMD,EAAY,WAAQv4F,EAG5By4F,EAAiB,OACjBC,EAAkB,UAClBC,EAAgB,aAGpB,IAAKL,EAAkB,CACrB,IAAM/rF,EAAiB3J,KAAKowB,gBAC5BylE,EAAiBlsF,EAAe+F,UAAU,QAC1ComF,EAAkBnsF,EAAe+F,UAAU,UAC3CqmF,EAAgBpsF,EAAe+F,UAAU,YAG3C,OAAQ4uB,GACN,IAAK,OACH,OAAOt+B,KAAKu1F,SAAS,OAAdv1F,CAAsBtB,EAAMm3F,EAAgBD,GACrD,IAAK,QACH,OAAO51F,KAAKu1F,SAAS,OAAdv1F,CAAsBtB,EAAMo3F,EAAiBF,GACtD,IAAK,MACH,OAAO51F,KAAKu1F,SAAS,OAAdv1F,CAAsBtB,EAAMq3F,EAAeH,GACpD,QAEE,OAAOl3F,EAAKs3F,cAAcvqE,QAAQ,UAAW,MAcnDniB,EAAQ/I,UAAU01F,mBAAqB,SAASC,EAAiBC,EAAOR,GAEtE,OADAnoF,EAAA1D,QAAY2D,YAAsCrQ,IAA/B84F,EAAgB53D,YACN,UAAzB43D,EAAgBzvB,MAClBj5D,EAAA1D,QAAY2D,YAAqBrQ,IAAd+4F,EAAMzyF,KAEpB1D,KAAKy1F,gBAAgBU,EAAM3yE,MAAO0yE,EAAgB53D,YAAY,EAAMq3D,GADzE,IAEI31F,KAAKy1F,gBAAgBU,EAAMzyF,IAAKwyF,EAAgB53D,YAAY,EAAMq3D,IAG/D31F,KAAKy1F,gBAAgBU,EAAM3yE,MAAO0yE,EAAgB53D,YAAY,EAAMq3D,KAQ/ErsF,EAAQ8I,OAASC,QAAQD,OAAO,eAC9BojF,EAAA1rF,QAAasI,OAAOlH,QAEPsH,QAAQ,cAAelJ,aAGvBA,oFC5Gf,MAAYF,0JAAZ3M,EAAA,IACA25F,EAAA35F,EAAA,yCASA,IAAM6M,EAAU,SAASgE,GAAmB,IAAb+oF,EAAa70E,UAAAzgB,OAAA,QAAA3D,IAAAokB,UAAA,GAAAA,UAAA,MAE1C80E,EAAAxsF,QAAc/J,KAAKC,KAAMsN,GAKzBtN,KAAKq2F,OAASA,GAIhBjtF,EAAO2B,SAASzB,EAAhBgtF,EAAAxsF,mBAGeR,kFCxBf,MAAAirC,EAAA93C,EAAA,uBAKA,IAAM6M,EAAU+I,QAAQD,OAAO,mBAc/B9I,EAAQitF,SAAW,SAASzmE,GAC1B,gBASW0mE,EAAMC,EAAMC,GAInB,IAAIC,EAAU,KACd,OACE,WAAkB,QAAAC,EAAAp1E,UAAAzgB,OAAN81F,EAAMjwF,MAAAgwF,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,GAAAt1E,UAAAs1E,GAChB,IAAM/wE,EAAU/lB,KAKA,OAAZ22F,GACF7mE,EAASoC,OAAOykE,GAElBA,EAAU7mE,EAPI,WACZ6mE,EAAU,KACVH,EAAK1uC,MAAM/hC,EAAS8wE,IAKIJ,EAAMC,MAzB1CptF,EAAQitF,8BA8BRjtF,EAAQgrC,QAAQ,eAAgBhrC,EAAQitF,oBAGzBjtF,oFCpDf7M,EAAA,YACAA,EAAA,wDAKA,IAAM6M,EAAU+I,QAAQD,OAAO,mBAE/B9I,EAAQiJ,MAAM,eAAgB,IAAAjD,EAAAxF,mBAGfR,mFCXf7M,EAAA,mJACAA,EAAA,IADA,QAEAA,EAAA,uDAOA,IAAM6M,EAAU,SAASytF,EAAS7zF,GAMhClD,KAAKg3F,SAAWD,EAMhB/2F,KAAKi3F,UAAY,KAMjBj3F,KAAKk3F,OAASh0F,GAShBoG,EAAQ/I,UAAUm9C,WAAa,SAASjlC,GACtCzY,KAAKg3F,SAASt5C,WAAWjlC,EAASzY,KAAKk3F,SASzC5tF,EAAQ/I,UAAUs9C,cAAgB,SAASplC,GACzCzY,KAAKg3F,SAASn5C,cAAcplC,EAASzY,KAAKk3F,SAQ5C5tF,EAAQ/I,UAAUgtC,MAAQ,WACxBvtC,KAAKg3F,SAASzpD,MAAMvtC,KAAKk3F,SAa3B5tF,EAAQ/I,UAAU42F,YAAc,SAAS3/E,GAAU,IAAAnL,EAAArM,KAC1B,OAAnBA,KAAKi3F,YACPj3F,KAAKi3F,UAAU1pD,QACfl5B,EAAAvK,QAASunE,SAASrxE,KAAKi3F,UAAW,MAAOj3F,KAAKo3F,kBAAmBp3F,MACjEqU,EAAAvK,QAASunE,SAASrxE,KAAKi3F,UAAW,SAAUj3F,KAAKq3F,qBAAsBr3F,OAExD,OAAbwX,IACFA,EAASvK,QAAQ,SAACwL,GAChBpM,EAAKqxC,WAAWjlC,KAElBpE,EAAAvK,QAASwK,OAAOkD,EAAU,MAAOxX,KAAKo3F,kBAAmBp3F,MACzDqU,EAAAvK,QAASwK,OAAOkD,EAAU,SAAUxX,KAAKq3F,qBAAsBr3F,OAEjEA,KAAKi3F,UAAYz/E,GAUnBlO,EAAQ/I,UAAU+9C,SAAW,SAAShB,GACpCt9C,KAAKg3F,SAAS14C,SAAShB,EAAOt9C,KAAKk3F,SAQrC5tF,EAAQ/I,UAAU62F,kBAAoB,SAASnN,GAC7C,IAAMxxE,EAAqCwxE,EAAIvM,QAC/C19E,KAAK09C,WAAWjlC,IAQlBnP,EAAQ/I,UAAU82F,qBAAuB,SAASpN,GAChD,IAAMxxE,EAAqCwxE,EAAIvM,QAC/C19E,KAAK69C,cAAcplC,IAMrBnP,EAAQ8I,OAASC,QAAQD,OAAO,mCAGjB9I,8UC1Hf7M,EAAA,SACAA,EAAA,MACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,yDAEA,IAAM6M,aAkBJ,SAAAA,iGAAcoR,CAAA1a,KAAAsJ,GAMZtJ,KAAKs3F,YAAc,IAAAhoF,EAAAxF,QAMnB9J,KAAKm/E,KAAO,KAMZn/E,KAAKuzF,iBAELl/E,EAAAvK,QAASwK,OAAOtU,KAAKs3F,YAAa,MAAOt3F,KAAKu3F,sBAAuBv3F,MAtCnE,OAAA+gB,EAAAzX,IAAAmQ,IAAA,WAAAlH,MAAA,SAsEKxD,GAGP,IAAMs2E,EAAOt2E,EAAImgB,UACjBlvB,KAAKuzF,cAAczyF,KACjBuT,EAAAvK,QAASwK,OAAO+wE,EAAM,oBAAqBrlF,KAAKw3F,4BAA6Bx3F,OAI/E,IAAMs+B,EAAa+mD,EAAKl2D,gBACxB3hB,EAAA1D,QAAY2tF,aAAan5D,GACzBt+B,KAAK03F,6BAA6Bp5D,MAjFhC7kB,IAAA,aAAAlH,MAAA,SAyFOxD,GACT4oF,EAAA7tF,QAAa8tF,QAAQ53F,KAAKuzF,eAC1BvzF,KAAKuzF,oBA3FH95E,IAAA,8BAAAlH,MAAA,SAoGwB03E,GAC1B,IAAM5E,EAAO4E,EAAI2E,OACjBphF,EAAA1D,QAAY0yE,iBAAiB6I,EAA7BwS,EAAA/tF,SACA,IAAMw0B,EAAa+mD,EAAKl2D,gBACxB3hB,EAAA1D,QAAY2tF,aAAan5D,GACzBt+B,KAAK03F,6BAA6Bp5D,MAzGhC7kB,IAAA,+BAAAlH,MAAA,SAiHyB+rB,GAAY,IAAAjyB,EAAArM,KACvCA,KAAKs3F,YAAYrqF,QAAQ,SAAC+I,GACxB3J,EAAKyrF,4BAA4B9hF,EAAYsoB,QAnH7C7kB,IAAA,8BAAAlH,MAAA,SA6HwByD,EAAYsoB,GAGtC,GAAKtoB,EAAW+hF,uBAAhB,CAIA,IAAMpnF,EAAgBqF,EAAWrF,cAC3BG,EAAgBkF,EAAWlF,cAQ3B2jC,GANa3jC,SAEfwtB,GAAcxtB,KACCH,SAEf2tB,GAAc3tB,GAGlBqF,EAAWy+B,QAAUA,MA/InBh7B,IAAA,wBAAAlH,MAAA,SAwJkBgqB,GACpB,IAAMvmB,EAAaxI,EAAA1D,QAAY0yE,iBAC7BjgD,EAAMmhD,QADW58D,EAAAhX,SAEnB,GAAI9J,KAAKm/E,KAAM,CACb,IAAM7gD,EAAat+B,KAAKm/E,KAAKjwD,UAAUC,gBACvC3hB,EAAA1D,QAAY2tF,aAAan5D,GACzBt+B,KAAK83F,4BAA4B9hF,EAAYsoB,OA9J7C7kB,IAAA,MAAA/M,IAAA,SA6CIqC,GACF/O,KAAKm/E,OAASpwE,IAId/O,KAAKm/E,MACPn/E,KAAKg4F,WAAWh4F,KAAKm/E,MAGvBn/E,KAAKm/E,KAAOpwE,EAERA,GACF/O,KAAKi4F,SAASlpF,OAzDd0K,IAAA,aAAApP,IAAA,WA8DF,OAAOrK,KAAKs3F,gBA9DVhuF,KAwKNA,EAAQ8I,OAASC,QAAQD,OAAO,sBAEhC9I,EAAQ8I,OAAOI,QAAQ,kBAAmBlJ,aAG3BA,4HCxLf4uF,EAAAz7F,EAAA,GAoBA,MAAA07F,EAAA,SAAAjhF,GAEA,MAAAuD,EAAAvD,MAMAlX,KAAAokC,WAAA,yCAOApkC,KAAAqkC,WAAA,IAAA8C,EAAA,QAOAnnC,KAAAo4F,QAAA39E,EAAAjM,OAAAiM,EAAAjM,OAAA,KAEA6pF,EAAA,EAAAt4F,KAAAC,OAGAK,OAAAC,EAAA,SAAAD,CAAA83F,EAAAE,EAAA,GAQAF,EAAAG,mBAAA,WAQAH,EAAAI,iBAAA,SAMAJ,EAAA53F,UAAAmV,UAAA,WACA,OAAA1V,KAAAo4F,SAOAD,EAAA53F,UAAAgtB,UAAA,SAAA/e,GACAxO,KAAAo4F,QAAA5pF,GAUA2pF,EAAA53F,UAAAi4F,cAAA,SAAA57F,EAAA+oB,GACA/oB,EAAAq6B,aAAA,eAAAj3B,KAAAokC,YACA,MAAAxe,EAAAhpB,EAAAgpB,UAEA,IAAApO,KACA,OAAA5a,EAAA0O,WAAAvK,OACA,OAAAyW,EAEA,kBAAAoO,EACA,QAAAriB,EAAA,EAAAC,EAAA5G,EAAA0O,WAAAvK,OAAgDwC,EAAAC,EAAQD,IAAA,CACxD,MAAAkJ,EAAA7P,EAAA0O,WAAA/H,GACA,GAAAkJ,EAAAqL,WAAAC,KAAAC,aACA,SAEA,MAAA+N,EAAAJ,EAAA,GAEA8yE,EAAAN,EAAAI,iBACApsE,EAAA1f,EAAAmZ,UAAA6F,QAAAgtE,EAAA,IAEA,GAAAz4F,KAAAo4F,UAAA/3F,OAAAM,EAAA,SAAAN,CAAAL,KAAAo4F,QAAAjsE,GACA,SAGA,MAAA7L,EAAA6L,EACAgsE,EAAAG,mBAEAvyE,EAAA,YAAAzF,EACAyF,EAAA,UAAA/lB,KAAAokC,WAEA,MAAAtd,KACAA,EAAAxG,GAAA43E,EAAA,QAAAnxE,gBACA/mB,KAAAqkC,WAAArd,mBAAAhnB,KAAAqkC,YACA,MAAA3d,EAAAwxE,EAAA,QAAA5hB,iBACAvwD,EAAA,gBAAAe,GACAra,EAAAwqB,aAAA,eAAAj3B,KAAAokC,YACA,MAAAs0D,EAAAR,EAAA,QAAApyE,mBACAY,EAAAja,EAAAkZ,EAAA3lB,KAAAqkC,YACAq0D,GACAr4F,OAAAM,EAAA,OAAAN,CAAAmX,EAAAkhF,GAIA,wBAAA9yE,EAAA,CACA,MAAA+yE,EAAAT,EAAA,QAAApyE,mBACA9lB,KAAAqkC,WAAAlf,2BAAAvoB,OACSoD,KAAAqkC,YACTs0D,IACAnhF,EAAAmhF,GAGA,OAAAnhF,GAaA2gF,EAAA53F,UAAAmX,aAMAygF,EAAA53F,UAAAoX,qBAAA,SAAA/a,EAAAsa,GACA,MAAAuD,KAIA,OAHAvD,GACA7W,OAAAgwC,EAAA,OAAAhwC,CAAAoa,EAAAza,KAAAwqB,eAAA5tB,EAAAsa,IAEAlX,KAAAw4F,cAAA57F,GAAA6d,KAQA09E,EAAA53F,UAAAmY,iBAAA,SAAAD,EAAAvB,KAOAihF,EAAA53F,UAAAsY,kBAAA,SAAArB,EAAAN,KAOAihF,EAAA53F,UAAAyY,kBAAA,SAAAD,EAAA7B,KACAzX,EAAA,2FCtLAhD,EAAA,MACAA,EAAA,KADA,QAEAA,EAAA,SACAA,EAAA,QACAA,EAAA,KACY2M,0JAAZ3M,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDAwBA,IAAM6M,EAAU,SAASC,EAAOE,EAAIiJ,EAAYod,EAAUE,EACxD8kE,GAQA90F,KAAK44F,MAAQrvF,EAMbvJ,KAAK89E,GAAKr0E,EAMVzJ,KAAK8S,WAAaJ,EAMlB1S,KAAKkuF,SAAWp+D,EAMhB9vB,KAAKswB,WAAaN,EAMlBhwB,KAAKg/E,gBAAkB8V,EAWvB90F,KAAKwuF,UAMLxuF,KAAKuzF,iBAMLvzF,KAAKm/E,KAAO,KASZn/E,KAAK64F,sBAAwB,KAO7B74F,KAAK6wB,YAAc,kKAcrBvnB,EAAQ/I,UAAUu4F,4BAA8B,WAC9C,IAAM/pF,EAAM/O,KAAKm/E,KACjB3xE,EAAA1D,QAAY2D,OAAOsB,GAEnB,IAAIvC,SACJ,IAAK,IAAMmH,KAAO3T,KAAKwuF,QACrBhiF,EAAOxM,KAAKwuF,QAAQ76E,IACX8P,SACPjW,EAAA1D,QAAY2D,OAAOjB,EAAK+vE,aACxBxtE,EAAIgqF,kBAAkBvsF,EAAK+vE,aAC3BxtE,EAAIiqF,eAAexsF,EAAK+vE,eAW9BjzE,EAAQ/I,UAAU89C,OAAS,SAAStvC,GAAK,IAAA1C,EAAArM,KAEjCq3B,EAAOr3B,KAAKuzF,cAEdvzF,KAAKm/E,OACPn/E,KAAKi5F,uBACLj5F,KAAKk5F,yBACL7hE,EAAKpqB,QAAQoH,EAAAvK,QAASo2B,eACtB7I,EAAKt2B,OAAS,GAGhBf,KAAKm/E,KAAOpwE,EAERA,IACF/O,KAAKi5F,qBAAuBj5F,KAAK8S,WAAWkyE,iBAAiB,WAC3D,GAAI34E,EAAK2yE,gBAAgBxuD,SACvB,OAAOnkB,EAAK2yE,gBAAgBxuD,SAASplB,UAEtC,SAACmH,GAGFlG,EAAK6hF,SAAS,WACR37E,IACFlG,EAAK6sF,yBACL7sF,EAAK2yE,gBAAgBxuD,SAASla,mBAAmBjK,EAAK8sF,kBAAkBtrF,KAAvBxB,MAElD,KAGLgrB,EAAKv2B,KACHuT,EAAAvK,QAASwK,OAAOtU,KAAKswB,WAAY,SAAUtwB,KAAK8wB,oBAAqB9wB,MACrEqU,EAAAvK,QAASwK,OAAOvF,EAAK,UAAW/O,KAAKo5F,kBAAmBp5F,SAW9DsJ,EAAQ/I,UAAUuwB,oBAAsB,WAAW,IAAA1gB,EAAApQ,KACjDA,KAAK6wB,YAAc,KACnB7wB,KAAKswB,WAAWrgB,sBAAsBrC,KAAK,SAACR,GAC1CgD,EAAKygB,YAAczjB,KAavB9D,EAAQ/I,UAAU44F,kBAAoB,SAASllF,GAG7C,IAAIrX,EAA6DqX,EAASrX,KAC1E,IAAIA,EAAKwO,SAAT,CAMAxO,EAA0CqX,EAASrX,KACnD,IAAM6T,EAAiB6hB,EAAAxoB,QAAe0G,kBAAkB5T,GACxD,GAAI6T,EAAgB,CAClB,IAAM4oF,EAAYr5F,KAAKs5F,cAAcrlF,GACrC,GAAIolF,EAAW,CACb,IAAM1lF,EAAMvK,EAAO4D,OAAOiH,GAEpBslF,EAAyBv5F,KAAK8S,WAAWG,OAC7C,kBAAMgB,EAASU,YACf3U,KAAKw5F,2BAA2B3rF,KAAK7N,KAAMiU,IAK7CjU,KAAKwuF,OAAO76E,IACV8P,QAAQ,EACRpD,UAAW,yCACXinB,cAAe,UACf9vB,SAAU,IAAAlI,EAAAxF,QACV8R,aAAc,OACd2gE,YAAa,KACbjwC,YAAa,GACbmtD,gBAAiB,KACjBhpF,eAAgBA,EAChBwD,SAAUA,EACVolF,UAAWA,EACXE,uBAAwBA,GAI1Bv5F,KAAKw5F,2BAA2BvlF,EAAUA,EAASU,gBAYzDrL,EAAQ/I,UAAU24F,uBAAyB,WACzC,IAAK,IAAMvlF,KAAO3T,KAAKwuF,OAAQ,CAC7B,IAAMhiF,EAAOxM,KAAKwuF,QAAQ76E,GACtBnH,IACFA,EAAK+sF,yBACLv5F,KAAK05F,gBAAgBltF,UACdxM,KAAKwuF,QAAQ76E,MA0B1BrK,EAAQ/I,UAAU+4F,cAAgB,SAASrlF,GAGzC,GAAyB,OAArBjU,KAAK6wB,YACP,OAAO,KAGT,IAAMxjB,EAA8C4G,EAASrX,KAG7D,GAAIyQ,EAASC,OAASglB,EAAAxoB,QAAeiI,SAASI,IAC5C,OAAO,KAOT,IAJA,IAAMhE,EAAoDd,EAGpDsZ,KACGpjB,EAAI,EAAGC,EAAK2K,EAAYwrF,YAAY54F,OAAQwC,EAAIC,EAAID,IACvD4K,EAAYwrF,YAAYp2F,GAAG2b,WAC7ByH,EAAa7lB,KAAKqN,EAAYwrF,YAAYp2F,GAAG2H,MAGjD,IAAKyb,EAAa5lB,OAChB,OAAO,KAIT,IAAI64F,SACgD3lF,EAASX,OAAO1W,KACvDg3B,MACXgmE,EAAgBzrF,EAAYC,UAI5BwrF,EAFsBhnE,EAAA9oB,QAAwBoL,mBAAmBjB,GACErX,KACzCwR,UAE5B,IAAKwrF,EACH,OAAO,KAIT,IAAMxrF,EAAYpO,KAAK6wB,YAAY+oE,GACnC,IAAKxrF,EAAUyrF,WACb,OAAO,KAKT,IAAMC,EAAS1rF,EAAU0rF,OAGzB,OAFAtsF,EAAA1D,QAAY2D,OAAOqsF,EAAQ,8BAGzBnzE,aAAcA,EAAalV,KAAK,KAChC/D,IAAKosF,IAUTxwF,EAAQ/I,UAAUi5F,2BAA6B,SAASvlF,EAAUf,GAEhE,IAAMS,EAAMvK,EAAO4D,OAAOiH,GACpBzH,EAAOxM,KAAKwuF,OAAO76E,GAIV,OAAXT,EACFlT,KAAK+5F,cAAcvtF,GAEnBxM,KAAK05F,gBAAgBltF,IAYzBlD,EAAQ/I,UAAUw5F,cAAgB,SAASvtF,GAGzC,IAAIA,EAAKiX,OAAT,CAIA,IAAM1U,EAAM/O,KAAKm/E,KACjB3xE,EAAA1D,QAAY2D,OAAOsB,GAEnB,IAAMwtE,EAAc,IAAAyd,EAAAlwF,SAClBmwF,KAAMztF,EAAKiE,eAAewpF,KAC1BziF,SAAUhL,EAAKgL,SACf0iF,eAAgB1tF,EAAKiE,eAAe0pF,UACpCC,OAAQ5tF,EAAKiE,eAAe2pF,SAG9BrrF,EAAIiqF,eAAezc,GAEnB/vE,EAAK+vE,YAAcA,EACnB/vE,EAAKiX,QAAS,EAGdzjB,KAAKq6F,kBAAkB7tF,KAWzBlD,EAAQ/I,UAAUm5F,gBAAkB,SAASltF,GAG3C,GAAKA,EAAKiX,OAAV,CAIA,IAAM1U,EAAM/O,KAAKm/E,KACjB3xE,EAAA1D,QAAY2D,OAAOsB,GAEnB,IAAMwtE,EAAc/vE,EAAK+vE,YACzBxtE,EAAIgqF,kBAAkBxc,GAEtB/vE,EAAK+vE,YAAc,KACnB/vE,EAAKgL,SAAS+1B,QAGV/gC,EAAKitF,kBACPjtF,EAAKitF,gBAAgBvrF,UACrB1B,EAAKitF,gBAAkB,MAGzBjtF,EAAKiX,QAAS,IAOhBna,EAAQ/I,UAAU+5F,cAAgB,WAChCt6F,KAAK64F,sBAAwB,KAC7B,IAAIrsF,SACJ,IAAK,IAAMmH,KAAO3T,KAAKwuF,QACrBhiF,EAAOxM,KAAKwuF,QAAQ76E,IACX8P,QACPzjB,KAAKq6F,kBAAkB7tF,IAc7BlD,EAAQ/I,UAAU85F,kBAAoB,SAAS7tF,GAGzCA,EAAKitF,iBACPjtF,EAAKitF,gBAAgBvrF,UAGvB,IAAMa,EAAM/O,KAAKm/E,KACjB3xE,EAAA1D,QAAY2D,OAAOsB,GAEnB,IAAMs2E,EAAOt2E,EAAImgB,UACXkU,EAAOr0B,EAAIw2E,UACjB/3E,EAAA1D,QAAY2D,OAAO21B,GAEnB,IAAM3+B,EAAS4gF,EAAKkV,gBAAgBn3D,GAC9Bo3D,EAAWnV,EAAK1jD,gBAAgB2B,UAChC3c,EAAena,EAAK6sF,UAAU1yE,aAAaP,MAAM,KAEjDq0E,GACJx1E,QAASu1E,EACTn6E,UAAW7T,EAAK6T,UAChBinB,cAAe96B,EAAK86B,cACpB3gB,aAAcA,EACd0lB,aAAc,OACd1I,KAAMl/B,EACNmX,aAAcpP,EAAKoP,aACnB0wB,YAAa9/B,EAAK8/B,aAGdxsB,EAAY,IAAAM,EAAAtW,QACZ4wF,EAAgB,IAAI9jF,cACpB+jF,EAAoB76E,EAAUqsB,gBAAgBsuD,GAC9CG,EAAiBF,EAAc/hF,kBAAkBgiF,GACjDjtF,EAAMlB,EAAK6sF,UAAU3rF,IAE3BlB,EAAKitF,gBAAkBz5F,KAAK89E,GAAGpzE,QAE/B1K,KAAK44F,MAAMiC,KAAKntF,EAAKktF,GAAiBjE,QAASnqF,EAAKitF,gBAAgB7uF,UACjEgD,KAAK,SAACE,GAELtB,EAAKitF,gBAAkB,KAGvBjtF,EAAKgL,SAAS+1B,QAGd,IAAM71B,GAAe,IAAA0I,EAAAtW,SAAkB4N,aAAa5J,EAASc,MACzD8I,GACFlL,EAAKgL,SAASqxC,OAAOnxC,MAY7BpO,EAAQ/I,UAAU64F,kBAAoB,WAChCp5F,KAAK64F,uBACP74F,KAAKkuF,SAASh8D,OAAOlyB,KAAK64F,uBAE5B74F,KAAK64F,sBAAwB74F,KAAKkuF,SAChCluF,KAAKs6F,cAAczsF,KAAK7N,MACxB,OA0CJsJ,EAAQ8I,OAASC,QAAQD,OAAO,eAC9BkgB,EAAAxoB,QAAesI,OAAOlH,KACtB0nB,EAAA9oB,QAAwBsI,OAAOlH,QAElBsH,QAAQ,cAAelJ,aAGvBA,kFC5jBf,QAAA7M,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,OACAA,EAAA,wDAKA,IAAM6M,EAAU+I,QAAQD,OAAO,mBAC7B0oF,EAAAhxF,QAAsBsI,OAAOlH,KAC7B6vF,EAAAjxF,QAAmBsI,OAAOlH,KAC1B8vF,EAAAlxF,QAAiBoB,KACjB+vF,EAAAnxF,QAAyBsI,OAAOlH,OAuBlC5B,EAAQqqF,WAAa,WACnB,OACEG,OACE/kF,IAAO,aACPmsF,aAAgB,sBAChB7G,iBAAoB,2BAEtB79E,WAAY,2BACZ2kF,kBAAkB,EAClBC,YAAgBlqE,EAAApnB,QAAQuxF,sBAAxB,wBAIJ/xF,EAAQsrF,UAAU,SAAUtrF,EAAQqqF,YAapCrqF,EAAQgyF,YAAc,SAASld,EAAuBmd,EAAcC,GAQlEx7F,KAAK+O,IAML/O,KAAKk7F,aAMLl7F,KAAKq0F,iBASLr0F,KAAKy7F,uBAAyBrd,EAM9Bp+E,KAAK07F,cAAgBH,EAMrBv7F,KAAK27F,aAAeH,GAzCtBlyF,EAAQgyF,2EAgDRhyF,EAAQgyF,YAAY/6F,UAAUq7F,QAAU,WACtC57F,KAAKy7F,uBAAuBr9C,KAAKp+C,KAAK+O,KACtC/O,KAAK07F,cAAcr9C,OAAOr+C,KAAK+O,KAC/B/O,KAAK27F,aAAat9C,OAAOr+C,KAAK+O,MAIhCzF,EAAQkN,WAAW,mBAAoBlN,EAAQgyF,uBAGhChyF,8FCzHf,MAAYF,0JAAZ3M,EAAA,IACAo/F,EAAAp/F,EAAA,yCAWA,IAAM6M,EAAU,SAAS4N,GAEvB,IAAMuD,OAA0Brd,IAAhB8Z,EAA4BA,KAExC4kF,SACArhF,EAAQijE,SACVoe,EAAarhF,EAAQijE,eACdjjE,EAAQijE,SAEfoe,EAAapnE,EAAE,WAAW,GAO5B10B,KAAK+7F,SAAWrnE,EAAE,YAChB8vD,MAAS,QACTqK,KAAQ,YAOV7uF,KAAKg8F,WAAatnE,EAAE,UACjB45D,OAAOtuF,KAAK+7F,UACZzN,OAAOwN,GAEVrhF,EAAQijE,QAAUhpD,EAAE,WAAW,GAE/BunE,EAAAnyF,QAAU/J,KAAKC,KAAMya,IAIvBrR,EAAO2B,SAASzB,EAAhB2yF,EAAAnyF,SAMAR,EAAQ/I,UAAU89C,OAAS,SAAStvC,GAAK,IAAA1C,EAAArM,KAEjC09E,EAAU19E,KAAKk8F,aASrB,GAPmBl8F,KAAKm8F,UAEtBznE,EAAEgpD,GAAS0e,QAAQ,WAGrBH,EAAAnyF,QAAUvJ,UAAU89C,OAAOt+C,KAAKC,KAAM+O,GAElCA,EAAK,CACP,IAAMstF,EAAYr8F,KAAKg8F,WAEvBrqF,OAAO2qF,WAAW,WAChB5nE,EAAEgpD,GACC0e,SACCG,QAAWF,EACXxN,MAAQ,EACRp4C,UAAa,MACbkjC,UACE,oDACA,8BACA,oCACA,wCACA,UACAloE,KAAK,MAER2qF,QAAQ,SACV,GAEHp8F,KAAK+7F,SAASS,IAAI,QAAS,WACzB,IAAMztF,EAAM1C,EAAK8vF,SACbptF,GACFA,EAAI01E,cAAJp4E,iBAOO/C,iGC9Ff,IAAMA,GAMNA,kBAKEq8E,QAAS,aAKT8W,IAAK,SAKLC,IAAK,SAKLC,UAAW,eAKXC,QAAS,aAKTC,MAAO,WAKPC,OAAQ,kBAIKxzF,iFC7Cf,QAAA7M,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,KACY2M,IAAZ3M,EAAA,QACAA,EAAA,KACYsgG,IAAZtgG,EAAA,KACY4M,IAAZ5M,EAAA,IACYugG,IAAZvgG,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,OACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iNA0BA,IAAM6M,EAAU,SAAVA,EAAmB4N,GAEvB+lF,EAAAnzF,QAAoB/J,KAAKC,MAEzB,IAAMya,OAA0Brd,IAAhB8Z,EAA4BA,KAM5ClX,KAAKk9F,eAAiC9/F,IAArBqd,EAAQ06C,SACvB16C,EAAQ06C,SAAW7rD,EAAQ6zF,UAM7Bn9F,KAAKo9F,mBAAyChgG,IAAzBqd,EAAQ0lE,cAC3B1lE,EAAQ0lE,aAMVngF,KAAKq9F,yBAA6CjgG,IAAvBqd,EAAQ1H,WACjC0H,EAAQ1H,WAAazJ,EAAQg0F,2BAM/Bt9F,KAAKu9F,eAAiCngG,IAArBqd,EAAQ6jC,UAAyB7jC,EAAQ6jC,SAM1Dt+C,KAAKw9F,OAAS,EAMdx9F,KAAKy9F,OAAS,EAMdn0F,EAAQo0F,uBAAgDtgG,IAA3Bqd,EAAQ2lE,gBAAkC3lE,EAAQ2lE,gBAIjFh3E,EAAO2B,SAASzB,EAAhB2zF,EAAAnzF,SAOAR,EAAQq0F,aACNvzE,WAAcwzE,EAAA9zF,QAA+B+zF,YAC7C1zE,MAASyzE,EAAA9zF,QAA+B4sC,MACxCrsB,QAAWuzE,EAAA9zF,QAA+Bg0F,QAC1Cn+F,gBAAmBi+F,EAAA9zF,QAA+B+zF,YAClD54F,WAAc24F,EAAA9zF,QAA+B4sC,MAC7C1wC,aAAgB43F,EAAA9zF,QAA+Bg0F,SAOjDx0F,EAAQo0F,qBAMRp0F,EAAQ/I,UAAUyW,YAMlB1N,EAAQ/I,UAAUmX,aAMlBpO,EAAQ/I,UAAU0X,aAMlB3O,EAAQ/I,UAAUiY,aAMlBlP,EAAQ/I,UAAUqY,cAMlBtP,EAAQ/I,UAAUuY,cAUlBxP,EAAQy0F,QACJ,mEAOJz0F,EAAQ6zF,UAAY,GAUpB7zF,EAAQg0F,2BAA6B,SAAS7kF,GAC5C,OAAOA,EAAQ2e,iBAUjB9tB,EAAQ00F,oBAAsB,SAAS/qC,GACrC,IAAIgrC,EAAYhrC,GAAO,EAIvB,OAHIA,EAAM,IACRgrC,GAAcA,GAET30F,EAAQ40F,cAAcD,IAU/B30F,EAAQ40F,cAAgB,SAASjrC,GAE/B,IADA,IAAIkrC,EAAgB,GACblrC,GAAO,IACZkrC,GAAiB70F,EAAQy0F,QAAQzrD,OAC/B,GAAc,GAAN2gB,GACVA,IAAQ,EAGV,OADAkrC,GAAiB70F,EAAQy0F,QAAQzrD,OAAO2gB,IAc1C3pD,EAAQ8zF,cAAgB,SAASjvE,EAAQiwE,EAAcC,GACrD,IAAMC,EAAYh1F,EAAQq0F,YAAYS,GACtC5wF,EAAA1D,QAAY2D,YAAqBrQ,IAAdkhG,GACnB,IAAK,IAAI/6F,EAAI,EAAGA,EAAI4qB,EAAOptB,SAAUwC,EAAG,CACtC,IAAM+5C,EAAQnvB,EAAO5qB,GACfg7F,EAAYjhD,EAAMnF,UAClBqmD,EAAalhD,EAAMne,WACnBs/D,EAAcnhD,EAAMlF,YACpBsmD,EAAYphD,EAAMtF,UACpBsmD,GAAaV,EAAA9zF,QAA+Bg0F,QAC5B,OAAdS,GACFj1F,EAAQq1F,oBACNJ,EAAWE,EAAaJ,GAEnBC,GAAaV,EAAA9zF,QAA+B+zF,YACjC,OAAhBY,GACFn1F,EAAQs1F,iBAAiBH,EAAaJ,GAE/BC,GAAaV,EAAA9zF,QAA+B4sC,OAClC,OAAf8nD,GACFl1F,EAAQu1F,kBAAkBL,EAAYH,GAGxB,OAAdK,GACFp1F,EAAQw1F,iBAAiBJ,EAAWL,KAa1C/0F,EAAQs1F,iBAAmB,SAASH,EAAaJ,GAC/C/0F,EAAQy1F,mBAAmBN,EAAaJ,IAW1C/0F,EAAQu1F,kBAAoB,SAASL,EAAYH,GAC/C,GAAIG,uBAAqC,CACvC,IAAM1e,EAAS0e,EAAWQ,YACtBX,EAAct9F,OAAS,GACzBs9F,EAAcv9F,KAAK,KAErBu9F,EAAcv9F,KAAKw7B,kCAAkCwjD,IACrD,IAAMye,EAAYC,EAAWrmD,UACX,OAAdomD,GACFj1F,EAAQ21F,iBAAiBV,EAAWF,GAEtC,IAAMI,EAAcD,EAAWpmD,YACX,OAAhBqmD,GACFn1F,EAAQy1F,mBAAmBN,EAAaJ,KAe9C/0F,EAAQq1F,oBAAsB,SAASJ,EAAWE,EAAaJ,GAC7D/0F,EAAQ21F,iBAAiBV,EAAWF,GAChB,OAAhBI,GACFn1F,EAAQy1F,mBAAmBN,EAAaJ,IAc5C/0F,EAAQ21F,iBAAmB,SAASV,EAAWF,EAAea,GAC5D,IAAM71D,OAAoCjsC,IAArB8hG,EACnBA,EAAmB,YACf7e,EAAYke,EAAUY,WAC5B,GAAkB,OAAd9e,EAAoB,CACtB7yE,EAAA1D,QAAY2D,OAAO7G,MAAMggB,QAAQy5D,GAAY,+BAC7C,IAAM+e,EAAgBrC,EAAQsC,QAAQhf,GACtC7yE,EAAA1D,QAAY2D,OAAO7G,MAAMggB,QAAQw4E,GAAgB,+BACjD,IAAME,EAAeztD,EAAA/nC,QAAUy1F,cAAcH,GACzCf,EAAct9F,OAAS,GACzBs9F,EAAcv9F,KAAK,KAErBu9F,EAAcv9F,KACZw7B,mBAAsB+M,EAAtB,IAAsCi2D,MAY5Ch2F,EAAQy1F,mBAAqB,SAASN,EAAaJ,GACjD,IAAMrd,EAAcyd,EAAYU,WAChC,GAAoB,OAAhBne,EAAsB,CACxBxzE,EAAA1D,QAAY2D,OAAO7G,MAAMggB,QAAQo6D,IACjC,IAAMwe,EAAkBzC,EAAQsC,QAAQre,GACxCxzE,EAAA1D,QAAY2D,OAAO7G,MAAMggB,QAAQ44E,GAAkB,iCACnD,IAAMC,EAAiB5tD,EAAA/nC,QAAUy1F,cAAcC,GAC3CnB,EAAct9F,OAAS,GACzBs9F,EAAcv9F,KAAK,KAErBu9F,EAAcv9F,KAAKw7B,kCAAkCmjE,IAEvD,IAAMxe,EAAcwd,EAAYiB,gBACZtiG,IAAhB6jF,IACEod,EAAct9F,OAAS,GACzBs9F,EAAcv9F,KAAK,KAErBu9F,EAAcv9F,KAAKw7B,kCAAkC2kD,MAYzD33E,EAAQw1F,iBAAmB,SAASJ,EAAWL,GAC7C,IAAMsB,EAAYjB,EAAUjnD,UAC5B,QAAkBr6C,IAAduiG,EAAyB,CAC3B,IAAMvqD,EAAOuqD,EAAUv5E,MAAM,KACzBgvB,EAAKr0C,QAAU,IACbs9F,EAAct9F,OAAS,GACzBs9F,EAAcv9F,KAAK,KAErBu9F,EAAcv9F,KAAKw7B,+BAA+B8Y,EAAK,MAG3D,IAAMmpD,EAAYG,EAAUvmD,UACV,OAAdomD,GACFj1F,EAAQ21F,iBACNV,EAAWF,EAAe,cAahC/0F,EAAQs2F,wBAA0B,SAASjqD,GACzCnoC,EAAA1D,QAAY2D,OAAgC,OAAzBkoC,EAAK1Z,UAAU,EAAG,IACrCzuB,EAAA1D,QAAY2D,OAAgC,KAAzBkoC,EAAKA,EAAK50C,OAAS,IACtC40C,EAAOA,EAAK1Z,UAAU,EAAG0Z,EAAK50C,OAAS,GACvC,IAAML,EAAkBV,KAAK6/F,mBAAmBlqD,GAC1Cl1C,EAAa,IAAAq/F,EAAAh2F,QAAqB,MAExC,OADArJ,EAAWU,mBAAmB4+F,EAAAj2F,QAAqB1F,GAAI1D,GAChDD,GAYT6I,EAAQ02F,6BAA+B,SAASrqD,GAC9CnoC,EAAA1D,QAAY2D,OAAgC,OAAzBkoC,EAAK1Z,UAAU,EAAG,IACrCzuB,EAAA1D,QAAY2D,OAAgC,KAAzBkoC,EAAKA,EAAK50C,OAAS,IAKtC,IAHA,IAAIL,KACE2C,KACAC,GAHNqyC,EAAOA,EAAK1Z,UAAU,EAAG0Z,EAAK50C,OAAS,IAGdqlB,MAAM,KACtB7iB,EAAI,EAAGC,EAAKF,EAAYvC,OAAQwC,EAAIC,IAAMD,EACjD7C,EAAkBV,KAAK6/F,mBAAmBv8F,EAAYC,GAAI7C,GAC1D2C,EAAKE,GAAK7C,EAAgBK,OAE5B,IAAMG,EAAkB,IAAAk6B,EAAAtxB,QAA0B,MAGlD,OAFA5I,EAAgBC,mBACd4+F,EAAAj2F,QAAqB1F,GAAI1D,EAAiB2C,GACrCnC,GAYToI,EAAQ22F,mBAAqB,SAAStqD,GACpCnoC,EAAA1D,QAAY2D,OAAgC,OAAzBkoC,EAAK1Z,UAAU,EAAG,IACrCzuB,EAAA1D,QAAY2D,OAAgC,KAAzBkoC,EAAKA,EAAK50C,OAAS,IACtC40C,EAAOA,EAAK1Z,UAAU,EAAG0Z,EAAK50C,OAAS,GACvC,IAAML,EAAkBV,KAAK6/F,mBAAmBlqD,GAChDnoC,EAAA1D,QAAY2D,OAAkC,IAA3B/M,EAAgBK,QACnC,IAAMoE,EAAQ,IAAA8+E,EAAAn6E,QAAgB,MAE9B,OADA3E,EAAMhE,mBAAmB4+F,EAAAj2F,QAAqB1F,GAAI1D,GAC3CyE,GAYTmE,EAAQ42F,wBAA0B,SAASvqD,GACzCnoC,EAAA1D,QAAY2D,OAAgC,OAAzBkoC,EAAK1Z,UAAU,EAAG,IACrCzuB,EAAA1D,QAAY2D,OAAgC,KAAzBkoC,EAAKA,EAAK50C,OAAS,IACtC40C,EAAOA,EAAK1Z,UAAU,EAAG0Z,EAAK50C,OAAS,GACvC,IAAML,EAAkBV,KAAK6/F,mBAAmBlqD,GAC1CvwC,EAAa,IAAA+1B,EAAArxB,QAAqB,MAExC,OADA1E,EAAWjE,mBAAmB4+F,EAAAj2F,QAAqB1F,GAAI1D,GAChD0E,GAYTkE,EAAQ62F,qBAAuB,SAASxqD,GACtCnoC,EAAA1D,QAAY2D,OAAgC,OAAzBkoC,EAAK1Z,UAAU,EAAG,IACrCzuB,EAAA1D,QAAY2D,OAAgC,KAAzBkoC,EAAKA,EAAK50C,OAAS,IAKtC,IAHA,IAAIL,KACE2C,KACAq1B,GAHNid,EAAOA,EAAK1Z,UAAU,EAAG0Z,EAAK50C,OAAS,IAGpBqlB,MAAM,KAChB7iB,EAAI,EAAGC,EAAKk1B,EAAM33B,OAAQwC,EAAIC,IAAMD,EAAG,CAE9C,IAAIG,GADJhD,EAAkBV,KAAK6/F,mBAAmBnnE,EAAMn1B,GAAI7C,IAC1BK,OAChB,IAANwC,GACF7C,EAAgBgD,KAAShD,EAAgB,GACzCA,EAAgBgD,KAAShD,EAAgB,KAEzCA,EAAgBgD,KAAShD,EAAgB2C,EAAKE,EAAI,IAClD7C,EAAgBgD,KAAShD,EAAgB2C,EAAKE,EAAI,GAAK,IAEzDF,EAAKE,GAAKG,EAEZ,IAAM8C,EAAU,IAAA45F,EAAAt2F,QAAkB,MAElC,OADAtD,EAAQrF,mBAAmB4+F,EAAAj2F,QAAqB1F,GAAI1D,EAAiB2C,GAC9DmD,GAYT8C,EAAQ+2F,0BAA4B,SAAS1qD,GAC3CnoC,EAAA1D,QAAY2D,OAAgC,OAAzBkoC,EAAK1Z,UAAU,EAAG,IACrCzuB,EAAA1D,QAAY2D,OAAgC,KAAzBkoC,EAAKA,EAAK50C,OAAS,IAKtC,IAHA,IAAIL,KACEkI,KACAC,GAHN8sC,EAAOA,EAAK1Z,UAAU,EAAG0Z,EAAK50C,OAAS,IAGjBqlB,MAAM,MACnB7iB,EAAI,EAAGC,EAAKqF,EAAS9H,OAAQwC,EAAIC,IAAMD,EAG9C,IAFA,IAAMm1B,EAAQ7vB,EAAStF,GAAG6iB,MAAM,KAC1B/iB,EAAOuF,EAAMrF,MACV8B,EAAI,EAAGyD,EAAK4vB,EAAM33B,OAAQsE,EAAIyD,IAAMzD,EAAG,CAE9C,IAAI3B,GADJhD,EAAkBV,KAAK6/F,mBAAmBnnE,EAAMrzB,GAAI3E,IAC1BK,OAChB,IAANsE,GACF3E,EAAgBgD,KAAShD,EAAgB,GACzCA,EAAgBgD,KAAShD,EAAgB,KAEzCA,EAAgBgD,KAAShD,EAAgB2C,EAAKgC,EAAI,IAClD3E,EAAgBgD,KAAShD,EAAgB2C,EAAKgC,EAAI,GAAK,IAEzDhC,EAAKgC,GAAK3B,EAGd,IAAM48F,EAAe,IAAAjlE,EAAAvxB,QAAuB,MAG5C,OAFAw2F,EAAan/F,mBACX4+F,EAAAj2F,QAAqB1F,GAAI1D,EAAiBkI,GACrC03F,GAcTh3F,EAAQi3F,mBAAqB,SAAS5qD,EAAMl9B,GAC1C,GAAY,IAARk9B,EAAJ,CAGA,IAAM5iC,EAAazJ,EAAQk3F,oBAAoB7qD,EAAMl9B,GAC/C4nE,EAAYttE,EAAA,UACZ0tE,EAAW1tE,EAAA,SACXytE,EAAYztE,EAAA,UACZ8tE,EAAc9tE,EAAA,YACdiuE,EAAcjuE,EAAA,YACdkuE,EAAcluE,EAAA,YAEhBwrF,EAAY,UACEnhG,IAAdijF,IACFke,EAAY,IAAAkC,EAAA32F,SACVqsC,MAA4CkqC,KAGhD,IAAIoe,EAAc,UACErhG,IAAhB4jF,QAA6C5jF,IAAhB6jF,IAC/Bwd,EAAc,IAAA7e,EAAA91E,SACZqsC,MAA4C6qC,EAC5CnB,MAA8BoB,KAGlC,IAAIud,EAAa,UACGphG,IAAhByjF,IACF2d,EAAa,IAAAkC,EAAA52F,SACXg2E,OAA+Be,EAC/B5qC,KAAMsoD,EACNznD,OAAQ2nD,IAEVF,EAAYE,EAAc,MAE5B,IAAIC,EAAY,UACCthG,IAAbqjF,QAAwCrjF,IAAdojF,IAC5Bke,EAAY,IAAAiC,EAAA72F,SACVsrC,KAASqrC,EAAT,cACAxqC,KAAM,IAAAwqD,EAAA32F,SACJqsC,MAA4CqqC,OAIlD,IAAMljC,EAAQ,IAAAW,EAAAn0C,SACZmsC,KAAMsoD,EACNt+D,MAAOu+D,EACP1nD,OAAQ2nD,EACR9oD,KAAM+oD,IAERjmF,EAAQ6lC,SAAShB,KAYnBh0C,EAAQs3F,oBAAsB,SAASjrD,EAAMl9B,GAE3C,IAAM1F,EAAazJ,EAAQk3F,oBAAoB7qD,EAAMl9B,GAC/CM,EAAWN,EAAQ6sE,cAsBzB,GAnBIvsE,uBACEhG,EAAA,SACAA,EAAWutE,EAAAx2E,QAA4BizB,iBAClChqB,EAAA,mBACAA,EAAA,mBAEAA,EAAA,iBACAA,EAAA,kBAGFA,EAAA,UAEHgG,gCACKhG,EAAA,iBACAA,EAAA,cAKPA,EAAA,SAAwB,CAC1B,IAAI0tE,EAAW7iF,WAAWmV,EAAA,WACoB,IAA1CA,EAAA,SAAuBU,QAAQ,QACjCgtE,EAAW5+E,KAAKmhC,MAAMy9C,EAAW,WAEnC1tE,EAAA,SAAyB0tE,EAI3B,IAAMx/E,KACN,IAAK,IAAMwY,KAAO1G,EAAY,CAC5B,IAAMR,EAAQQ,EAAW0G,GACrBnQ,EAAQo0F,kBAAkBjkF,GAC5BxY,EAAMqI,EAAQo0F,kBAAkBjkF,IAAQlH,EAExCtR,EAAMwY,GAAOlH,EAIjBkG,EAAQooF,cAAc5/F,IAWxBqI,EAAQw3F,WAAa,SAASrnF,EAAKlH,GACjC,IAAMwuF,GACJzgB,EAAAx2E,QAA4B6yB,MAC5B2jD,EAAAx2E,QAA4BozB,QAC5BojD,EAAAx2E,QAA4BuzB,KAC5BijD,EAAAx2E,QAA4BwzB,OAC5B,cACA,eAEI0jE,GACJ1gB,EAAAx2E,QAA4B+yB,UAC5ByjD,EAAAx2E,QAA4BgzB,aAC5BwjD,EAAAx2E,QAA4BizB,QAC5BujD,EAAAx2E,QAA4BszB,aAC5BkjD,EAAAx2E,QAA4BmzB,WAC5B,WACA,cACA,UACA,cACA,aAGF,OAAI5zB,EAAQgqB,SAAS0tE,EAAetnF,IAC1BlH,EACClJ,EAAQgqB,SAAS2tE,EAAgBvnF,GACxB,SAAVlH,EAEDA,GAgBXjJ,EAAQk3F,oBAAsB,SAAS7qD,EAAMl9B,GAI3C,IAHA,IAAM6f,EAAQqd,EAAKvvB,MAAM,KACnBrT,KAEGxP,EAAI,EAAGA,EAAI+0B,EAAMv3B,SAAUwC,EAAG,CACrC,IACM09F,EADO7kE,mBAAmB9D,EAAM/0B,IAClB6iB,MAAM,KAC1B5Y,EAAA1D,QAAY2D,OAAyB,IAAlBwzF,EAAOlgG,QAC1B,IAAM0Y,EAAMwnF,EAAO,GACbxrF,EAAMwrF,EAAO,GAEnBluF,EAAW0G,GAAOnQ,EAAQw3F,WAAWrnF,EAAKhE,GAG5C,OAAO1C,GAYTzJ,EAAQ43F,yBAA2B,SAASnoF,GAC1CvL,EAAA1D,QAAY0yE,iBAAiBzjE,EAA7B+mF,EAAAh2F,SACA,IAAMpJ,EAAkBqY,EAASnY,qBAC3BqB,EAAS8W,EAASooF,YAClBz9F,EAAMhD,EAAgBK,OAC5B,WAAYf,KAAKohG,mBAAmB1gG,EAAiBuB,EAAQ,EAAGyB,GAAhE,KAYF4F,EAAQ+3F,8BAAgC,SAAStoF,GAC/CvL,EAAA1D,QAAY0yE,iBAAiBzjE,EAA7BqiB,EAAAtxB,SAOA,IANA,IAAMzG,EAAO0V,EAAS/V,UAChBs+F,EAAkBj+F,EAAKtC,OACvBL,EAAkBqY,EAASnY,qBAC3BqB,EAAS8W,EAASooF,YACpB19F,EAAS,EACP89F,GAAa,MACVh+F,EAAI,EAAGA,EAAI+9F,IAAmB/9F,EAAG,CACxC,IAAMG,EAAML,EAAKE,GACXoyC,EAAO31C,KAAKohG,mBAAmB1gG,EAAiBuB,EAAQwB,EAAQC,GAC5D,IAANH,GACFg+F,EAAUzgG,KAAK,KAEjBygG,EAAUzgG,KAAK60C,GACflyC,EAASC,EAGX,OADA69F,EAAUzgG,KAAK,KACRygG,EAAU9vF,KAAK,KAYxBnI,EAAQk4F,oBAAsB,SAASzoF,GACrCvL,EAAA1D,QAAY0yE,iBAAiBzjE,EAA7BkrE,EAAAn6E,SACA,IAAMpJ,EAAkBqY,EAASnY,qBAC3BqB,EAAS8W,EAASooF,YAClBz9F,EAAMhD,EAAgBK,OAC5B,WAAYf,KAAKohG,mBAAmB1gG,EAAiBuB,EAAQ,EAAGyB,GAAhE,KAYF4F,EAAQm4F,yBAA2B,SAAS1oF,GAC1CvL,EAAA1D,QAAY0yE,iBAAiBzjE,EAA7BoiB,EAAArxB,SACA,IAAMpJ,EAAkBqY,EAASnY,qBAC3BqB,EAAS8W,EAASooF,YAClBz9F,EAAMhD,EAAgBK,OAC5B,WAAYf,KAAKohG,mBAAmB1gG,EAAiBuB,EAAQ,EAAGyB,GAAhE,KAeF4F,EAAQo4F,aAAe,SAAShhG,EAAiBuB,EAAQwB,EAAQJ,EAAMk+F,GAErE,IADA,IAAMI,EAAkBt+F,EAAKtC,OACpBwC,EAAI,EAAGA,EAAIo+F,IAAmBp+F,EAAG,CAExC,IAAMG,EAAML,EAAKE,GAAKtB,EAChB0zC,EAAO31C,KAAKohG,mBAAmB1gG,EAAiBuB,EAAQwB,EAAQC,GAC5D,IAANH,GACFg+F,EAAUzgG,KAAK,KAEjBygG,EAAUzgG,KAAK60C,GACflyC,EAASJ,EAAKE,GAEhB,OAAOE,GAYT6F,EAAQs4F,sBAAwB,SAAS7oF,GACvCvL,EAAA1D,QAAY0yE,iBAAiBzjE,EAA7BqnF,EAAAt2F,SACA,IAAMpJ,EAAkBqY,EAASnY,qBAC3BqB,EAAS8W,EAASooF,YAClB99F,EAAO0V,EAAS/V,UAEhBu+F,GAAa,MAInB,OAHAj4F,EAAQo4F,aAAa3hG,KAAKC,KACxBU,EAAiBuB,EAHJ,EAGoBoB,EAAMk+F,GACzCA,EAAUzgG,KAAK,KACRygG,EAAU9vF,KAAK,KAYxBnI,EAAQu4F,2BAA6B,SAAS9oF,GAC5CvL,EAAA1D,QAAY0yE,iBAAiBzjE,EAA7BsiB,EAAAvxB,SAOA,IANA,IAAMpJ,EAAkBqY,EAASnY,qBAC3BqB,EAAS8W,EAASooF,YAClBv4F,EAAQmQ,EAASnR,WACjBk6F,EAAel5F,EAAM7H,OACvB0C,EAAS,EACP89F,GAAa,KACVh+F,EAAI,EAAGA,EAAIu+F,IAAgBv+F,EAAG,CACrC,IAAMF,EAAOuF,EAAMrF,GACnBg+F,EAAUzgG,KAAK,KACf2C,EAAS6F,EAAQo4F,aAAa3hG,KAAKC,KACjCU,EAAiBuB,EAAQwB,EAAQJ,EAAMk+F,GACzCA,EAAUzgG,KAAK,KAEjB,OAAOygG,EAAU9vF,KAAK,KASxBnI,EAAQy4F,mBACN1wC,EAAK/nD,EAAQ42F,wBACb8B,EAAK14F,EAAQ02F,6BACbnpC,EAAKvtD,EAAQ+2F,0BACbhxF,EAAK/F,EAAQs2F,wBACb/4E,EAAKvd,EAAQ22F,mBACb59C,EAAK/4C,EAAQ62F,sBASf72F,EAAQ24F,mBACNtiG,gBAAmB2J,EAAQ+3F,8BAC3Bp8F,WAAcqE,EAAQm4F,yBACtBz7F,aAAgBsD,EAAQu4F,2BACxBz3E,WAAc9gB,EAAQ43F,yBACtB/2E,MAAS7gB,EAAQk4F,oBACjBn3E,QAAW/gB,EAAQs4F,uBAcrBt4F,EAAQ/I,UAAUs/F,mBAAqB,SAASlqD,EAAMusD,GAMpD,IALA,IAAMx7F,EAAMivC,EAAK50C,OACbmC,EAAQ,EACNxC,OAA0CtD,IAAxB8kG,EACtBA,KACE3+F,EAAI7C,EAAgBK,OACjBmC,EAAQwD,GAAK,CAClB,IAAIk1B,SACAiqB,EAAQ,EACRp5B,EAAS,EACb,GAEEA,IAAe,IADfmP,EAAItyB,EAAQy0F,QAAQtqF,QAAQkiC,EAAKrD,OAAOpvC,SAChB2iD,EACxBA,GAAS,QACFjqB,GAAK,IACd,IAAMumE,EAAgB,EAAT11E,IAAgBA,GAAU,GAAMA,GAAU,EACvDzsB,KAAKw9F,QAAU2E,EACft8C,EAAQ,EACRp5B,EAAS,EACT,GAEEA,IAAe,IADfmP,EAAItyB,EAAQy0F,QAAQtqF,QAAQkiC,EAAKrD,OAAOpvC,SAChB2iD,EACxBA,GAAS,QACFjqB,GAAK,IACd,IAAMwmE,EAAgB,EAAT31E,IAAgBA,GAAU,GAAMA,GAAU,EACvDzsB,KAAKy9F,QAAU2E,EACf1hG,EAAgB6C,KAAOvD,KAAKw9F,OAASx9F,KAAKk9F,UAC1Cx8F,EAAgB6C,KAAOvD,KAAKy9F,OAASz9F,KAAKk9F,UAE5C,OAAOx8F,GAeT4I,EAAQ/I,UAAU6gG,mBAAqB,SAAS1gG,EAAiBuB,EAAQwB,EAAQC,GAE/E,IADA,IAAI2+F,EAAqB,GAChB9+F,EAAIE,EAAQF,EAAIG,EAAKH,GAAKtB,EAAQ,CACzC,IAAIX,EAAIZ,EAAgB6C,GACpBhC,EAAIb,EAAgB6C,EAAI,GAC5BjC,EAAIO,KAAKqgC,MAAM5gC,EAAItB,KAAKk9F,WACxB37F,EAAIM,KAAKqgC,MAAM3gC,EAAIvB,KAAKk9F,WACxB,IAAMiF,EAAK7gG,EAAItB,KAAKw9F,OACd4E,EAAK7gG,EAAIvB,KAAKy9F,OACpBz9F,KAAKw9F,OAASl8F,EACdtB,KAAKy9F,OAASl8F,EACd8gG,GAAsB/4F,EAAQ00F,oBAAoBmE,GAC9C74F,EAAQ00F,oBAAoBoE,GAElC,OAAOC,GAYT/4F,EAAQ/I,UAAU+hG,oBAAsB,SAAS3sD,EAAMz+B,GACrD1J,EAAA1D,QAAY2D,OAAOkoC,EAAK50C,OAAS,GACjCyM,EAAA1D,QAAY2D,OAAmB,MAAZkoC,EAAK,IACxBnoC,EAAA1D,QAAY2D,OAAiC,MAA1BkoC,EAAKA,EAAK50C,OAAS,IACtC,IAAIwhG,EAAa5sD,EAAKliC,QAAQ,KACxB+uF,EAAeD,GAAc,EAC9B5sD,EAAK1Z,UAAU,EAAGsmE,GADF,IACmB5sD,EAClC58B,EAAW/Y,KAAKyiG,qBAAqBD,EAActrF,GACnDuB,EAAU,IAAAurE,EAAAl6E,QAAciP,GAC9B,GAAIwpF,GAAc,EAAG,CACnB,IAAMG,EAA0B/sD,EAAK1Z,UACnCsmE,EAAa,EAAG5sD,EAAK50C,OAAS,GAE1B4hG,GADNJ,EAAaG,EAAwBjvF,QAAQ,OACR,EACnCivF,EAAwBzmE,UAAU,EAAGsmE,GACrCG,EACF,GAAsB,IAAlBC,EAEF,IADA,IAAMrqE,EAAQqqE,EAAev8E,MAAM,KAC1B7iB,EAAI,EAAGA,EAAI+0B,EAAMv3B,SAAUwC,EAAG,CACrC,IACM09F,EADO7kE,mBAAmB9D,EAAM/0B,IAClB6iB,MAAM,KAC1B5Y,EAAA1D,QAAY2D,OAAyB,IAAlBwzF,EAAOlgG,QAC1B,IAAI0Y,EAAMwnF,EAAO,GACX1uF,EAAQ0uF,EAAO,IAChBjhG,KAAKu9F,WAAaj0F,EAAQo0F,kBAAkBjkF,KAC/CA,EAAMnQ,EAAQo0F,kBAAkBjkF,IAElChB,EAAQ/L,IAAI+M,EAAKnQ,EAAQw3F,WAAWrnF,EAAKlH,IAG7C,GAAIgwF,GAAc,EAAG,CACnB,IAAMK,EAAaF,EAAwBzmE,UAAUsmE,EAAa,GAC9DviG,KAAKu9F,UACPj0F,EAAQi3F,mBAAmBqC,EAAYnqF,GAEvCnP,EAAQs3F,oBAAoBgC,EAAYnqF,IAI9C,OAAOA,GAYTnP,EAAQ/I,UAAUsiG,qBAAuB,SAASltD,EAAMz+B,GACtD1J,EAAA1D,QAAY2D,OAAmB,MAAZkoC,EAAK,IAExB,IAAMn+B,KAEN,IADAm+B,EAAOA,EAAK1Z,UAAU,GACf0Z,EAAK50C,OAAS,GAAG,CACtB,IAAMmC,EAAQyyC,EAAKliC,QAAQ,KAC3BjG,EAAA1D,QAAY2D,OAAOvK,GAAS,GAC5B,IAAMuV,EAAUzY,KAAKsiG,oBACnB3sD,EAAK1Z,UAAU,EAAG/4B,EAAQ,GAAIgU,GAChCM,EAAS1W,KAAK2X,GACdk9B,EAAOA,EAAK1Z,UAAU/4B,EAAQ,GAEhC,OAAOsU,GAYTlO,EAAQ/I,UAAUkiG,qBAAuB,SAAS9sD,EAAMz+B,GACtD,IAAM4rF,EAAiBx5F,EAAQy4F,kBAAkBpsD,EAAK,IAItD,OAHAnoC,EAAA1D,QAAY2D,YAA0BrQ,IAAnB0lG,GACnB9iG,KAAKw9F,OAAS,EACdx9F,KAAKy9F,OAAS,EACPqF,EAAe/iG,KAAKC,KAAM21C,IAYnCrsC,EAAQ/I,UAAUwiG,iBAAmB,SAAStqF,EAASvB,GACrD,IAAoC8rF,KAIhCC,EAAkB,GAChBlqF,EAAWN,EAAQ6sE,cACrBvsE,IACFkqF,EAAkBjjG,KAAKkjG,kBAAkBnqF,EAAU7B,IAGjD+rF,EAAgBliG,OAAS,IAE3ByM,EAAA1D,QAAY2D,OAAuD,MAAhDw1F,EAAgBA,EAAgBliG,OAAS,IAC5DkiG,EAAkBA,EAAgBhnE,UAAU,EAAGgnE,EAAgBliG,OAAS,GACxEiiG,EAAaliG,KAAKmiG,IAKpB,IAAoCE,KAC9BC,EAAepjG,KAAKq9F,oBAAoB5kF,GAC9C,IAAK,IAAMgB,KAAO2pF,EAAc,CAC9B,IAAM7wF,EAAQ6wF,EAAa3pF,GAC3B,GAAIlH,SAAyCkH,IAAQhB,EAAQye,kBAAmB,CAC7C,IAA7BisE,EAAkBpiG,QACpBoiG,EAAkBriG,KAAK,KAEzB,IAAMuiG,EAAU/mE,mBACX7iB,EAAIgS,QAAQ,UAAW,KADZ,IAEZlZ,EAAM/S,WAAWisB,QAAQ,UAAW,MACxC03E,EAAkBriG,KAAKuiG,IAW3B,GAPIF,EAAkBpiG,OAAS,IAC7BiiG,EAAaliG,KAAK,KAClB8F,MAAMrG,UAAUO,KAAKgnD,MAAMk7C,EAAcG,IAKvCnjG,KAAKo9F,cAAe,CACtB,IAAMp/C,EAAgBvlC,EAAQ6qF,mBAC9B,QAAsBlmG,IAAlB4gD,EAA6B,CAC/B,IAAI7vB,EAAS6vB,EAAcj+C,KAAK0Y,EAAS,GACzC,GAAe,OAAX0V,EAAiB,CACnB,IAAMkwE,KACNlwE,EAASvnB,MAAMggB,QAAQuH,GAAUA,GAAUA,GAC3C7kB,EAAQ8zF,cACNjvE,EAAQpV,EAAS1U,UAAWg6F,GAC1BA,EAAct9F,OAAS,IACzBiiG,EAAaliG,KAAK,KAClB8F,MAAMrG,UAAUO,KAAKgnD,MAAMk7C,EAAc3E,MASjD,OADA2E,EAAaliG,KAAK,KACXkiG,EAAavxF,KAAK,KAY3BnI,EAAQ/I,UAAUgjG,kBAAoB,SAAS/rF,EAAUN,GACvD,IAAMqqF,KACN,GAAI/pF,EAASzW,OAAS,EAAG,CACvBwgG,EAAUzgG,KAAK,KACf,IAAK,IAAIyC,EAAI,EAAGC,EAAKgU,EAASzW,OAAQwC,EAAIC,IAAMD,EAC9Cg+F,EAAUzgG,KAAKd,KAAK+iG,iBAAiBvrF,EAASjU,GAAI2T,IAGtD,OAAOqqF,EAAU9vF,KAAK,KAYxBnI,EAAQ/I,UAAU2iG,kBAAoB,SAASnqF,EAAU7B,GACvD,IAAMssF,EAAiBl6F,EAAQ24F,kBAC7BlpF,EAAS1U,WACXmJ,EAAA1D,QAAY2D,YAA0BrQ,IAAnBomG,GACnB,IAAMC,EACDzG,EAAgB0G,qBAAqB3qF,GAAU,EAAM7B,GAG1D,OAFAlX,KAAKw9F,OAAS,EACdx9F,KAAKy9F,OAAS,EACP+F,EAAezjG,KAAKC,KAAMyjG,cAIpBn6F,4FClrCbu0F,YAAa,aACbnnD,MAAO,QACPonD,QAAS,4FCPXrhG,EAAA,YACAA,EAAA,SACAA,EAAA,wDAKA,IAAM6M,EAAU+I,QAAQD,OAAO,0BAC7BmI,EAAAzQ,QAAyBsI,OAAOlH,KAChC8pB,EAAAlrB,QAAwBsI,OAAOlH,iBAIlB5B,oMChBfq6F,EAAAlnG,EAAA,KAyCA,MAAAmnG,EAAA,SAAA1sF,GAEA2sF,EAAA,QAAA9jG,KAAAC,MACA8jG,YAAAF,EAAAG,aACAC,gBAAAC,EAAA,KACAC,cAAAN,EAAAO,iBAGA,MAAA1pF,EAAAvD,MAMAlX,KAAAuvB,QAAA9U,EAAAxD,OAAAwD,EAAAxD,OAAA,KAMAjX,KAAAokG,aAAAhnG,IAAAqd,EAAA2/E,QAAA3/E,EAAA2/E,OAMAp6F,KAAAqkG,WAAAjnG,IAAAqd,EAAAw/E,MAAAx/E,EAAAw/E,KAMAj6F,KAAAi3F,UAAAx8E,EAAAjD,SAAAiD,EAAAjD,SAAA,KAMAxX,KAAAskG,yBAMAtkG,KAAAukG,8BAQAvkG,KAAAwkG,2BASAxkG,KAAAykG,oBAOAzkG,KAAA0kG,iBAAA,KAMA1kG,KAAA2kG,qBAAAvnG,IAAAqd,EAAAy/E,eACAz/E,EAAAy/E,eAAA,GAMAl6F,KAAA4kG,gBAAAhB,EAAAiB,eAAAh3F,KAAA7N,MAQAA,KAAA8kG,OAAA,IAAAnB,EAAA,QAQA3jG,KAAA+kG,kBACA56E,MAAAnqB,KAAAwhG,oBACAp3E,WAAApqB,KAAAkhG,yBACA32E,WAAAvqB,KAAAkhG,yBACA72E,QAAArqB,KAAA4hG,sBACA38F,WAAAjF,KAAAyhG,yBACA9hG,gBAAAK,KAAAqhG,8BACAr7F,aAAAhG,KAAA6hG,2BACAlxB,mBAAA3wE,KAAAglG,iCACAC,OAAAjlG,KAAAklG,uBAIA7kG,OAAAC,EAAA,SAAAD,CAAAujG,EAAAC,EAAA,SAUAD,EAAArjG,UAAAm9C,WAAA,SAAAjlC,EAAA0sF,GACA,MAAA7wF,OAAAlX,IAAA+nG,KACAC,EAAA/kG,OAAAC,EAAA,OAAAD,CAAAoY,GACAM,EAAAN,EAAA6sE,cACA,GAAAvsE,EAAA,CACA,MAAAssF,EAAArlG,KAAA+kG,iBAAAhsF,EAAA1U,WACAghG,IACArlG,KAAAwkG,wBAAAY,GAAArsF,EAAApX,UAAAtB,OAAAilG,EAAA,YAAAjlG,IACAglG,EAAAtlG,KAAAC,KAAAyY,EAAAM,IAIAzE,IACAtU,KAAAukG,2BAAAa,GAAAG,EAAA,QAAAjxF,OACAmE,EACA+sF,EAAA,EAAAviE,OACAjjC,KAAAylG,qBAAAzlG,QASA4jG,EAAArjG,UAAAmlG,mBAAA,SAAAjtF,GACAzY,KAAA09C,WAAAjlC,IAQAmrF,EAAArjG,UAAAolG,sBAAA,SAAAltF,GACAzY,KAAA69C,cAAAplC,IAQAmrF,EAAArjG,UAAAqlG,aAAA,WACA,IAAApuF,EAMA,OALAxX,KAAAi3F,UACAz/E,EAAAxX,KAAAi3F,UACGj3F,KAAAuvB,UACH/X,EAAAxX,KAAAuvB,QAAAqyD,eAEoE,GAQpEgiB,EAAArjG,UAAA62F,kBAAA,SAAAnN,GACA,IAAAxxE,EACAwxE,aAAA4b,EAAA,QAAAC,MACArtF,EAAAwxE,EAAAxxE,QACGwxE,aAAA8b,EAAA,QAAAD,QACHrtF,EAAAwxE,EAAAvM,SAEA19E,KAAA09C,WAAwC,IAQxCkmD,EAAArjG,UAAA82F,qBAAA,SAAApN,GACA,IAAAxxE,EACAwxE,aAAA4b,EAAA,QAAAC,MACArtF,EAAAwxE,EAAAxxE,QACGwxE,aAAA8b,EAAA,QAAAD,QACHrtF,EAAAwxE,EAAAvM,SAEA19E,KAAA69C,cAA2C,IAQ3C+lD,EAAArjG,UAAAklG,qBAAA,SAAAxb,GACA,MAAAxxE,EAAwCwxE,EAAA,OACxC,GAAAjqF,KAAAgmG,uBAAA,CACA,MAAAryF,EAAAtT,OAAAC,EAAA,OAAAD,CAAAoY,GACA9E,KAAA3T,KAAAykG,mBACAzkG,KAAAykG,iBAAA9wF,GAAA8E,QAGAzY,KAAAimG,eAAAxtF,IAYAmrF,EAAArjG,UAAAs9C,cAAA,SAAAplC,EAAAytF,GACA,MAAA70B,OAAAj0E,IAAA8oG,KACAd,EAAA/kG,OAAAC,EAAA,OAAAD,CAAAoY,GACAhU,EAAAzE,KAAAwkG,wBAAAY,GACA,GAAA3gG,EAAA,CACA,MAAA0hG,EAAAnmG,KAAA8kG,OACAsB,KACAD,EAAAE,gBAAA5hG,EAAA,SAAA7H,GACA6b,IAAA7b,EAAA6b,SACA2tF,EAAAtlG,KAAAlE,KAGA,QAAA2G,EAAA6iG,EAAArlG,OAAA,EAA0CwC,GAAA,IAAQA,EAClD4iG,EAAAx4D,OAAAy4D,EAAA7iG,IAIA8tE,IACAk0B,EAAA,QAAArlE,cAAAlgC,KAAAukG,2BAAAa,WACAplG,KAAAukG,2BAAAa,KAQAxB,EAAArjG,UAAA89C,OAAA,SAAAtvC,GACA,MAAAu3F,EAAAtmG,KAAAm8F,SACA9kE,EAAAr3B,KAAAskG,sBACA9sF,EAAAxX,KAAA4lG,eAEAU,IACAjvE,EAAApqB,QAAAs4F,EAAA,QAAArlE,eACA7I,EAAAt2B,OAAA,EACAyW,EAAAvK,QAAAjN,KAAA2lG,sBAAA93F,KAAA7N,QAEA6jG,EAAA,QAAAtjG,UAAA89C,OAAAt+C,KAAAC,KAAA+O,GAEAA,IACA/O,KAAAi3F,UACA5/D,EAAAv2B,KACAykG,EAAA,QAAAjxF,OAAAtU,KAAAi3F,UAAAsP,EAAA,EAAAC,IACAxmG,KAAAo3F,kBAAAp3F,MACAulG,EAAA,QAAAjxF,OAAAtU,KAAAi3F,UAAAsP,EAAA,EAAAE,OACAzmG,KAAAq3F,qBAAAr3F,OAEKA,KAAAuvB,SACL8H,EAAAv2B,KACAykG,EAAA,QAAAjxF,OAAAtU,KAAAuvB,QAAAm3E,EAAA,EAAAC,WACA3mG,KAAAo3F,kBAAAp3F,MACAulG,EAAA,QAAAjxF,OAAAtU,KAAAuvB,QAAAm3E,EAAA,EAAAE,cACA5mG,KAAAq3F,qBAAAr3F,OAGAwX,EAAAvK,QAAAjN,KAAA0lG,mBAAA73F,KAAA7N,SAQA4jG,EAAArjG,UAAAsmG,gBAAA5C,EAAA,MASAL,EAAArjG,UAAAumG,OAAA,SAAAC,EAAAC,EAAAj4F,GAEA,MAAAk4F,EAAAl4F,EAAAm4F,wBACAH,EAAA,GAAA/mG,KAAA2kG,gBAAAoC,EAAA,GAAA/mG,KAAA2kG,kBACAwC,EAAAp4F,EAAAm4F,wBACAH,EAAA,GAAA/mG,KAAA2kG,gBAAAoC,EAAA,GAAA/mG,KAAA2kG,kBACAyC,EAAA/mG,OAAAilG,EAAA,eAAAjlG,EAAA4mG,EAAAE,IAEA,IAAAhvE,EAAAn4B,KAAA8kG,OAAAuC,YAAAD,GAGApnG,KAAAokG,UAAApkG,KAAAqkG,QACAlsE,IAAA/oB,OAAA,SAAAk4F,GACA,OAAAA,EAAA7uF,QAAA6sE,cAAAjhF,YACAkjG,EAAA,QAAAC,UAIA,IAIAC,EAAAC,EAAAC,EAAAC,EAAAC,EAJAC,GAAA,EACAC,GAAA,EACA3N,EAAA,KACA4N,EAAA,KAEA,GAAA7vE,EAAAp3B,OAAA,GACAf,KAAA0kG,iBAAAsC,EACA7uE,EAAA8vE,KAAAjoG,KAAA4kG,iBACA,MAAAsD,EAAA/vE,EAAA,GAAAmvE,QACA3mB,EAAAxoD,EAAA,GAAA1f,QAAA6sE,cAAAjhF,YACAkjG,EAAA,QAAAC,OACAxnG,KAAAokG,UAAApkG,KAAAqkG,OACAqD,EAAA34F,EAAAo5F,uBAAAD,EAAA,IACAP,EAAA54F,EAAAo5F,uBAAAD,EAAA,IACAN,EAAAQ,EAAA,QAAA9iG,gBAAAyhG,EAAAW,GACAG,EAAAO,EAAA,QAAA9iG,gBAAAyhG,EAAAY,IAEAG,GADAL,EAAA5lG,KAAAC,KAAAD,KAAAk6D,IAAA6rC,EAAAC,MACA7nG,KAAA2kG,mBAEAoD,GAAA,EACA3N,EAAAwN,EAAAC,EACAK,EAAA,GAAAA,EAAA,GACAF,EAAAj5F,EAAAo5F,uBAAA/N,KAEKp6F,KAAAqkG,QAELjK,EADAzZ,EACAynB,EAAA,QAAAC,gBAAArB,EACoC7uE,EAAA,GAAA1f,QAAA6sE,eAEpC8iB,EAAA,QAAAE,iBAAAtB,EACAkB,GAEAF,EAAAj5F,EAAAo5F,uBAAA/N,GACAgO,EAAA,QAAAG,SAAAxB,EAAAiB,IAAAhoG,KAAA2kG,kBACAoD,GAAA,EACA/nG,KAAAokG,UAAAzjB,IACA+mB,EAAA34F,EAAAo5F,uBAAAD,EAAA,IACAP,EAAA54F,EAAAo5F,uBAAAD,EAAA,IACAN,EAAAQ,EAAA,QAAA9iG,gBAAA0iG,EAAAN,GACAG,EAAAO,EAAA,QAAA9iG,gBAAA0iG,EAAAL,IAEAG,GADAL,EAAA5lG,KAAAC,KAAAD,KAAAk6D,IAAA6rC,EAAAC,MACA7nG,KAAA2kG,mBAEAvK,EAAAwN,EAAAC,EACAK,EAAA,GAAAA,EAAA,GACAF,EAAAj5F,EAAAo5F,uBAAA/N,OAKA2N,IACAC,GAAAnmG,KAAAmhC,MAAAglE,EAAA,IAAAnmG,KAAAmhC,MAAAglE,EAAA,MAGA,OACAD,UACA3N,SACA4N,gBASApE,EAAArjG,UAAA0lG,eAAA,SAAAxtF,GACAzY,KAAA69C,cAAAplC,GAAA,GACAzY,KAAA09C,WAAAjlC,GAAA,IASAmrF,EAAArjG,UAAA2kG,qBAAA,SAAAzsF,EAAAM,GACA,MACAnZ,EADAS,OAAAmoG,EAAA,WAAAnoG,CAAA0Y,GACAlW,iBAAA,GACA,QAAAU,EAAA,EAAAC,EAAA5D,EAAAmB,OAAA,EAA8CwC,EAAAC,IAAQD,EAAA,CACtD,MAAA+jG,EAAA1nG,EAAAiB,MAAA0C,IAAA,GACAklG,GACAhwF,UACA6uF,WAEAtnG,KAAA8kG,OAAA4D,OAAAroG,OAAAilG,EAAA,eAAAjlG,CAAAinG,GAAAmB,KAUA7E,EAAArjG,UAAAykG,iCAAA,SAAAvsF,EAAAM,GACA,MAAAk4D,EAAAl4D,EAAA44D,qBACA,QAAApuE,EAAA,EAAiBA,EAAA0tE,EAAAlwE,SAAuBwC,EAAA,CACxC,MAAA8hG,EAAArlG,KAAA+kG,iBAAA9zB,EAAA1tE,GAAAc,WACAghG,GACAA,EAAAtlG,KAAAC,KAAAyY,EAAAw4D,EAAA1tE,MAWAqgG,EAAArjG,UAAA2gG,yBAAA,SAAAzoF,EAAAM,GACA,MAAAnZ,EAAAmZ,EAAAlW,iBACA,QAAAU,EAAA,EAAAC,EAAA5D,EAAAmB,OAAA,EAA8CwC,EAAAC,IAAQD,EAAA,CACtD,MAAA+jG,EAAA1nG,EAAAiB,MAAA0C,IAAA,GACAklG,GACAhwF,UACA6uF,WAEAtnG,KAAA8kG,OAAA4D,OAAAroG,OAAAilG,EAAA,eAAAjlG,CAAAinG,GAAAmB,KAUA7E,EAAArjG,UAAA8gG,8BAAA,SAAA5oF,EAAAM,GACA,MAAA0gB,EAAA1gB,EAAAlW,iBACA,QAAAwC,EAAA,EAAAyD,EAAA2wB,EAAA14B,OAAoCsE,EAAAyD,IAAQzD,EAAA,CAC5C,MAAAzF,EAAA65B,EAAAp0B,GACA,QAAA9B,EAAA,EAAAC,EAAA5D,EAAAmB,OAAA,EAAgDwC,EAAAC,IAAQD,EAAA,CACxD,MAAA+jG,EAAA1nG,EAAAiB,MAAA0C,IAAA,GACAklG,GACAhwF,UACA6uF,WAEAtnG,KAAA8kG,OAAA4D,OAAAroG,OAAAilG,EAAA,eAAAjlG,CAAAinG,GAAAmB,MAWA7E,EAAArjG,UAAAkhG,yBAAA,SAAAhpF,EAAAM,GACA,MAAAnT,EAAAmT,EAAAlW,iBACA,QAAAU,EAAA,EAAAC,EAAAoC,EAAA7E,OAAqCwC,EAAAC,IAAQD,EAAA,CAC7C,MAAA3D,EAAAgG,EAAArC,GACAklG,GACAhwF,UACA6uF,SAAA1nG,MAEAI,KAAA8kG,OAAA4D,OAAA3vF,EAAApX,YAAA8mG,KAUA7E,EAAArjG,UAAAshG,2BAAA,SAAAppF,EAAAM,GACA,MAAAlQ,EAAAkQ,EAAAlW,iBACA,QAAAkhD,EAAA,EAAA4kD,EAAA9/F,EAAA9H,OAAuCgjD,EAAA4kD,IAAQ5kD,EAAA,CAC/C,MAAArrB,EAAA7vB,EAAAk7C,GACA,QAAA1+C,EAAA,EAAAyD,EAAA4vB,EAAA33B,OAAsCsE,EAAAyD,IAAQzD,EAAA,CAC9C,MAAAzF,EAAA84B,EAAArzB,GACA,QAAA9B,EAAA,EAAAC,EAAA5D,EAAAmB,OAAA,EAAkDwC,EAAAC,IAAQD,EAAA,CAC1D,MAAA+jG,EAAA1nG,EAAAiB,MAAA0C,IAAA,GACAklG,GACAhwF,UACA6uF,WAEAtnG,KAAA8kG,OAAA4D,OAAAroG,OAAAilG,EAAA,eAAAjlG,CAAAinG,GAAAmB,OAYA7E,EAAArjG,UAAAihG,oBAAA,SAAA/oF,EAAAM,GACA,MAAAnZ,EAAAmZ,EAAAlW,iBACA4lG,GACAhwF,UACA6uF,SAAA1nG,MAEAI,KAAA8kG,OAAA4D,OAAA3vF,EAAApX,YAAA8mG,IASA7E,EAAArjG,UAAAqhG,sBAAA,SAAAnpF,EAAAM,GACA,MAAA2f,EAAA3f,EAAAlW,iBACA,QAAAwC,EAAA,EAAAyD,EAAA4vB,EAAA33B,OAAoCsE,EAAAyD,IAAQzD,EAAA,CAC5C,MAAAzF,EAAA84B,EAAArzB,GACA,QAAA9B,EAAA,EAAAC,EAAA5D,EAAAmB,OAAA,EAAgDwC,EAAAC,IAAQD,EAAA,CACxD,MAAA+jG,EAAA1nG,EAAAiB,MAAA0C,IAAA,GACAklG,GACAhwF,UACA6uF,WAEAtnG,KAAA8kG,OAAA4D,OAAAroG,OAAAilG,EAAA,eAAAjlG,CAAAinG,GAAAmB,MAaA7E,EAAAG,aAAA,SAAA9Z,GACA,MAAAx9D,EAAAzsB,KAAA8mG,OAAA7c,EAAA8c,MAAA9c,EAAAzoD,WAAAyoD,EAAAl7E,KAKA,OAJA0d,EAAAs7E,UACA9d,EAAAzoD,WAAA/U,EAAA2tE,OAAAv5F,MAAA,KACAopF,EAAA8c,MAAAt6E,EAAAu7E,aAEAnE,EAAA,QAAAC,YAAA/jG,KAAAC,KAAAiqF,IAUA2Z,EAAAO,eAAA,SAAAla,GACA,MAAA2e,EAAAvoG,OAAAwoG,EAAA,UAAAxoG,CAAAL,KAAAykG,kBAKA,OAJAmE,EAAA7nG,SACA6nG,EAAA37F,QAAAjN,KAAAimG,eAAAp4F,KAAA7N,OACAA,KAAAykG,sBAEA,GAWAb,EAAAiB,eAAA,SAAAxiD,EAAAzmB,GACA,OAAAwsE,EAAA,QAAAU,yBACA9oG,KAAA0kG,iBAAAriD,EAAAilD,SACAc,EAAA,QAAAU,yBACA9oG,KAAA0kG,iBAAA9oE,EAAA0rE,UAEA7nG,EAAA,yQC9mBAspG,EAMA,YANAA,EAYA,mDCsBA,MAAAC,EAAA,SAAAvuF,GAEAwuF,EAAA,QAAAlpG,KAAAC,MACAgkG,gBAAAgF,EAAAE,iBACApF,YAAAkF,EAAAlF,YACAI,cAAA8E,EAAA7E,iBAOAnkG,KAAAmpG,eAAA,EAMAnpG,KAAAopG,QAAA,KAMAppG,KAAAqpG,aAMArpG,KAAAspG,cAMAtpG,KAAAupG,WAAA,EAOAvpG,KAAAuvB,QAAA9U,EAAAxD,OAAAwD,EAAAxD,OAAA,KAOAjX,KAAAi3F,UAAAx8E,EAAAjD,SAAAiD,EAAAjD,SAAA,KAOAxX,KAAAwpG,eAAA/uF,EAAAgvF,cAAAhvF,EAAAgvF,cAAA,GAOAzpG,KAAA0pG,MAA+CjvF,EAAA,KAO/Cza,KAAA2pG,MAAAX,EAAAY,SAAA5pG,KAAA0pG,OAQA1pG,KAAA6pG,aAAApvF,EAAAqvF,UASA9pG,KAAA+pG,WAAAtvF,EAAAuvF,UACAvvF,EAAAuvF,UACAhqG,KAAA2pG,QAAAX,EAAAiB,MAAAnM,QAAA,IAQA99F,KAAAkqG,WAAAzvF,EAAA0vF,UAAA1vF,EAAA0vF,UAAA39E,IAOAxsB,KAAAoqG,iBAAA3vF,EAAA4vF,gBAAA5vF,EAAA4vF,gBAAAC,EAAA,KAEA,IAAAC,EAAA9vF,EAAA8vF,iBACA,IAAAA,EACA,GAAAvqG,KAAA0pG,QAAAc,EAAA,QAAAhD,OAOA+C,EAAA,SAAA3qG,EAAA6qG,GACA,MAAAC,EAAAD,GACA,IAAAxF,EAAA,SAAA3kC,UACAqqC,EAAAC,EAAA,QAAAtlG,gBACA1F,EAAA,GAAAA,EAAA,IAEA,OADA8qG,EAAAG,mBAAAjrG,EAAA,GAAAiC,KAAAC,KAAA6oG,IACAD,OAEK,CACL,IAAAI,EACA,MAAArkC,EAAAzmE,KAAA2pG,MACAljC,IAAAuiC,EAAAiB,MAAAvzD,MACAo0D,EAAA3gF,EAAA,QACOs8C,IAAAuiC,EAAAiB,MAAApM,YACPiN,EAAA1gF,EAAA,QACOq8C,IAAAuiC,EAAAiB,MAAAnM,UACPgN,EAAAzgF,EAAA,SAQAkgF,EAAA,SAAA3qG,EAAA6qG,GACA,IAAA1xF,EAAA0xF,EAeA,OAdA1xF,EACA0tD,IAAAuiC,EAAAiB,MAAAnM,QACAl+F,EAAA,GAAAmB,OAEAgY,EAAA3Y,gBAAAR,EAAA,GAAA8vF,QAAA9vF,EAAA,UAEAmZ,EAAA3Y,mBAGA2Y,EAAA3Y,eAAAR,GAGAmZ,EAAA,IAAA+xF,EAAAlrG,GAEAmZ,GASA/Y,KAAA+qG,kBAAAR,EAMAvqG,KAAAgrG,sBAAA5tG,IAAAqd,EAAAwwF,gBAAAxwF,EAAAwwF,gBAAA,IAQAjrG,KAAAkrG,kBAAA,KAOAlrG,KAAAmrG,eAAA,KAOAnrG,KAAAorG,aAAA,KAOAprG,KAAAqrG,cAAA,KAOArrG,KAAAsrG,YAAA,KAOAtrG,KAAAurG,kBAAA,KASAvrG,KAAAwrG,uBAAA/wF,EAAAgxF,eACAhxF,EAAAgxF,eAAAhxF,EAAAgxF,eAAA,GAOAzrG,KAAA0rG,SAAA,IAAAC,EAAA,SACA10F,OAAA,IAAA20F,EAAA,SACAzuD,iBAAA,EACAxO,QAAAl0B,EAAAk0B,OAAAl0B,EAAAk0B,QAEA2O,MAAA7iC,EAAA6iC,MAAA7iC,EAAA6iC,MACA0rD,EAAA6C,0BACApuD,wBAAA,IAQAz9C,KAAA2b,cAAAlB,EAAAmB,aAMA5b,KAAA8rG,WAAArxF,EAAAkvB,UACAlvB,EAAAkvB,YAAA,QAAAlN,eAMAz8B,KAAA+rG,mBACAtxF,EAAAuxF,SACAhsG,KAAA+rG,mBAAApiE,EAAA,QAAAsiE,OAEAjsG,KAAA+rG,mBAAAtxF,EAAAyxF,kBACAzxF,EAAAyxF,kBAAAviE,EAAA,QAAAwiE,aAGAvsE,EAAA,QAAAtrB,OAAAtU,KACAosG,EAAA,QAAAC,mBAAA9jE,EAAA,EAAA+jE,QACAtsG,KAAAusG,aAAAvsG,OAIAK,OAAA6+B,EAAA,SAAA7+B,CAAA2oG,EAAAC,EAAA,SAMAD,EAAA6C,wBAAA,WACA,MAAA19E,EAAA0sD,EAAA,QAAA2xB,uBACA,gBAAA/zF,EAAA6lB,GACA,OAAAnQ,EAAA1V,EAAA6sE,cAAAjhF,aAQA2kG,EAAAzoG,UAAA89C,OAAA,SAAAtvC,GACAk6F,EAAA,QAAA1oG,UAAA89C,OAAAt+C,KAAAC,KAAA+O,GACA/O,KAAAusG,gBAYAvD,EAAAlF,YAAA,SAAAvnE,GACAA,EAAAkwE,cAAAn/F,OAAAwyB,EAAA,EAAA4sE,aAEAnwE,EAAAowE,iBAEA3sG,KAAAupG,UAAAvpG,KAAA2pG,QAAAX,EAAAiB,MAAAvzD,OAAA12C,KAAA+rG,mBAAAxvE,GACA,IAAAqwE,EAAArwE,EAAAjvB,OAAAu/F,EAAA,EAAAC,YACAC,GAAA,EACA,GAAA/sG,KAAAspG,eAAA/sE,EAAAjvB,OAAAu/F,EAAA,EAAAG,YAAA,CACAzvG,KAAA+2F,MACAt0F,KAAAspG,eAAAtpG,KAAAgrG,kBACAhrG,KAAAopG,QAAA7sE,EAAAwqE,MACA/mG,KAAAmpG,eAAAnpG,KAAAupG,UACAqD,GAAA,GAEA5sG,KAAAspG,mBAAAlsG,EAEA4C,KAAAmpG,eAAAnpG,KAAAqpG,eACA4D,aAAAjtG,KAAAqpG,cACArpG,KAAAqpG,kBAAAjsG,GAuBA,OApBA4C,KAAAupG,WACAhtE,EAAAjvB,OAAAu/F,EAAA,EAAAG,aACA,OAAAhtG,KAAAmrG,gBACAnrG,KAAAktG,cAAA3wE,GACAwwE,GAAA,GACG/sG,KAAAupG,WACHhtE,EAAAjvB,OAAAu/F,EAAA,EAAAM,YACAJ,GAAA,EACGH,GACHG,EAAAxwE,EAAAjvB,OAAAu/F,EAAA,EAAAC,cACA9sG,KAAAupG,UACAwD,EAAA/sG,KAAAotG,mBAAA7wE,IACKA,EAAA8wE,aAAAC,aAAAC,EAAA,EAAAC,cACLjxE,EAAAjvB,OAAAu/F,EAAA,EAAAG,cAAAhtG,KAAAqpG,eACArpG,KAAAotG,mBAAA7wE,GAEGA,EAAAjvB,OAAAu/F,EAAA,EAAAY,WACHV,GAAA,GAGA9D,EAAA,QAAAnF,YAAA/jG,KAAAC,KAAAu8B,IAAAwwE,GAUA/D,EAAAE,iBAAA,SAAA3sE,GAGA,OAFAv8B,KAAAmpG,eAAAnpG,KAAAupG,UAEAvpG,KAAAupG,WACAvpG,KAAAopG,QAAA7sE,EAAAwqE,MACA/mG,KAAAkrG,mBACAlrG,KAAA0tG,cAAAnxE,IAEA,KACGv8B,KAAA8rG,WAAAvvE,KACHv8B,KAAAspG,cAAA/rG,KAAA+2F,MACAt0F,KAAAqpG,aAAA/M,WAAA,WACAt8F,KAAAotG,mBAAA,IAAAO,EAAA,QACAd,EAAA,EAAAC,YAAAvwE,EAAAxtB,IAAAwtB,EAAA8wE,aAAA9wE,EAAAqxE,cACK//F,KAAA7N,WAAAgrG,kBACLhrG,KAAAopG,QAAA7sE,EAAAwqE,OACA,IAaAiC,EAAA7E,eAAA,SAAA5nE,GACA,IAAAwwE,GAAA,EAEA/sG,KAAAqpG,eACA4D,aAAAjtG,KAAAqpG,cACArpG,KAAAqpG,kBAAAjsG,GAGA4C,KAAAotG,mBAAA7wE,GAEA,MAAAsxE,EAAA7tG,KAAA2pG,QAAAX,EAAAiB,MAAAzC,OAyBA,OAvBAxnG,KAAAmpG,eACAnpG,KAAAkrG,kBAKKlrG,KAAAupG,WAAAsE,EACL7tG,KAAA8tG,gBACK9tG,KAAA+tG,UAAAxxE,GACLv8B,KAAAoqG,iBAAA7tE,IACAv8B,KAAA8tG,gBAGA9tG,KAAAktG,cAAA3wE,IAXAv8B,KAAA0tG,cAAAnxE,GACAv8B,KAAA2pG,QAAAX,EAAAiB,MAAAvzD,OACA12C,KAAA8tG,iBAWAf,GAAA,GACG/sG,KAAAupG,YACHvpG,KAAAkrG,kBAAA,KACAlrG,KAAAguG,kBAEAjB,GAAA/sG,KAAA6pG,YACAttE,EAAA0xE,kBAEAlB,GAUA/D,EAAAzoG,UAAA6sG,mBAAA,SAAA7wE,GACA,GAAAv8B,KAAAopG,WACAppG,KAAAupG,WAAAvpG,KAAAmpG,eACAnpG,KAAAupG,YAAAvpG,KAAAmpG,eAAA,CACA,MAAA+E,EAAAluG,KAAAopG,QACA+E,EAAA5xE,EAAAwqE,MACA5E,EAAA+L,EAAA,GAAAC,EAAA,GACA/L,EAAA8L,EAAA,GAAAC,EAAA,GACA7oG,EAAA68F,IAAAC,IAIA,GAHApiG,KAAAmpG,cAAAnpG,KAAAupG,UACAjkG,EAAAtF,KAAAwrG,uBACAlmG,GAAAtF,KAAAwrG,wBACAxrG,KAAAmpG,cACA,SASA,OALAnpG,KAAAkrG,kBACAlrG,KAAAouG,eAAA7xE,GAEAv8B,KAAAquG,2BAAA9xE,IAEA,GAUAysE,EAAAzoG,UAAAwtG,UAAA,SAAAxxE,GACA,IAAA+xE,GAAA,EACA,GAAAtuG,KAAAmrG,eAAA,CACA,IAAAoD,GAAA,EACAC,GAAAxuG,KAAAkrG,mBASA,GARAlrG,KAAA2pG,QAAAX,EAAAiB,MAAApM,YACA0Q,EAAAvuG,KAAAqrG,cAAAtqG,OAAAf,KAAA+pG,WACK/pG,KAAA2pG,QAAAX,EAAAiB,MAAAnM,UACLyQ,EAAAvuG,KAAAqrG,cAAA,GAAAtqG,OACAf,KAAA+pG,WACAyE,GAAAxuG,KAAAqrG,cAAA,MACArrG,KAAAqrG,cAAA,GAAArrG,KAAAqrG,cAAA,GAAAtqG,OAAA,KAEAwtG,EAAA,CACA,MAAAx/F,EAAAwtB,EAAAxtB,IACA,QAAAxL,EAAA,EAAAC,EAAAgrG,EAAAztG,OAA+DwC,EAAAC,EAAQD,IAAA,CACvE,MAAAkrG,EAAAD,EAAAjrG,GACAmrG,EAAA3/F,EAAAo5F,uBAAAsG,GACA1H,EAAAxqE,EAAAwqE,MACA5E,EAAA4E,EAAA,GAAA2H,EAAA,GACAtM,EAAA2E,EAAA,GAAA2H,EAAA,GACAjF,EAAAzpG,KAAAupG,UAAA,EAAAvpG,KAAAwpG,eAEA,GADA8E,EAAAzsG,KAAAC,KAAAqgG,IAAAC,MAAAqH,EACA,CACAzpG,KAAAkrG,kBAAAuD,EACA,SAKA,OAAAH,GAQAtF,EAAAzoG,UAAA8tG,2BAAA,SAAA9xE,GACA,MAAA38B,EAAA28B,EAAAiF,WAAA3gC,QACA,GAAAb,KAAAorG,aAGG,CACkDprG,KAAAorG,aAAA9lB,cACrDllF,eAAAR,QAJAI,KAAAorG,aAAA,IAAA1kE,EAAA,YAAAvc,EAAA,QAAAvqB,IACAI,KAAA2uG,yBAaA3F,EAAAzoG,UAAAmtG,cAAA,SAAAnxE,GACA,MAAA/Y,EAAA+Y,EAAAiF,WACAxhC,KAAAkrG,kBAAA1nF,EACAxjB,KAAA2pG,QAAAX,EAAAiB,MAAAvzD,MACA12C,KAAAqrG,cAAA7nF,EAAA3iB,QACGb,KAAA2pG,QAAAX,EAAAiB,MAAAnM,SACH99F,KAAAqrG,gBAAA7nF,EAAA3iB,QAAA2iB,EAAA3iB,UACAb,KAAAurG,kBAAAvrG,KAAAqrG,cAAA,IAEArrG,KAAAqrG,eAAA7nF,EAAA3iB,QAAA2iB,EAAA3iB,SAEAb,KAAAurG,oBACAvrG,KAAAsrG,YAAA,IAAA5kE,EAAA,QACA,IAAAtc,EAAA,QAAApqB,KAAAurG,qBAEA,MAAAxyF,EAAA/Y,KAAA+qG,kBAAA/qG,KAAAqrG,eACArrG,KAAAmrG,eAAA,IAAAzkE,EAAA,QACA1mC,KAAA2b,eACA3b,KAAAmrG,eAAAzjF,gBAAA1nB,KAAA2b,eAEA3b,KAAAmrG,eAAAyD,YAAA71F,GACA/Y,KAAA2uG,wBACA3uG,KAAA6R,cAAA,IAAAm3F,EAAAlD,MAAAiD,EAAA/oG,KAAAmrG,kBASAnC,EAAAzoG,UAAA6tG,eAAA,SAAA7xE,GACA,IAAAiF,EAAAjF,EAAAiF,WACA,MAAAzoB,EAAqD/Y,KAAAmrG,eAAA7lB,cACrD,IAAA1lF,EAAAivG,EAqBAC,EAJA,GAhBA9uG,KAAA2pG,QAAAX,EAAAiB,MAAAvzD,MACAm4D,EAAA7uG,KAAAqrG,cACGrrG,KAAA2pG,QAAAX,EAAAiB,MAAAnM,SAEH+Q,GADAjvG,EAAAI,KAAAqrG,cAAA,IACAzrG,EAAAmB,OAAA,GACAf,KAAA+tG,UAAAxxE,KAEAiF,EAAAxhC,KAAAkrG,kBAAArqG,UAIAguG,GADAjvG,EAAAI,KAAAqrG,eACAzrG,EAAAmB,OAAA,GAEA8tG,EAAA,GAAArtE,EAAA,GACAqtE,EAAA,GAAArtE,EAAA,GACAxhC,KAAA+qG,kBAA2D/qG,KAAA,cAAA+Y,GAC3D/Y,KAAAorG,aAAA,CACqDprG,KAAAorG,aAAA9lB,cACrDllF,eAAAohC,GAGA,GAAAzoB,aAAAsR,EAAA,SACArqB,KAAA2pG,QAAAX,EAAAiB,MAAAnM,QAAA,CACA99F,KAAAsrG,cACAtrG,KAAAsrG,YAAA,IAAA5kE,EAAA,YAAAtc,EAAA,gBAEA,MAAAhB,EAAArQ,EAAAg2F,cAAA,IACAD,EAAmD9uG,KAAAsrG,YAAAhmB,eACnDnkF,mBACAioB,EAAArkB,YAAAqkB,EAAAxoB,2BACGZ,KAAAurG,oBACHuD,EAAmD9uG,KAAAsrG,YAAAhmB,eACnDllF,eAAAJ,KAAAurG,mBAEAvrG,KAAA2uG,yBASA3F,EAAAzoG,UAAA2sG,cAAA,SAAA3wE,GACA,MAAAiF,EAAAjF,EAAAiF,WACAzoB,EAAqD/Y,KAAAmrG,eAAA7lB,cACrD,IAAA3lE,EACA/f,EACAI,KAAA2pG,QAAAX,EAAAiB,MAAApM,aACA79F,KAAAkrG,kBAAA1pE,EAAA3gC,SACAjB,EAAAI,KAAAqrG,eACAtqG,QAAAf,KAAAkqG,aACAlqG,KAAAupG,UACA3pG,EAAAymB,MAEA1G,GAAA,GAGA/f,EAAAkB,KAAA0gC,EAAA3gC,SACAb,KAAA+qG,kBAAAnrG,EAAAmZ,IACG/Y,KAAA2pG,QAAAX,EAAAiB,MAAAnM,WACHl+F,EAAAI,KAAAqrG,cAAA,IACAtqG,QAAAf,KAAAkqG,aACAlqG,KAAAupG,UACA3pG,EAAAymB,MAEA1G,GAAA,GAGA/f,EAAAkB,KAAA0gC,EAAA3gC,SACA8e,IACA3f,KAAAkrG,kBAAAtrG,EAAA,IAEAI,KAAA+qG,kBAAA/qG,KAAAqrG,cAAAtyF,IAEA/Y,KAAA2uG,wBACAhvF,GACA3f,KAAA8tG,iBASA9E,EAAAzoG,UAAAyuG,gBAAA,WACA,IAAAhvG,KAAAmrG,eACA,OAEA,MAAApyF,EAAqD/Y,KAAAmrG,eAAA7lB,cACrD,IAAA1lF,EAAAkvG,EACA9uG,KAAA2pG,QAAAX,EAAAiB,MAAApM,cACAj+F,EAAAI,KAAAqrG,eACA33F,QAAA,KACA1T,KAAA+qG,kBAAAnrG,EAAAmZ,GACAnZ,EAAAmB,QAAA,IACAf,KAAAkrG,kBAAAtrG,IAAAmB,OAAA,GAAAF,UAEGb,KAAA2pG,QAAAX,EAAAiB,MAAAnM,WACHl+F,EAAAI,KAAAqrG,cAAA,IACA33F,QAAA,MACAo7F,EAAmD9uG,KAAAsrG,YAAAhmB,eACnDllF,eAAAR,GACAI,KAAA+qG,kBAAA/qG,KAAAqrG,cAAAtyF,IAGA,IAAAnZ,EAAAmB,SACAf,KAAAkrG,kBAAA,MAGAlrG,KAAA2uG,yBAUA3F,EAAAzoG,UAAAutG,cAAA,WACA,MAAAmB,EAAAjvG,KAAAguG,gBACA,IAAApuG,EAAAI,KAAAqrG,cACA,MAAAtyF,EAAqDk2F,EAAA3pB,cACrDtlF,KAAA2pG,QAAAX,EAAAiB,MAAApM,aAEAj+F,EAAAymB,MACArmB,KAAA+qG,kBAAAnrG,EAAAmZ,IACG/Y,KAAA2pG,QAAAX,EAAAiB,MAAAnM,UAEHl+F,EAAA,GAAAymB,MACArmB,KAAA+qG,kBAAAnrG,EAAAmZ,GACAnZ,EAAAmZ,EAAAlW,kBAIA7C,KAAA0pG,QAAAc,EAAA,QAAA3kG,YACAopG,EAAAL,YAAA,IAAA3pG,EAAA,SAAArF,KACGI,KAAA0pG,QAAAc,EAAA,QAAAjmG,kBACH0qG,EAAAL,YAAA,IAAAjvG,EAAA,SAAAC,KACGI,KAAA0pG,QAAAc,EAAA,QAAAzhG,eACHkmG,EAAAL,YAAA,IAAA5oG,EAAA,SAAApG,KAIAI,KAAA6R,cAAA,IAAAm3F,EAAAlD,MAAAiD,EAAAkG,IAGAjvG,KAAAi3F,WACAj3F,KAAAi3F,UAAAn2F,KAAAmuG,GAEAjvG,KAAAuvB,SACAvvB,KAAAuvB,QAAAmuB,WAAAuxD,IAUAjG,EAAAzoG,UAAAytG,cAAA,WACAhuG,KAAAkrG,kBAAA,KACA,MAAA+D,EAAAjvG,KAAAmrG,eAOA,OANA8D,IACAjvG,KAAAmrG,eAAA,KACAnrG,KAAAorG,aAAA,KACAprG,KAAAsrG,YAAA,KACAtrG,KAAA0rG,SAAAl8E,YAAA+d,OAAA,IAEA0hE,GAWAjG,EAAAzoG,UAAAsoD,OAAA,SAAApwC,GACA,MACAhY,EADAgY,EAAA6sE,cAEAtlF,KAAAmrG,eAAA1yF,EACAzY,KAAAqrG,cAAA5qG,EAAAoC,iBACA,MAAAgsG,EAAA7uG,KAAAqrG,cAAArrG,KAAAqrG,cAAAtqG,OAAA,GACAf,KAAAkrG,kBAAA2D,EAAAhuG,QACAb,KAAAqrG,cAAAvqG,KAAA+tG,EAAAhuG,SACAb,KAAA2uG,wBACA3uG,KAAA6R,cAAA,IAAAm3F,EAAAlD,MAAAiD,EAAA/oG,KAAAmrG,kBAOAnC,EAAAzoG,UAAAsmG,gBAAAyD,EAAA,MAOAtB,EAAAzoG,UAAAouG,sBAAA,WACA,MAAAO,KACAlvG,KAAAmrG,gBACA+D,EAAApuG,KAAAd,KAAAmrG,gBAEAnrG,KAAAsrG,aACA4D,EAAApuG,KAAAd,KAAAsrG,aAEAtrG,KAAAorG,cACA8D,EAAApuG,KAAAd,KAAAorG,cAEA,MAAA+D,EAAAnvG,KAAA0rG,SAAAl8E,YACA2/E,EAAA5hE,OAAA,GACA4hE,EAAAC,YAAAF,IAOAlG,EAAAzoG,UAAAgsG,aAAA,WACA,MAAAx9F,EAAA/O,KAAAm8F,SACA14E,EAAAzjB,KAAA28E,YACA5tE,GAAA0U,GACAzjB,KAAAguG,gBAEAhuG,KAAA0rG,SAAArtD,OAAA56B,EAAA1U,EAAA,OAiBAi6F,EAAAqG,qBAAA,SAAAC,EAAAC,GACA,gBAMA3vG,EAAA6qG,GACA,MAAAloE,EAAA3iC,EAAA,GACA8D,EAAA9D,EAAA,GACAkgF,EAAAj+E,KAAAC,KACA8oG,EAAA,QAAAtlG,gBAAAi9B,EAAA7+B,IACAqV,EAAA0xF,GACApqG,OAAAgqB,EAAA,WAAAhqB,CAAA,IAAA4kG,EAAA,QAAA1iE,GAAA+sE,GACA78B,EAAA88B,GACA1tG,KAAAmoD,MAAAtmD,EAAA,GAAA6+B,EAAA,KAAA7+B,EAAA,GAAA6+B,EAAA,KAEA,OADAliC,OAAAgqB,EAAA,YAAAhqB,CAAA0Y,EAAAwpB,EAAAu9C,EAAArN,GACA15D,IAaAiwF,EAAAwG,UAAA,WACA,gBAMA5vG,EAAA6qG,GACA,MAAAhmG,EAAApE,OAAAk/B,EAAA,eAAAl/B,CAAAT,GACAmZ,EAAA0xF,GAAA,IAAApgF,EAAA,cAQA,OAPAtR,EAAA3Y,iBACAC,OAAAk/B,EAAA,cAAAl/B,CAAAoE,GACApE,OAAAk/B,EAAA,eAAAl/B,CAAAoE,GACApE,OAAAk/B,EAAA,YAAAl/B,CAAAoE,GACApE,OAAAk/B,EAAA,WAAAl/B,CAAAoE,GACApE,OAAAk/B,EAAA,cAAAl/B,CAAAoE,MAEAsU,IAaAiwF,EAAAY,SAAA,SAAAt8F,GACA,IAAAm5D,EAaA,OAZAn5D,IAAAk9F,EAAA,QAAA9zD,OACAppC,IAAAk9F,EAAA,QAAA3kG,YACA4gE,EAAAuiC,EAAAiB,MAAAvzD,MACGppC,IAAAk9F,EAAA,QAAA3M,aACHvwF,IAAAk9F,EAAA,QAAAjmG,kBACAkiE,EAAAuiC,EAAAiB,MAAApM,YACGvwF,IAAAk9F,EAAA,QAAA1M,SACHxwF,IAAAk9F,EAAA,QAAAzhG,cACA09D,EAAAuiC,EAAAiB,MAAAnM,QACGxwF,IAAAk9F,EAAA,QAAAhD,SACH/gC,EAAAuiC,EAAAiB,MAAAzC,QAE+C,GAU/CwB,EAAAiB,OACAvzD,MAAA,QACAmnD,YAAA,aACAC,QAAA,UACA0J,OAAA,UAcAwB,EAAAlD,MAAA,SAAAx4F,EAAAmL,GAEAqtF,EAAA,QAAA/lG,KAAAC,KAAAsN,GAOAtN,KAAAyY,WAGApY,OAAA6+B,EAAA,SAAA7+B,CAAA2oG,EAAAlD,QAAA,SAEArmG,EAAA,sHCj6BA,MAAAuoB,EAAA,SAAA9Q,GACA,MAAAuD,EAAAvD,MACAqpB,OAAAnjC,IAAAqd,EAAA8lB,WACA9lB,EAAA8lB,WAAA,YAEAiO,OAAApxC,IAAAqd,EAAA+zB,SAAA/zB,EAAA+zB,SACAihE,EAAA,EAAAC,WACAjrG,OAAAgrG,EAAA,EAAAE,qBAAApvE,GACAqvE,QAAAn1F,EAAAm1F,QACAC,QAAAp1F,EAAAo1F,QACAhgE,SAAAp1B,EAAAo1B,WAGAigE,EAAA,EAAA/vG,KAAAC,MACAsgC,aAAA7lB,EAAA6lB,aACA8N,UAAA3zB,EAAA2zB,UACAxiB,YAAAnR,EAAAmR,YACAyiB,OAAA5zB,EAAA4zB,OACA9N,aACA+N,2BAAA7zB,EAAA6zB,2BACAE,WACAC,iBAAAh0B,EAAAg0B,iBACAshE,eAAAt1F,EAAAs1F,eACAC,gBAAAv1F,EAAAu1F,gBACAtiG,IAAA+M,EAAA/M,IACAghC,KAAAj0B,EAAAi0B,KACAC,WAAAvxC,IAAAqd,EAAAk0B,OAAAl0B,EAAAk0B,MACAC,WAAAn0B,EAAAm0B,cAKAvuC,OAAA6+B,EAAA,SAAA7+B,CAAA2nB,EAAA8nF,EAAA,GACA,IAAAG,EAAA,EC/CA,MAAAC,EAAA,SAAAh5F,GAEA,MAAAuD,EAAAvD,MAEA,IAAAopB,EAEAA,OADAljC,IAAAqd,EAAA6lB,aACA7lB,EAAA6lB,cAEA4vE,EAAAC,aAGA,MAAAvkF,OAAAxuB,IAAAqd,EAAAmR,YACAnR,EAAAmR,YAAA,YAEAle,OAAAtQ,IAAAqd,EAAA/M,IACA+M,EAAA/M,IAAA,uDAEAuiG,EAAAlwG,KAAAC,MACAsgC,eACA8N,UAAA3zB,EAAA2zB,UACAxiB,cACAyiB,YAAAjxC,IAAAqd,EAAA4zB,QAAA5zB,EAAA4zB,OACAuhE,aAAAxyG,IAAAqd,EAAAm1F,QAAAn1F,EAAAm1F,QAAA,GACAthE,2BAAA7zB,EAAA6zB,2BACAG,iBAAAh0B,EAAAg0B,iBACA/gC,MACAihC,MAAAl0B,EAAAk0B,SAKAtuC,OAAA6+B,EAAA,SAAA7+B,CAAA6vG,EAAAD,GAUAC,EAAAC,YAAA,2FAGA1wG,EAAA,8FCxDA,QAAAhD,EAAA,QACAA,EAAA,MAEY2M,KADZ3M,EAAA,QACAA,EAAA,KACY2zG,IAAZ3zG,EAAA,MACY4zG,IAAZ5zG,EAAA,SACAA,EAAA,OACAA,EAAA,QACAA,EAAA,OACY6zG,IAAZ7zG,EAAA,UACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iNAWA,IAAM6M,EAAU,SAAVA,EAAmB4N,GAEvB,IAAMuD,OAA0Brd,IAAhB8Z,EAA4BA,KAE5CulE,EAAA3yE,QAAyB/J,KAAKC,MAC5B8jG,YAAax6F,EAAQy6F,eAQvB/jG,KAAKuwG,oBAAsB,KAQ3BvwG,KAAKwwG,oBAAsB,KAQ3BxwG,KAAKywG,uBAAyB,KAQ9BzwG,KAAK0wG,uBAAyB,KAQ9B1wG,KAAK2wG,4BAA8B,KAQnC3wG,KAAKivG,cAAgB,KAMrBjvG,KAAK4wG,YAAc,KAQnB5wG,KAAK6wG,SAAWp2F,EAAQo2F,SAQxB7wG,KAAK8wG,UAAYr2F,EAAQq2F,UAOzB9wG,KAAK+wG,yBAAqD3zG,IAA/Bqd,EAAQu2F,oBAAmCv2F,EAAQu2F,mBAM9EhxG,KAAKixG,cACoB7zG,IAArBqd,EAAQw2F,SACVjxG,KAAKixG,SAAWx2F,EAAQw2F,UAExBjxG,KAAKixG,SAAW7iB,SAAS8iB,cAAc,QACvClxG,KAAKixG,SAASE,YAAe,2BAQ/BnxG,KAAKoxG,gBAAkB,KAOvBpxG,KAAKqxG,qBAAuB,KAE5B,IAAM/zD,OAA0BlgD,IAAlBqd,EAAQ6iC,MAAsB7iC,EAAQ6iC,OAClD,IAAAW,EAAAn0C,SACEmsC,KAAM,IAAAwqD,EAAA32F,SACJqsC,MAAO,+BAGX,IAAA8H,EAAAn0C,SACEgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAO,QACP0pC,MAAO,MAGX,IAAA5hC,EAAAn0C,SACEgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAO,UACP0pC,MAAO,OAUb7/E,KAAKsxG,aAAe,IAAAj0D,EAAAvzC,SAClBmN,OAAQ,IAAAimC,EAAApzC,QACRwzC,MAAOA,IAQTt9C,KAAKuxG,iBAAmBvxG,KAAKwxG,sBAAsB/2F,EAAQg3F,YACzDzxG,KAAKsxG,aAAa9hF,aAMpBxvB,KAAK0xG,0CAA2C,EAEhDr9F,EAAAvK,QAASwK,OAAOtU,KAAKuxG,iBAAkB,gBAAiBvxG,KAAK2xG,mCAAoC3xG,MACjGqU,EAAAvK,QAASwK,OAAOtU,KAAKuxG,iBAAkB,YAAavxG,KAAK4xG,aAAc5xG,MACvEqU,EAAAvK,QAASwK,OAAOtU,KAAKuxG,iBAAkB,UAAWvxG,KAAK6xG,WAAY7xG,MAEnEqU,EAAAvK,QAASwK,OAAOtU,KAAM,gBAAiBA,KAAKusG,aAAcvsG,OAG5DoJ,EAAO2B,SAASzB,EAAhBmzE,EAAA3yE,SAmBAR,EAAQwoG,iBAAmB,SAAStrG,EAAS+5B,EAAYuwE,EAAW9wF,GAClE,IAAM+8B,EAAuCv2C,EAAQvF,QAAQu+C,UAAUjf,EAAY,aAEnF,OAAOvgB,EADMne,KAAKynD,IAAIgnD,EAASlpG,QAAQ21C,IACnB,KAAM,SAAU+zD,IAYtCxnG,EAAQyoG,uBAAyB,SAASrH,EAAQoG,EAAW9wF,GAE3D,OAAOA,EADMne,KAAK00C,GAAK10C,KAAK6nD,IAAIghD,EAAO1L,YAAa,GAChC,KAAM,SAAU8R,IAatCxnG,EAAQ0oG,mBAAqB,SAASvxG,EAAY8/B,EAAYuwE,EAAW9wF,GAGvE,IAFA,IACMpgB,EAAca,EAAWoC,iBACtBU,EAAI,EAAGC,EAAK5D,EAAYmB,OAAS,EAAGwC,EAAIC,IAAMD,EAC1C8sG,EAAO7wD,UAAU5/C,EAAY2D,GAAIg9B,EAAY,aAC7C8vE,EAAO7wD,UAAU5/C,EAAY2D,EAAI,GAAIg9B,EAAY,aAE9D,OAAOvgB,EANQ,EAMO,IAAK,OAAQ8wF,IAYrCxnG,EAAQ2oG,kBAAoB,SAAS9sG,EAAO0rG,EAAU7wF,EAAQkyF,GAC5D,OAAOlyF,EAAO7a,EAAMtC,iBAAkBguG,EAAUqB,IAWlD5oG,EAAQy6F,aAAe,SAAS9Z,GAC9B,GAAgB,eAAZA,EAAI38E,MAAyB28E,EAAIkoB,SACnC,OAAO,EAGT,IAAIC,EAAUpyG,KAAKixG,SAWnB,OAV2B,OAAvBjxG,KAAKivG,gBACPmD,EAAUpyG,KAAK4wG,aAGb5wG,KAAK+wG,sBACPX,EAAMiC,eAAeryG,KAAKuwG,qBAC1BvwG,KAAKuwG,oBAAoBjyG,YAAY8zG,GACrCpyG,KAAKwwG,oBAAoB8B,YAAYroB,EAAIzoD,cAGpC,GAOTl4B,EAAQ/I,UAAUgyG,mBAAqB,WACrC,OAAOvyG,KAAKuxG,kBAcdjoG,EAAQ/I,UAAUixG,sBAAwB,SAASl0D,EAAOrmC,KAM1D3N,EAAQ/I,UAAU89C,OAAS,SAAStvC,GAElC0tE,EAAA3yE,QAAyBvJ,UAAU89C,OAAOt+C,KAAKC,KAAM+O,GAErD/O,KAAKsxG,aAAajzD,OAAOtvC,GAEzB,IAAMyjG,EAAUxyG,KAAKuxG,iBAAiBpV,SACtB,OAAZqW,GACFA,EAAQzZ,kBAAkB/4F,KAAKuxG,kBAGrB,OAARxiG,GACFA,EAAIiqF,eAAeh5F,KAAKuxG,mBAU5BjoG,EAAQ/I,UAAUqxG,aAAe,SAAS3nB,GAAK,IAAA59E,EAAArM,KAC7CA,KAAKivG,cAAgBhlB,EAAIxxE,QACzBzY,KAAKsxG,aAAa9hF,YAAY+d,OAAM,GACpCvtC,KAAKyyG,wBAEL,IAAM15F,EAAW/Y,KAAKivG,cAAc3pB,cAEpC93E,EAAA1D,QAAY2D,YAAoBrQ,IAAb2b,GACnB/Y,KAAKoxG,gBAAkB/8F,EAAAvK,QAASwK,OAAOyE,EAAU,SAAU,WACzD1M,EAAKqmG,cAAc,SAACC,EAAS94E,GACb,OAAVA,IACFxtB,EAAKokG,uBAAuBmC,UAAYD,EACxCtmG,EAAKskG,4BAA8B92E,OAKzC75B,KAAKqxG,qBAAuBh9F,EAAAvK,QAASwK,OAAOtU,KAAKm8F,SAAU,cAAe,WACxE9vF,EAAKqkG,uBAAuB4B,YAAYjmG,EAAKskG,gCAUjDrnG,EAAQ/I,UAAUsxG,WAAa,SAAS5nB,GACtCjqF,KAAKywG,uBAAuBoC,UAAUhoD,IAAI,uBAC1C7qD,KAAK0wG,uBAAuBoC,WAAW,GAAI,IAE3C,IAAMv2E,EAAQ,IAAAw2E,EAAAjpG,QAAoB,cAAe2O,QAASzY,KAAKivG,gBAC/DjvG,KAAK6R,cAAc0qB,GACnBv8B,KAAKivG,cAAgB,KACrBjvG,KAAKgzG,oBAOP1pG,EAAQ/I,UAAUyyG,iBAAmB,WACN,OAAzBhzG,KAAKoxG,iBAA0D,OAA9BpxG,KAAKqxG,uBACxCh9F,EAAAvK,QAASo2B,cAAclgC,KAAKoxG,iBAC5B/8F,EAAAvK,QAASo2B,cAAclgC,KAAKqxG,sBAC5BrxG,KAAKoxG,gBAAkB,KACvBpxG,KAAKqxG,qBAAuB,OAQhC/nG,EAAQ/I,UAAU0yG,mBAAqB,WACrCjzG,KAAKkzG,qBACDlzG,KAAK+wG,sBACP/wG,KAAKuwG,oBAAsBniB,SAAS8iB,cAAc,OAClDlxG,KAAKuwG,oBAAoBsC,UAAUhoD,IAAI,WACvC7qD,KAAKwwG,oBAAsB,IAAAvU,EAAAnyF,SACzB4zE,QAAS19E,KAAKuwG,oBACd9sG,QAAS,GAAI,GACb0vG,YAAa,gBAEfnzG,KAAKm8F,SAASvX,WAAW5kF,KAAKwwG,uBASlClnG,EAAQ/I,UAAU2yG,mBAAqB,WACjClzG,KAAK+wG,sBACP/wG,KAAKm8F,SAAS1X,cAAczkF,KAAKwwG,qBACA,OAA7BxwG,KAAKuwG,qBACPvwG,KAAKuwG,oBAAoBv3E,WAAWo6E,YAAYpzG,KAAKuwG,qBAEvDvwG,KAAKuwG,oBAAsB,KAC3BvwG,KAAKwwG,oBAAsB,OAS/BlnG,EAAQ/I,UAAUkyG,sBAAwB,WACxCzyG,KAAKqzG,wBACLrzG,KAAKywG,uBAAyBriB,SAAS8iB,cAAc,OACrDlxG,KAAKywG,uBAAuBoC,UAAUhoD,IAAI,WAC1C7qD,KAAKywG,uBAAuBoC,UAAUhoD,IAAI,wBAC1C7qD,KAAK0wG,uBAAyB,IAAAzU,EAAAnyF,SAC5B4zE,QAAS19E,KAAKywG,uBACdhtG,QAAS,GAAI,IACb0vG,YAAa,gBACbG,WAAW,IAEbtzG,KAAKm8F,SAASvX,WAAW5kF,KAAK0wG,yBAQhCpnG,EAAQ/I,UAAU8yG,sBAAwB,WACJ,OAAhCrzG,KAAKywG,yBACPzwG,KAAKywG,uBAAuBz3E,WAAWo6E,YAAYpzG,KAAKywG,wBACxDzwG,KAAKywG,uBAAyB,KAC9BzwG,KAAK0wG,uBAAyB,KAC9B1wG,KAAK2wG,4BAA8B,OAQvCrnG,EAAQ/I,UAAUgsG,aAAe,WAC/B,IAAM9oF,EAASzjB,KAAK28E,YACpB38E,KAAK0xG,0CAA2C,EAChD1xG,KAAKuxG,iBAAiB30B,UAAUn5D,GAChCzjB,KAAK0xG,0CAA2C,EAC3C1xG,KAAKm8F,WAGN14E,EACGzjB,KAAK0wG,yBACR1wG,KAAKyyG,wBACLzyG,KAAKizG,uBAGPjzG,KAAKsxG,aAAa9hF,YAAY+d,OAAM,GACpCvtC,KAAKm8F,SAAS1X,cAAczkF,KAAK0wG,wBACjC1wG,KAAKqzG,wBACLrzG,KAAKkzG,qBACLlzG,KAAKgzG,sBAcT1pG,EAAQ/I,UAAUmyG,cAAgB,SAASnmG,KAO3CjD,EAAQ/I,UAAUgzG,kBAAoB,WACpC,OAAOvzG,KAAKywG,wBAWdnnG,EAAQ/I,UAAUoxG,mCAAqC,WACjD3xG,KAAK0xG,0CACP1xG,KAAK48E,UAAU58E,KAAKuxG,iBAAiB50B,wBAK1BrzE,8FC1fbk+F,OAAQ,SAKR3J,YAAa,aAKbt5F,kBAAmB,kBAKnBsB,YAAa,aAKbkD,cAAe,eAKf2tC,MAAO,QAKPonD,QAAS,UAKT0V,UAAW,YAKX1uF,KAAM,wFCjDR,IAAYurF,IAAZ5zG,EAAA,IAGYg3G,IAAZh3G,EAAA,UAGAA,EAAA,QAEAA,EAAA,kNAEA,IAAMi3G,GACJ,eACA,2BACA,2BACA,SACA,cACA,cACA,gBACA,0CACA,WACA,YACAjiG,KAAK,KAGPkiG,EAAA7pG,QAAM40C,KAAK,aAAcg1D,GACzBD,EAAYG,SAAZD,EAAA7pG,SACAumG,EAAOhmG,IAAI,cAAcwpG,WAJA,KAAQ,IAAO,IAAQ,iBAMhC,8FC3BhBp3G,EAAA,MACAA,EAAA,KADA,QAEAA,EAAA,SACAA,EAAA,iNAEAk3G,EAAA7pG,QAAM8lD,KAAK9E,YAAYD,IAAvBipD,EAAAhqG,uCCTAsI,EAAA9I,SAAkByqG,MAAA,cAAAC,IAAA,cAAAC,WAAA,EAAAC,WAAA,kGAAAC,UAAA,SAAAC,oBAAqNC,YAAe/mG,KAAA,UAAAgnG,UAAA,EAAAC,IAAA,cAAArpG,KAAA,QAAAspG,YAAA,QAAAC,QAAA,QAAAC,SAAA,KAAAC,UAAA,SAAgJC,aAAA,UAAAC,UAAA,qDAAAC,QAAA,2CAAAC,MAAA,cAAAC,OAAA,qCAAAC,OAAA,GAAAC,MAAwOxnG,IAAA,6CAAkDynG,oBAAA,EAAAC,eAA6ClqG,KAAA,aAAAmqG,MAAA,0BAAsDnqG,KAAA,oBAAAmqG,MAAA,0BAA6DnqG,KAAA,iBAAAmqG,MAAA,6BAA6DnqG,KAAA,kBAAAwC,IAAA,2BAA0DxC,KAAA,cAAqBA,KAAA,iBAAwBA,KAAA,cAAmBoqG,cAAkB9gD,KAAA,QAAA+gD,aAAA,UAAqCC,YAAA,EAAAC,YAAA,yIAAAC,iBAA8LC,KAAA,SAAAC,KAAA,mCAAAC,MAAA,SAAAC,YAAA,UAAAC,wBAAA,SAAAC,uBAAA,SAAAC,uBAAA,UAAAC,wBAAA,SAAAC,eAAA,SAAAC,SAAA,SAAAC,MAAA,UAAAC,OAAA,UAAAC,qBAAA,SAAAC,6BAAA,SAAAC,IAAA,UAAwYC,aAAgBxyF,KAAA,OAAA3M,IAAA,QAA2Bo/F,SAAA,4CAAAC,QAAA,MAAAC,KAAA,oBAAAzkG,OAAA,eAAAlH,KAAA,QAAA4rG,YAAwJxpG,KAAA,MAAAI,IAAA,wCAA0DqpG,SAAYC,MAAA,QAAAC,cAAA,oBAAA/yF,KAAA,sDAA8G6f,QAAA,kICA3+DmzE,EAAAz6G,EAAA,IAqBA,MAAAwoG,EAAA,SAAA1iE,EAAA40E,EAAAt3G,GACAu3G,EAAA,QAAAr3G,KAAAC,MACA,MAAA8/E,EAAAq3B,GAAA,EACAn3G,KAAA6qG,mBAAAtoE,EAAAu9C,EAAAjgF,IAGAQ,OAAAC,EAAA,SAAAD,CAAA4kG,EAAAmS,EAAA,SASAnS,EAAA1kG,UAAAU,MAAA,WACA,MAAAypG,EAAA,IAAAzF,EAAA,MAEA,OADAyF,EAAAvpG,mBAAAnB,KAAAoB,OAAApB,KAAAU,gBAAAG,SACA6pG,GAOAzF,EAAA1kG,UAAAc,eAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAf,EAAAV,KAAAU,gBACAyhG,EAAA7gG,EAAAZ,EAAA,GACA0hG,EAAA7gG,EAAAb,EAAA,GACA4E,EAAA68F,IAAAC,IACA,GAAA98F,EAAA7D,EAAA,CACA,OAAA6D,EACA,QAAA/B,EAAA,EAAqBA,EAAAvD,KAAAiC,SAAiBsB,EACtC/B,EAAA+B,GAAA7C,EAAA6C,OAEK,CACL,MAAA8zG,EAAAr3G,KAAAg/F,YAAAn9F,KAAAC,KAAAwD,GACA9D,EAAA,GAAAd,EAAA,GAAA22G,EAAAlV,EACA3gG,EAAA,GAAAd,EAAA,GAAA22G,EAAAjV,EACA,QAAA7+F,EAAA,EAAqBA,EAAAvD,KAAAiC,SAAiBsB,EACtC/B,EAAA+B,GAAA7C,EAAA6C,GAIA,OADA/B,EAAAT,OAAAf,KAAAiC,OACAqD,EAEA,OAAA7D,GAQAwjG,EAAA1kG,UAAA0G,WAAA,SAAA3F,EAAAC,GACA,MAAAb,EAAAV,KAAAU,gBACAyhG,EAAA7gG,EAAAZ,EAAA,GACA0hG,EAAA7gG,EAAAb,EAAA,GACA,OAAAyhG,IAAAC,KAAApiG,KAAAs3G,qBASArS,EAAA1kG,UAAAujF,UAAA,WACA,OAAA9jF,KAAAU,gBAAAG,MAAA,EAAAb,KAAAiC,SAOAgjG,EAAA1kG,UAAAkxE,cAAA,SAAAhtE,GACA,MAAA/D,EAAAV,KAAAU,gBACAo/E,EAAAp/E,EAAAV,KAAAiC,QAAAvB,EAAA,GACA,OAAAL,OAAA61B,EAAA,eAAA71B,CACAK,EAAA,GAAAo/E,EAAAp/E,EAAA,GAAAo/E,EACAp/E,EAAA,GAAAo/E,EAAAp/E,EAAA,GAAAo/E,EACAr7E,IASAwgG,EAAA1kG,UAAAy+F,UAAA,WACA,OAAAn9F,KAAAC,KAAA9B,KAAAs3G,sBAQArS,EAAA1kG,UAAA+2G,kBAAA,WACA,MAAAnV,EAAAniG,KAAAU,gBAAAV,KAAAiC,QAAAjC,KAAAU,gBAAA,GACA0hG,EAAApiG,KAAAU,gBAAAV,KAAAiC,OAAA,GAAAjC,KAAAU,gBAAA,GACA,OAAAyhG,IAAAC,KAQA6C,EAAA1kG,UAAA8D,QAAA,WACA,OAAAkzG,EAAA,QAAA/P,QAQAvC,EAAA1kG,UAAAiE,iBAAA,SAAAC,GACA,MAAA+yG,EAAAx3G,KAAA2B,YACA,GAAAtB,OAAA61B,EAAA,WAAA71B,CAAAoE,EAAA+yG,GAAA,CACA,MAAAj1E,EAAAviC,KAAA8jF,YAEA,OAAAr/E,EAAA,IAAA89B,EAAA,IAAA99B,EAAA,IAAA89B,EAAA,KAGA99B,EAAA,IAAA89B,EAAA,IAAA99B,EAAA,IAAA89B,EAAA,IAIAliC,OAAA61B,EAAA,cAAA71B,CAAAoE,EAAAzE,KAAAy3G,qBAAAz3G,OAEA,UAUAilG,EAAA1kG,UAAAqlF,UAAA,SAAArjD,GACA,MAAAtgC,EAAAjC,KAAAiC,OACA69E,EAAA9/E,KAAAU,gBAAAuB,GAAAjC,KAAAU,gBAAA,GACAA,EAAA6hC,EAAA1hC,QACAH,EAAAuB,GAAAvB,EAAA,GAAAo/E,EACA,QAAAv8E,EAAA,EAAiBA,EAAAtB,IAAYsB,EAC7B7C,EAAAuB,EAAAsB,GAAAg/B,EAAAh/B,GAEAvD,KAAAmB,mBAAAnB,KAAAoB,OAAAV,IAYAukG,EAAA1kG,UAAAsqG,mBAAA,SAAAtoE,EAAAu9C,EAAAjgF,GACA,GAAA0iC,EAEG,CACHviC,KAAA2E,UAAA9E,EAAA0iC,EAAA,GACAviC,KAAAU,kBACAV,KAAAU,oBAGA,MAAAA,EAAAV,KAAAU,gBACA,IAAA+C,EAAAyzG,EAAA,EAAA11E,WACA9gC,EAAA,EAAA6hC,EAAAviC,KAAAiC,QACAvB,EAAA+C,KAAA/C,EAAA,GAAAo/E,EACA,QAAAv8E,EAAA,EAAAC,EAAAxD,KAAAiC,OAAqCsB,EAAAC,IAAQD,EAC7C7C,EAAA+C,KAAA/C,EAAA6C,GAEA7C,EAAAK,OAAA0C,EACAzD,KAAAgB,eAfAhB,KAAAmB,mBAAAu2G,EAAA,QAAAtzG,GAAA,OAuBA6gG,EAAA1kG,UAAAsC,eAAA,aAMAoiG,EAAA1kG,UAAAH,eAAA,SAAAR,EAAAC,KAOAolG,EAAA1kG,UAAAY,mBAAA,SAAAC,EAAAV,GACAV,KAAA6E,2BAAAzD,EAAAV,GACAV,KAAAgB,WASAikG,EAAA1kG,UAAAo3G,UAAA,SAAA73B,GACA9/E,KAAAU,gBAAAV,KAAAiC,QAAAjC,KAAAU,gBAAA,GAAAo/E,EACA9/E,KAAAgB,WA0BAikG,EAAA1kG,UAAAi/C,UACA//C,EAAA,wGCnQAhD,EAAA,QACYm7G,0JAAZn7G,EAAA,SACAA,EAAA,wDACA,IAAM6M,EAAU+I,QAAQD,OAAO,yBAoB/B9I,EAAQuuG,QAAU,SAASviB,GACzB,IAAMwiB,EAAexiB,EAAQ,UACvByiB,EAAW,SAAShnE,GACxB,IAAM4E,EAAOmiE,EAAa/mE,EAAO,GACjC,OAAO4E,SAAwBA,EAAS,IAG1C,OADAoiE,EAAA,WAAwB,EACjBA,GAPTzuG,EAAQuuG,4BAURvuG,EAAQ8F,OAAO,cAAe9F,EAAQuuG,SAsBtCvuG,EAAQ4pD,OAAS,SAAS8kD,GACxB,IAAMC,EAAUD,EAAQE,eAwDxB,OAjDe,SAAS9xD,EAAQ+xD,GAC9B,IAAMC,EAAWH,EAAQI,UACnBC,EAAaL,EAAQM,YAK3B,QAJsBn7G,IAAlB+6G,IACFA,EAAgB,GAGd/xD,IAAW55B,IACb,MAAO,IACF,GAAI45B,KAAW,IACpB,MAAO,KACF,GAAe,IAAXA,EAET,MAAO,IAET,IAAMgD,EAAOhD,EAAS,EACtBA,EAASvkD,KAAKynD,IAAIlD,GAElB,IAAMoyD,EAAaL,EAAgBt2G,KAAKqgC,MAAMrgC,KAAKqmD,IAAI9B,GAAUvkD,KAAKqmD,IAAI,KAAO,EAC3EuwD,EAAS52G,KAAK6nD,IAAI,GAAI8uD,GAC5BpyD,EAASvkD,KAAKmhC,MAAMojB,EAASqyD,GAC7B,IAAIr5G,EAAU,GACRmlD,EAAO1iD,KAAKqgC,MAAMkkB,EAASqyD,GAEjC,GAAID,EAAa,EAAG,CAGlB,IAFA,IAAIE,KAAgBtyD,EAEbsyD,EAAW33G,OAASy3G,GACzBE,MAAiBA,EAGnB,IADAt5G,EAAUs5G,EAAWz8E,UAAUy8E,EAAW33G,OAASy3G,GACZ,MAAhCp5G,EAAQA,EAAQ2B,OAAS,IAC9B3B,EAAUA,EAAQ68B,UAAU,EAAG78B,EAAQ2B,OAAS,GAMpD,IAFA,IAAM2sB,KACFirF,KAAcp0D,EACXo0D,EAAS53G,OAAS,GAAG,CAC1B,IAAMmC,EAAQy1G,EAAS53G,OAAS,EAChC2sB,EAAOyE,QAAQwmF,EAAS18E,UAAU/4B,IAClCy1G,EAAWA,EAAS18E,UAAU,EAAG/4B,GAInC,OAFAwqB,EAAOyE,QAAQwmF,IAEPvvD,EAAO,IAAM,IAAM17B,EAAOjc,KAAK2mG,IAClB,IAAnBh5G,EAAQ2B,OAAe,GAAKu3G,EAAal5G,KAtD/CkK,EAAQ4pD,2BA4DR5pD,EAAQ8F,OAAO,aAAc9F,EAAQ4pD,QAwBrC5pD,EAAQsvG,WAAa,SAAStjB,GAC5B,IAAMwiB,EAAexiB,EAAQ,cACvBujB,GAAkB,GAAI,IAAK,IAAK,IAAK,IAAK,KAC1CC,GAAgB,GAAI,KAAM,KAAM,KAAM,KAAM,MAgClD,OAxBe,SAAS1yD,EAAQ2yD,EAAUh7E,EAAUo6E,QACjC/6G,IAAb27G,IACFA,EAAW,IAEb,IAAIC,EAAU,IACVhzF,EAAS6yF,EACI,WAAb96E,EACFi7E,EAAU,IACY,WAAbj7E,IACTi7E,EAAU,KACVhzF,EAAS8yF,GAKX,IAFA,IAAI51G,EAAQ,EACN+1G,EAAYjzF,EAAOjlB,OAAS,EAC3BqlD,GAAU4yD,GAAW91G,EAAQ+1G,GAClC7yD,GAAkB4yD,EAClB91G,IAGF,IAAMg2G,EAAUlzF,EAAO9iB,GAAS61G,EAC1BI,EAA0B,GAAlBD,EAAQn4G,OAAc,GAAK,IACzC,OAAO+2G,EAAa1xD,EAAQ+xD,GAAiBgB,EAAQD,IAjCzD5vG,EAAQsvG,+BAsCRtvG,EAAQ8F,OAAO,iBAAkB9F,EAAQsvG,YAmCzCtvG,EAAQ8vG,kBAAoB,SAAS9jB,GAoBnC,OATiB,SAAS11F,EAAay5G,EAAoBnH,GACzD,IAAMv4B,EAAWu4B,GAA8B,UAC3C5wG,EAAI1B,EAAY,GAChB2B,EAAI3B,EAAY,GACd05G,EAAoD,EAAnCv7G,SAASs7G,EAAoB,IAGpD,OAFA/3G,EAAIg0F,EAAQ,SAARA,CAAkBh0F,EAAGg4G,GACzB/3G,EAAI+zF,EAAQ,SAARA,CAAkB/zF,EAAG+3G,GAClB3/B,EAASluD,QAAQ,MAAOnqB,GAAGmqB,QAAQ,MAAOlqB,KAlBrD+H,EAAQ8vG,sCAuBR9vG,EAAQ8F,OAAO,wBAAyB9F,EAAQ8vG,mBAqBhD9vG,EAAQiwG,eAAiB,WACvB,IAAMC,EAAsB,SAASC,EAASC,EAAaJ,GACzD,IAAMK,EAAoB/B,EAAOgC,OAAOH,EAAU,IAAK,KAAO,IACxDI,EAAMh4G,KAAKynD,IAAI,KAAOqwD,GACtBr+C,EAAIz5D,KAAKqgC,MAAM23E,EAAM,MACrB38G,EAAI2E,KAAKqgC,MAAO23E,EAAM,GAAM,IAC5Bh9G,EAAKg9G,EAAM,GACjB,OAAUv+C,EAAV,KACEw+C,EAAAhwG,QAASlL,UAAU1B,EAAG,GADxB,KAEE48G,EAAAhwG,QAASlL,UAAU/B,EAAG,EAAGy8G,GAF3B,KAGEI,EAAYpnE,OAAOqnE,EAAoB,EAAI,EAAI,IAwBnD,OAXiB,SAAS/5G,EAAay5G,EAAoBnH,GACzD,IAAMoH,EAAoD,EAAnCv7G,SAASs7G,EAAoB,IAE9C1/B,EAAWu4B,GAA8B,UAEzC6H,EAAOP,EAAoB55G,EAAY,GAAI,KAAM05G,GACjDU,EAAOR,EAAoB55G,EAAY,GAAI,KAAM05G,GAEvD,OAAO3/B,EAASluD,QAAQ,MAAOsuF,GAAMtuF,QAAQ,MAAOuuF,KAMxD1wG,EAAQ8F,OAAO,qBAAsB9F,EAAQiwG,gBAiB7CjwG,EAAQ2wG,gBAAkB,SAASC,GACjC,OAAO,SAASxzD,GACd,OAAIA,QACKwzD,EAAKC,YAAL,GAAoBzzD,GAEpBwzD,EAAKC,YAAY,YAL9B7wG,EAAQ2wG,iCAUR3wG,EAAQ8F,OAAO,gBAAiB9F,EAAQ2wG,2BAGzB3wG,mFCnUf,QAAA7M,EAAA,SACAA,EAAA,MACAA,EAAA,WAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,MACY4M,IAAZ5M,EAAA,IACYsgG,IAAZtgG,EAAA,KACY29G,IAAZ39G,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iNAgBA,IAAM6M,EAAU,SAASE,EAAW8rF,GAwDlC,GAlDAt1F,KAAKu1F,SAAWD,EAMhBt1F,KAAKq6G,eAAYj9G,EACboM,EAAUY,IAAI,yBAChBpK,KAAKq6G,UAAY7wG,EAAUa,IAAI,wBAQjCrK,KAAKs6G,gBAAal9G,EACdoM,EAAUY,IAAI,0BAChBpK,KAAKs6G,WAAa9wG,EAAUa,IAAI,yBAMlCrK,KAAKu6G,cAA6CjlB,EAAQ,UAK1Dt1F,KAAKw6G,kBAAqDllB,EAAQ,kBAKlEt1F,KAAKy6G,uBAAiEnlB,EAAQ,yBAO9Et1F,KAAK06G,eAAiB,KAOtB16G,KAAK26G,oBAEDnxG,EAAUY,IAAI,mBAAoB,CACpC,IAAMwwG,EAAiBpxG,EAAUa,IAAI,mBAAmB+b,MAAM,KACxDy0F,EAAaD,EAAe/0D,QAC5Bz2C,EAASpP,KAAKu1F,SAASslB,GAC7BrtG,EAAA1D,QAAYgxG,eAAe1rG,GAC3BpP,KAAK06G,eAAiBtrG,EACtBpP,KAAK26G,iBAAmBC,OAExB56G,KAAK06G,eAAiB,KAOxB16G,KAAK+6G,YAOL/6G,KAAKg7G,UAAYxxG,EAAUa,IAAI,qFASjCf,EAAQ/I,UAAU06G,cAAgB,SAAS16E,GACzCvgC,KAAK+6G,YAAcx6E,GAerBj3B,EAAQ/I,UAAU+9C,SAAW,SAAS7lC,EAASyiG,GAC7C,IAAM/sF,EAASnuB,KAAKm7G,SAAS1iG,GACzByiG,IACEl7G,KAAKo7G,gBAAgB3iG,IACvB0V,EAAOrtB,KAAKd,KAAKq7G,kBAEnBltF,EAAOgE,QAAQnyB,KAAKs7G,cAAc7iG,KAEpCA,EAAQ6lC,SAASnwB,IAWnB7kB,EAAQ/I,UAAU46G,SAAW,SAAS1iG,GACpC,IACI6kC,SAEJ,OAHat9C,KAAKqE,QAAQoU,IAIxB,KAAK8iG,EAAAzxG,QAAiB+zF,YACpBvgD,EAAQt9C,KAAKw7G,oBAAoB/iG,GACjC,MACF,KAAK8iG,EAAAzxG,QAAiB4sC,MACpB4G,EAAQt9C,KAAKy7G,eAAehjG,GAC5B,MACF,KAAK8iG,EAAAzxG,QAAiB09F,OACtB,KAAK+T,EAAAzxG,QAAiBg0F,QACtB,KAAKyd,EAAAzxG,QAAiB0pG,UACpBl2D,EAAQt9C,KAAK07G,iBAAiBjjG,GAC9B,MACF,KAAK8iG,EAAAzxG,QAAiBgb,KACpBw4B,EAAQt9C,KAAK27G,cAAcljG,GAM/BjL,EAAA1D,QAAY2D,OAAO6vC,EAAO,2BAS1B,OANIA,EAAMs+D,cAAgBh1G,MACyB02C,GAEvCA,IAYdh0C,EAAQ/I,UAAUi7G,oBAAsB,SAAS/iG,GAC/C,IAAMwoE,EAAcjhF,KAAK67G,kBAAkBpjG,GACrCqoE,EAAY9gF,KAAK87G,qBAAqBrjG,GACtCsoE,EAAc/gF,KAAK+7G,uBAAuBtjG,GAC1C09B,EAAQn2C,KAAKg8G,qBAAqBvjG,GAElC0V,GAAU,IAAA8vB,EAAAn0C,SACdgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOA,EACP0pC,MAAOoB,OAILg7B,KAON,GANIl7B,GACFk7B,EAAgBn7G,KAAKd,KAAKk8G,WAAWzjG,IAEnCqoE,GACFm7B,EAAgBn7G,KAAKd,KAAKm8G,gBAAgB1jG,IAExCqoE,GAAcC,EAAa,CAE7B,IAAMq7B,EAAiBH,EAAgBxqG,KAAK,MAC5C0c,EAAOrtB,KAAK,IAAAm9C,EAAAn0C,SACV6rC,KAAM31C,KAAKq8G,kBACT1mE,KAAMymE,OAIZ,OAAOjuF,GAST7kB,EAAQ/I,UAAUk7G,eAAiB,SAAShjG,GAC1C,IAAM2qB,EAAOpjC,KAAKs8G,gBAAgB7jG,GAC5B09B,EAAQn2C,KAAKg8G,qBAAqBvjG,GAClCqoE,EAAY9gF,KAAK87G,qBAAqBrjG,GACtCsoE,EAAc/gF,KAAK+7G,uBAAuBtjG,GAC1C0V,GAAU,IAAA8vB,EAAAn0C,SACdm2B,MAAO,IAAAygE,EAAA52F,SACLg2E,OAAQ18C,EACR6S,KAAM,IAAAwqD,EAAA32F,SACJqsC,MAAOA,SAKP8lE,KAON,GANIl7B,GACFk7B,EAAgBn7G,KAAKd,KAAKk8G,WAAWzjG,IAEnCqoE,GACFm7B,EAAgBn7G,KAAKd,KAAKm8G,gBAAgB1jG,IAExCqoE,GAAcC,EAAa,CAE7B,IAAMq7B,EAAiBH,EAAgBxqG,KAAK,MAI5C0c,EAAOrtB,KAAK,IAAAm9C,EAAAn0C,SACV6rC,KAAM31C,KAAKq8G,kBACT1mE,KAAMymE,EACNh5E,KANc,GAOd8T,UAAW9T,EAAQm5E,EAAiBN,EAAgBl7G,OALpC,IAK2D,QAIjF,OAAOotB,GAWT7kB,EAAQ/I,UAAUi8G,UAAY,SAAS/jG,EAASgkG,GAC9C,IAAMlqG,EAAQkG,EAAQpO,IAAIoyG,GAC1B,YAAcr/G,IAAVmV,EACkB,iBAATA,GACDA,EAED/E,EAAA1D,QAAY2tF,aAAallF,QAGlC,GAYJjJ,EAAQ/I,UAAUm8G,UAAY,SAASjkG,EAASgkG,GAC9C,IAAMlqG,EAAQkG,EAAQpO,IAAIoyG,GAC1B,MAAoB,iBAATlqG,GACDA,EAED/E,EAAA1D,QAAY2tF,aAAallF,IAUpCjJ,EAAQ/I,UAAUm7G,iBAAmB,SAASjjG,GAC5C,IAAMwoE,EAAcjhF,KAAK67G,kBAAkBpjG,GACrCgpE,EAAUzhF,KAAK28G,mBAAmBlkG,GAClC09B,EAAQn2C,KAAKg8G,qBAAqBvjG,GAClCqoE,EAAY9gF,KAAK87G,qBAAqBrjG,GACtCsoE,EAAc/gF,KAAK+7G,uBAAuBtjG,GAG1C4nE,EAAYlqC,EAAMt1C,QACxBw/E,EAAU,GAAKoB,EAEf,IAAMm7B,EAAS58G,KAAKw8G,UAAU/jG,EAAS6nE,EAAAx2E,QAA4BqzB,QAE7DhP,GAAU,IAAA8vB,EAAAn0C,SACdmsC,KAAM,IAAAwqD,EAAA32F,SACJqsC,MAAOkqC,IAETvpC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOA,EACP0pC,MAAOoB,OAGX,GAAIF,GAAeD,EACjB,QAAe1jF,IAAXw/G,EAAsB,CAExB,IAAMpkF,EAAOx4B,KAAK68G,cAAcpkG,EAASmkG,GACnC77G,EAAS+7G,EAAAhzG,QAAuBkoG,mBACpCx5E,EAAMx4B,KAAK+6G,YAAa/6G,KAAKs6G,WAAYt6G,KAAKw6G,mBAEhDrsF,EAAOrtB,KAAK,IAAAm9C,EAAAn0C,SACViP,SAAUyf,EACVyd,KAAM,IAAAwqD,EAAA32F,SACJqsC,MAAOkqC,IAETvpC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOA,EACP0pC,MAAOoB,IAETtrC,KAAM31C,KAAKq8G,kBACT1mE,KAAM50C,EACN0xE,OAASmqC,EAAS,IAAO,KAAO,IAAM,QAK1CzuF,EAAOrtB,KAAK,IAAAm9C,EAAAn0C,SACViP,SAAU,IAAAkrE,EAAAn6E,QAAgB0uB,EAAKukF,qBAC/BpnE,KAAM31C,KAAKq8G,kBACT1mE,KAAS31C,KAAKu6G,cAAcqC,EAAQ58G,KAAKq6G,WAAzC,IACAj3E,KAAM,GACN4T,QAAmD,GAA1Cn1C,KAAK0oD,KAAKqyD,EAAS,IAAM/6G,KAAK00C,GAAK,KAC5CW,QAAmD,GAA1Cr1C,KAAKooD,KAAK2yD,EAAS,IAAM/6G,KAAK00C,GAAK,cAG3C,CAEL,IAAM0lE,KAON,GANIl7B,GACFk7B,EAAgBn7G,KAAKd,KAAKk8G,WAAWzjG,IAEnCqoE,GACFm7B,EAAgBn7G,KAAKd,KAAKm8G,gBAAgB1jG,IAExCqoE,GAAcC,EAAa,CAE7B,IAAMq7B,EAAiBH,EAAgBxqG,KAAK,MAC5C0c,EAAOrtB,KAAK,IAAAm9C,EAAAn0C,SACV6rC,KAAM31C,KAAKq8G,kBACT1mE,KAAMymE,EACNllE,SAAS,EACT8lE,cAAc,QAMxB,OAAO7uF,GAST7kB,EAAQ/I,UAAUo7G,cAAgB,SAASljG,GAEzC,OAAO,IAAAwlC,EAAAn0C,SACL6rC,KAAM31C,KAAKq8G,kBACT1mE,KAAM31C,KAAKm8G,gBAAgB1jG,GAC3B2qB,KAAMpjC,KAAKs8G,gBAAgB7jG,GAC3Bg6D,MAAOzyE,KAAKi9G,iBAAiBxkG,GAC7B09B,MAAOn2C,KAAKg8G,qBAAqBvjG,GACjConE,MAAO7/E,KAAK67G,kBAAkBpjG,QAWpCnP,EAAQ/I,UAAU28G,oBAAsB,SAASzkG,GAE/C,IAAM0kG,GAAS,IAAK,IAAK,IAAK,GACxBC,GAAQ,EAAG,IAAK,IAAK,GAErBjvF,KAEA4uB,EAAOtkC,EAAQ6sE,cACrBt3E,QAAQP,OAAOsvC,GACf,IAAMzvC,EAAOyvC,EAAK14C,UAsDlB,MApDa,UAATiJ,EACF6gB,EAAOrtB,KACL,IAAAm9C,EAAAn0C,SACEm2B,MAAO,IAAAygE,EAAA52F,SACLg2E,OAAQD,EACR5pC,KAAM,IAAAwqD,EAAA32F,SACJqsC,MAAOinE,IAETtmE,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOgnE,EACPt9B,MAAOA,QAGXw9B,OAAQ7wF,QAIC,eAATlf,GACF6gB,EAAOrtB,KACL,IAAAm9C,EAAAn0C,SACEgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOgnE,EACPt9B,MAAOA,OAIb1xD,EAAOrtB,KACL,IAAAm9C,EAAAn0C,SACEgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOinE,EACPv9B,MArCI,QA0CV1xD,EAAOrtB,KACL,IAAAm9C,EAAAn0C,SACEgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOinE,EACPv9B,MAAOA,MAET5pC,KAAM,IAAAwqD,EAAA32F,SACJqsC,OAAQ,IAAK,IAAK,IAAK,SAO/BhoB,EAAOrtB,KAAKd,KAAKq7G,gBAAe,KAG3BltF,GAeT7kB,EAAQ/I,UAAU86G,eAAiB,SAASiC,GAC1C,IAAMC,OAAkCngH,IAApBkgH,GAAgCA,EAE9C7iG,GACJwlB,MAAO,IAAA0/C,EAAA71E,SACLg2E,OAAQ,EACRl6E,OAAQ,EACR6sE,MAAO5wE,KAAK00C,GAAK,EACjBN,KAAM,IAAAwqD,EAAA32F,SACJqsC,OAAQ,IAAK,IAAK,IAAK,MAEzBW,OAAQ,IAAA8oC,EAAA91E,SACNqsC,OAAQ,EAAG,EAAG,EAAG,QA4CvB,OAvCIonE,IACF9iG,EAAQ1B,SAAW,SAASN,GAC1B,IAAMskC,EAAOtkC,EAAQ6sE,cAErB,GAAsB,SAAlBvoC,EAAK14C,UAAT,CAIA,IAAIm5G,SACAC,KACA79G,KACA2D,SAAGC,SAWP,GAVIu5C,uBACFn9C,EAAcm9C,EAAKl6C,iBACVk6C,uBACT0gE,EAAmB1gE,EAAKl6C,iBACfk6C,uBACTn9C,EAAcm9C,EAAKl6C,iBAAiB,GAC3Bk6C,yBACTygE,EAAwBzgE,EAAKl6C,kBAG3B26G,EACF,IAAKj6G,EAAI,EAAGC,EAAKg6G,EAAsBz8G,OAAQwC,EAAIC,EAAID,IACrDk6G,EAAmBA,EAAiB/tB,OAAO8tB,EAAsBj6G,IAGrE,IAAKA,EAAI,EAAGC,EAAKi6G,EAAiB18G,OAAQwC,EAAIC,EAAID,IAChD3D,EAAcA,EAAY8vF,OAAO+tB,EAAiBl6G,IAGpD,OAAI3D,EAAYmB,OACP,IAAAo6B,EAAArxB,QAAqBlK,GAErBm9C,KAKN,IAAAkB,EAAAn0C,QAAiB2Q,IAS1BnR,EAAQ/I,UAAU66G,gBAAkB,SAAS3iG,GAC3C,IAAMilG,GACJnC,EAAAzxG,QAAiB+zF,YACjB0d,EAAAzxG,QAAiBg0F,QACjByd,EAAAzxG,QAAiB0pG,WAEblmG,EAAOtN,KAAKqE,QAAQoU,GAC1B,OAAOpP,EAAQgqB,SAASqqF,EAAWpwG,IASrChE,EAAQ/I,UAAU+6G,cAAgB,SAAS7iG,GACzC,IACI6kC,SAGJ,OAJat9C,KAAKqE,QAAQoU,IAKxB,KAAK8iG,EAAAzxG,QAAiB4sC,MACpB,IAAMtT,EAAOpjC,KAAKs8G,gBAAgB7jG,GAClC6kC,EAAQ,IAAAW,EAAAn0C,SACNm2B,MAAO,IAAAygE,EAAA52F,SACLg2E,OAAQ18C,EAPC,EAQT6S,KAAM,IAAAwqD,EAAA32F,SACJqsC,OAAQ,IAAK,IAAK,IAAK,SAI7B,MACF,KAAKolE,EAAAzxG,QAAiB+zF,YACtB,KAAK0d,EAAAzxG,QAAiB09F,OACtB,KAAK+T,EAAAzxG,QAAiBg0F,QACtB,KAAKyd,EAAAzxG,QAAiB0pG,UACpB,IAAMvyB,EAAcjhF,KAAK67G,kBAAkBpjG,GAC3C6kC,EAAQ,IAAAW,EAAAn0C,SACNgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,OAAQ,IAAK,IAAK,IAAK,GACvB0pC,MAAOoB,EAAc08B,MAGzB,MACF,KAAKpC,EAAAzxG,QAAiBgb,KACpBw4B,EAAQ,IAAAW,EAAAn0C,SACN6rC,KAAM31C,KAAKq8G,kBACT1mE,KAAM31C,KAAKm8G,gBAAgB1jG,GAC3B2qB,KAAMpjC,KAAKs8G,gBAAgB7jG,GAC3Bg6D,MAAOzyE,KAAKi9G,iBAAiBxkG,GAC7BonE,MAAO89B,MAUf,OAFAnwG,EAAA1D,QAAY2D,OAAO6vC,EAAO,2BAEnBA,GAcTh0C,EAAQs0G,yBAA2B,SAASnlG,GAC1C,IAAM1F,EAAa0F,EAAQ2e,gBAI3B,cAHOrkB,EAAA,iBACAA,EAAW0F,EAAQye,0BACnBnkB,EAAA,mBACAA,GAQTzJ,EAAQ/I,UAAU08G,iBAAmB,SAASxkG,GAC5C,IAAMg6D,GACJh6D,EAAQpO,IAAIi2E,EAAAx2E,QAA4B6yB,OAE1C,OADAnvB,EAAA1D,QAAY2tF,aAAahlB,GAClBA,GASTnpE,EAAQ/I,UAAUs9G,iBAAmB,SAASplG,GAE5C,IAAM09B,EAAQ3oC,EAAA1D,QAAYkK,aAAayE,EAAQpO,IAAIi2E,EAAAx2E,QAA4B8yB,QAI/E,OAFApvB,EAAA1D,QAAYkK,aAAamiC,GAElBA,GAST7sC,EAAQ/I,UAAUy7G,qBAAuB,SAASvjG,GAChD,OAAOskF,EAAQ+gB,WAAW99G,KAAK69G,iBAAiBplG,KASlDnP,EAAQ/I,UAAU47G,gBAAkB,SAAS1jG,GAC3C,IAAMvN,EAAOsC,EAAA1D,QAAYkK,aAAayE,EAAQpO,IAAIi2E,EAAAx2E,QAA4BkzB,OAE9E,OADAxvB,EAAA1D,QAAYkK,aAAa9I,GAClBA,GAST5B,EAAQ/I,UAAUo8G,mBAAqB,SAASlkG,GAC9C,OAAOzY,KAAK08G,UAAUjkG,EAAS6nE,EAAAx2E,QAA4BozB,UAS7D5zB,EAAQ/I,UAAUw7G,uBAAyB,SAAStjG,GAClD,IAAIsoE,EAActoE,EAAQpO,IAAIi2E,EAAAx2E,QAA4BszB,cAM1D,YALoBhgC,IAAhB2jF,EACFA,GAAc,EACkB,iBAAhBA,IAChBA,EAA+B,SAAhBA,GAEVvzE,EAAA1D,QAAYi0G,cAAch9B,IAQnCz3E,EAAQ/I,UAAUu7G,qBAAuB,SAASrjG,GAChD,IAAIqoE,EAAYroE,EAAQpO,IAAIi2E,EAAAx2E,QAA4BmzB,YAMxD,YALkB7/B,IAAd0jF,EACFA,GAAY,EACkB,iBAAdA,IAChBA,EAA2B,SAAdA,GAERtzE,EAAA1D,QAAYi0G,cAAcj9B,IAQnCx3E,EAAQ/I,UAAU+7G,gBAAkB,SAAS7jG,GAC3C,OAAOzY,KAAK08G,UAAUjkG,EAAS6nE,EAAAx2E,QAA4BuzB,OAS7D/zB,EAAQ/I,UAAUs7G,kBAAoB,SAASpjG,GAC7C,OAAOzY,KAAK08G,UAAUjkG,EAAS6nE,EAAAx2E,QAA4BwzB,SAc7Dh0B,EAAQ/I,UAAUy9G,OAAS,SAASxmG,EAAUymG,GAC5C,OAAQA,GACN,KAAK30G,EAAQ40G,WAAWC,IACtBn+G,KAAKo+G,UAAU5mG,GACf,MACF,KAAKlO,EAAQ40G,WAAWG,IACtBr+G,KAAKs+G,UAAU9mG,KAcrBlO,EAAQ/I,UAAU69G,UAAY,SAAS5mG,GACrC,IAAMwI,EAAS,IAAAu+F,EAAAz0G,QAGf9J,KAAKw+G,QAAQhnG,EAAUwI,EADN,aADA,wBAYnB1W,EAAQ/I,UAAU+9G,UAAY,SAAS9mG,GACrC,IAAMwI,EAAS,IAAAy+F,EAAA30G,QAGf9J,KAAKw+G,QAAQhnG,EAAUwI,EADN,aADA,yCAgBnB1W,EAAQ/I,UAAUi+G,QAAU,SAAShnG,EAAUwI,EAAQ0+F,EAAUC,GAAc,IAAAtyG,EAAArM,KACvE4+G,OAA4BxhH,IAAjBuhH,EAA6BA,EAAe,aAIvDE,KACF59G,SACJuW,EAASvK,QAAQ,SAACwL,GAChBxX,EAAQ,IAAA+iF,EAAAl6E,QAAc2O,EAAQ2e,iBAC9B/qB,EAAKiyC,SAASr9C,GAAO,GACrB49G,EAAO/9G,KAAKG,KAGd,IAAM69G,EAAe9+G,KAAK+6G,aACxBljF,eAAgB,YAChBC,kBAAmB93B,KAAK+6G,gBAGpBnsG,EAAOoR,EAAOpH,cAAcimG,EAAQC,GAC1C9+G,KAAKg7G,UACHpsG,EAAM8vG,EAAaE,EADrB,mBAaFt1G,EAAQ/I,UAAU87G,iBAAmB,SAAS5hG,GAC5C,GAAIA,EAAQg4D,MAAO,CACjB,IACMn9B,QAD0Bl4C,IAAlBqd,EAAQg4D,MAAsBh4D,EAAQg4D,MAAQ,GACnC5wE,KAAK00C,GAAK,IACnC97B,EAAQ66B,SAAWA,SACZ76B,EAAQg4D,MAgBjB,OAbAh4D,EAAQ26B,MAAQ,UAAa36B,EAAQ2oB,MAAQ,IAA9B,KAAsC,SAAS3xB,KAAK,KAE/DgJ,EAAQ07B,QACV17B,EAAQw7B,KAAO,IAAAwqD,EAAA32F,SAAiBqsC,MAAO17B,EAAQ07B,QAAU,EAAG,EAAG,EAAG,YAC3D17B,EAAQ07B,OAGjB17B,EAAQq8B,OAAS,IAAA8oC,EAAA91E,SACfqsC,OAAQ,IAAK,IAAK,IAAK,GACvB0pC,MAAOplE,EAAQolE,OAAS,WAEnBplE,EAAQolE,MAER,IAAA8gB,EAAA72F,QAAgB2Q,IAYzBnR,EAAQ/I,UAAU27G,WAAa,SAASzjG,GAEtC,IAAMM,EAAWN,EAAQ6sE,cACzB93E,EAAA1D,QAAY2D,OAAOsL,EAAU,6BAE7B,IAAI45F,EAAU,GAEd,GAAI55F,uBACF,GAAI/Y,KAAKqE,QAAQoU,KAAa8iG,EAAAzxG,QAAiB09F,OAAQ,CACrD,IAAMoV,EAAS58G,KAAKw8G,UAAU/jG,EAAS6nE,EAAAx2E,QAA4BqzB,QACnE3vB,EAAA1D,QAAY2tF,aAAamlB,GACzB,IAAMpkF,EAAOx4B,KAAK68G,cAAcpkG,EAASmkG,GAEzCjK,EAAUoM,EAAAj1G,QAA6Bk1G,yBACrCxmF,EAAMx4B,KAAK+6G,YAAa/6G,KAAKq6G,UAAWr6G,KAAKs6G,WAAYt6G,KAAKw6G,kBAAmBx6G,KAAKu6G,oBAExF5H,EAAUmK,EAAAhzG,QAAuBgoG,iBAC/B/4F,EAAU/Y,KAAK+6G,YAAa/6G,KAAKs6G,WAAYt6G,KAAKw6G,wBAEjD,GAAIzhG,uBACT45F,EAAUmK,EAAAhzG,QAAuBkoG,mBAC/Bj5F,EAAU/Y,KAAK+6G,YAAa/6G,KAAKs6G,WAAYt6G,KAAKw6G,wBAC/C,GAAIzhG,uBACT,GAA4B,OAAxB/Y,KAAK06G,eACP/H,EAAUmK,EAAAhzG,QAAuBmoG,kBAC/Bl5F,EAAU/Y,KAAKq6G,UAAWr6G,KAAKy6G,4BAC5B,CACL,IAAM76G,EAAcmZ,EAASlW,iBACvBg0F,EAAO72F,KAAK26G,iBAAiB95G,MAAM,GACzCg2F,EAAK1kE,QAAQvyB,GACb+yG,EAAU3yG,KAAK06G,eAAL5yD,MAAA9nD,2HAAAi/G,CAAuBpoB,IAIrC,OAAO8b,GAWTrpG,EAAQ/I,UAAU8D,QAAU,SAASoU,GACnC,IAAMM,EAAWN,EAAQ6sE,cACzB93E,EAAA1D,QAAY2D,OAAOsL,EAAU,8BAE7B,IAAIzL,SA4BJ,OA1BIyL,uBAEAzL,EADEmL,EAAQpO,IAAIi2E,EAAAx2E,QAA4BizB,SACnCw+E,EAAAzxG,QAAiBgb,KAEjBy2F,EAAAzxG,QAAiB4sC,MAEjB39B,uBACTzL,EAAOiuG,EAAAzxG,QAAiBjE,YACfkT,uBAEPzL,EADEmL,EAAQpO,IAAIi2E,EAAAx2E,QAA4B+yB,WACnC0+E,EAAAzxG,QAAiB09F,OACf/uF,EAAQpO,IAAIi2E,EAAAx2E,QAA4BgzB,cAC1Cy+E,EAAAzxG,QAAiB0pG,UAEjB+H,EAAAzxG,QAAiBg0F,QAEjB/kF,uBACTzL,EAAOiuG,EAAAzxG,QAAiBf,cACfgQ,uBACTzL,EAAOiuG,EAAAzxG,QAAiB+zF,YACf9kF,yBACTzL,EAAOiuG,EAAAzxG,QAAiBvF,mBAG1BiJ,EAAA1D,QAAY2D,OAAOH,EAAM,0BAElBA,GAaThE,EAAQ/I,UAAU2+G,gBAAkB,SAASzmG,EAAS1J,EACpDowG,GAEA,IAAMC,OAAkChiH,IAApB+hH,EAAgCA,EAAkB,IAChE/7E,EAAOr0B,EAAIw2E,UACjB/3E,EAAA1D,QAAYi6E,YAAY3gD,GACxB,IAAMiiD,EAAOt2E,EAAImgB,UACXzqB,EAAS4gF,EAAKkV,gBAAgBn3D,GAC9BrqB,EAAWN,EAAQ6sE,cAEzB,IAAKvsE,EAASvU,iBAAiBC,GAAS,CACtC,IAAM46G,EAAYh6B,EAAKvB,YACvBt2E,EAAA1D,QAAYi6E,YAAYs7B,GAExB,IAAIC,SAEFA,EADEvmG,uBACcA,EAASwmG,gBAAgB,IAChCxmG,uBACOA,EAASymG,mBAAmB38G,iBACnCkW,uBACOA,EAASlW,iBAETu3G,EAASt2B,UAAU/qE,EAASpX,aAG9C0jF,EAAKo6B,SACHl9E,OAAQ88E,EACRK,SAAUN,IAEV78E,OAAQ+8E,EACRI,SAAUN,MAahB91G,EAAQ/I,UAAUs8G,cAAgB,SAASpkG,EAASmkG,GAClD,IAAM7jG,EAAWN,EAAQ6sE,cAEnB7gF,EAASsU,EAASpX,YAClBm+E,GAAUr7E,EAAO,GAAKA,EAAO,IAAM,EAEnC89B,EAAS63E,EAASt2B,UAAU/qE,EAASpX,aAErCL,EAAIO,KAAK0oD,KAAKqyD,EAAS,IAAM/6G,KAAK00C,GAAK,KAAOupC,EAC9Cv+E,GAAKM,KAAKooD,KAAK2yD,EAAS,IAAM/6G,KAAK00C,GAAK,KAAOupC,EAC/C6/B,GAAYr+G,EAAIihC,EAAO,GAAIhhC,EAAIghC,EAAO,IAC5C,OAAO,IAAAu9D,EAAAh2F,SAAsBy4B,EAAQo9E,KAUvCr2G,EAAQ/I,UAAUq/G,wBAA0B,SAASnnG,GACnD,IAAMmD,EAAenD,EAAQye,kBACvB2oF,KACA9sG,EAAa0F,EAAQ2e,gBAC3B,IAAK,IAAM3d,KAAO1G,EACZ0G,IAAQmC,IACVikG,EAAqBpmG,GAAO1G,EAAW0G,IAG3C,OAAOomG,GASTv2G,EAAQ/I,UAAUu/G,0BAA4B,SAASrnG,GACrD,IAAMmD,EAAenD,EAAQye,kBACvBnkB,EAAa0F,EAAQ2e,gBAC3B,IAAK,IAAM3d,KAAO1G,EACZ0G,IAAQmC,GACVnD,EAAQ/L,IAAI+M,OAAKrc,IAavBkM,EAAQ40G,YAKNC,IAAK,MAKLE,IAAK,QAOP/0G,EAAQ8I,OAASC,QAAQD,OAAO,qBAC9B2tG,EAAAj2G,QAAoBoB,KACpB80G,EAAAl2G,QAAgBoB,QAEHsH,QAAQ,oBAAqBlJ,aAG7BA,0KCvlCf26B,EAAAxnC,EAAA,GAyBA,MAAA0hH,EAAA,SAAAjnG,GAEA,MAAAuD,EAAAvD,MAEAuO,EAAA,EAAA1lB,KAAAC,MAKAA,KAAAuY,sBAAAlY,OAAA6sC,EAAA,IAAA7sC,CAAA,aAMAL,KAAAigH,gBAAAxlG,EAAAylG,gBAGA7/G,OAAAC,EAAA,SAAAD,CAAA89G,EAAA14F,EAAA,GAOA,MAAA06F,GACA,KACA,oCACA,qCAgBAC,GACAC,IAAAC,EACAC,IAAAC,EACAC,IAAAC,GAQAC,EAAA18E,EAAA,QAAAqyC,gBACA6pC,GACAE,IAAAp8E,EAAA,QAAAld,gBAAAu5F,GACAC,IAAAt8E,EAAA,QAAAld,gBAAAy5F,GACAC,IAAAx8E,EAAA,QAAAld,gBAAA25F,KAQAE,EAAA38E,EAAA,QAAAqyC,gBACA6pC,GACAxqE,KAAA1R,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,WAAA,YACAsP,KAAA22B,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,WAAA,cAQA6iH,EAAA58E,EAAA,QAAAqyC,gBACA6pC,GACAj1G,KAAA+4B,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACA8iH,IAAA78E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACA+iH,KAAA98E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACAwgC,IAAAyF,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACA61F,KAAAmtB,EACA56D,OAAAniB,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAl+C,wBACAojH,WAAAC,EACA5zG,KAAA22B,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACAmjH,MA2WA,SAAAvkH,EAAA+oB,GACA,MAAAlW,EAAAw0B,EAAA,QAAAne,mBACMs7F,EAAAxkH,EAAA+oB,GACN,GAAAlW,EAAA,CACA,MAAA4xG,EAAwC17F,IAAA5kB,OAAA,GACxCL,EACA2gH,EAAA,gBACAC,EACAD,EAAA,cACAE,EAAA7gH,EAAA4gH,EAAA1kH,EAAA6S,OA5WA2xG,EAAAn9E,EAAA,QAAAqyC,gBACA6pC,GACAqB,IAAAv9E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAr+C,aACA0lB,KAAA6gB,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA1+C,gBAQAokH,EAAAx9E,EAAA,QAAAqyC,gBACA6pC,GACAj1G,KAAA+4B,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACA8iH,IAAA78E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACA+iH,KAAA98E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACAwgC,IAAAyF,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACA61F,KAAAmtB,EACA56D,OAAAniB,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAl+C,wBACAyP,KAAA22B,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACAijH,WAAAC,EACAQ,OAiXA,SAAA9kH,EAAA+oB,GACA,MAAAlW,EAAmCkW,IAAA5kB,OAAA,GACnCkjC,EAAA,QAAAtb,UAAAg5F,EAAA/kH,EAAA+oB,GACA,MAAAjlB,EACA+O,EAAA,gBACyCA,EAAA,KACzC3O,KAAAJ,EAAAK,WA/WA4gH,EAAA19E,EAAA,QAAAqyC,gBACA6pC,GACAyB,MAsVA,SAAAhlH,EAAA+oB,GACA,MAAAlW,EAAAw0B,EAAA,QAAAne,mBAA4C+7F,EAAAjlH,EAAA+oB,GAC5C,GAAAlW,EAAA,CACA,MAAAqyG,EAAwCn8F,IAAA5kB,OAAA,GACxCL,EACAohH,EAAA,gBACAR,EACAQ,EAAA,cACAP,EAAA7gH,EAAA4gH,EAAA1kH,EAAA6S,OAtVAoyG,EAAA59E,EAAA,QAAAqyC,gBACA6pC,GACAqB,IAAAv9E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAr+C,aACA0lB,KAAA6gB,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA1+C,gBAQA0kH,EAAA99E,EAAA,QAAAqyC,gBACA6pC,GACAqB,IAAAv9E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAr+C,aACA0lB,KAAA6gB,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA1+C,cACA2kH,OAAA/9E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAr+C,aACAukH,YAAAh+E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAr+C,aACAwN,KAAA+4B,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACA8iH,IAAA78E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACA+iH,KAAA98E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACAwgC,IAAAyF,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACA61F,KAAAmtB,EACAkB,IAAAj+E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACAsP,KAAA22B,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACAmkH,IAAAl+E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAA/9C,YACAokH,IAAAn+E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAl+C,wBACAwkH,KAAAp+E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAr+C,aACA4kH,KAAAr+E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAr+C,aACA6kH,KAAAt+E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAr+C,aACA8kH,cAAAv+E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAr+C,aACA+kH,OAAAx+E,EAAA,QAAA4B,yBAAAkW,EAAA,EAAAl+C,wBACAojH,WAAAC,IAQAwB,GAAA,eAOAC,EAAA1+E,EAAA,QAAAqyC,gBACA6pC,GACAxqE,KAAA1R,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACAkP,KAAA22B,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,uBAQAwkH,EAAA3+E,EAAA,QAAAqyC,gBACA6pC,GACA,2DAQA0C,EAAA5+E,EAAA,QAAAqyC,gBACA6pC,GACAj1G,KAAA+4B,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACA0iH,IAAA78E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACA2iH,KAAA98E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACAogC,IAAAyF,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACAy1F,KAAA5vD,EAAA,QAAA1M,kBAAAurF,GACA18D,OAAAniB,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAAz8C,iCACAgO,KAAA22B,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACA+iH,MAAAl9E,EAAA,QAAA8+E,oBAAA9+E,EAAA,QAAA1M,kBAAAyrF,MAQAC,EAAAh/E,EAAA,QAAAqyC,gBACA6pC,GACA,eAQA+C,EAAAj/E,EAAA,QAAAqyC,gBACA6pC,GACA,4DAQAgD,EAAAl/E,EAAA,QAAAqyC,gBACA6pC,GACAj1G,KAAA+4B,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACA0iH,IAAA78E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACA2iH,KAAA98E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACAogC,IAAAyF,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACAy1F,KAAA5vD,EAAA,QAAA1M,kBAAAurF,GACA18D,OAAAniB,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAAz8C,iCACAgO,KAAA22B,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACAsjH,OAAAz9E,EAAA,QAAA8+E,oBAAA9+E,EAAA,QAAA1M,kBAoiBA,SAAA36B,EAAA6D,EAAAklB,GAEA,MAAAI,GAAmBnpB,OAAAwmH,eAAA3iH,EAAAsE,YACnBgO,eACAkxB,EAAA,QAAAtM,oBAAA5R,EACAs9F,EAAAC,EACA7iH,EAAAoC,iBAAA8iB,QAliBA29F,EAAAr/E,EAAA,QAAArM,sBAAA,SAOAyrF,EAAAp/E,EAAA,QAAAqyC,gBACA6pC,GACAyB,MAAA39E,EAAA,QAAA1M,kBAAAyrF,KAQAO,EAAAt/E,EAAA,QAAAqyC,gBACA6pC,GACA,8DACA,qDACA,2BAQAqD,EAAAv/E,EAAA,QAAAqyC,gBACA6pC,GACAqB,IAAAv9E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA58C,sBACAikB,KAAA6gB,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAAt9C,uBACAujH,OAAA/9E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA58C,sBACA8iH,YAAAh+E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA58C,sBACA+L,KAAA+4B,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACA0iH,IAAA78E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACA2iH,KAAA98E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACAogC,IAAAyF,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACAy1F,KAAA5vD,EAAA,QAAA1M,kBAAAurF,GACAZ,IAAAj+E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACAkP,KAAA22B,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACA+jH,IAAAl+E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA39C,qBACAgkH,IAAAn+E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAAz8C,iCACA+iH,KAAAp+E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA58C,sBACAmjH,KAAAr+E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA58C,sBACAojH,KAAAt+E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA58C,sBACAqjH,cAAAv+E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAA58C,sBACAsjH,OAAAx+E,EAAA,QAAA1M,kBAAAwkB,EAAA,EAAAz8C,mCAQAmkH,GACAt5F,MAAA,MACAC,WAAA,MACAzqB,gBAAA,OAUA,SAAA+jH,EAAAnxG,EAAAoT,EAAA+Q,GACA,MAAA3d,EAAyC,EAAAusE,cACzC,GAAAvsE,EAAA,CACA,MAAAoN,EAAAs9F,EAAA1qG,EAAA1U,WACA,GAAA8hB,EAAA,CACA,MAAA6S,EAAArT,IAAA5kB,OAAA,GAAAnE,KACA,OAAAqnC,EAAA,QAAAnN,gBAAAkC,EAAAnT,aAAAM,KAUA,MAAAw9F,EAAA1/E,EAAA,QAAAqyC,gBACA6pC,GACAE,IAAAp8E,EAAA,QAAA1M,kBAoZA,SAAA36B,EAAA6b,EAAAkN,GACA,MAAAlL,EAAqDkL,EAAA,GACrD5S,EAAA0F,EAAA2e,gBACArR,GAAmBnpB,OAAAmW,cACnB,IAAAgG,EAAAN,EAAA6sE,cACAvsE,IACAA,EAA6C1Y,OAAAgnB,EAAA,sBAAAtO,GAAA,EAAA0B,GAC7CsL,EAAA,eAAAhN,EAAAhU,YACAgO,EAAA,MAAAgG,EAAAlW,kBAEA,MAAAm2B,EAAArT,IAAA5kB,OAAA,GAAAnE,KACAgnH,EAAAhB,EAAA5pF,EAAAnT,cACApW,EAAAw0B,EAAA,QAAA4/E,aAAA9wG,EAAA6wG,GACA3/E,EAAA,QAAAtM,oBAAA5R,EACA88F,EAAA5+E,EAAA,QAAA1J,6BACA9qB,EAAAkW,EAAAi+F,KAlaArD,IAAAt8E,EAAA,QAAA1M,kBA2aA,SAAA36B,EAAA6b,EAAAkN,GACA,MAAAlL,EAAqDkL,EAAA,GACrD5S,EAAA0F,EAAA2e,gBAEArR,GAAmBnpB,OAAAmW,cACnB,IAAAgG,EAAAN,EAAA6sE,cACAvsE,IACAA,EACA1Y,OAAAgnB,EAAA,sBAAAtO,GAAA,EAAA0B,GACA1H,EAAA,OAAAgG,EAAA3V,kBAEA,MAAA41B,EAAArT,IAAA5kB,OAAA,GAAAnE,KACAgnH,EAAAV,EAAAlqF,EAAAnT,cACApW,EAAAw0B,EAAA,QAAA4/E,aAAA9wG,EAAA6wG,GACA3/E,EAAA,QAAAtM,oBAAA5R,EACAo9F,EAAAl/E,EAAA,QAAA1J,6BACA9qB,EAAAkW,EAAAi+F,KA1bAnD,IAAAx8E,EAAA,QAAA1M,kBAkdA,SAAA36B,EAAA6b,EAAAkN,GACA,MAAAlL,EAAqDkL,EAAA,GACrDI,EAAAJ,IAAA5kB,OAAA,GACAglB,EAAA,WAAAtN,EAAA2e,gBACA,IAAAre,EAAAN,EAAA6sE,cACAvsE,IACAA,EACA1Y,OAAAgnB,EAAA,sBAAAtO,GAAA,EAAA0B,GACAsL,EAAA,eAAAhN,EAAAhU,YACAi+G,EAAApmH,EAAAmc,EAAAlW,iBAAA8iB,QAhdA,SAAA47F,EAAA7gH,EAAA4gH,EAAA1kH,EAAA6S,GAkBA,OAjBA/O,EAAAI,KACAlD,WAAAhB,EAAAuqB,aAAA,QACAvpB,WAAAhB,EAAAuqB,aAAA,SACA,QAAA1X,GACA/O,EAAAI,KAA2C2O,EAAA,YAC3CA,EAAA,IACA6xG,EAAAjpF,MAAA,GAEA33B,EAAAI,KAAA,GAEA,SAAA2O,GACA/O,EAAAI,KAA2C2O,EAAA,aAC3CA,EAAA,KACA6xG,EAAAwC,MAAA,GAEApjH,EAAAI,KAAA,GAEAJ,EAqDA,SAAAsgH,EAAApkH,EAAA+oB,GACA,MAAAlW,EAAmCkW,IAAA5kB,OAAA,GACnCq0E,EAAAx4E,EAAAuqB,aAAA,QACA,OAAAiuD,IACA3lE,EAAA,KAAA2lE,GAEAnxC,EAAA,QAAAtb,UAAAi4F,EAAAhkH,EAAA+oB,GAQA,SAAAu7F,EAAAtkH,EAAA+oB,GACmCA,IAAA5kB,OAAA,GACnC,gBAAAnE,EA0DA,SAAA0jH,EAAA1jH,EAAA+oB,GACA,MAAAlL,EAAoDkL,EAAA,GACpDlW,EAAAw0B,EAAA,QAAAne,iBACAplB,mBACA4gH,kBACGT,EAAAjkH,EAAA+oB,GACH,IAAAlW,EACA,OAEA,MAAA/O,EACA+O,EAAA,uBACAA,EAAA,gBACA,MAAA6xG,EAAoD7xG,EAAA,qBACpDA,EAAA,cACA,MAAArO,EAAA+8G,EAAA4F,oBAAAzC,EAAA5gH,GACAqY,EAAA,IAAAirG,EAAA,cACAjrG,EAAA5X,mBAAAC,EAAAV,GACAL,OAAAgnB,EAAA,qBAAAhnB,CAAA0Y,GAAA,EAAA0B,GACA,MAAAhC,EAAA,IAAAwrG,EAAA,QAAAlrG,GAEA,OADAN,EAAAooF,cAAApxF,GACAgJ,EASA,SAAA+nG,EAAA5jH,EAAA+oB,GACA,MAAAlL,EAAoDkL,EAAA,GACpDlW,EAAAw0B,EAAA,QAAAne,iBACAplB,mBACA2C,QACAi+G,kBACGG,EAAA7kH,EAAA+oB,GACH,IAAAlW,EACA,OAEA,MAAA/O,EACA+O,EAAA,uBACAA,EAAA,gBACA,MAAApM,EAAyCoM,EAAA,YACzCA,EAAA,KACA,MAAA6xG,EAAoD7xG,EAAA,qBACpDA,EAAA,cACA,MAAArO,EAAA+8G,EAAA4F,oBAAAzC,EAAA5gH,EAAA2C,GACA0V,EAAA,IAAAuP,EAAA,cACAvP,EAAA5X,mBAAAC,EAAAV,EAAA2C,GACAhD,OAAAgnB,EAAA,qBAAAhnB,CAAA0Y,GAAA,EAAA0B,GACA,MAAAhC,EAAA,IAAAwrG,EAAA,QAAAlrG,GAEA,OADAN,EAAAooF,cAAApxF,GACAgJ,EASA,SAAAioG,EAAA9jH,EAAA+oB,GACA,MAAAlL,EAAoDkL,EAAA,GACpDlW,EAAAw0B,EAAA,QAAAne,mBAA4Ci8F,EAAAnlH,EAAA+oB,GAC5C,IAAAlW,EACA,OAEA,MAAA6xG,KACA1hH,EAAA2hH,KAAAD,EAAA1kH,EAAA6S,GACArO,EAAA+8G,EAAA4F,oBAAAzC,EAAA1hH,GACAmZ,EAAA,IAAAmrG,EAAA,QAAAtkH,EAAAwB,GACAf,OAAAgnB,EAAA,qBAAAhnB,CAAA0Y,GAAA,EAAA0B,GACA,MAAAhC,EAAA,IAAAwrG,EAAA,QAAAlrG,GAEA,OADAN,EAAAooF,cAAApxF,GACAgJ,EA6GA,SAAAqqG,EAAAlmH,EAAA2V,EAAAoT,GACA/oB,EAAAq6B,aAAA,OAAA1kB,GACA,MACAQ,EADA4S,IAAA5kB,OAAA,GACA,WACA8yF,GACA9gF,EAAA,SACAA,EAAA,UAEAkxB,EAAA,QAAAtM,qBAAoE/6B,QACpE+lH,EAAA1+E,EAAA,QAAA1J,6BACAs5D,EAAAluE,EAAA+8F,GASA,SAAAM,EAAApmH,EAAA4kC,EAAA7b,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GAEA8kB,EADAE,EAAAnpB,KACAipB,aACA9S,EAAAgT,EAAA,WAKA,OAHAke,EAAA,QAAAyD,eAAA9qC,EAAA,WAAA4kC,EAAA,IACAyC,EAAA,QAAAyD,eAAA9qC,EAAA,WAAA4kC,EAAA,IACAzb,EAAA,gBAEA,KAAAo+F,EAAA,QAAA3hH,KACA,IAAAg/B,EAAA,KACAzuB,EAAA,KAAAyuB,EAAA,IAGA,KAAA2iF,EAAA,QAAAn8F,IACA,IAAAwZ,EAAA,KACAzuB,EAAA,IAAAyuB,EAAA,IAEA,MACA,KAAA2iF,EAAA,QAAA5hH,IACA,IAAAi/B,EAAA,KACAzuB,EAAA,KAAAyuB,EAAA,IAMA,MAAAoiF,EAAA,SAAAhnH,EAAAupB,SACA88F,EAAAp9F,GACA09F,EAAA19F,GACApW,EAAAw0B,EAAA,QAAA4/E,aAAA9wG,EAAA6wG,GACA3/E,EAAA,QAAAtM,qBACM/6B,OAAAmW,cACNywG,EAAAv/E,EAAA,QAAA1J,6BACA9qB,EAAAkW,EAAAi+F,GA/VAzF,EAAA4F,oBAAA,SAAAzC,EAAA5gH,EAAA2C,GACA,IAAAjC,EAAA+iH,EAAA,QAAA//G,GACAnC,EAAA,EAWA,GAVAq/G,EAAAjpF,MAAAipF,EAAAwC,MACA1iH,EAAA+iH,EAAA,QAAA3hH,KACAP,EAAA,GACGq/G,EAAAjpF,MACHj3B,EAAA+iH,EAAA,QAAAn8F,IACA/lB,EAAA,GACGq/G,EAAAwC,OACH1iH,EAAA+iH,EAAA,QAAA5hH,IACAN,EAAA,GAEA,IAAAA,EAAA,CACA,IAAAsB,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA9C,EAAAK,OAAA,EAAgDwC,EAAAC,EAAQD,IACxD7C,EAAA6C,EAAAtB,GAAAvB,EAAA,EAAA6C,GACA7C,EAAA6C,EAAAtB,EAAA,GAAAvB,EAAA,EAAA6C,EAAA,GACA+9G,EAAAjpF,OACA33B,EAAA6C,EAAAtB,EAAA,GAAAvB,EAAA,EAAA6C,EAAA,IAEA+9G,EAAAwC,OACApjH,EAAA6C,EAAAtB,EAAA,GAAAvB,EAAA,EAAA6C,EAAA,IAIA,GADA7C,EAAAK,OAAAL,EAAAK,OAAA,EAAAkB,EACAoB,EACA,IAAAE,EAAA,EAAAC,EAAAH,EAAAtC,OAAmCwC,EAAAC,EAAQD,IAC3CF,EAAAE,GAAAF,EAAAE,GAAA,EAAAtB,EAIA,OAAAb,GAoKA+8G,EAAA59G,UAAA6jH,sBAAA,SAAA5sG,GACAA,IACAA,MAEA,QAAAjU,EAAA,EAAAC,EAAAgU,EAAAzW,OAAuCwC,EAAAC,IAAQD,EAAA,CAC/C,MAAAkV,EAAAjB,EAAAjU,GACA,GAAAvD,KAAAigH,gBAAA,CACA,MAAAoE,EAAA5rG,EAAApO,IAAA,yBACArK,KAAAigH,gBAAAxnG,EAAA4rG,GAEA5rG,EAAA/L,IAAA,uBAAAtP,KAgBA+gH,EAAA59G,UAAAyW,YAMAmnG,EAAA59G,UAAA+W,oBAAA,SAAA1a,EAAAsa,GACA,IAAA7W,OAAAikH,EAAA,SAAAjkH,CAAA8/G,EAAAvjH,EAAAipB,cACA,YAEA,MAAA0+F,EAAAnE,EAAAxjH,EAAAgpB,WACA,IAAA2+F,EACA,YAEA,MAAA9rG,EAAA8rG,EAAA3nH,GAAAoD,KAAAwqB,eAAA5tB,EAAAsa,KACA,OAAAuB,GAGAzY,KAAAokH,uBAAA3rG,IACAA,GAHA,MAkBA0lG,EAAA59G,UAAAmX,aAMAymG,EAAA59G,UAAAoX,qBAAA,SAAA/a,EAAAsa,GACA,IAAA7W,OAAAikH,EAAA,SAAAjkH,CAAA8/G,EAAAvjH,EAAAipB,cACA,SAEA,UAAAjpB,EAAAgpB,UAAA,CAEA,MAAApO,EAAAysB,EAAA,QAAAne,mBAAA66F,EACA/jH,GAAAoD,KAAAwqB,eAAA5tB,EAAAsa,KACA,OAAAM,GACAxX,KAAAokH,sBAAA5sG,GACAA,MAKA,UAYA2mG,EAAA59G,UAAA6X,eAgKA+lG,EAAA59G,UAAAqY,cAcAulG,EAAA59G,UAAAsY,kBAAA,SAAArB,EAAAN,GACAA,EAAAlX,KAAA88C,aAAA5lC,GAEA,MAAAstG,EAAAvgF,EAAA,QAAAnN,gBAAA,2CAWA,OARAmN,EAAA,QAAAyD,eAAA88E,EAFA,gCAEA,YADA,6CAEAvgF,EAAA,QAAAyD,eAAA88E,EAFA,4CAEA,qBArzBA,+EAuzBAA,EAAAvtF,aAAA,iBACAutF,EAAAvtF,aAAA,wBAEAgN,EAAA,QAAAtM,qBACM/6B,KAAA4nH,GAAUb,EAAAD,EAAAlsG,GAAAN,IAChBstG,GAEA/kH,EAAA,6SC33BAglH,EAAAhoH,EAAA,GA2CA,MAAA4hH,EAAA,SAAAnnG,GAEA,MAAAuD,EAAAvD,MAEAutB,EAAA,EAAA1kC,KAAAC,MAEAq+G,EAAAqG,sBACArG,EAAAsG,uBAMA3kH,KAAAuY,sBAAAlY,OAAAukH,EAAA,IAAAvkH,CAAA,aAMAL,KAAA6kH,cAAApqG,EAAAqqG,aACArqG,EAAAqqG,aAAAzG,EAAAqG,qBAMA1kH,KAAA+kH,oBAAA3nH,IAAAqd,EAAAuqG,eACAvqG,EAAAuqG,cAMAhlH,KAAAilH,kBAAA7nH,IAAAqd,EAAAyqG,aACAzqG,EAAAyqG,YAMAllH,KAAAmlH,iBAMAnlH,KAAAolH,qBAAAhoH,IAAAqd,EAAA4qG,gBACA5qG,EAAA4qG,gBAIAhlH,OAAAC,EAAA,SAAAD,CAAAg+G,EAAA55E,EAAA,GAQA45E,EAAAiH,oBACA,qCASAjH,EAAAhoC,iBACA,KACA,kCACA,kCACA,kCACA,kCASAgoC,EAAAkH,iBAAA,sFAQAlH,EAAAsG,qBAAA,WAwIA,OAlIAtG,EAAAmH,gBAAA,eAOAnH,EAAAoH,oBAAA,IAAAC,EAAA,SACAvvE,MAAAkoE,EAAAmH,iBAQAnH,EAAAsH,6BAAA,MAOAtH,EAAAuH,oCAAAC,EAAA,EAAAC,OAOAzH,EAAA0H,oCAAAF,EAAA,EAAAC,OAOAzH,EAAA2H,2BAAA,OAOA3H,EAAA4H,yBACA,+DAOA5H,EAAA6H,gCAAA,GAOA7H,EAAA8H,qBAAA,IAAAC,EAAA,SACA1zC,OAAA2rC,EAAAsH,4BACAU,aAAAC,EAAA,EAAAC,YACAC,aAAAnI,EAAAuH,oCACAa,aAAApI,EAAA0H,oCACAn6F,YAAA,YACA0pB,SAAA,EACAvE,MAAAstE,EAAA6H,gCACA9iF,KAAAi7E,EAAA2H,0BACAxnF,IAAA6/E,EAAA4H,2BAQA5H,EAAAqI,wBAAA,WAOArI,EAAAsI,sBAAA,IAAAC,EAAA,SACAzwE,MAAAkoE,EAAAmH,eACA3lC,MAAA,IAQAw+B,EAAAwI,2BAAA,IAAAD,EAAA,SACAzwE,OAAA,YACA0pC,MAAA,IAQAw+B,EAAAyI,oBAAA,IAAAC,EAAA,SACA3xE,KAAA,sBACAa,KAAAooE,EAAAoH,oBACA3uE,OAAAunE,EAAAwI,2BACA91E,MAAA,KAQAstE,EAAA2I,eAAA,IAAAC,EAAA,SACAhxE,KAAAooE,EAAAoH,oBACAxlF,MAAAo+E,EAAA8H,qBACAxwE,KAAA0oE,EAAAyI,oBACAhwE,OAAAunE,EAAAsI,sBACAtJ,OAAA,IAQAgB,EAAAqG,sBAAArG,EAAA2I,gBAEA3I,EAAAqG,sBASArG,EAAA6I,wBACAC,SAAAtB,EAAA,EAAAuB,SACAC,OAAAxB,EAAA,EAAAC,OACAwB,YAAAzB,EAAA,EAAAC,QAUAzH,EAAAkJ,yBAAA,SAAAC,EAAAt8G,GACA,IAAAwzF,EAAA,KACA,MAAA+oB,GAAA,KACA,IAAA5xE,EAAA,QACA,GAAA2xE,EAAAroF,WAAA,CACA,IAAAuoF,EAAAF,EAAAroF,WAAAwoF,eAIA,GAHA,OAAAD,IACAA,EAAArJ,EAAA2H,2BAEA,GAAA0B,EAAA3mH,OAAA,CACA,MAAA6mH,EAAAJ,EAAAroF,WAAA4Y,WAGA0vE,EAAA,GAAAG,EAAAF,EAAA,KACAD,EAAA,IAAAG,EAAAF,EAAA,KACA7xE,EAAA,QAGA,UAAA2xE,EAAAxvE,UAAA,CAGA,MAAA6vE,EAAAL,EAAAxvE,WACA0mD,EAAAmpB,EAAA5mH,SACA03C,QAAAkvE,EAAApwE,WAAA4mE,EAAAyI,oBAAArvE,WACAinD,EAAAxlD,SAAA2uE,EAAA9vE,YAAAsmE,EAAAyI,oBAAA/uE,YACA2mD,EAAA1lD,QAAA6uE,EAAA1vE,WAAAkmE,EAAAyI,oBAAA3uE,WACAumD,EAAAvlD,UAAA0uE,EAAAzvE,aAAAimE,EAAAwI,iCAEAnoB,EAAA2f,EAAAyI,oBAAA7lH,QAUA,OARAy9F,EAAAtlD,QAAAluC,GACAwzF,EAAA7lD,WAAA4uE,EAAA,IACA/oB,EAAA5lD,WAAA2uE,EAAA,IACA/oB,EAAArlD,aAAAxD,GAEA,IAAAoxE,EAAA,SACAtxE,KAAA+oD,KAiBA2f,EAAAyJ,4BAAA,SAAAxqE,EAAAyqE,EACAjD,EAAAkD,EAAA3C,GAEA,gBAMA/mF,GACA,IAEA2pF,EAFAC,EAAA7C,EAGAn6G,EAAA,GAaA,GAZAg9G,GACAloH,KAAAslF,gBACA4iC,EAAAloH,KAAAslF,cAAAjhF,YACA8jH,EAAA,QAAAzxE,OAIAwxE,IACAh9G,EAAiClL,KAAAqK,IAAA,QACjC69G,KAAAh9G,GAGAoyC,EACA,OAAA4qE,GACAD,EAAA5J,EAAAkJ,yBAAAjqE,EAAA,GACApyC,GACAoyC,EAAAoyC,OAAAu4B,IAEA3qE,EAEA,GAAAyqE,EAAA,CACA,MAAAP,EAAAnJ,EAAA+J,WAAAL,EAAAjD,EACAkD,GACA,OAAAE,GACAD,EAAA5J,EAAAkJ,yBAAAC,EAAA,GACAt8G,GACAs8G,EAAA93B,OAAAu4B,IAEAT,EAEA,OAAAU,GACAD,EAAA5J,EAAAkJ,yBAAAzC,EAAA,GACA55G,GACA45G,EAAAp1B,OAAAu4B,IAEAnD,IAcAzG,EAAA+J,WAAA,SAAAC,EAAAvD,EAAAkD,GACA,OAAAphH,MAAAggB,QAAAyhG,GACAA,EACG,iBAAAA,KAIHA,KAAAL,IAAA,IAAAK,KAAAL,IACAK,EAAA,IAAAA,GAEAhK,EAAA+J,WACAJ,EAAAK,GAAAvD,EAAAkD,IAEAlD,GAUAzG,EAAAiK,WAAA,SAAA1rH,GACA,MAAAC,EAAA4nH,EAAA,QAAA1nH,kBAAAH,GAAA,GAGAM,EAAA,gCAAqCC,KAAAN,GACrC,GAAAK,EAAA,CACA,MAAAqrH,EAAArrH,EAAA,GACA,OACAa,SAAAwqH,EAAAxyF,OAAA,SACAh4B,SAAAwqH,EAAAxyF,OAAA,SACAh4B,SAAAwqH,EAAAxyF,OAAA,SACAh4B,SAAAwqH,EAAAxyF,OAAA,gBAcAsoF,EAAA/oF,qBAAA,SAAA14B,GACA,IAAAC,EAAA4nH,EAAA,QAAA1nH,kBAAAH,GAAA,GACA,MAAA8D,KAGAg7C,EACA,8HACA,IAAAx+C,EACA,KAAAA,EAAAw+C,EAAAv+C,KAAAN,IAAA,CACA,MAAAyE,EAAA1D,WAAAV,EAAA,IACAqE,EAAA3D,WAAAV,EAAA,IACA24B,EAAA34B,EAAA,GAAAU,WAAAV,EAAA,MACAwD,EAAAI,KAAAQ,EAAAC,EAAAs0B,GACAh5B,IAAAk5B,OAAA74B,EAAA,GAAA6D,QAEA,QAAAlE,EAGA,OAAA6D,GASA29G,EAAAmK,SAAA,SAAA5rH,GACA,MAAAC,EAAA4nH,EAAA,QAAA1nH,kBAAAH,GAAA,GAAAqB,OACA,IAAAwqH,EAAA7rH,EAAA6rH,QAIA,GAHAA,GAAA,eAAAA,IACAA,EAAA92G,OAAAs/B,SAAAmkC,MAEAqzC,EAAA,CAEA,OADA,IAAAC,IAAA7rH,EAAA4rH,GACArzC,KAEA,OAAAv4E,GAUAwhH,EAAAsK,UAAA,SAAA/rH,GACA,MAAAgsH,EAAAhsH,EAAAuqB,aAAA,UACA0hG,EAAAjsH,EAAAuqB,aAAA,UACA,IAAA2hG,EAcA,OAXAA,EAFA,gBAAAF,EACA,gBAAAC,EACAvC,EAAA,EAAAC,YAEAD,EAAA,EAAAyC,SAGA,gBAAAF,EACAvC,EAAA,EAAA0C,aAEA1C,EAAA,EAAA2C,WAIA3nH,EAAA1D,WAAAhB,EAAAuqB,aAAA,MACAyhG,OAAAvK,EAAA6I,uBAAA0B,GACArnH,EAAA3D,WAAAhB,EAAAuqB,aAAA,MACA0hG,OAAAxK,EAAA6I,uBAAA2B,GACAC,WAUAzK,EAAA6K,WAAA,SAAAtsH,GACA,OAAAkpC,EAAA,EAAApoC,YAAAd,IAUAyhH,EAAA8K,mBAAA,SAAAvsH,EAAA+oB,GACA,OAAA8+F,EAAA,QAAA3+F,qBAAA1oB,EACAihH,EAAA+K,mBAAAxsH,EAAA+oB,IAOA04F,EAAAgL,iBAAA,SAAAzsH,EAAA+oB,GAOA,MAAA5Z,EAAA04G,EAAA,QAAA3+F,mBACMu4F,EAAAiL,oBAAA1sH,EAAA+oB,GACN,IAAA5Z,EACA,OAEA,MAAAw9G,EAAwC5jG,IAAA5kB,OAAA,GACxCyoH,EAAA,SAAAz9G,IAAA,QACA09G,IAAA,SAAA19G,IAAA1L,OAAAg3B,KAAAmyF,GAAAzoH,OAAA,EACA,IAAAy9B,EACA,MAAA42C,EACAo0C,EAAA,KAMA,IAAA92C,EAAA8zC,EAAAC,EALArxC,EACA52C,EAAA42C,EACGq0C,IACHjrF,EAAA6/E,EAAA4H,0BAGA,IAAAI,EAAAC,EAAA,EAAAC,YACA,MAAAmD,EACA39G,EAAA,QAgBA,IAAAtI,EAfAimH,GACAh3C,GAAAg3C,EAAApoH,EAAAooH,EAAAnoH,GACAilH,EAAAkD,EAAAd,OACAnC,EAAAiD,EAAAb,OACAxC,EAAAqD,EAAAZ,QACGtqF,IAAA6/E,EAAA4H,0BACHvzC,EAAA2rC,EAAAsH,4BACAa,EAAAnI,EAAAuH,oCACAa,EAAApI,EAAA0H,qCACG,4CAAA7hG,KAAAsa,KACHk0C,GAAA,MACA8zC,EAAAX,EAAA,EAAAuB,SACAX,EAAAZ,EAAA,EAAAuB,UAIA,MAAA9lH,EACAkoH,EAAA,EACAjoH,EACAioH,EAAA,EAKA,IAAApmF,OAJAhmC,IAAAkE,QAAAlE,IAAAmE,IACAkC,GAAAnC,EAAAC,IAIA,MAAAooH,EACAH,EAAA,EACA9tD,EACA8tD,EAAA,EAKA,IAAAl0E,OAJAl4C,IAAAusH,QAAAvsH,IAAAs+D,IACAt4B,GAAAumF,EAAAjuD,IAIA,MAAAkuD,EACA79G,EAAA,aACA3O,IAAAwsH,IACAt0E,EAAAj1C,OAAAwpH,EAAA,UAAAxpH,CAAAupH,IAGA,IAAA74E,EACAhlC,EAAA,MAEA,GAAA09G,EAAA,CACAjrF,GAAA6/E,EAAA4H,2BACA7iF,EAAAi7E,EAAA2H,+BACA5oH,IAAA2zC,IACAA,EAAAstE,EAAA6H,kCAIA,MAAA1nB,EAAA,IAAA4nB,EAAA,SACA1zC,SACA2zC,eACAG,eACAC,eACA76F,YAAA,YACAnoB,SACAqmH,aAAAxD,EAAA,EAAAC,YACAjxE,WACAvE,QACA3N,OACA5E,QAEA+qF,EAAA,WAAA/qB,OAGA+qB,EAAA,WAAAlL,EAAAqI,yBAUArI,EAAA0L,kBAAA,SAAAntH,EAAA+oB,GAEA,MAAA5Z,EAAA04G,EAAA,QAAA3+F,mBACMu4F,EAAA2L,qBAAAptH,EAAA+oB,GACN,IAAA5Z,EACA,OAEA,MAAAw9G,EAAA5jG,IAAA5kB,OAAA,GACA29F,EAAA,IAAAqoB,EAAA,SACA9wE,KAAA,IAAAyvE,EAAA,SACAvvE,MACA,UAAApqC,IAAA,MAAAsyG,EAAAmH,iBAEAz0E,MACAhlC,EAAA,QAEAw9G,EAAA,UAAA7qB,GASA2f,EAAA4L,iBAAA,SAAArtH,EAAA+oB,GAMA,MAAA5Z,EAAA04G,EAAA,QAAA3+F,mBACMu4F,EAAA6L,oBAAAttH,EAAA+oB,GACN,IAAA5Z,EACA,OAEA,MAAAw9G,EAAA5jG,IAAA5kB,OAAA,GACA09F,EAAA,IAAAmoB,EAAA,SACAzwE,MACA,UAAApqC,IAAA,MAAAsyG,EAAAmH,eACA3lC,MAA6B,UAAA9zE,IAAA,UAE7Bw9G,EAAA,YAAA9qB,GASA4f,EAAA8L,iBAAA,SAAAvtH,EAAA+oB,GAEA,MAAA5Z,EAAA04G,EAAA,QAAA3+F,mBACMu4F,EAAA+L,oBAAAxtH,EAAA+oB,GACN,IAAA5Z,EACA,OAEA,MAAAw9G,EAAA5jG,IAAA5kB,OAAA,GACAw9F,EAAA,IAAAmnB,EAAA,SACAvvE,MACA,UAAApqC,IAAA,MAAAsyG,EAAAmH,iBAEA+D,EAAA,UAAAhrB,EACA,MAAAtoD,EAA4ClqC,EAAA,UAC5C3O,IAAA64C,IACAszE,EAAA,KAAAtzE,GAEA,MAAAo0E,EACmCt+G,EAAA,aACnC3O,IAAAitH,IACAd,EAAA,QAAAc,IAWAhM,EAAAl1F,oBAAA,SAAAvsB,EAAA+oB,GACA,OAAA8+F,EAAA,QAAA3+F,gBAAA,KACAu4F,EAAAiM,0BAAA1tH,EAAA+oB,IASA04F,EAAAkM,eAAA,SAAA3tH,EAAA+oB,GACA,MAEAjlB,EADAilB,IAAA5kB,OAAA,GACAL,gBACA7D,EAAA4nH,EAAA,QAAA1nH,kBAAAH,GAAA,GAGAM,EADA,8HACAC,KAAAN,GACA,GAAAK,EAAA,CACA,MAAAoE,EAAA1D,WAAAV,EAAA,IACAqE,EAAA3D,WAAAV,EAAA,IACA24B,EAAAj4B,WAAAV,EAAA,IACAwD,EAAAI,KAAAQ,EAAAC,EAAAs0B,EAAA,QAEAn1B,EAAAI,KAAA,UAWAu9G,EAAAmM,kBAAA,SAAA5tH,EAAA+oB,GACA,MAAAriB,EAAAmhH,EAAA,QAAA3+F,mBACAu4F,EAAAoM,gCAAA7tH,EAAA+oB,GACA,IAAAriB,EACA,OAEA,MAAApC,EAAA,IAAAwpH,EAAA,cAEA,OADAxpH,EAAA4D,eAAAxB,GACApC,GAUAm9G,EAAAsM,aAAA,SAAA/tH,EAAA+oB,GACA,MAAAilG,EAAAnG,EAAA,QAAA3+F,iBAEAplB,mBACAmqH,UACKxM,EAAAyM,kBAAAluH,EAAA+oB,GACL,IAAAilG,EACA,OAEA,MAAAlqH,EAAAkqH,EAAAlqH,gBACAmqH,EAAAD,EAAAC,MACA,IAAAtnH,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA3B,KAAAk6D,IAAAr7D,EAAAK,OAAA8pH,EAAA9pH,QAAkEwC,EAAAC,IAClED,EACA7C,EAAA,EAAA6C,EAAA,GAAAsnH,EAAAtnH,GAEA,MAAA9C,EAAA,IAAAsqH,EAAA,cAEA,OADAtqH,EAAAU,mBAAA6pH,EAAA,QAAAxoH,KAAA9B,GACAD,GAUA49G,EAAA4M,UAAA,SAAAruH,EAAA+oB,GACA,MAAAulG,EAAAzG,EAAA,QAAA3+F,mBACMu4F,EAAA8M,cAAAvuH,EAAA+oB,GACN,OAAAulG,GAGA,MAWA7M,EAAAx2F,6BAAA,SAAAjrB,EAAA+oB,GACA,OAAA8+F,EAAA,QAAA3+F,gBAAA,KACAu4F,EAAAh1F,mCAAAzsB,EAAA+oB,IAUA04F,EAAA+M,gBAAA,SAAAxuH,EAAA+oB,GACA,MAAA5S,EAAA0xG,EAAA,QAAA3+F,mBACAu4F,EAAAgN,mCAAAzuH,EACA+oB,GACAjlB,EACA29G,EAAAx2F,6BAAAjrB,EAAA+oB,GACA,GAAAjlB,EAAA,CACA,MAAAD,EAAA,IAAAsqH,EAAA,cAGA,OAFAtqH,EAAAU,mBAAA6pH,EAAA,QAAAhjG,IAAAtnB,GACAD,EAAAogG,cAAA9tF,GACAtS,IAaA49G,EAAAiN,gBAAA,SAAA1uH,EAAA+oB,GACA,MAAA5S,EAAA0xG,EAAA,QAAA3+F,mBACAu4F,EAAAgN,mCAAAzuH,EACA+oB,GACAjlB,EACA29G,EAAAx2F,6BAAAjrB,EAAA+oB,GACA,GAAAjlB,EAAA,CACA,MAAA8F,EAAA,IAAA+kH,EAAA,cAIA,OAHA/kH,EAAArF,mBAAA6pH,EAAA,QAAAhjG,IAAAtnB,GACAA,EAAAK,SACAyF,EAAAq6F,cAAA9tF,GACAvM,IAaA63G,EAAAmN,mBAAA,SAAA5uH,EAAA+oB,GACA,MAAAsrD,EAAAwzC,EAAA,QAAA3+F,mBACAu4F,EAAAoN,wBAAA7uH,EAAA+oB,GACA,IAAAsrD,EACA,YAEA,OAAAA,EAAAlwE,OACA,WAAA2qH,EAAA,QAAAz6C,GAGA,IAAA06C,EACAC,GAAA,EACA,MAAAt+G,EAAA2jE,EAAA,GAAA5sE,UACA,IAAA0U,EAAAxV,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAqCwC,EAAAC,IAAQD,EAE7C,IADAwV,EAAAk4D,EAAA1tE,IACAc,WAAAiJ,EAAA,CACAs+G,GAAA,EACA,MAGA,GAAAA,EAAA,CACA,IAAAxqH,EACAV,EACA,GAAA4M,GAAA66G,EAAA,QAAAzxE,MAAA,CACA,MAAAvxC,EAAA8rE,EAAA,GAGA,IAFA7vE,EAAA+D,EAAAJ,YACArE,EAAAyE,EAAAvE,qBACA2C,EAAA,EAAAC,EAAAytE,EAAAlwE,OAAyCwC,EAAAC,IAAQD,EACjDwV,EAAAk4D,EAAA1tE,GACAlD,OAAAikH,EAAA,OAAAjkH,CAAAK,EAAAqY,EAAAnY,uBAEA+qH,EAAA,IAAAE,EAAA,eACA1qH,mBAAAC,EAAAV,GACA29G,EAAAyN,6BAAAH,EAAA16C,QACK3jE,GAAA66G,EAAA,QAAAtqB,cACL8tB,EAAA,IAAAjB,EAAA,eACA5lH,eAAAmsE,GACAotC,EAAAyN,6BAAAH,EAAA16C,IACK3jE,GAAA66G,EAAA,QAAArqB,UACL6tB,EAAA,IAAAI,EAAA,eACA5iH,YAAA8nE,GACAotC,EAAAyN,6BAAAH,EAAA16C,IACK3jE,GAAA66G,EAAA,QAAA51C,oBACLo5C,EAAA,IAAAD,EAAA,QAAAz6C,GAEA5wE,OAAA2rH,EAAA,EAAA3rH,EAAA,WAGAsrH,EAAA,IAAAD,EAAA,QAAAz6C,GAEA,OAAqC,GAUrCotC,EAAA4N,WAAA,SAAArvH,EAAA+oB,GACA,MAAA5S,EAAA0xG,EAAA,QAAA3+F,mBACAu4F,EAAAgN,mCAAAzuH,EACA+oB,GACAjlB,EACA29G,EAAAx2F,6BAAAjrB,EAAA+oB,GACA,GAAAjlB,EAAA,CACA,MAAAyE,EAAA,IAAA+mH,EAAA,cAGA,OAFA/mH,EAAAhE,mBAAA6pH,EAAA,QAAAhjG,IAAAtnB,GACAyE,EAAA07F,cAAA9tF,GACA5N,IAaAk5G,EAAA8N,aAAA,SAAAvvH,EAAA+oB,GACA,MAAA5S,EAAA0xG,EAAA,QAAA3+F,mBACAu4F,EAAAgN,mCAAAzuH,EACA+oB,GACA8D,EAAAg7F,EAAA,QAAA3+F,iBAAA,MACAu4F,EAAA30F,2BAAA9sB,EAAA+oB,GACA,GAAA8D,KAAA,IACA,MAAAjjB,EAAA,IAAA+kH,EAAA,cACA7qH,EAAA+oB,EAAA,GACApmB,GAAA3C,EAAAK,QACA,IAAAwC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAimB,EAAA1oB,OAA4CwC,EAAAC,IAAQD,EACpDlD,OAAAikH,EAAA,OAAAjkH,CAAAK,EAAA+oB,EAAAlmB,IACAF,EAAAvC,KAAAJ,EAAAK,QAKA,OAHAyF,EAAArF,mBACA6pH,EAAA,QAAAhjG,IAAAtnB,EAAA2C,GACAmD,EAAAq6F,cAAA9tF,GACAvM,IAaA63G,EAAAllC,WAAA,SAAAv8E,EAAA+oB,GACA,MAAA4jG,EAAA9E,EAAA,QAAA3+F,mBACMu4F,EAAAjlC,eAAAx8E,EAAA+oB,GACN,IAAA4jG,EACA,YAEA,IAAAhrB,EACA,cAAAgrB,EACAA,EAAA,UAAAlL,EAAAoH,oBACA,MAAAxvE,EAA4CszE,EAAA,UAC5CnsH,IAAA64C,OACAsoD,EAAA,MAEA,IAAAC,EACA,eAAA+qB,EACAA,EAAA,WAAAlL,EAAA8H,qBACA3nB,GAAA6f,EAAAqI,0BACAloB,OAAAphG,GAEA,MAAAshG,EACA,cAAA6qB,EACAA,EAAA,UAAAlL,EAAAyI,oBACA,IAAAroB,EACA,gBAAA8qB,EACAA,EAAA,YAAAlL,EAAAsI,sBACA,MAAA0D,EACAd,EAAA,QAIA,YAHAnsH,IAAAitH,OACA5rB,EAAA,OAEA,IAAAwoB,EAAA,SACAhxE,KAAAsoD,EACAt+D,MAAAu+D,EACA1nD,OAAA2nD,EACA9oD,KAAA+oD,EACA2e,YAAAjgH,MAaAihH,EAAAyN,6BAAA,SAAAH,EACA16C,GACA,MAAAztE,EAAAytE,EAAAlwE,OACAqrH,EAAA,IAAAxlH,MAAAqqE,EAAAlwE,QACAsrH,EAAA,IAAAzlH,MAAAqqE,EAAAlwE,QACAurH,EAAA,IAAA1lH,MAAAqqE,EAAAlwE,QACA,IAAAgY,EAAAxV,EAAAgpH,EAAAC,EAAAC,EAEA,IADAF,EAAAC,EAAAC,GAAA,EACAlpH,EAAA,EAAaA,EAAAC,IAAQD,EACrBwV,EAAAk4D,EAAA1tE,GACA6oH,EAAA7oH,GAAAwV,EAAA1O,IAAA,WACAgiH,EAAA9oH,GAAAwV,EAAA1O,IAAA,cACAiiH,EAAA/oH,GAAAwV,EAAA1O,IAAA,gBACAkiH,UAAAnvH,IAAAgvH,EAAA7oH,GACAipH,UAAApvH,IAAAivH,EAAA9oH,GACAkpH,KAAAH,EAAA/oH,GAEAgpH,GACAZ,EAAAj/G,IAAA,UAAA0/G,GAEAI,GACAb,EAAAj/G,IAAA,aAAA2/G,GAEAI,GACAd,EAAAj/G,IAAA,eAAA4/G,IAUAjO,EAAAqO,YAAA,SAAA9vH,EAAA+oB,GACA,MAAAza,EAAAtO,EAAAuqB,aAAA,QACAs9F,EAAA,QAAA97F,UAAA01F,EAAAsO,cAAA/vH,EAAA+oB,GACA,MAAAinG,EAA0CjnG,IAAA5kB,OAAA,GAC1C,OAAAmK,EACA0hH,EAAA1hH,GAAA0hH,EAAAr6G,MACG,OAAAq6G,EAAAC,cACHD,IAAAC,aAAAD,EAAAr6G,cAEAq6G,EAAA,OASAvO,EAAAyO,oBAAA,SAAAlwH,EAAA+oB,GACA8+F,EAAA,QAAA97F,UAAA01F,EAAA0O,uBAAAnwH,EAAA+oB,IAQA04F,EAAA2O,cAAA,SAAApwH,EAAA+oB,GACA8+F,EAAA,QAAA97F,UAAA01F,EAAA4O,gBAAArwH,EAAA+oB,IAQA04F,EAAA6O,gBAAA,SAAAtwH,EAAA+oB,GACA,MAAAwnG,EAAA1I,EAAA,QAAA3+F,mBACMu4F,EAAA+O,cAAAxwH,EAAA+oB,GACN,IAAAwnG,EACA,OAEA,MAAA1zG,EACA0zG,EAAA,IACA,GAAA1zG,GAAA,UAAAA,EAAA,CACA,MAAAsuG,EACAoF,EAAA,SACApF,IACApiG,IAAA5kB,OAAA,GAAAgnH,GAEA,MAAAltC,EACAsyC,EAAA,MACAtyC,IACAl1D,IAAA5kB,OAAA,GAAA85E,KAWAwjC,EAAAgP,yBAAA,SAAAzwH,EAAA+oB,GACA,MAAA2nG,EAAAjP,EAAA8K,mBAAAvsH,EAAA+oB,GACA,IAAA2nG,EACA,OAEA,MAAAC,EAAA5nG,IAAA5kB,OAAA,GACA6F,MAAAggB,QAAA0mG,GACAC,EAAA,MAAAD,EACG,iBAAAA,EACHC,EAAA,SAAAD,EAEAjtH,OAAA2rH,EAAA,EAAA3rH,EAAA,OAUAg+G,EAAAmP,kBAAA,SAAA5wH,EAAA+oB,GACA8+F,EAAA,QAAA97F,UAAA01F,EAAAoP,qBAAA7wH,EAAA+oB,IASA04F,EAAAqP,kBAAA,SAAA9wH,EAAA+oB,GACA,MAAAza,EAAAtO,EAAAuqB,aAAA,QACA,UAAAjc,EAAA,CACA,MAAA0D,EAAAk3B,EAAA,EAAA9nC,WAAApB,GAE0B+oB,IAAA5kB,OAAA,GAC1BmK,GAAA0D,IAUAyvG,EAAAsP,oBAAA,SAAA/wH,EAAA+oB,GACA,MAAA5Z,EAAA04G,EAAA,QAAA3+F,mBAA4Cu4F,EAAAuP,yBAAAhxH,EAAA+oB,GAC5C,IAAA5Z,EACA,OAEA,MAAA8hH,EAAyCloG,IAAA5kB,OAAA,GACzC0D,GACA7G,WAAAmO,EAAA,MACAnO,WAAAmO,EAAA,OACAnO,WAAAmO,EAAA,MACAnO,WAAAmO,EAAA,QAEA8hH,EAAA,OAAAppH,EACAopH,EAAA,aAAA9hH,EAAA,aACA8hH,EAAA,YAAAjwH,WAAAmO,EAAA,aACA8hH,EAAA,YAAAjwH,WAAAmO,EAAA,cASAsyG,EAAAyP,WAAA,SAAAlxH,EAAA+oB,GACA,MAAA5Z,EAAA04G,EAAA,QAAA3+F,mBAA4Cu4F,EAAA0P,aAAAnxH,EAAA+oB,GAC5C,IAAA5Z,EACA,OAEA,MAAAiiH,EAAsCroG,IAAA5kB,OAAA,GACtCitH,EAAA,aAAApwH,WAAAmO,EAAA,cACAiiH,EAAA,aAAApwH,WAAAmO,EAAA,cACAiiH,EAAA,cAAApwH,WAAAmO,EAAA,eACAiiH,EAAA,cAAApwH,WAAAmO,EAAA,gBASAsyG,EAAAloF,uBAAA,SAAAv5B,EAAA+oB,GAEA,MAAAyQ,EAAAquF,EAAA,QAAA3+F,qBAAA1oB,EACAihH,EAAA4P,2BAAArxH,EAAA+oB,GACA,GAAAyQ,EAAA,CAEAzQ,IAAA5kB,OAAA,GACAD,KAAAs1B,KAUAioF,EAAAhoF,uBAAA,SAAAz5B,EAAA+oB,GAEA,MAAAyQ,EAAAquF,EAAA,QAAA3+F,qBAAA1oB,EACAihH,EAAA6P,2BAAAtxH,EAAA+oB,GACA,GAAAyQ,EAAA,CAEAzQ,IAAA5kB,OAAA,GACA,GAAAq1B,IAUAioF,EAAA8P,YAAA,SAAAvxH,EAAA+oB,GACA8+F,EAAA,QAAA97F,UAAA01F,EAAA+P,cAAAxxH,EAAA+oB,IASA04F,EAAAgQ,YAAA,SAAAzxH,EAAA+oB,GACA,MAEAklG,EADAllG,IAAA5kB,OAAA,GACA8pH,MACAhuH,EAAA4nH,EAAA,QAAA1nH,kBAAAH,GAAA,GACA0xH,EAAA/wH,KAAAC,MAAAX,GACAguH,EAAA/pH,KAAArD,MAAA6wH,GAAA,EAAAA,IASAjQ,EAAAsO,cAAAlI,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAw2C,YAAApI,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,YACAuU,MAAAkyG,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,cASAqgH,EAAA0O,uBAAAtI,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAk4C,KAAAlQ,EAAAqO,YACA8B,WAAAnQ,EAAAmP,oBASAnP,EAAA4O,gBAAAxI,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAo4C,aAAApQ,EAAAsP,oBACAe,IAAArQ,EAAAyP,aASAzP,EAAAuP,yBAAAnJ,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAs4C,aAAAlK,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,YACA4wH,YAAAnK,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACAmxH,YAAApK,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACAoxH,MAAArK,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACAymD,MAAAsgE,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACAqxH,KAAAtK,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACAsxH,KAAAvK,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,eASA2gH,EAAA0P,aAAAtJ,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA44C,aAAAxK,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACAwxH,aAAAzK,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACAyxH,cAAA1K,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACA0xH,cAAA3K,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,eASA2gH,EAAAgN,mCAAA5G,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAg5C,QAAA5K,EAAA,QAAA5+E,yBAAAC,EAAA,EAAAnpC,aACA2yH,WAAA7K,EAAA,QAAA5+E,yBAAAC,EAAA,EAAAnpC,aACAgyH,aAAAlK,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,cASAqgH,EAAAiM,0BAAA7F,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAz2E,YAAA6kH,EAAA,QAAAn/F,aAAA+4F,EAAA/oF,wBASA+oF,EAAA30F,2BAAA+6F,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA//C,gBAAA+nF,EAAAloF,uBACAI,gBAAA8nF,EAAAhoF,yBASAgoF,EAAAyM,kBAAArG,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAi4C,KAAAjQ,EAAAgQ,aACG5J,EAAA,QAAAnuC,gBACH+nC,EAAAiH,oBACAzrF,MAAAwkF,EAAAkM,kBASAlM,EAAAh1F,mCAAAo7F,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAz2E,YAAA6kH,EAAA,QAAAn/F,aAAA+4F,EAAA/oF,wBASA+oF,EAAA8M,cAAA1G,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAjB,KAAAqvC,EAAA,QAAA5+E,yBAAAw4E,EAAAmK,WACG/D,EAAA,QAAAnuC,gBACH+nC,EAAAiH,oBACAhkH,EAAAmjH,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACA6D,EAAAkjH,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACAisH,EAAAlF,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACAg+D,EAAA+oD,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,gBASA2gH,EAAAiL,oBAAA7E,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAk5C,KAAA9K,EAAA,QAAA5+E,yBAAAw4E,EAAA4M,WACArB,QAAAnF,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,aACAgsH,QAAAjF,EAAA,QAAA5+E,yBAAAw4E,EAAAsK,WACA53E,MAAA0zE,EAAA,QAAA5+E,yBAAAw4E,EAAA6K,cASA7K,EAAA4P,2BAAAxJ,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA9rD,WAAAk6F,EAAA,QAAAn/F,aAAA+4F,EAAAl1F,uBASAk1F,EAAA2L,qBAAAvF,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAlgC,MAAAsuE,EAAA,QAAA5+E,yBAAAw4E,EAAAiK,YACAv3E,MAAA0zE,EAAA,QAAA5+E,yBAAAw4E,EAAA6K,cASA7K,EAAA6L,oBAAAzF,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAlgC,MAAAsuE,EAAA,QAAA5+E,yBAAAw4E,EAAAiK,YACAzoC,MAAA4kC,EAAA,QAAA5+E,yBAAAC,EAAA,EAAApoC,eASA2gH,EAAAoN,wBAAAhH,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAjsD,WAAAq6F,EAAA,QAAA19F,gBAAAs3F,EAAA+M,iBACA7gG,WAAAk6F,EAAA,QAAA19F,gBAAAs3F,EAAAiN,iBACAkE,cAAA/K,EAAA,QAAA19F,gBAAAs3F,EAAAmN,oBACArhG,MAAAs6F,EAAA,QAAA19F,gBAAAs3F,EAAA4N,YACA5hG,QAAAo6F,EAAA,QAAA19F,gBAAAs3F,EAAA8N,gBASA9N,EAAAoM,gCAAAhG,EAAA,QAAAnuC,gBACA+nC,EAAAiH,oBACAmK,MAAAhL,EAAA,QAAA19F,gBAAAs3F,EAAAsM,gBASAtM,EAAAqR,sBAAAjL,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAs5C,aAAAtR,EAAAyO,oBACA8C,OAAAvR,EAAA2O,cACA6C,KAAAxR,EAAA8P,YACA2B,QAAArL,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,YACAy3G,YAAAgP,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,YACAkN,KAAAu5G,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,YACA+xH,KAAAtL,EAAA,QAAA5+E,yBAAAC,EAAA,EAAAnpC,aACAqzH,YAAAvL,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,YACAiyH,WAAAxL,EAAA,QAAA5+E,yBAAAC,EAAA,EAAAnpC,eASA0hH,EAAA+P,cAAA3J,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAjB,KAAAqvC,EAAA,QAAA5+E,yBAAAw4E,EAAAmK,YASAnK,EAAA6P,2BAAAzJ,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA9rD,WAAAk6F,EAAA,QAAAn/F,aAAA+4F,EAAAl1F,uBASAk1F,EAAA+O,cAAA3I,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAwE,MAAA4pC,EAAA,QAAA5+E,yBAAAw4E,EAAAllC,YACA1/D,IAAAgrG,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,YACA+pH,SAAAtD,EAAA,QAAA5+E,yBAAAw4E,EAAAmK,YASAnK,EAAA6R,mBAAAzL,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAs5C,aAAAtR,EAAAyO,oBACA8C,OAAAvR,EAAA2O,cACAwC,cAAA/K,EAAA,QAAA5+E,yBACAw4E,EAAAmN,mBAAA,YACAphG,WAAAq6F,EAAA,QAAA5+E,yBACAw4E,EAAA+M,gBAAA,YACA7gG,WAAAk6F,EAAA,QAAA5+E,yBACAw4E,EAAAiN,gBAAA,YACAnhG,MAAAs6F,EAAA,QAAA5+E,yBACAw4E,EAAA4N,WAAA,YACA5hG,QAAAo6F,EAAA,QAAA5+E,yBACAw4E,EAAA8N,aAAA,YACAtxC,MAAA4pC,EAAA,QAAA5+E,yBAAAw4E,EAAAllC,YACAg3C,SAAA9R,EAAAgP,yBACAyC,QAAArL,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,YACAy3G,YAAAgP,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,YACAkN,KAAAu5G,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,YACA+xH,KAAAtL,EAAA,QAAA5+E,yBAAAC,EAAA,EAAAnpC,aACAqzH,YAAAvL,EAAA,QAAA5+E,yBAAAC,EAAA,EAAA9nC,YACA+pH,SAAAtD,EAAA,QAAA5+E,yBAAAw4E,EAAAmK,UACAyH,WAAAxL,EAAA,QAAA5+E,yBAAAC,EAAA,EAAAnpC,cACG8nH,EAAA,QAAAnuC,gBACH+nC,EAAAiH,oBACA8K,WAAA3L,EAAA,QAAA5+E,yBACAw4E,EAAAmM,kBAAA,YACAiF,MAAAhL,EAAA,QAAA5+E,yBACAw4E,EAAAsM,aAAA,eAUAtM,EAAA+L,oBAAA3F,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAlgC,MAAAsuE,EAAA,QAAA5+E,yBAAAw4E,EAAAiK,YACAryE,KAAAwuE,EAAA,QAAA5+E,yBAAAC,EAAA,EAAAnpC,aACA0tH,QAAA5F,EAAA,QAAA5+E,yBAAAC,EAAA,EAAAnpC,eASA0hH,EAAAoP,qBAAAhJ,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAg6C,WAAAhS,EAAAqP,oBASArP,EAAAjlC,eAAAqrC,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAi6C,UAAAjS,EAAAgL,iBACAkH,WAAAlS,EAAA0L,kBACAyG,UAAAnS,EAAA4L,iBACAwG,UAAApS,EAAA8L,mBASA9L,EAAA+K,mBAAA3E,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAq6C,KAAArS,EAAA6O,kBAUA7O,EAAA99G,UAAAowH,sBAAA,SAAA/zH,EAAA+oB,GAEA,MAAAe,EAAA+9F,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAu6C,SAAAnM,EAAA,QAAAoM,kBAAA7wH,KAAA2wH,sBAAA3wH,MACA8wH,OAAArM,EAAA,QAAAoM,kBAAA7wH,KAAA2wH,sBAAA3wH,MACA+wH,UAAAtM,EAAA,QAAA19F,gBAAA/mB,KAAAgxH,eAAAhxH,MACA66E,MAAA76E,KAAAixH,iBAAApjH,KAAA7N,MACAmwH,SAAAnwH,KAAAkxH,oBAAArjH,KAAA7N,QAGAwX,EAAAitG,EAAA,QAAA3+F,mBAAAY,EAAA9pB,EAAA+oB,EAAA3lB,MACA,OAAAwX,QAGA,GAWA6mG,EAAA99G,UAAAywH,eAAA,SAAAp0H,EAAA+oB,GACA,MAAA5Z,EAAA04G,EAAA,QAAA3+F,iBAA2C/M,SAAA,MAC3CslG,EAAA6R,mBAAAtzH,EAAA+oB,GACA,IAAA5Z,EACA,OAEA,MAAA0M,EAAA,IAAAwrG,EAAA,QACAh4F,EAAArvB,EAAAuqB,aAAA,MACA,OAAA8E,GACAxT,EAAAkP,MAAAsE,GAEA,MAAAxR,EAAoDkL,EAAA,GAEpD5M,EAAAhN,EAAA,SAOA,GANAgN,GACA1Y,OAAA8wH,EAAA,qBAAA9wH,CAAA0Y,GAAA,EAAA0B,GAEAhC,EAAAm2F,YAAA71F,UACAhN,EAAA,SAEA/L,KAAA+kH,eAAA,CACA,MAAAznE,EAAAvxC,EAAA,MACAg8G,EAAAh8G,EAAA,SACAiyC,EAAAqgE,EAAAyJ,4BACAxqE,EAAAyqE,EAAA/nH,KAAA6kH,cAAA7kH,KAAAmlH,cACAnlH,KAAAolH,iBACA3sG,EAAA6lC,SAAAN,GAQA,cANAjyC,EAAA,MAIA0M,EAAAooF,cAAA90F,GAEA0M,GASA4lG,EAAA99G,UAAA0wH,iBAAA,SAAAr0H,EAAA+oB,GACA,MAAAsG,EAAArvB,EAAAuqB,aAAA,MACA,UAAA8E,EAAA,CACA,MAAAqxB,EAAA+gE,EAAAllC,WAAAv8E,EAAA+oB,GACA,GAAA23B,EAAA,CACA,IAAA8zE,EACA3I,EAAA7rH,EAAA6rH,QAIA,GAHAA,GAAA,eAAAA,IACAA,EAAA92G,OAAAs/B,SAAAmkC,MAEAqzC,EAAA,CAEA2I,EADA,IAAA1I,IAAA,IAAAz8F,EAAAw8F,GACArzC,UAEAg8C,EAAA,IAAAnlG,EAEAjsB,KAAAmlH,cAAAiM,GAAA9zE,KAWA+gE,EAAA99G,UAAA2wH,oBAAA,SAAAt0H,EAAA+oB,GACA,MAAAsG,EAAArvB,EAAAuqB,aAAA,MACA,UAAA8E,EACA,OAEA,MAAAqhG,EAAAjP,EAAA8K,mBAAAvsH,EAAA+oB,GACA,IAAA2nG,EACA,OAEA,IAAA8D,EACA3I,EAAA7rH,EAAA6rH,QAIA,GAHAA,GAAA,eAAAA,IACAA,EAAA92G,OAAAs/B,SAAAmkC,MAEAqzC,EAAA,CAEA2I,EADA,IAAA1I,IAAA,IAAAz8F,EAAAw8F,GACArzC,UAEAg8C,EAAA,IAAAnlG,EAEAjsB,KAAAmlH,cAAAiM,GAAA9D,GAeAjP,EAAA99G,UAAAyW,YAMAqnG,EAAA99G,UAAA+W,oBAAA,SAAA1a,EAAAsa,GACA,IAAA7W,OAAAikH,EAAA,SAAAjkH,CAAAg+G,EAAAhoC,gBAAAz5E,EAAAipB,cACA,YAEA,MAAApN,EAAAzY,KAAAgxH,eACAp0H,GAAAoD,KAAAwqB,eAAA5tB,EAAAsa,KACA,OAAAuB,GAGA,MAgBA4lG,EAAA99G,UAAAmX,aAMA2mG,EAAA99G,UAAAoX,qBAAA,SAAA/a,EAAAsa,GACA,IAAA7W,OAAAikH,EAAA,SAAAjkH,CAAAg+G,EAAAhoC,gBAAAz5E,EAAAipB,cACA,SAEA,IAAArO,EACA,MAAAoO,EAAAhpB,EAAAgpB,UACA,eAAAA,GAAA,UAAAA,EAGA,OAFApO,EAAAxX,KAAA2wH,sBACA/zH,GAAAoD,KAAAwqB,eAAA5tB,EAAAsa,UAMG,gBAAA0O,EAAA,CACH,MAAAnN,EAAAzY,KAAAgxH,eACAp0H,GAAAoD,KAAAwqB,eAAA5tB,EAAAsa,KACA,OAAAuB,GACAA,MAIG,UAAAmN,EAAA,CAEH,IAAAngB,EACA,IAFA+R,KAEA/R,EAAA7I,EAAAsqB,kBAAoCzhB,EAAGA,IAAA+hB,mBAAA,CACvC,MAAA6pG,EAAArxH,KAAA2X,qBAAAlS,EAAAyR,GACAm6G,GACAhxH,OAAAikH,EAAA,OAAAjkH,CAAAmX,EAAA65G,GAGA,OAAA75G,EAEA,UAYA6mG,EAAA99G,UAAA+wH,SAAA,SAAAr6G,GACA,GAAAwtG,EAAA,QAAAttG,WAAAF,GACA,OAAAjX,KAAAuxH,qBAAyD,GACtD,GAAA9M,EAAA,QAAAptG,OAAAJ,GACH,OAAAjX,KAAAwxH,iBAAiD,GAC9C,oBAAAv6G,EAAA,CACH,MAAAM,EAAAktG,EAAA,QAAAjnH,MAAAyZ,GACA,OAAAjX,KAAAuxH,qBAAAh6G,KAWA8mG,EAAA99G,UAAAgxH,qBAAA,SAAAh6G,GACA,IAAA9R,EACA,IAAAA,EAAA8R,EAAAK,WAA0BnS,EAAGA,IAAAoS,YAC7B,GAAApS,EAAAqS,UAAAC,KAAAC,aAAA,CACA,MAAA9M,EAAAlL,KAAAwxH,iBAAA/rH,GACA,GAAAyF,EACA,OAAAA,IAYAmzG,EAAA99G,UAAAixH,iBAAA,SAAA50H,GACA,IAAA6I,EACA,IAAAA,EAAA7I,EAAAsqB,kBAAkCzhB,EAAGA,IAAA+hB,mBACrC,GAAAnnB,OAAAikH,EAAA,SAAAjkH,CAAAg+G,EAAAhoC,gBAAA5wE,EAAAogB,eACA,QAAApgB,EAAAmgB,UACA,OAAAkgB,EAAA,EAAA9nC,WAAAyH,GAGA,IAAAA,EAAA7I,EAAAsqB,kBAAkCzhB,EAAGA,IAAA+hB,mBAAA,CACrC,MAAA5B,EAAAngB,EAAAmgB,UACA,GAAAvlB,OAAAikH,EAAA,SAAAjkH,CAAAg+G,EAAAhoC,gBAAA5wE,EAAAogB,gBACA,YAAAD,GACA,UAAAA,GACA,aAAAA,GACA,OAAAA,GAAA,CACA,MAAA1a,EAAAlL,KAAAwxH,iBAAA/rH,GACA,GAAAyF,EACA,OAAAA,KAeAmzG,EAAA99G,UAAAkxH,iBAAA,SAAAx6G,GACA,MAAAy6G,KACA,GAAAjN,EAAA,QAAAttG,WAAAF,GACA5W,OAAAikH,EAAA,OAAAjkH,CAAAqxH,EAAA1xH,KAAA2xH,6BAC0B,SACvB,GAAAlN,EAAA,QAAAptG,OAAAJ,GACH5W,OAAAikH,EAAA,OAAAjkH,CAAAqxH,EAAA1xH,KAAA4xH,yBACsB,SACnB,oBAAA36G,EAAA,CACH,MAAAM,EAAAktG,EAAA,QAAAjnH,MAAAyZ,GACA5W,OAAAikH,EAAA,OAAAjkH,CAAAqxH,EAAA1xH,KAAA2xH,6BAAAp6G,IAEA,OAAAm6G,GAQArT,EAAA99G,UAAAoxH,6BAAA,SAAAp6G,GACA,MAAAm6G,KACA,QAAAjsH,EAAA8R,EAAAK,WAA8BnS,EAAGA,IAAAoS,YACjCpS,EAAAqS,UAAAC,KAAAC,cACA3X,OAAAikH,EAAA,OAAAjkH,CAAAqxH,EAAA1xH,KAAA4xH,yBAAAnsH,IAGA,OAAAisH,GAQArT,EAAA99G,UAAAqxH,yBAAA,SAAAh1H,GACA,MAAA80H,KACA,QAAAjsH,EAAA7I,EAAAsqB,kBAAsCzhB,EAAGA,IAAA+hB,mBACzC,GAAAnnB,OAAAikH,EAAA,SAAAjkH,CAAAg+G,EAAAhoC,gBAAA5wE,EAAAogB,eACA,eAAApgB,EAAAmgB,UAAA,CACA,MAAAqc,EAAAwiF,EAAA,QAAA3+F,mBAA6Cu4F,EAAAqR,sBAC7CjqH,MACAisH,EAAA5wH,KAAAmhC,GAGA,QAAAx8B,EAAA7I,EAAAsqB,kBAAsCzhB,EAAGA,IAAA+hB,mBAAA,CACzC,MAAA5B,EAAAngB,EAAAmgB,WACAvlB,OAAAikH,EAAA,SAAAjkH,CAAAg+G,EAAAhoC,gBAAA5wE,EAAAogB,eACA,YAAAD,GACA,UAAAA,GACA,OAAAA,GACAvlB,OAAAikH,EAAA,OAAAjkH,CAAAqxH,EAAA1xH,KAAA4xH,yBAAAnsH,IAGA,OAAAisH,GAWArT,EAAA99G,UAAAsxH,WAAA,SAAA56G,GACA,MAAA66G,KACA,GAAArN,EAAA,QAAAttG,WAAAF,GACA5W,OAAAikH,EAAA,OAAAjkH,CAAAyxH,EAAA9xH,KAAA+xH,uBAC0B,SACvB,GAAAtN,EAAA,QAAAptG,OAAAJ,GACH5W,OAAAikH,EAAA,OAAAjkH,CAAAyxH,EAAA9xH,KAAAgyH,mBACsB,SACnB,oBAAA/6G,EAAA,CACH,MAAAM,EAAAktG,EAAA,QAAAjnH,MAAAyZ,GACA5W,OAAAikH,EAAA,OAAAjkH,CAAAyxH,EAAA9xH,KAAA+xH,uBAAAx6G,IAEA,OAAAu6G,GAQAzT,EAAA99G,UAAAwxH,uBAAA,SAAAx6G,GACA,MAAAu6G,KACA,QAAArsH,EAAA8R,EAAAK,WAA8BnS,EAAGA,IAAAoS,YACjCpS,EAAAqS,UAAAC,KAAAC,cACA3X,OAAAikH,EAAA,OAAAjkH,CAAAyxH,EAAA9xH,KAAAgyH,mBAAAvsH,IAGA,OAAAqsH,GASAzT,EAAA99G,UAAAyxH,mBAAA,SAAAp1H,GACA,MAAAk1H,KACA,QAAArsH,EAAA7I,EAAAsqB,kBAAsCzhB,EAAGA,IAAA+hB,mBACzC,GAAAnnB,OAAAikH,EAAA,SAAAjkH,CAAAg+G,EAAAhoC,gBAAA5wE,EAAAogB,eACA,UAAApgB,EAAAmgB,UAAA,CACA,MAAAqc,EAAAwiF,EAAA,QAAA3+F,mBAA6Cu4F,EAAA4O,gBAC7CxnH,MACAqsH,EAAAhxH,KAAAmhC,GAGA,QAAAx8B,EAAA7I,EAAAsqB,kBAAsCzhB,EAAGA,IAAA+hB,mBAAA,CACzC,MAAA5B,EAAAngB,EAAAmgB,WACAvlB,OAAAikH,EAAA,SAAAjkH,CAAAg+G,EAAAhoC,gBAAA5wE,EAAAogB,eACA,YAAAD,GACA,UAAAA,GACA,OAAAA,GACAvlB,OAAAikH,EAAA,OAAAjkH,CAAAyxH,EAAA9xH,KAAAgyH,mBAAAvsH,IAGA,OAAAqsH,GAYAzT,EAAA99G,UAAA6X,eAQAimG,EAAA4T,oBAAA,SAAAr1H,EAAAu5C,GACA,MAAA+7E,EAAA7xH,OAAA8xH,EAAA,QAAA9xH,CAAA81C,GAEAi8E,GAAA,KADA,GAAAF,EAAAnxH,OAAAmxH,EAAA,MACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,IAAA3uH,EACA,IAAAA,EAAA,EAAaA,EAAA,IAAOA,EAAA,CACpB,MAAAi4B,EAAAz9B,SAAAq0H,EAAA7uH,GAAA,IAAA/D,SAAA,IACA4yH,EAAA7uH,GAAA,GAAAi4B,EAAAz6B,OAAA,IAAAy6B,IAEAsK,EAAA,EAAA1nC,oBAAAxB,EAAAw1H,EAAA3gH,KAAA,MAUA4sG,EAAAgU,0BAAA,SAAAz1H,EAAAgD,EAAA+lB,GACA,MAAAI,EAAAJ,IAAA5kB,OAAA,GAEAK,EAAA2kB,EAAA,OACA9jB,EAAA8jB,EAAA,OAEA,IAAAusG,EAWAh3D,EAAA/3D,EAVAnC,GAAA4pH,EAAA,QAAA5mH,IACAhD,GAAA4pH,EAAA,QAAAzoH,IACA+vH,EAAA,EACGlxH,GAAA4pH,EAAA,QAAAhjG,KACH5mB,GAAA4pH,EAAA,QAAAxoH,KACA8vH,EAAA,EAEAjyH,OAAA2rH,EAAA,EAAA3rH,EAAA,MAIA,MAAAmD,EAAA5D,EAAAmB,OACA,IAAA40C,EAAA,GACA,GAAAnyC,EAAA,GAEA,IADAmyC,GAAA/1C,EAAA,GACA07D,EAAA,EAAeA,EAAAg3D,IAAeh3D,EAC9B3lB,GAAA,IAAA/1C,EAAA07D,GAEA,IAAA/3D,EAAAtB,EAAoBsB,EAAAC,EAAQD,GAAAtB,EAE5B,IADA0zC,GAAA,IAAA/1C,EAAA2D,GACA+3D,EAAA,EAAiBA,EAAAg3D,IAAeh3D,EAChC3lB,GAAA,IAAA/1C,EAAA2D,EAAA+3D,GAIAx1B,EAAA,EAAA1nC,oBAAAxB,EAAA+4C,IAUA0oE,EAAAkU,eAAA,SAAA31H,EAAAs/B,EAAAvW,GACA/oB,EAAAq6B,aAAA,OAAAiF,EAAAhxB,MACA,MAAuC6a,GAAenpB,QACtD2V,EAAA2pB,EAAA3pB,MAEA,iBAAAA,GACA,OAAAA,KAAAs6G,aACApI,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAAmU,+BACA/N,EAAA,QAAAlqF,8BAAAhoB,EAAAs6G,aAAAlnG,GAAA,gBAGA,OAAApT,YACAkyG,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAAmU,+BACA/N,EAAA,QAAAlqF,8BAAAhoB,SAAAoT,GAAA,WAGA8+F,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAAmU,+BACA/N,EAAA,QAAAlqF,8BAAAhoB,GAAAoT,GAAA,WAUA04F,EAAAoU,mBAAA,SAAA71H,EAAAsO,GACA46B,EAAA,EAAAznC,kBAAAzB,EAAAsO,IASAmzG,EAAAqU,oBAAA,SAAA91H,EAAA2V,GACAuzB,EAAA,EAAA1nC,oBAAAxB,EAAA2V,IAWA8rG,EAAAsU,eAAA,SAAA/1H,EAAA4a,EAAAmO,GACA,MAAuCI,GAAenpB,QACtD6nH,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAAuU,sBACAvU,EAAAwU,uBAAAr7G,EAAAmO,OAAAvoB,EACA4C,OAUAq+G,EAAAyU,mBAAA,SAAAl2H,EAAAm2H,EAAAptG,GACA,MAAuCI,GAAenpB,QACtDgzB,EAAAmjG,EAAAnjG,MACAngB,EAAAsjH,EAAAtjH,OACA1O,EAAA6uB,EAAA7uB,OAEA,QAAAwC,EAAA,EAAiBA,EAAAxC,EAAYwC,IAC7BkhH,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAAmU,+BACAnU,EAAA2U,qBAAgC9nH,KAAA0kB,EAAArsB,GAAAgP,MAAA9C,EAAAlM,KAAiCoiB,IAWjE04F,EAAA4U,WAAA,SAAAr2H,EAAAs2H,EAAAvtG,GACA,MAAuCI,GAAenpB,QACtDo8B,EAAArT,IAAA5kB,OAAA,GAAAnE,KACA,IAAAgnH,EAAAvF,EAAA8U,eAAAn6F,EAAAnT,cACApW,EAAAg1G,EAAA,QAAAZ,aAAAqP,EAAAtP,GACAa,EAAA,QAAA9sF,oBAAA5R,EACAs4F,EAAA+U,kBAAA3O,EAAA,QAAAlqF,6BACA9qB,EAAAkW,EAAAi+F,GACAA,EACAvF,EAAA8U,eAAA9U,EAAAiH,mBAAA,IACA71G,EAAAg1G,EAAA,QAAAZ,aAAAqP,EAAAtP,GACAa,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAA+U,kBACA/U,EAAAgV,iBAAA5jH,EAAAkW,EAAAi+F,IAUAvF,EAAAiV,gBAAA,SAAA12H,EAAA0gD,EAAA33B,GACA,MAAuCI,GAAenpB,QACtDmW,KACAyrB,EAAA8e,EAAAi2E,SACAnwF,EAAAka,EAAAioC,UACAiuC,EAAAl2E,EAAAqqE,eACA8L,GACAr+C,KAAA52C,GAGA,GAAA4E,EAAA,CACAqwF,EAAA,EAAArwF,EAAA,GACAqwF,EAAA,EAAArwF,EAAA,GACA,MAAAsvC,EAAAp1B,EAAAo2E,YACA5K,EAAAxrE,EAAAq2E,YAOA,GALA7K,GAAA0K,GAAA,IAAA1K,EAAA,IAAAA,EAAA,KAAA1lF,EAAA,KACAqwF,EAAA,EAAA3K,EAAA,GACA2K,EAAA,EAAAD,EAAA,IAAA1K,EAAA,GAAA1lF,EAAA,KAGAsvC,MAAA,KAAAtvC,EAAA,MAAAsvC,EAAA,KAAAtvC,EAAA,OACA,MAAmCsmF,GACnCpoH,EAAAoxE,EAAA,GACAk2C,OAAA/C,EAAA,EAAAC,OACAvkH,EAAA6hC,EAAA,GAAAsvC,EAAA,GACAm2C,OAAAhD,EAAA,EAAAC,QAEA/yG,EAAA,QAAA22G,GAIA32G,EAAA,KAAA0gH,EAEA,MAAA1iF,EAAAuM,EAAAvF,WACA,IAAAhH,IACAh+B,EAAA,MAAAg+B,GAGA,MAAAuE,EAAAgI,EAAAzF,cACA,IAAAvC,IACAviC,EAAA,QAAAuiC,GAGA,MAAAtc,EAAArT,IAAA5kB,OAAA,GAAAnE,KACAgnH,EAAAvF,EAAAuV,qBAAA56F,EAAAnT,cACApW,EAAAg1G,EAAA,QAAAZ,aAAA9wG,EAAA6wG,GACAa,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAAwV,wBACApP,EAAA,QAAAlqF,6BAAA9qB,EAAAkW,EAAAi+F,IAUAvF,EAAAyV,iBAAA,SAAAl3H,EAAA0gD,EAAA33B,GACA,MAAuCI,GAAenpB,QACtDmW,KACAkjC,EAAAqH,EAAAnF,UACAlC,IACAljC,EAAA,MAAAkjC,EAAAkpD,YAEA,MAAApuD,EAAAuM,EAAAvF,WACAhH,GAAA,IAAAA,IACAh+B,EAAA,MAAAg+B,GAEA,MAAA/X,EAAArT,IAAA5kB,OAAA,GAAAnE,KACAgnH,EACAvF,EAAA0V,sBAAA/6F,EAAAnT,cACApW,EAAAg1G,EAAA,QAAAZ,aAAA9wG,EAAA6wG,GACAa,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAA2V,yBACAvP,EAAA,QAAAlqF,6BAAA9qB,EAAAkW,EAAAi+F,IAUAvF,EAAA4V,gBAAA,SAAAr3H,EAAA0gD,EAAA33B,GACA,MAAuCI,GAAenpB,QACtDmW,GACAojC,MAAAmH,EAAA6hD,WACAtf,MAAAviC,EAAAoiD,YAEA1mE,EAAArT,IAAA5kB,OAAA,GAAAnE,KACAgnH,EAAAvF,EAAA6V,qBAAAl7F,EAAAnT,cACApW,EAAAg1G,EAAA,QAAAZ,aAAA9wG,EAAA6wG,GACAa,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAA8V,wBACA1P,EAAA,QAAAlqF,6BAAA9qB,EAAAkW,EAAAi+F,IAUAvF,EAAA+V,oBAAA,SAAAx3H,EAAAmc,EAAA4M,GAEA,MAAAI,GAAmBnpB,QACnB0Q,EAAAyL,EAAA1U,UAEA,IAAA4sE,EAEA38B,EACAhnC,GAAA66G,EAAA,QAAA51C,qBACAtB,EAAuD,EAAAS,gBACvDp9B,EAAA+pE,EAAA5nF,wBACGnpB,GAAA66G,EAAA,QAAAtiH,aACHorE,EAA+C,EAAAtrE,YAC/C2uC,EAAA+pE,EAAAgW,qBACG/mH,GAAA66G,EAAA,QAAA5jH,mBACH0sE,EACA,EAA4C7tE,iBAC5CkxC,EAAA+pE,EAAAiW,2BACGhnH,GAAA66G,EAAA,QAAAp/G,eACHkoE,EACA,EAAyCtoE,cACzC2rC,EAAA+pE,EAAAkW,uBAEAl0H,OAAA2rH,EAAA,EAAA3rH,EAAA,MAEAokH,EAAA,QAAA9sF,oBAAA5R,EACAs4F,EAAAmW,4BAAAlgF,EACA28B,EAAAtrD,IAUA04F,EAAAoW,iBAAA,SAAA73H,EAAAu8B,EAAAxT,GACA,MAAuCI,GAAenpB,QACtD6nH,EAAA,QAAA9sF,oBAAA5R,EACAs4F,EAAAqW,yBACArW,EAAAsW,2BAAAx7F,GAAAxT,IAaA04F,EAAAuW,gBAAA,SAAAh4H,EAAA6b,EAAAkN,GACA,MAAuCI,GAAenpB,QAGtD6b,EAAAue,SACAp6B,EAAAq6B,aAAA,KAAAxe,EAAAue,SAIA,MAAAjkB,EAAA0F,EAAA2e,gBAGAhoB,GAAkB0gH,QAAA,EAAAra,YAAA,EAAAvqG,KAAA,EAAA6kH,KAAA,EAClBC,YAAA,EAAAjI,SAAA,EAAAkI,WAAA,GACA7gH,EAAAqJ,EAAAye,mBAAA,EACA,MAAAG,EAAAh3B,OAAAg3B,KAAAtkB,OAA2Ck1F,OAAA74F,OAAA,SAAAgzC,GAC3C,OAAAhzC,EAAAgzC,KAGA,GAAA/qB,EAAAt2B,OAAA,GACA,MACAgyH,GAA4BnjG,MAAAyH,EAAA5nB,OAD5Bg1G,EAAA,QAAAZ,aAAA9wG,EAAAskB,IAEAotF,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAAwW,uBACAxW,EAAAyW,4BAAA/B,GAAAptG,GAGA,MAAAq4B,EAAAvlC,EAAA6qF,mBACA,GAAAtlD,EAAA,CAGA,MAAA7vB,EAAA6vB,EAAAj+C,KAAA0Y,EAAA,GACA,GAAA0V,EAAA,CACA,MAAAmvB,EAAA12C,MAAAggB,QAAAuH,KAAA,GAAAA,EACAnuB,KAAAilH,eACAlyG,EAAA,MAAAuqC,GAEA,MAAAohD,EAAAphD,EAAAtF,UACA0mD,IACA3rF,EAAA,KAAA2rF,EAAA1mD,YAIA,MAAAhf,EAAArT,IAAA5kB,OAAA,GAAAnE,KACAgnH,EAAAvF,EAAA0W,oBAAA/7F,EAAAnT,cACApW,EAAAg1G,EAAA,QAAAZ,aAAA9wG,EAAA6wG,GACAa,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAAwW,uBACApQ,EAAA,QAAAlqF,6BAAA9qB,EAAAkW,EAAAi+F,GAGA,MAAAnpG,EAAqDkL,EAAA,GACrD,IAAA5M,EAAAN,EAAA6sE,cACAvsE,IACAA,EAAA1Y,OAAA8wH,EAAA,qBAAA9wH,CAAA0Y,GAAA,EAAA0B,IAEAgqG,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAAwW,uBACAxW,EAAA5nF,wBAAA1d,GAAA4M,IAUA04F,EAAA2W,wBAAA,SAAAp4H,EAAAmc,EAAA4M,GACA,MAAAjlB,EAAAqY,EAAAnY,qBACuCmlB,GAAenpB,QACtDmpB,EAAA,OAAAhN,EAAAhU,YACAghB,EAAA,OAAAhN,EAAAooF,YAGA,MAAApuF,EAAAgG,EAAAqe,gBACArkB,EAAAnT,YAAAc,EAEA,MAAAs4B,EAAArT,IAAA5kB,OAAA,GAAAnE,KACAgnH,EAAAvF,EAAA4W,6BAAAj8F,EAAAnT,cACApW,EAAAg1G,EAAA,QAAAZ,aAAA9wG,EAAA6wG,GACAa,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAA6W,gCACAzQ,EAAA,QAAAlqF,6BAAA9qB,EAAAkW,EAAAi+F,IAUAvF,EAAA8W,cAAA,SAAAv4H,EAAA4J,EAAAmf,GACA,MAAAyvG,EAAA5uH,EAAAmyB,iBACA08F,EAAAD,EAAAvvE,QACuC9/B,GAAenpB,QAEtD6nH,EAAA,QAAA9sF,oBAAA5R,EACAs4F,EAAAiX,qBACAjX,EAAAkX,6BACAH,EAAAzvG,GAEA8+F,EAAA,QAAA9sF,oBAAA5R,EACAs4F,EAAAiX,qBACAjX,EAAAmX,8BACAH,GAAA1vG,IAUA04F,EAAAoX,gBAAA,SAAA74H,EAAA0gD,EAAA33B,GACA,MAAuCI,GAAenpB,QACtD6nH,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAAqX,wBACArX,EAAAsX,qBAAAr4E,EAAA6hD,YAAAx5E,IASA04F,EAAAuX,oBAAA,SAAAh5H,EAAAm0C,GAEAjL,EAAA,EAAA3mC,qBAAAvC,EACAiF,KAAAmhC,MAAA,IAAA+N,GAAA,MAUAstE,EAAAwX,YAAA,SAAAj5H,EAAA0gD,EAAA33B,GACA,MAAuCI,GAAenpB,QACtDmW,KACAwrF,EAAAjhD,EAAAnF,UACAsmD,EAAAnhD,EAAAlF,YACAomD,EAAAlhD,EAAAne,WACAu/D,EAAAphD,EAAAtF,UACAwmD,aAAA4nB,EAAA,UACArzG,EAAA,UAAAyrF,GAEAE,IACA3rF,EAAA,WAAA2rF,GAEAD,IACA1rF,EAAA,UAAA0rF,GAEAF,IACAxrF,EAAA,UAAAwrF,GAEA,MAAAvlE,EAAArT,IAAA5kB,OAAA,GAAAnE,KACAgnH,EAAAvF,EAAAyX,gBAAA98F,EAAAnT,cACApW,EAAAg1G,EAAA,QAAAZ,aAAA9wG,EAAA6wG,GACAa,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAA0X,mBACAtR,EAAA,QAAAlqF,6BAAA9qB,EAAAkW,EAAAi+F,IASAvF,EAAA2X,WAAA,SAAAp5H,EAAAq5H,GACAr5H,EAAAq6B,aAAA,IAAAg/F,EAAA30H,GACA1E,EAAAq6B,aAAA,IAAAg/F,EAAA10H,GACA3E,EAAAq6B,aAAA,SAAAg/F,EAAArN,QACAhsH,EAAAq6B,aAAA,SAAAg/F,EAAApN,SASAxK,EAAA6X,cAAAzR,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA,yBASAgoC,EAAA8X,iBAAA1R,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAu6C,SAAAnM,EAAA,QAAAltF,kBAAA8mF,EAAAsU,gBACA5B,UAAAtM,EAAA,QAAAltF,kBAAA8mF,EAAAuW,mBASAvW,EAAAuU,sBAAAnO,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA06C,UAAAtM,EAAA,QAAAltF,kBAAA8mF,EAAAuW,mBASAvW,EAAAmU,+BAAA/N,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAk4C,KAAA9J,EAAA,QAAAltF,kBAAA8mF,EAAAkU,gBACAhgH,MAAAkyG,EAAA,QAAAltF,kBAAA8mF,EAAAqU,qBACA7F,YAAApI,EAAA,QAAAltF,kBAAA8mF,EAAAoU,sBASApU,EAAA+X,4BACAjsG,MAAA,QACAC,WAAA,aACAG,WAAA,aACAF,QAAA,UACAplB,WAAA,gBACAtF,gBAAA,gBACAqG,aAAA,gBACA2qE,mBAAA,iBAQA0tC,EAAA8U,eAAA1O,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA,QAEAouC,EAAA,QAAAnuC,gBAAA+nC,EAAAiH,oBACA,mBASAjH,EAAA+U,kBAAA3O,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAjB,KAAAqvC,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA1nC,sBACGqmH,EAAA,QAAAnuC,gBACH+nC,EAAAiH,oBACAhkH,EAAAmjH,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA3mC,sBACAoC,EAAAkjH,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA3mC,sBACAwqH,EAAAlF,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA3mC,sBACAu8D,EAAA+oD,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA3mC,yBASAk/G,EAAAuV,qBAAAnP,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA,qCASAgoC,EAAAwV,wBAAApP,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAk5C,KAAA9K,EAAA,QAAAltF,kBAAA8mF,EAAA4U,YACArJ,QAAAnF,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA3mC,sBACAuqH,QAAAjF,EAAA,QAAAltF,kBAAA8mF,EAAA2X,YACAjlF,MAAA0zE,EAAA,QAAAltF,kBAAA8mF,EAAAuX,uBASAvX,EAAA0V,sBAAAtP,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA,kBASAgoC,EAAA2V,yBAAAvP,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAlgC,MAAAsuE,EAAA,QAAAltF,kBAAA8mF,EAAA4T,qBACAlhF,MAAA0zE,EAAA,QAAAltF,kBAAA8mF,EAAAuX,uBASAvX,EAAA6V,qBAAAzP,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA,kBASAgoC,EAAA8V,wBAAA1P,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAlgC,MAAAsuE,EAAA,QAAAltF,kBAAA8mF,EAAA4T,qBACApyC,MAAA4kC,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA3mC,wBASAk/G,EAAAqW,yBAAAjQ,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA9rD,WAAAk6F,EAAA,QAAAltF,kBACA8mF,EAAA2W,2BASA3W,EAAAmW,4BAAA/P,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAjsD,WAAAq6F,EAAA,QAAAltF,kBACA8mF,EAAA2W,yBACA7qG,MAAAs6F,EAAA,QAAAltF,kBACA8mF,EAAA2W,yBACA3qG,QAAAo6F,EAAA,QAAAltF,kBAAA8mF,EAAA8W,eACAxkD,mBAAA8zC,EAAA,QAAAltF,kBACA8mF,EAAA+V,uBASA/V,EAAA0W,oBAAAtQ,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA,iEACA,qBASAgoC,EAAAwW,uBAAApQ,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAs5C,aAAAlL,EAAA,QAAAltF,kBACA8mF,EAAAyU,oBACAtD,cAAA/K,EAAA,QAAAltF,kBACA8mF,EAAA+V,qBACAhqG,WAAAq6F,EAAA,QAAAltF,kBACA8mF,EAAA2W,yBACAzqG,WAAAk6F,EAAA,QAAAltF,kBACA8mF,EAAA2W,yBACA7qG,MAAAs6F,EAAA,QAAAltF,kBACA8mF,EAAA2W,yBACA3qG,QAAAo6F,EAAA,QAAAltF,kBAAA8mF,EAAA8W,eACAt6C,MAAA4pC,EAAA,QAAAltF,kBAAA8mF,EAAAwX,aACA/F,QAAArL,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA1nC,qBACAq3G,YAAAgP,EAAA,QAAAltF,kBACAuO,EAAA,EAAA1nC,qBACA8M,KAAAu5G,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA1nC,qBACA2xH,KAAAtL,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA5nC,sBACA8xH,YAAAvL,EAAA,QAAAltF,kBACAuO,EAAA,EAAA1nC,qBACA2pH,SAAAtD,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA1nC,qBACA6xH,WAAAxL,EAAA,QAAAltF,kBACAuO,EAAA,EAAA5nC,wBASAmgH,EAAA4W,6BAAAxQ,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA,sDASAgoC,EAAA6W,gCAAAzQ,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAg5C,QAAA5K,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA5nC,sBACAoxH,WAAA7K,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA5nC,sBACAywH,aAAAlK,EAAA,QAAAltF,kBAAAuO,EAAA,EAAA1nC,qBACAwB,YAAA6kH,EAAA,QAAAltF,kBACA8mF,EAAAgU,6BASAhU,EAAAiX,qBAAA7Q,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA9/C,gBAAAkuF,EAAA,QAAAltF,kBACA8mF,EAAAoW,kBACAn+F,gBAAAmuF,EAAA,QAAAltF,kBACA8mF,EAAAoW,oBASApW,EAAAqX,wBAAAjR,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAlgC,MAAAsuE,EAAA,QAAAltF,kBAAA8mF,EAAA4T,uBASA5T,EAAAyX,gBAAArR,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACA,mDASAgoC,EAAA0X,mBAAAtR,EAAA,QAAAnuC,gBACA+nC,EAAAhoC,iBACAi6C,UAAA7L,EAAA,QAAAltF,kBAAA8mF,EAAAiV,iBACA/C,WAAA9L,EAAA,QAAAltF,kBAAA8mF,EAAAyV,kBACAtD,UAAA/L,EAAA,QAAAltF,kBAAA8mF,EAAA4V,iBACAxD,UAAAhM,EAAA,QAAAltF,kBAAA8mF,EAAAoX,mBAYApX,EAAAgV,iBAAA,SAAA9gH,EAAAoT,EAAA+Q,GACA,OAAA+tF,EAAA,QAAA3tF,gBAAAunF,EAAAiH,mBAAA,GACA,MAAA5uF,IAYA2nF,EAAAwU,uBAAA,SAAAtgH,EAAAoT,EACA+Q,GACA,MAAAsC,EAAArT,IAAA5kB,OAAA,GAAAnE,KACA,OAAA6nH,EAAA,QAAA3tF,gBAAAkC,EAAAnT,aAAA,cAYAw4F,EAAA5nF,uBAAA,SAAAlkB,EAAAoT,EACA+Q,GACA,GAAAnkB,EAAA,CACA,MAAAymB,EAAArT,IAAA5kB,OAAA,GAAAnE,KACA,OAAA6nH,EAAA,QAAA3tF,gBAAAkC,EAAAnT,aACAw4F,EAAA+X,2BAAiE,EAAA/xH,cAWjEg6G,EAAAsX,oBAAAlR,EAAA,QAAA7sF,sBAAA,SASAymF,EAAA2U,mBACAvO,EAAA,QAAA7sF,sBAAA,QASAymF,EAAAyW,2BACArQ,EAAA,QAAA7sF,sBAAA,gBASAymF,EAAAkX,6BACA9Q,EAAA,QAAA7sF,sBAAA,mBASAymF,EAAAgW,oBACA5P,EAAA,QAAA7sF,sBAAA,SASAymF,EAAAiW,0BACA7P,EAAA,QAAA7sF,sBAAA,cASAymF,EAAAsW,0BACAlQ,EAAA,QAAA7sF,sBAAA,cASAymF,EAAAkW,sBACA9P,EAAA,QAAA7sF,sBAAA,WASAymF,EAAAmX,6BACA/Q,EAAA,QAAA7sF,sBAAA,mBAaAymF,EAAA99G,UAAAqY,cAaAylG,EAAA99G,UAAAsY,kBAAA,SAAArB,EAAAN,GACAA,EAAAlX,KAAA88C,aAAA5lC,GACA,MAAAm/G,EAAA5R,EAAA,QAAA3tF,gBAAAunF,EAAAhoC,gBAAA,UACAigD,EAAA,gCAEA7R,EAAA,QAAA/8E,eAAA2uF,EAAAC,EAAA,WACAjY,EAAAiH,mBAAA,IACAb,EAAA,QAAA/8E,eAAA2uF,EAAAC,EAAA,YAHA,6CAIA7R,EAAA,QAAA/8E,eAAA2uF,EAJA,4CAIA,qBACAhY,EAAAkH,kBAEA,MAAuCx/F,GAAenpB,KAAAy5H,GACtDtjH,KACAyE,EAAAzW,OAAA,EACAgS,EAAA,SAAAyE,EACG,GAAAA,EAAAzW,SACHgS,EAAA,UAAAyE,EAAA,IAEA,MAAAosG,EAAAvF,EAAA6X,cAAAG,EAAAxwG,cACApW,EAAAg1G,EAAA,QAAAZ,aAAA9wG,EAAA6wG,GAIA,OAHAa,EAAA,QAAA9sF,oBAAA5R,EAAAs4F,EAAA8X,iBACA1R,EAAA,QAAAlqF,6BAAA9qB,GAAAyH,GAAA0sG,EACA5jH,MACAq2H,GAEA52H,EAAA,iWC9gGAhD,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAEA,IAAM6M,cAQJ,SAAAA,EAAYmR,gGAASC,CAAA1a,KAAAsJ,GAAA,IAAA+C,mKAAAsO,CAAA3a,MAAAsJ,EAAAsR,WAAAva,OAAAwa,eAAAvR,IAAAvJ,KAAAC,KAEbya,IAFa,OAWnBpO,EAAKkqH,oBAAsB97G,EAAQjD,UAAY,IAAAlI,EAAAxF,QAM/CuC,EAAKkjB,QAAU,IAAA2tB,EAAApzC,SACb0N,SAAUnL,EAAKkqH,oBACf5nF,OAAO,IAOTtiC,EAAK+wC,OAAS,IAAAC,EAAAvzC,SACZmN,OAAQ5K,EAAKkjB,UA3BIljB,EARjB,gUAAAwU,CAAAvX,EAAAwX,EAAAhX,SAAAiX,EAAAzX,IAAAmQ,IAAA,WAAApP,IAAA,WAiDF,OAAOrK,KAAKu2H,oBAAoB5gH,cAjD9B8D,IAAA,qBAAApP,IAAA,WA8DF,OAAOrK,KAAKu2H,uBA9DV98G,IAAA,QAAApP,IAAA,WAsEF,OAAOrK,KAAKo9C,UAtEV3jC,IAAA,SAAApP,IAAA,WAmFF,OAAOrK,KAAKuvB,QAAQ5tB,gBAnFlB2H,eAwFSA,iFC7Ff,MAAAirC,EAAA93C,EAAA,uCAEAA,EAAA,KAGA,IAAM6M,EAAU+I,QAAQD,OAAO,aAC7B,eAIF9I,EAAQiJ,MAAM,uBAMZ,SAACmrE,EAASqW,GACR,IAAMqH,EAAcrH,EAAA,qBACpB,YAAuB32F,IAAhBg+F,EAA4BA,EAC9BlqE,EAAApnB,QAASuxF,sBADP,iCA2BX/xF,EAAQqqF,WAAa,SAAS6iC,GAC5B,OACE5iC,SAAU,IACVwH,YAAao7B,EAMb3iC,KAAM,SAACC,EAAOpW,EAASqW,GACrBrW,EAAQoR,SAAS,WAKjBgF,EAAM2iC,MAAQ,SAASxsC,GACjBA,IACFA,EAAIgkB,kBACJhkB,EAAI0iB,kBAENjvB,EAAQoR,SAAS,WAInBgF,EAAM7gF,OAAO,OAAQ,SAACC,EAAQC,GAC5BuqE,EAAQg5C,IAAI,UAAWxjH,EAAS,QAAU,aAzBlD5J,EAAQqqF,4CA+BRrqF,EAAQsrF,UAAU,YAAatrF,EAAQqqF,sBAGxBrqF,oFC/Ef,MAAAirC,EAAA93C,EAAA,uBAUA,IAAM6M,EAAU,aAchBA,EAAQ/I,UAAUo2H,WAAa,SAASvzG,GAEtC,IAAMwzG,EAAU,IAAIr5H,KAAK6lB,EAAKyzG,UACxBC,EAAU,IAAIv5H,KAAK6lB,EAAK2zG,UAExBC,EAAkB5zG,EAAK6zG,YAC3B,IAAI15H,KAAK6lB,EAAK6zG,aAAeL,EACzBM,EAAkB9zG,EAAK+zG,YAC3B,IAAI55H,KAAK6lB,EAAK+zG,aAAeL,EAEzBM,EAA+B,UAAdh0G,EAAKqjD,MACzBuwD,EAAeK,UAAWH,EAAeG,WAC1CL,EAAeK,UAEjB,OACET,QAASA,EAAQS,UACjBP,QAASA,EAAQO,UACjB5nH,OAAQ2nH,IAYZ9tH,EAAQ/I,UAAUzB,WAAa,SAASw4H,GACtC,OAAO,IAAI/5H,KACT+5H,EAAU34H,iBACV24H,EAAUz4H,cACVy4H,EAAUx4H,gBAOdwK,EAAQ8I,OAASC,QAAQD,OAAO,gBACjBI,QAAQ,WAAYlJ,aAGpBA,6HCtDf,MAAAiuH,EAAA,WACAC,EAAA,QAAAz3H,KAAAC,OAUA,SAAAy3H,EAAAxgH,GACA,oBAAAA,EAAA,CACA,MAAAlL,EAAA2rH,KAAAl6H,MAAAyZ,GACA,OAAAlL,GAAsC,KACnC,cAAAkL,EACHA,EAEA,KAdA5W,OAAA6+B,EAAA,SAAA7+B,CAAAk3H,EAAAC,EAAA,SAsBAD,EAAAh3H,UAAA8D,QAAA,WACA,OAAA65G,EAAA,EAAAwZ,MAOAH,EAAAh3H,UAAAyW,YAAA,SAAAC,EAAAC,GACA,OAAAlX,KAAA23H,sBACAF,EAAAxgH,GAAAjX,KAAAwqB,eAAAvT,EAAAC,KAOAqgH,EAAAh3H,UAAAmX,aAAA,SAAAT,EAAAC,GACA,OAAAlX,KAAA43H,uBACAH,EAAAxgH,GAAAjX,KAAAwqB,eAAAvT,EAAAC,KAWAqgH,EAAAh3H,UAAAo3H,sBAAA,SAAA5rH,EAAAmL,KAUAqgH,EAAAh3H,UAAAq3H,uBAAA,SAAA7rH,EAAAmL,KAMAqgH,EAAAh3H,UAAA0X,aAAA,SAAAhB,EAAAC,GACA,OAAAlX,KAAA63H,uBACAJ,EAAAxgH,GAAAjX,KAAAwqB,eAAAvT,EAAAC,KAWAqgH,EAAAh3H,UAAAs3H,uBAAA,SAAA9rH,EAAAmL,KAMAqgH,EAAAh3H,UAAA6X,eAAA,SAAAnB,GACA,OAAAjX,KAAA83H,yBAAAL,EAAAxgH,KAUAsgH,EAAAh3H,UAAAu3H,yBAAA,SAAA/rH,KAMAwrH,EAAAh3H,UAAAiY,aAAA,SAAAC,EAAAvB,GACA,OAAAwgH,KAAAK,UAAA/3H,KAAAg4H,mBAAAv/G,EAAAvB,KAUAqgH,EAAAh3H,UAAAy3H,mBAAA,SAAAv/G,EAAAvB,KAMAqgH,EAAAh3H,UAAAqY,cAAA,SAAApB,EAAAN,GACA,OAAAwgH,KAAAK,UAAA/3H,KAAAi4H,oBAAAzgH,EAAAN,KAUAqgH,EAAAh3H,UAAA03H,oBAAA,SAAAzgH,EAAAN,KAMAqgH,EAAAh3H,UAAAuY,cAAA,SAAAC,EAAA7B,GACA,OAAAwgH,KAAAK,UAAA/3H,KAAAk4H,oBAAAn/G,EAAA7B,KAUAqgH,EAAAh3H,UAAA23H,oBAAA,SAAAn/G,EAAA7B,KACA,IAAAihH,EAAA,wEC7IA,MAAAC,EAAA,SAAAlhH,GAEA,MAAAuD,EAAAvD,MAEAihH,EAAAp4H,KAAAC,MAKAA,KAAAuY,sBAAAlY,OAAAo1B,EAAA,IAAAp1B,CACAoa,EAAAlC,sBACAkC,EAAAlC,sBAAA,aAGAkC,EAAAqd,oBACA93B,KAAAq4H,yBAAAh4H,OAAAo1B,EAAA,IAAAp1B,CAAAoa,EAAAqd,oBAQA93B,KAAA2b,cAAAlB,EAAAmB,aAOA5b,KAAAs4H,qBAAA79G,EAAA89G,qBAIAl4H,OAAA6+B,EAAA,SAAA7+B,CAAA+3H,EAAAD,GAOA,MAAAK,GACAruG,MAiEA,SAAApe,GACA,WAAAoe,EAAA,QAAApe,EAAAnM,cAjEAwqB,WAyEA,SAAAre,GACA,WAAAqe,EAAA,QAAAre,EAAAnM,cAzEAyqB,QA4GA,SAAAte,GACA,WAAAse,EAAA,QAAAte,EAAAnM,cA5GAqF,WAyFA,SAAA8G,GACA,WAAA9G,EAAA,QAAA8G,EAAAnM,cAzFAD,gBA+EA,SAAAoM,GACA,WAAApM,EAAA,QAAAoM,EAAAnM,cA/EAoG,aAgGA,SAAA+F,GACA,WAAA/F,EAAA,QAAA+F,EAAAnM,cAhGA+wE,mBA0CA,SAAA5kE,EAAAmL,GACA,MAAA+5D,EAAAllE,EAAAklE,WAAAliE,IAKA,SAAAgK,GACA,OAAAd,EAAAc,EAAA7B,KAEA,WAAAy5D,EAAA,QAAAM,KA3CAwnD,GACAtuG,MA2MA,SAAApR,EAAA7B,GACA,OACA5J,KAAA,QACA1N,YAAAmZ,EAAAlW,mBA7MAunB,WAkJA,SAAArR,EAAA7B,GACA,OACA5J,KAAA,aACA1N,YAAAmZ,EAAAlW,mBApJAwnB,QAsNA,SAAAtR,EAAA7B,GACA,IAAA69C,EACA79C,IACA69C,EAAA79C,EAAAwhH,aAEA,OACAprH,KAAA,UACA1N,YAAAmZ,EAAAlW,eAAAkyD,KA5NA9vD,WA0KA,SAAA8T,EAAA7B,GACA,OACA5J,KAAA,aACA1N,YAAAmZ,EAAAlW,mBA5KAlD,gBA4JA,SAAAoZ,EAAA7B,GACA,OACA5J,KAAA,kBACA1N,YAAAmZ,EAAAlW,mBA9JAmD,aAqLA,SAAA+S,EAAA7B,GACA,IAAA69C,EACA79C,IACA69C,EAAA79C,EAAAwhH,aAEA,OACAprH,KAAA,eACA1N,YAAAmZ,EAAAlW,eAAAkyD,KA3LA4b,mBA2HA,SAAA53D,EAAA7B,GAMA,OACA5J,KAAA,qBACA2jE,WAPAl4D,EAAA44D,qBAAA5iE,IAAA,SAAAgK,GACA,MAAA0B,EAAApa,OAAA4hC,EAAA,OAAA5hC,IAA6B6W,GAE7B,cADAuD,EAAAqd,kBACAhf,EAAAC,EAAA0B,OA9HAwqF,OA6GA,SAAAlsF,GACA,OACAzL,KAAA,qBACA2jE,iBAvGA,SAAAh5D,EAAAlM,EAAAmL,GACA,IAAAnL,EACA,YAEA,MAAA+2F,EAAA01B,EAAAzsH,EAAAuB,MACA,OACgCjN,OAAAm3H,EAAA,qBADhC,CAEA10B,EAAA/2F,IAAA,EAAAmL,GAkFA,SAAA4B,EAAAC,EAAA7B,GAEA,OAAAssF,EADAi1B,EAAA1/G,EAAA1U,YAEAhE,OAAAm3H,EAAA,qBADoD,CACpDz+G,GAAA,EAAA7B,MAoIAkhH,EAAA73H,UAAAyW,YAcAohH,EAAA73H,UAAAmX,aAMA0gH,EAAA73H,UAAAo3H,sBAAA,SAAA5rH,EAAAmL,GAIA,IAAAyhH,EAAA,KAUA,MAAA5/G,EAAAd,GARA0gH,EADA,YAAA5sH,EAAAuB,KAC+C,GAG/CA,KAAA,UACAyL,SAAqE,IAIrEA,SAAA7B,GACAuB,EAAA,IAAAiuB,EAAA,QAaA,OAZA1mC,KAAA2b,cACAlD,EAAAiP,gBAAA1nB,KAAA2b,eACG3b,KAAAs4H,2BAAAl7H,IAAAu7H,EAAAC,eACHngH,EAAAiP,gBAAAixG,EAAAC,eAEAngH,EAAAm2F,YAAA71F,QACA3b,IAAAu7H,EAAA1sG,IACAxT,EAAAkP,MAAAgxG,EAAA1sG,IAEA0sG,EAAA5lH,YACA0F,EAAAooF,cAAA83B,EAAA5lH,YAEA0F,GAOA2/G,EAAA73H,UAAAq3H,uBAAA,SAAA7rH,EAAAmL,GAGA,IAAAM,EAAA,KACA,yBAHiD,EAGjDlK,KAAA,CAGAkK,KACA,MAAAqhH,EAFA,EAEArhH,SACA,IAAAjU,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAq1H,EAAA93H,OAA4CwC,EAAAC,IAAQD,EACpDiU,EAAA1W,KAAAd,KAAA23H,sBAAAkB,EAAAt1H,GACA2T,SAGAM,GAAAxX,KAAA23H,sBAAA5rH,EAAAmL,IAEA,OAAAM,GAaA4gH,EAAA73H,UAAA0X,aAMAmgH,EAAA73H,UAAAs3H,uBAAA,SAAA9rH,EAAAmL,GACA,OAAAe,EAAiD,EAAAf,IAYjDkhH,EAAA73H,UAAA6X,eAMAggH,EAAA73H,UAAAu3H,yBAAA,SAAA/rH,GACA,MACAymD,EADiD,EACjDA,IACA,IAAAjyB,EAUA,OATAiyB,EACA,QAAAA,EAAAllD,KACAizB,EAAAlgC,OAAAo1B,EAAA,IAAAp1B,CAAAmyD,EAAAz/C,WAAA7H,MAEA7K,OAAAgjC,EAAA,EAAAhjC,EAAA,MAGAkgC,EAAAvgC,KAAAuY,sBAEuC,GAcvC6/G,EAAA73H,UAAAiY,aAYA4/G,EAAA73H,UAAAy3H,mBAAA,SAAAv/G,EAAAvB,GACAA,EAAAlX,KAAA88C,aAAA5lC,GAEA,MAAAnL,GACAuB,KAAA,WAEA2e,EAAAxT,EAAAue,aACA55B,IAAA6uB,IACAlgB,EAAAkgB,MAEA,MAAAlT,EAAAN,EAAA6sE,cAEAv5E,EAAAgN,SADAA,EACAD,EAAAC,EAAA7B,GAEA,KAEA,MAAAnE,EAAA0F,EAAA2e,gBAOA,cANArkB,EAAA0F,EAAAye,mBACA72B,OAAA4hC,EAAA,QAAA5hC,CAAA0S,GAGAhH,EAAAgH,WAAA,KAFAhH,EAAAgH,aAIAhH,GAaAqsH,EAAA73H,UAAAqY,cAYAw/G,EAAA73H,UAAA03H,oBAAA,SAAAzgH,EAAAN,GACAA,EAAAlX,KAAA88C,aAAA5lC,GACA,MAAAtL,KACA,IAAArI,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAgU,EAAAzW,OAAmCwC,EAAAC,IAAQD,EAC3CqI,EAAA9K,KAAAd,KAAAg4H,mBAAAxgH,EAAAjU,GAAA2T,IAEA,OACA5J,KAAA,oBACAkK,SAAA5L,IAcAwsH,EAAA73H,UAAAuY,cAYAs/G,EAAA73H,UAAA23H,oBAAA,SAAAn/G,EAAA7B,GACA,OAAA4B,EAAAC,EAAA/Y,KAAA88C,aAAA5lC,KAEAzX,EAAA,gGC/iBAhD,EAAA,YACAA,EAAA,KAEAq8H,EAAAr8H,EAAA,wDAKA,IAAM6M,EAAU+I,QAAQD,OAAO,mBAS/B9I,EAAQitF,SAAW,WAoBjB,OAbA,SAAkBgG,EAASmiB,EAAUqa,GAMnC,IAAMC,OAA4B57H,IAAjB27H,GAA+BlnF,EAAA/nC,QAAUmvH,WACzC,2BAAfF,EAEIG,EAAO,IAAIC,MAAM58B,IAAWjvF,KAAM0rH,KACxC,EAAAF,EAAAM,QAAOF,EAAMxa,KAMjBp1G,EAAQgrC,QAAQ,eAAgBhrC,EAAQitF,oBAGzBjtF,iFC3Cf,QAAA7M,EAAA,QACAA,EAAA,UACAA,EAAA,MACY2M,0JAAZ3M,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDAgBA,IAAM6M,EAAU,SAAS+vH,EAAkBC,EAAcpiH,GAEvD,IAAMuD,EAAUvD,MAEhB4lG,EAAAhzG,QAAuB/J,KAAKC,KAAMya,GAOlCza,KAAK4wG,iBACuBxzG,IAAxBqd,EAAQm2F,YACV5wG,KAAK4wG,YAAcn2F,EAAQm2F,aAE3B5wG,KAAK4wG,YAAcxiB,SAAS8iB,cAAc,QAC1ClxG,KAAK4wG,YAAYO,YAAc,oBAOjCnxG,KAAKs5H,aAAe9rH,EAAA1D,QAAY2D,OAAO6rH,GAMvCt5H,KAAKq5H,iBAAmB7rH,EAAA1D,QAAY2D,OAAO4rH,IAI7CjwH,EAAO2B,SAASzB,EAAhBwzG,EAAAhzG,SAMAR,EAAQ/I,UAAUixG,sBAAwB,SAASl0D,EACjDrmC,GAEA,OAAO,IAAAsiH,EAAAzvH,SACLmN,SACAqmC,WAUJh0C,EAAQ/I,UAAUmyG,cAAgB,SAASnmG,GACzC,IAAMwwC,EAAOvvC,EAAA1D,QAAY0yE,iBAAiBx8E,KAAKivG,cAAc3pB,cAAhDk0C,EAAA1vH,SACP0uB,EAAOhrB,EAAA1D,QAAY0yE,iBAAiBz/B,EAAK20B,gBAAgB,GAAlDouB,EAAAh2F,SAIbyC,EAHejD,EAAQ01G,yBACrBxmF,EAAMhrB,EAAA1D,QAAY0yE,iBAAiBx8E,KAAKm8F,SAASjtE,UAAUyS,gBAArD83F,EAAA3vH,SACN9J,KAAK6wG,SAAU7wG,KAAK8wG,UAAW9wG,KAAKq5H,iBAAkBr5H,KAAKs5H,cAC5C9gG,EAAKukF,sBAcxBzzG,EAAQ01G,yBAA2B,SACjCxmF,EAAM+H,EAAYswE,EAAUC,EAAW4oB,EAAcC,GAErD,IAAI70E,EAASx7C,EAAQswH,mBAAmBphG,EAAMq4E,EAAU8oB,GAKxD,OAHA70E,QAAeg4D,EAAAhzG,QAAuBkoG,mBACpCx5E,EAAM+H,EAAYuwE,EAAW4oB,IAajCpwH,EAAQswH,mBAAqB,SAASphG,EAAMq4E,EAAU7wF,GAEpD,OAAUA,EADK1W,EAAQuwH,UAAUrhG,GACRq4E,GAAzB,KASFvnG,EAAQuwH,UAAY,SAASrhG,GAC3B,IAAM1C,EAAS0C,EAAK31B,iBACds/F,EAAKrsE,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9BssE,EAAKtsE,EAAO,GAAG,GAAKA,EAAO,GAAG,GAGpC,OADeqsE,EAAK,EAAI,GAAK,GADjBtgG,KAAKu5D,KAAKgnC,EAAKvgG,KAAKC,KAAKqgG,EAAKA,EAAKC,EAAKA,IAE7B,IAAMvgG,KAAK00C,GAAM,eAI3BjtC,wFCxIf7M,EAAA,MACAA,EAAA,KADA,QAEAA,EAAA,QACAA,EAAA,SACAA,EAAA,MACY2M,0JAAZ3M,EAAA,QACAA,EAAA,UACAA,EAAA,wDAiBA,IAAM6M,EAAU,SAASoJ,EAAYhJ,EAAiBowH,EACpD9pG,GAAW,IAAA3jB,EAAArM,KAMXA,KAAKwK,aAAed,EAMpB1J,KAAK+5H,aAAeD,EAMpB95H,KAAKg6H,kBAELhqG,EAAU/f,sBAAsBrC,KAAK,SAACqsH,GACpC5tH,EAAK2tH,kBAAoBC,IAG3BvnH,EAAWc,IAAI,uBAAwB,SAACzE,EAAKkF,EAAUkB,GACrD9I,EAAK6tH,MAA2BnrH,EAAMoG,gJAkB1C7L,EAAQ/I,UAAU45H,YAAc,SAASlmH,EAAUlF,EAAKqrH,EAAgBC,GAItE,IAAI5tH,EAAQ,KAmBZ,YAlB+BrP,IAA3B6W,EAASrX,KAAKwO,UAA0B6I,EAASrX,KAAKg3B,MAExDnnB,EAAQzM,KAAKs6H,aAAarmH,EAAUlF,EAAKqrH,EAAgBC,QACrBj9H,IAA3B6W,EAASrX,KAAKwO,UAA0B6I,EAASX,OAAO1W,KAAKg3B,MAEtEnnB,EAAQzM,KAAKu6H,yBAAyBtmH,EAAUlF,QACZ3R,IAA3B6W,EAASrX,KAAKwO,SAEvBpL,KAAKw6H,8BAA8BvmH,EAAUlF,GACjB,IAAnBkF,EAASL,OAAgBK,EAASrX,KAAKg3B,QAEhDnnB,EAAQzM,KAAKs6H,aAAarmH,EAAUlF,EAAKqrH,EAAgBC,IAGvD5tH,GAASwH,EAASrX,KAAK+P,SAAS80E,SAClCh1E,EAAMuwE,WAAW/oE,EAASrX,KAAK+P,SAAS80E,SAGnCh1E,GAWTnD,EAAQ/I,UAAU25H,MAAQ,SAASnrH,EAAKkF,GAAU,IAAA7D,EAAApQ,KAChDiU,EAASqC,mBAAmB,SAACrC,GACvBA,EAASxH,QAAUwH,EAASrX,KAAKg3B,OACnCxjB,EAAKqqH,kBAA6DxmH,EAASxH,MAAQwH,MAYzF3K,EAAQ/I,UAAUk6H,kBAAoB,SAAShuH,EAAOwH,GACpD,IAAMwP,EAAiC,OAAxBxP,EAASU,WACxB,GAA2B,SAAvBV,EAASrX,KAAK0Q,KAChBb,EAAMsf,WAAWtI,QACZ,GAAKxP,EAASrX,KAAKg3B,OAA4B,IAAnB3f,EAASL,MAoB1CpG,EAAA1D,QAAY0yE,iBAAiB/vE,EAA7Bof,EAAA/hB,SACA2C,EAAMsf,WAAWtI,OArBsC,CAEvDjW,EAAA1D,QAAY0yE,iBAAiB/vE,EAA7Bof,EAAA/hB,SACA,IAAM8lB,KACN3b,EAASqC,mBAAmB,SAACrC,QACI7W,IAA3B6W,EAASrX,KAAKwO,UAAkD,OAAxB6I,EAASU,YACnDib,EAAM9uB,KAAKmT,EAASrX,KAAK4R,UAGR,IAAjBohB,EAAM7uB,QACR0L,EAAMsf,YAAW,GAEgBtf,EAAM+iB,YAAanV,cACpDkR,OAAUqE,EAAM3gB,UAAUwC,KAAK,OAEZ,IAAjBme,EAAM7uB,QACR0L,EAAMsf,YAAW,KAwBvBziB,EAAQ/I,UAAU+5H,aAAe,SAASrmH,EAAUlF,EAClDqrH,EAAgBC,GAChB,IAAMK,EAA+CzmH,EAASrX,KAC1D6P,EAAQ,KAGZ,GAF0BwH,EAASX,OAAOV,OAEnB,CACrBnG,EAAQzM,KAAK26H,sBAAsB1mH,IAAYymH,EAAU9mG,OAEzD,IAAM+wD,EAA0B,EAAf01C,EACjBD,EAAe1kH,YAAYklH,SAASj2C,EAAUl4E,OAEzC,CAEL,IADuBzM,KAAK66H,qBAAqB5mH,GAE/CxH,EAAQzM,KAAK26H,sBAAsB1mH,GAAU,GAE3C3K,EAAQw0C,SAAS7pC,EAASX,QACjBoC,YAAYklH,SAAS,EAAGnuH,GAGvC,OAAOA,GAYTnD,EAAQ/I,UAAUo6H,sBAAwB,SAAS1mH,EACjD2f,GAAO,IAAA1iB,EAAAlR,KACHyM,SACEiuH,EAA+CzmH,EAASrX,KAC9D,GAAIg3B,EACFnnB,EAAQzM,KAAKwK,aAAa+E,uBACrB,CACL,IAAMurH,EAAY96H,KAAK+6H,cAAc9mH,GAC/B7F,EAAYpO,KAAKg6H,kBAAkBU,EAAUtsH,WAAa,IAChEZ,EAAA1D,QAAY2D,OAAOW,GACnBZ,EAAA1D,QAAY2D,OAAOW,EAAUV,KAC7BF,EAAA1D,QAAY2D,OAAOW,EAAUd,MAC7BE,EAAA1D,QAAY2D,OAAOW,EAAUE,WAC7B7B,EAAQzM,KAAKwK,aAAa+D,oBACxBH,EAAUV,IACV,GACAU,EAAUE,UACVF,EAAUd,KACVwtH,OACA19H,EACAgR,EAAUK,WAAa,kBAAoB,aAE7C,IAAIusH,GAAoB,EACxB/mH,EAASqC,mBAAmB,SAAC6qE,GAE3BjwE,EAAK+pH,uBAAwD95C,EAAKvkF,KAAO6P,GACrE00E,EAAKvkF,KAAK+P,SAASymB,YACrB+tD,EAAKvsE,SAAS,MAAM,GACpB1D,EAAKupH,kBAAiDhuH,EAAQ00E,GAC9D65C,GAAoB,KAGxBvuH,EAAMsf,WAAWivG,GACjBvuH,EAAMC,IAAI,gBAAiBguH,EAAUxvH,MAEvC,OAAOuB,GAWTnD,EAAQ/I,UAAUg6H,yBAA2B,SAAStmH,EAAUlF,GAC9D,IAAM1B,EAA8C4G,EAASrX,KACzD6P,SAEJ,GAAsB,SAAlBY,EAASC,KACXb,EAAQzM,KAAKk7H,iBAAsD7tH,OAC9D,CACL,IAAMc,EAAkDd,EAClDytH,EAAY96H,KAAK+6H,cAAc9mH,GAC/B7F,EAAYpO,KAAKg6H,kBAAuC7rH,EAAYC,WAC1EZ,EAAA1D,QAAY2D,OAAOW,GACnBZ,EAAA1D,QAAY2D,OAAOW,EAAUV,KAC7BF,EAAA1D,QAAY2D,OAAOW,EAAUd,MAC7BE,EAAA1D,QAAY2D,OAAOU,EAAYK,QAC/BhB,EAAA1D,QAAY2D,OAAOW,EAAUE,WAC7B7B,EAAQzM,KAAKwK,aAAa+D,oBACxBH,EAAUV,IACVS,EAAYK,OACZJ,EAAUE,UACVF,EAAUd,KACVwtH,OACA19H,EACAgR,EAAUK,WAAa,kBAAoB,aAI/ChC,EAAMC,IAAI,gBAAiBW,EAASnC,MACpClL,KAAKi7H,uBAAuB5tH,EAAUZ,GACtC,IAAM0uH,GAA0C,IAAhC9tH,EAASV,SAASymB,UASlC,OARI+nG,GACFlnH,EAASW,SAAS,MAAM,GAE1BnI,EAAMsf,WAAWovG,GAGf7xH,EAAQw0C,SAAS7pC,EAASX,QACjBoC,YAAYklH,SAAS,EAAGnuH,GAC5BA,GAYTnD,EAAQ/I,UAAUi6H,8BAAgC,SAASvmH,EAAUlF,GACnE,IAAMqsH,EAA8CnnH,EAASrX,KACvDy+H,EAAkBr7H,KAAKs7H,wBAAwBrnH,GACrDzG,EAAA1D,QAAY2D,OAAO4tH,GACnB,IAAM5uH,EAAuC4uH,EAAgB5uH,MAC7De,EAAA1D,QAAY0yE,iBAAiB/vE,EAA7Bof,EAAA/hB,SAEA9J,KAAKi7H,uBAAuBG,EAAU3uH,GAClC2uH,EAASzuH,SAASymB,WACpBnf,EAASW,SAAS,MAAM,GACxB5U,KAAKy6H,kBAAkBhuH,EAAO4uH,IAE9BpnH,EAASX,OAAO0B,gBAYpB1L,EAAQ/I,UAAU26H,iBAAmB,SAAS3tH,GAC5C,IAAMguH,EAAW,IAAA5rH,EAAA7F,QAQjB,OAPA0D,EAAA1D,QAAY2D,OAAOF,EAAaG,KAChCF,EAAA1D,QAAY2D,OAAOF,EAAad,OAChCzM,KAAKwK,aAAamD,iCAAiCJ,EAAaG,IAC9DH,EAAad,MAAOc,EAAaX,YAAYgB,KAAK,SAACnB,GACnD8uH,EAASxuG,UAAUtgB,EAAM+iB,aACzB+rG,EAAS7uH,IAAI,qBAAsBD,EAAMpC,IAAI,yBAExCkxH,GAUTjyH,EAAQ/I,UAAU06H,uBAAyB,SAASG,EAAU3uH,GAC5D,IAAMwf,EAAK7iB,EAAO4D,OAAOouH,GACnBI,EAAiB/uH,EAAMpC,IAAI,sBAKjC,GAJAmxH,EAAe16H,KAAKmrB,GACpBxf,EAAMC,IAAI,iBAAkB8uH,GAETJ,EAASzuH,SAAS8uH,WACrB,CACd,IAAMC,EAAcjvH,EAAMpC,IAAI,mBAC9BqxH,EAAY56H,KAAKs6H,EAASzuH,SAAS8uH,YACnChvH,EAAMC,IAAI,cAAegvH,KAY7BpyH,EAAQ/I,UAAUw6H,cAAgB,SAAS9mH,GACzC,IAAI0nH,SACAb,SACEl+H,EAAOqX,EAASrX,KAWtB,GAVIA,EAAKwmB,KACPu4G,EAAU/+H,EAAKwmB,KACNxmB,EAAKwO,UACd6I,EAASqC,mBAAmB,SAACrC,GAC3B,QAA+B7W,IAA3B6W,EAASrX,KAAKwO,UAA0B6I,EAASrX,KAAKwmB,KAExD,OADAu4G,EAAU1nH,EAASrX,KAAKwmB,KACjBwP,EAAA9oB,QAAwBoM,gBAAgBC,OAIjDwlH,EAAS,CACX,IAAMC,EAAa57H,KAAK+5H,aAAapD,WAAWgF,GAA7B,OACnBb,EAAY96H,KAAK+5H,aAAa9jC,mBAAmB0lC,GAC/Cn4G,MAAOo4G,EAAW,IAAMA,EACxBl4H,IAAKk4H,EAAW,KAGpB,OAAOd,GAUTxxH,EAAQ/I,UAAUs6H,qBAAuB,SAAS5mH,GAChD,IAAIgC,EAAOhC,EAASX,OAChBuoH,GAAoB,EACxB,GACEA,GAAwC,IAApB5lH,EAAKrZ,KAAKg3B,MAC9B3d,EAAOA,EAAK3C,aAEP2C,EAAK3C,SAAWuoH,GACvB,OAAOA,GAUTvyH,EAAQ/I,UAAU+6H,wBAA0B,SAC1CrnH,GAEA,IADA,IAAIgC,EAAOhC,GACHgC,EAAK3C,OAAOV,QAClBqD,EAAOA,EAAK3C,OAEd,OAAO2C,GAUT3M,EAAQw0C,SAAW,SAAS7pC,GAG1B,IAFA,IAAIgC,EAAOhC,EACPxH,EAAQ,MACJwJ,EAAKrD,QAAoB,OAAVnG,GACjBwJ,EAAKxJ,QACPA,EAAQwJ,EAAKxJ,OAEfwJ,EAAOA,EAAK3C,OAEd,OAAO7G,IAOTnD,EAAQ8I,OAASC,QAAQD,OAAO,uBAC9BwgB,EAAA9oB,QAAwBsI,OAAOlH,KAC/B4wH,EAAAhyH,QAAgBsI,OAAOlH,QAEVsH,QAAQ,sBAAuBlJ,aAG/BA,oBC7bf,IAAAyyH,EAeA3C,KAAA,SAAA/zC,GACA,aAEA,cAAAA,GAAA,oBAAA/pD,WAAA,eAAApX,KAAAoX,UAAAC,YAAA,CAGA,IACAhkB,EAAA8tE,EAAA+I,SAEA4tC,EAAA,WACA,OAAA32C,EAAAqjC,KAAArjC,EAAA42C,WAAA52C,GAEA62C,EAAA3kH,EAAAuf,gBAAA,oCACAqlG,EAAA,aAAAD,EAKAE,EAAA,eAAAl4G,KAAAmhE,EAAAg3C,cAAAh3C,EAAAi3C,OACAC,EAAA,eAAAr4G,KAAAoX,UAAAC,WACAihG,EAAA,SAAAC,IACAp3C,EAAAq3C,cAAAr3C,EAAAiX,YAAA,WACA,MAAAmgC,GACI,IAKJE,EAAA,SAAAC,GAQAtgC,WAPA,WACA,iBAAAsgC,EACAZ,IAAAa,gBAAAD,GAEAA,EAAAjvF,UANA,MAyBAmvF,EAAA,SAAA5D,GAGA,mFAA4Dh1G,KAAAg1G,EAAA5rH,MAC5D,IAAA6rH,MAAA9mF,OAAAmkB,aAAA,OAAA0iE,IAA0D5rH,KAAA4rH,EAAA5rH,OAE1D4rH,GAEA6D,EAAA,SAAA7D,EAAAhuH,EAAA8xH,GACAA,IACA9D,EAAA4D,EAAA5D,IAGA,IAIA+D,EAHAC,EAAAl9H,KAEAm9H,EA3CA,6BA0CAjE,EAAA5rH,KAGA8vH,EAAA,YAhCA,SAAAF,EAAAG,EAAA9gG,GAGA,IADA,IAAAh5B,GADA85H,KAAA3tC,OAAA2tC,IACAt8H,OACAwC,KAAA,CACA,IAAA+5H,EAAAJ,EAAA,KAAAG,EAAA95H,IACA,sBAAA+5H,EACA,IACAA,EAAAv9H,KAAAm9H,EAAA3gG,GAAA2gG,GACM,MAAAT,GACND,EAAAC,KAwBAc,CAAAL,EAAA,qCAAA92G,MAAA,OAuCA,GAFA82G,EAAAM,WAAAN,EAAAO,KAEAtB,EAUA,OATAc,EAAAjB,IAAA0B,gBAAAxE,QACA58B,WAAA,WAlGA,IAAA1/F,EACA2/B,EAkGA2/F,EAAA9mD,KAAA6nD,EACAf,EAAAyB,SAAAzyH,EApGAtO,EAqGAs/H,EApGA3/F,EAAA,IAAAqhG,WAAA,SACAhhI,EAAAiV,cAAA0qB,GAoGA6gG,IACAT,EAAAM,GACAC,EAAAM,WAAAN,EAAAW,QA5CA,WACA,IAAAtB,GAAAY,GAAAf,IAAA/2C,EAAAy4C,WAAA,CAEA,IAAAC,EAAA,IAAAD,WAWA,OAVAC,EAAAC,UAAA,WACA,IAAAtwH,EAAA6uH,EAAAwB,EAAAtxG,OAAAsxG,EAAAtxG,OAAAhB,QAAA,eAAoF,yBACpF45D,EAAA0qC,KAAAriH,EAAA,YACA23E,EAAAp0C,SAAAmkC,KAAA1nE,GACAA,OAAAtQ,EACA8/H,EAAAM,WAAAN,EAAAW,KACAT,KAEAW,EAAAE,cAAA/E,QACAgE,EAAAM,WAAAN,EAAAO,MAIAR,IACAA,EAAAjB,IAAA0B,gBAAAxE,IAEAiE,EACA93C,EAAAp0C,SAAAmkC,KAAA6nD,EAEA53C,EAAA0qC,KAAAkN,EAAA,YAGA53C,EAAAp0C,SAAAmkC,KAAA6nD,GAGAC,EAAAM,WAAAN,EAAAW,KACAT,IACAT,EAAAM,GAkBAiB,IAEAC,EAAApB,EAAAx8H,UAMA,0BAAA+6B,qBAAA8iG,iBACA,SAAAlF,EAAAhuH,EAAA8xH,GAMA,OALA9xH,KAAAguH,EAAAhuH,MAAA,WAEA8xH,IACA9D,EAAA4D,EAAA5D,IAEA59F,UAAA8iG,iBAAAlF,EAAAhuH,KAIAizH,EAAAE,MAAA,aACAF,EAAAX,WAAAW,EAAAV,KAAA,EACAU,EAAAG,QAAA,EACAH,EAAAN,KAAA,EAEAM,EAAAlwH,MACAkwH,EAAAI,aACAJ,EAAAK,WACAL,EAAAM,QACAN,EAAAO,QACAP,EAAAQ,QACAR,EAAAS,WACA,KA5BA,SAAA1F,EAAAhuH,EAAA8xH,GACA,WAAAD,EAAA7D,EAAAhuH,GAAAguH,EAAAhuH,MAAA,WAAA8xH,MA/HA,CA8JA,oBAAA96E,YACA,oBAAAvwC,gBACA3R,KAAAu8F,cAMA,IAAAnqF,KAAA9I,QACA8I,EAAA9I,QAAA8vH,SACC,OAAA38H,EAAA,aAAAA,EAAA,YAGEW,KAFH2+H,EAAA,WACA,OAAA3C,GACGr5H,KAAAuJ,EAAA7M,EAAA6M,EAAA8I,QAAA9I,QAAAyyH,mBC1LH3pH,EAAA9I,QAAA,WACA,UAAAuyB,MAAA,mDCDA,SAAAgjG,GACAzsH,EAAA9I,QAAAu1H,8FCEA,IAAMv1H,eAiBSA,iFCjBf,QAAA7M,EAAA,SACAA,EAAA,MAOAA,EAAA,0DAsBA,IAAM6M,EAAU,SAASw1H,EAAUpsH,EAAYwnG,EAAMpqF,GAAU,IAAAzjB,EAAArM,KAO7DA,KAAK8zF,MAAQphF,EAAWqsH,MAAK,GAG7B/+H,KAAK8zF,MAAM7gF,OACT,kBAAM5G,EAAKynF,MAAL,MACN,SAACi8B,IACMA,GAAQ1jH,EAAK2yH,cAChB3yH,EAAK6hF,SAAS,WACZ7hF,EAAK4yH,cAUbj/H,KAAKk/H,KAAOhlB,EAMZl6G,KAAKkuF,SAAWp+D,EAOhB9vB,KAAKm/H,SAAW9sH,QAAQqrE,QAAQ,0BAMhC19E,KAAKg/H,cAAe,EAIpBF,EAAS9+H,KAAKm/H,SAAdL,CAAwB9+H,KAAK8zF,OAC7BzhF,QAAQqrE,QAAQ0Q,SAASC,MAAMC,OAAOtuF,KAAKm/H,WAS7C71H,EAAQ/I,UAAU6+H,QAAU,WAC1B,OAAOp/H,KAAK8zF,MAAL,MASTxqF,EAAQ/I,UAAU8+H,QAAU,SAAStP,GACnC/vH,KAAK8zF,MAAL,KAAqBi8B,GAQvBzmH,EAAQ/I,UAAU0+H,QAAU,WAC1Bj/H,KAAK8zF,MAAMwrC,WACXt/H,KAAKm/H,SAASxxF,UAShBrkC,EAAQ/I,UAAUg/H,SAAW,SAASjyF,GACpC,IAAMkyF,EAAex/H,KAAKk/H,KAAK/kB,YAAY7sE,GAC3CttC,KAAK8zF,MAAL,MAAsB0rC,GAaxBl2H,EAAQ/I,UAAUk/H,WAAa,SAASljC,EAASmjC,GAC/C1/H,KAAK8zF,MAAL,QAAwB4rC,EAAc1/H,KAAKk/H,KAAK/kB,YAAmC5d,GAAYA,GASjGjzF,EAAQ/I,UAAUujC,OAAS,SAASp2B,GAClC,IAAM6uF,EAAUv8F,KAAKk/H,KAAK/kB,YAAV,gBACEzsG,EADF,0CAGhB1N,KAAKy/H,WAAWljC,IASlBjzF,EAAQ/I,UAAUo/H,SAAW,SAAS9/C,GACpC7/E,KAAKm/H,SAASt/C,MAAMA,IAStBv2E,EAAQ/I,UAAUq/H,UAAY,SAASpgG,GACrCx/B,KAAKm/H,SAAS3/F,OAAOA,IAUvBl2B,EAAQ/I,UAAUs/H,QAAU,SAAShgD,EAAOrgD,GAC1Cx/B,KAAK2/H,SAAS9/C,GACd7/E,KAAK4/H,UAAUpgG,IAUjBl2B,EAAQ/I,UAAUu/H,eAAiB,SAASC,GAC1C//H,KAAKg/H,aAAee,GAStBz2H,EAAQ/I,UAAUuuF,SAAW,SAASkxC,GACpChgI,KAAKm/H,SAASrwC,SAASkxC,IASzB12H,EAAQ/I,UAAUwvH,KAAO,SAASt1G,GAE5BA,EAAQ/M,IACV1N,KAAK8jC,OAAOrpB,EAAQ/M,KACX+M,EAAQ8hF,QACjBv8F,KAAKy/H,WAAWhlH,EAAQ8hF,SAExB/uF,EAAA1D,QAAY4E,KAAK,iEAGStR,IAAxBqd,EAAQslH,aACV//H,KAAK8/H,eAAerlH,EAAQslH,kBAGV3iI,IAAhBqd,EAAQulH,KACVhgI,KAAK8uF,SAASr0E,EAAQulH,UAGD5iI,IAAnBqd,EAAQ+kB,QACVx/B,KAAK4/H,UAAUnlH,EAAQ+kB,aAGHpiC,IAAlBqd,EAAQ6yB,OACVttC,KAAKu/H,SAAS9kH,EAAQ6yB,YAGFlwC,IAAlBqd,EAAQolE,OACV7/E,KAAK2/H,SAASllH,EAAQolE,OAGxB7/E,KAAKq/H,SAAQ,KAYf/1H,EAAQ22H,QAAU,SAASnB,EAAUpsH,EAAYwnG,EAAMpqF,GACrD,kBAKI,OAAO,IAAIxmB,EAAQw1H,EAAUpsH,EAAYwnG,EAAMpqF,2DAQrDxmB,EAAQ8I,OAASC,QAAQD,OAAO,mBAC9B8tH,EAAAp2H,QAA0BoB,QAEbopC,QAAQ,kBAAmBhrC,EAAQ22H,mBAGnC32H,gVC5Qf7M,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,KACY2M,0JAAZ3M,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDAEA,IAAM6M,aAmBJ,SAAAA,EAAYK,EAAgBH,EAAWC,EAAIiJ,EAAYytH,EACrDC,EAAU12H,gGAAiBgR,CAAA1a,KAAAsJ,GAQ3BtJ,KAAKqgI,UAAY72H,EAMjBxJ,KAAK89E,GAAKr0E,EAMVzJ,KAAK8S,WAAaJ,EAQlB1S,KAAKsgI,aAAeH,EAAgBhxH,WAMpCnP,KAAKugI,UAAYH,EAMjBpgI,KAAKivF,iBAAmBvlF,EAgBxB1J,KAAKwgI,mBAOLxgI,KAAKygI,UAMLzgI,KAAKm/E,KAAO,KAOZn/E,KAAK0gI,WAAa,IAAAC,EAAA72H,SAChBsjC,eACA4hD,SAAUhvF,KAAKqgI,UACf/yF,MAAO3jC,EAAe+F,UAAU,iBAQlC1P,KAAK4gI,qBAAuB,IAAAtxH,EAAAxF,QAO5B9J,KAAK6gI,sBAAwB,IAAAvxH,EAAAxF,QAQ7B9J,KAAK8gI,cAELzsH,EAAAvK,QAASwK,OAAOtU,KAAKsgI,aAAc,SAAUtgI,KAAK+gI,yBAA0B/gI,MA5H1E,OAAAsJ,EAAA03H,SAAA,+FAAAjgH,EAAAzX,IAAAmQ,IAAA,eAAAlH,MAAA,SAiJSmwE,GACX1iF,KAAKqiF,oBAAoBvhF,KAAK4hF,MAlJ5BjpE,IAAA,kBAAAlH,MAAA,SAyJYmwE,GACd1iF,KAAKqiF,oBAAoB10C,OAAO+0C,MA1J9BjpE,IAAA,cAAAlH,MAAA,SAiKQ7E,GACV,IAAIsgB,EAAQ,KADG7O,GAAA,EAAAC,GAAA,EAAAC,OAAAjiB,EAAA,IAEf,QAAAkiB,EAAAC,EAAuBvf,KAAKyiF,UAA5BjjE,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAuC,KAA5BujE,EAA4BpjE,EAAA/M,MACrC,GAAImwE,EAASh1E,MAAQA,EAAK,CACxBsgB,EAAQ00D,EACR,QALW,MAAA3oE,GAAAqF,GAAA,EAAAC,EAAAtF,EAAA,aAAAoF,GAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,GAQf,OAAO2O,KAzKLvU,IAAA,gBAAAlH,MAAA,SAoMUswE,GACZ7iF,KAAKwiF,qBAAqB1hF,KAAK+hF,MArM7BppE,IAAA,mBAAAlH,MAAA,SA4MaswE,GACf7iF,KAAKwiF,qBAAqB70C,OAAOk1C,MA7M/BppE,IAAA,eAAAlH,MAAA,SAoNS7E,GACX,IAAIsgB,EAAQ,KADIrM,GAAA,EAAAC,GAAA,EAAAC,OAAAzkB,EAAA,IAEhB,QAAA0kB,EAAAC,EAAwB/hB,KAAK4iF,WAA7BpjE,OAAAC,cAAAkC,GAAAG,EAAAC,EAAArC,QAAAC,MAAAgC,GAAA,EAAyC,KAA9BkhE,EAA8B/gE,EAAAvP,MACvC,GAAIswE,EAAUn1E,MAAQA,EAAK,CACzBsgB,EAAQ60D,EACR,QALY,MAAA9oE,GAAA6H,GAAA,EAAAC,EAAA9H,EAAA,aAAA4H,GAAAI,EAAAlC,QAAAkC,EAAAlC,SAAA,WAAA+B,EAAA,MAAAC,GAQhB,OAAOmM,KA5NLvU,IAAA,uBAAAlH,MAAA,SA0PiByD,GACnB,QAAShW,KAAKwgI,gBAAgBxqH,EAAWiW,OA3PvCxS,IAAA,YAAAlH,MAAA,SAsRM9F,GACRzM,KAAKihI,WAAWvrH,YAAY5U,KAAK2L,MAvR/BgN,IAAA,eAAAlH,MAAA,SA8RS9F,GACXzM,KAAKihI,WAAWvrH,YAAYi4B,OAAOlhC,MA/RjCgN,IAAA,0CAAAlH,MAAA,SAwSoC9F,EAAOygB,EAAcxf,GAE3D,IAAMue,EAAK3iB,EAAQ0tB,MAAMvqB,GACnB+F,EAAU0a,EAAA,QAEZlX,SAGJ,GAAIhW,KAAKwgI,gBAAgBv0G,GACvBjW,EAAahW,KAAKwgI,gBAAgBv0G,OAC7B,CACL,IAAMi1G,EAAMh0G,EAAA,mBAGN+qF,EAAUipB,EAAA,cAEVnlH,EAAek8F,EAAQ5kF,SADR,yBAEJ4kF,EAAQ,GAInB15F,EADc2iH,EAAA,sBACc7tG,SAChC61D,EAAAp/E,QAAkB0U,cAAcC,KAC9ByqE,EAAAp/E,QAAkB0U,cAAcC,SAAMrhB,EAGpC8hB,GAAmC,IAAvBzS,EAAA,gBACIrP,IAAlBmhB,EAIJvI,EAAa,IAAAkzE,EAAAp/E,SACXmiB,GAAIA,EACJ/gB,KAAMuB,EAAA,MACNsP,aAAcA,EACdE,YACE/Q,KAAMuB,EAAA,KACNyS,UAAWA,IAEb3C,QAAS2sE,EAAAp/E,QAAkB0S,KAAKrK,IAChC6Z,SAAS,EACTzN,cAAeA,EACfM,OAAQnR,IAIV1N,KAAKwgI,gBAAgBv0G,GAAMjW,EAO7B,IAAI0sE,EAAW1iF,KAAKmhI,YAAYzzH,GAC5Bg1E,EACGA,EAASt1C,YAAY/Z,SAASrd,KACjC0sE,EAAS0+C,cAAcprH,GACvBhW,KAAKsgI,aAAax/H,KAAKkV,KAGzB0sE,EAAW,IAAA2+C,EAAAv3H,SACTsjC,aAAcp3B,GACdg5E,SAAUhvF,KAAKqgI,UACf/yF,MAAO96B,EAAA,MACP9E,IAAKA,IAEP1N,KAAKshI,UAAU5+C,EAASj2E,OACxBzM,KAAKuhI,aAAa7+C,GAClB1iF,KAAKsgI,aAAax/H,KAAKkV,OA5WvByD,IAAA,2CAAAlH,MAAA,SAsXqC9F,EAAOygB,EAAcjO,GAC5D,IAAMgN,EAAK3iB,EAAQ0tB,MAAMvqB,GAIzB,IAAIzM,KAAK8gI,WAAW70G,GAApB,CAIA,IAAIjW,SAGJ,GAAIhW,KAAKwgI,gBAAgBv0G,GACvBjW,EAAahW,KAAKwgI,gBAAgBv0G,OAC7B,CAEL,IAAM/gB,EAAOsC,EAAA1D,QAAYkK,aAAavH,EAAA,OAChCsS,EAAYvR,EAAA1D,QAAYkK,aAAavH,EAAA,YAI3CuJ,EAAa,IAAAkzE,EAAAp/E,SACXmiB,GAAIA,EACJ/gB,KAAMA,EACNqR,QAAS2sE,EAAAp/E,QAAkB0S,KAAKtK,KAChC8Z,SAAS,EACTjN,UAAWA,EACXE,QAASA,IAIXjf,KAAKwgI,gBAAgBv0G,GAAMjW,EAI7B,IAAI6sE,EAAY7iF,KAAKwhI,aAAaviH,GAC7B4jE,IACHA,EAAY,IAAAuM,EAAAtlF,SACVsjC,eACAE,MAAOpgB,EAAA,4BACPxf,IAAKuR,IAEPjf,KAAKyhI,cAAc5+C,IAErBA,EAAUu+C,cAAcprH,GAGxB,IAAM0rH,EAAW1hI,KAAKivF,iBAAiBhiE,oCACrCC,EACAzgB,GAEFzM,KAAKshI,UAAUI,GAGf1hI,KAAKsgI,aAAax/H,KAAKkV,GAGvBhW,KAAK8gI,WAAW70G,IACdy1G,SAAUA,EAGV/xC,WAAY3vF,KAAK8S,WAAWG,OAC1B,kBAAM+C,EAAWgW,SACjBhsB,KAAK2hI,mCAAmC9zH,KAAK7N,KAAM0hI,SArbrDjoH,IAAA,iCAAAlH,MAAA,SA8b2BqqH,GAAM,IAAAvwH,EAAArM,KACnCA,KAAK4hI,mBAAmBhF,GAAMhvH,KAC5B,SAACoI,GACC,IAAM6rH,EAAYx1H,EAAKq0H,WAGnBmB,EAAUz0F,YAAY/Z,SAASrd,KAMnC3J,EAAKi1H,UAAUtrH,EAAWvJ,OAG1Bo1H,EAAUT,cAAcprH,GAGxB3J,EAAK8yE,KAAKjwD,UAAUs2D,IAAIxvE,EAAWvR,QAGnC4H,EAAKi0H,aAAax/H,KAAKkV,KAEzB,SAACg0E,GACCx8E,EAAA1D,QAAY4E,KAAZ,wBAAyCkuH,EAAK1xH,WAtdhDuO,IAAA,qBAAAlH,MAAA,SAieeqqH,GAAM,IAAAxsH,EAAApQ,KAEjB0K,EAAQ1K,KAAK89E,GAAGpzE,QAEtB,GAAI1K,KAAKygI,OAAO7D,EAAK1xH,MACnBR,EAAMwD,QAAQlO,KAAKygI,OAAO7D,EAAK1xH,WAC1B,CACL,IAAMk1H,EAAWpgI,KAAKugI,UACtBH,EAAS1zG,KAAKkwG,GAAMhvH,KAAK,SAAC2uF,GACxB,IAAI/kF,SACEsqH,GACJhqG,kBAAmB1nB,EAAK+uE,KAAKjwD,UAAUyS,iBASzC,GANIy+F,EAAS2B,MAAMxlC,GACjB/kF,GAAW,IAAAinG,EAAA30G,SAAkB4N,aAAa6kF,EAASulC,GAC1C1B,EAAS4B,MAAMzlC,KACxB/kF,GAAW,IAAA+mG,EAAAz0G,SAAkB4N,aAAa6kF,EAASulC,IAGjDtqH,EAAU,CACZ,IAAMyU,EAAK3iB,EAAQ0tB,MAAM4lG,GAEnB5mH,EAAa,IAAAisH,EAAAn4H,SACjB0N,SAAU,IAAAlI,EAAAxF,QAAiB0N,GAC3ByU,GAAIA,EACJ/gB,KAAM0xH,EAAK1xH,KACX8gB,SAAS,IAIX5b,EAAKqwH,OAAO7D,EAAK1xH,MAAQ8K,EACzB5F,EAAKowH,gBAAgBv0G,GAAMjW,EAE3BtL,EAAMwD,QAAQ8H,QAEdtL,EAAMoH,WAKZ,OAAOpH,EAAME,WA1gBX6O,IAAA,qCAAAlH,MAAA,SAmhB+B9F,EAAO8F,EAAOk9E,QACjCryF,IAAVmV,GAAuBA,IAAUk9E,GACnChjF,EAAMsf,WAAWxZ,MArhBjBkH,IAAA,2BAAAlH,MAAA,SAgiBqB03E,GACvB,IAAMj0E,EAAai0E,EAAIvM,QACnB19E,KAAKwgI,gBAAgBxqH,EAAWiW,MAAQjW,IACtCA,uBACFhW,KAAKkiI,sBAAsBlsH,GAClBA,wBACThW,KAAKmiI,qBAAqBnsH,OAtiB5ByD,IAAA,wBAAAlH,MAAA,SAojBkByD,GACpBhW,KAAKoiI,aAAapsH,EAAWvJ,OAC7BzM,KAAK0gI,WAAW2B,iBAAiBrsH,MAtjB/ByD,IAAA,uBAAAlH,MAAA,SAokBiByD,GACnB,GAAIA,EAAWuG,UAAY2sE,EAAAp/E,QAAkB0S,KAAKrK,IAAK,CAErD,IAAMzE,EAAMsI,EAAW6I,OACvBrR,EAAA1D,QAAY2D,OAAOC,GAEnB,IAAMg1E,EAAW1iF,KAAKmhI,YAAYzzH,GAC9Bg1E,GAAYA,EAASt1C,YAAY/Z,SAASrd,KAE5C0sE,EAAS2/C,iBAAiBrsH,GAIrB0sE,EAASt1C,YAAYrsC,SACxBf,KAAKoiI,aAAa1/C,EAASj2E,OAC3Bi2E,EAASu8C,UACTj/H,KAAKsiI,gBAAgB5/C,UAGpB,GAAI1sE,EAAWuG,UAAY2sE,EAAAp/E,QAAkB0S,KAAKtK,KAAM,CAE7D,IAAMxE,EAAMsI,EAAWiJ,QACvBzR,EAAA1D,QAAY2D,OAAOC,GAEnB,IAAMm1E,EAAY7iF,KAAKwhI,aAAa9zH,GACpC,GAAIm1E,GAAaA,EAAUz1C,YAAY/Z,SAASrd,GAAa,CAE3D6sE,EAAUw/C,iBAAiBrsH,GAI3B,IAAMiW,EAAKjW,EAAWiW,GACtBjsB,KAAKoiI,aAAapiI,KAAK8gI,WAAW70G,GAAIy1G,UACtC1hI,KAAK8gI,WAAW70G,GAAI0jE,oBACb3vF,KAAK8gI,WAAW70G,GAIlB42D,EAAUz1C,YAAYrsC,SACzB8hF,EAAUo8C,UACVj/H,KAAKuiI,iBAAiB1/C,SA5mB1BppE,IAAA,YAAApP,IAAA,WAuIF,OAAOrK,KAAK0gI,cAvIVjnH,IAAA,YAAApP,IAAA,WAiLF,OAAOrK,KAAK4gI,qBAAqBjrH,cAjL/B8D,IAAA,sBAAApP,IAAA,WA0LF,OAAOrK,KAAK4gI,wBA1LVnnH,IAAA,aAAApP,IAAA,WAqOF,OAAOrK,KAAK6gI,sBAAsBlrH,cArOhC8D,IAAA,uBAAApP,IAAA,WA8OF,OAAOrK,KAAK6gI,yBA9OVpnH,IAAA,aAAApP,IAAA,WAmQF,IAAM0E,EAAM/O,KAAKm/E,KAEjB,OADA3xE,EAAA1D,QAAY2D,OAAOsB,GACZ/O,KAAKivF,iBAAiBzhE,gBAC3Bze,EACAmiB,EAAApnB,QAAQ04H,4BAvQR/oH,IAAA,MAAA/M,IAAA,SA8QIqC,GACN/O,KAAKm/E,KAAOpwE,MA/QVzF,KAioBNA,EAAQ0tB,MAAQ,SAASvqB,GACvB,OAAOrD,EAAO4D,OAAOP,GAAS,KAIhCnD,EAAQ8I,OAASC,QAAQD,OAAO,iCAC9BqwH,EAAA34H,QAAasI,OAAOlH,KACpBw3H,EAAA54H,QAA0BsI,OAAOlH,OAEnC5B,EAAQ8I,OAAOI,QAAQ,gCACrBlJ,aAGaA,kFChqBf,QAAA7M,EAAA,IACY2M,IAAZ3M,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,KACYkmI,IAAZlmI,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iNAWA,IAAM6M,EAAU,SAAVA,EAAmBmR,GAEvBmoH,EAAA94H,QAAqB/J,KAAKC,MACxBgkG,gBAAiB16F,EAAQ4/F,iBACzBpF,YAAax6F,EAAQy6F,aACrBG,cAAe56F,EAAQ66F,iBAOzBnkG,KAAKopG,QAAU,KAOfppG,KAAKuvB,aAA6BnyB,IAAnBqd,EAAQxD,OAAuBwD,EAAQxD,OAAS,KAO/DjX,KAAK6iI,UAAW,EAOhB7iI,KAAKmrG,eAAiB,KAOtBnrG,KAAKorG,aAAe,KAUpBprG,KAAKwrG,uBAAyB,EAQ9BxrG,KAAK8iI,aAAe,IAAAzlF,EAAAvzC,SAClBmN,OAAQ,IAAAimC,EAAApzC,SACNqzC,iBAAiB,EACjBxO,OAAO,IAET2O,WAAyBlgD,IAAlBqd,EAAQ6iC,MACb7iC,EAAQ6iC,MAAQylF,EAAAj5H,QAAkB+hG,4BAGtCx3F,EAAAvK,QAASwK,OAAOtU,KAAM,gBAAiBA,KAAKusG,aAAcvsG,OAG5DoJ,EAAO2B,SAASzB,EAAhBs5H,EAAA94H,SASAR,EAAQ4/F,iBAAmB,SAAS3sE,GAElC,OADAv8B,KAAKopG,QAAU7sE,EAAMwqE,OACd,GAUTz9F,EAAQ66F,eAAiB,SAAS5nE,GAChC,IAAM2xE,EAASluG,KAAKopG,QACd+E,EAAU5xE,EAAMwqE,MAChB5E,EAAK+L,EAAO,GAAKC,EAAQ,GACzB/L,EAAK8L,EAAO,GAAKC,EAAQ,GAE3BpB,GAAO,EAUX,OAXwB5K,EAAKA,EAAKC,EAAKA,GAEhBpiG,KAAKwrG,yBAC1BxrG,KAAKotG,mBAAmB7wE,GACnBv8B,KAAK6iI,SAGR7iI,KAAKgjI,iBAFLhjI,KAAK0tG,cAAcnxE,GAIrBwwE,GAAO,GAEFA,GAUTzjG,EAAQy6F,aAAe,SAASk/B,GAC9B,IAAIl2B,GAAO,EAMX,MAL6B,gBAAzBk2B,EAAgB31H,KAClBy/F,EAAO/sG,KAAKotG,mBAAmB61B,GACG,aAAzBA,EAAgB31H,OACzBy/F,GAAO,GAEF61B,EAAA94H,QAAqBg6F,YAAY/jG,KAAKC,KAAMijI,IAAoBl2B,GAUzEzjG,EAAQ/I,UAAU6sG,mBAAqB,SAAS7wE,GAM9C,OALIv8B,KAAK6iI,SACP7iI,KAAKouG,eAAe7xE,GAEpBv8B,KAAKquG,2BAA2B9xE,IAE3B,GAQTjzB,EAAQ/I,UAAU8tG,2BAA6B,SAAS9xE,GACtD,IAAM38B,EAAc28B,EAAMiF,WAAW3gC,QACrC,GAA0B,OAAtBb,KAAKorG,aACPprG,KAAKorG,aAAe,IAAApnB,EAAAl6E,QAAc,IAAAm6E,EAAAn6E,QAAgBlK,IAClDI,KAAK2uG,4BACA,CACL,IAAMu0B,EAAkBljI,KAAKorG,aAAa9lB,cAC1C93E,EAAA1D,QAAY0yE,iBAAiB0mD,EAA7Bj/C,EAAAn6E,SACAo5H,EAAgB9iI,eAAeR,KASnC0J,EAAQ/I,UAAUouG,sBAAwB,WACxC,IAAMO,KACsB,OAAxBlvG,KAAKmrG,gBACP+D,EAAepuG,KAAKd,KAAKmrG,gBAED,OAAtBnrG,KAAKorG,cACP8D,EAAepuG,KAAKd,KAAKorG,cAE3B,IAAMn0F,EAASjX,KAAK8iI,aAAatzG,YACjCvY,EAAOs2B,OAAM,GACbt2B,EAAOm4F,YAAYF,IASrB5lG,EAAQ/I,UAAUmtG,cAAgB,SAASnxE,GACzC,IAAM/Y,EAAQ+Y,EAAMiF,WACpBxhC,KAAK6iI,UAAW,EAChB,IAAMrqG,EAAO,IAAAsnE,EAAAh2F,SAAsB0Z,EAAM3iB,QAAS2iB,EAAM3iB,UAClD6pG,EAAS,IAAAhK,EAAA52F,QAAiB0Z,EAAO,GACjCzK,EAAW,IAAAygH,EAAA1vH,SAA8B0uB,EAAMkyE,IACrDl9F,EAAA1D,QAAY2D,YAAoBrQ,IAAb2b,GACnB/Y,KAAKmrG,eAAiB,IAAAnnB,EAAAl6E,QACtB9J,KAAKmrG,eAAeyD,YAAY71F,GAChC/Y,KAAK2uG,wBACL3uG,KAAK6R,cAAc,IAAIkxH,EAAAj5H,QAAkBg8F,MACM,YAAc9lG,KAAKmrG,kBASpE7hG,EAAQ/I,UAAU6tG,eAAiB,SAAS7xE,GAC1C,IAAMiF,EAAajF,EAAMiF,WAGnByvC,EAFWzjE,EAAA1D,QAAY0yE,iBAC3Bx8E,KAAKmrG,eAAe7lB,cADLk0C,EAAA1vH,SAEW6nE,qBACtBn5C,EAAOy4C,EAAW,GACxBzjE,EAAA1D,QAAY0yE,iBAAiBhkD,EAA7BsnE,EAAAh2F,SACA,IAAMlK,EAAc44B,EAAK31B,iBACnBqgI,EAAkBljI,KAAKorG,aAAa9lB,cAC1C93E,EAAA1D,QAAY0yE,iBAAiB0mD,EAA7Bj/C,EAAAn6E,SACAo5H,EAAgB9iI,eAAeohC,GAC/B,IAAMqtE,EAAOjvG,EAAYA,EAAYmB,OAAS,GAC9C8tG,EAAK,GAAKrtE,EAAW,GACrBqtE,EAAK,GAAKrtE,EAAW,GACrBh0B,EAAA1D,QAAY0yE,iBAAiBhkD,EAA7BsnE,EAAAh2F,SACA0uB,EAAKp4B,eAAeR,GACL4N,EAAA1D,QAAY0yE,iBAAiBvL,EAAW,GAAxCyvB,EAAA52F,SACR6tG,UAAUn/E,EAAK2qG,aACtBnjI,KAAK2uG,yBASPrlG,EAAQ/I,UAAUytG,cAAgB,WAChChuG,KAAK6iI,UAAW,EAChB,IAAM5zB,EAAgBjvG,KAAKmrG,eAM3B,OALsB,OAAlB8D,IACFjvG,KAAKmrG,eAAiB,KACtBnrG,KAAKorG,aAAe,KACpBprG,KAAK8iI,aAAatzG,YAAY+d,OAAM,IAE/B0hE,GAOT3lG,EAAQ/I,UAAUsmG,gBAAkB87B,EAAYS,MAMhD95H,EAAQ/I,UAAUgsG,aAAe,WAC/B,IAAMx9F,EAAM/O,KAAKm8F,SACX14E,EAASzjB,KAAK28E,YACR,OAAR5tE,GAAiB0U,GACnBzjB,KAAKguG,gBAEPhuG,KAAK8iI,aAAazkF,OAAO56B,EAAS1U,EAAM,OAQ1CzF,EAAQ/I,UAAUyiI,eAAiB,WACjC,IAAM/zB,EAAgBjvG,KAAKguG,gBAC3BxgG,EAAA1D,QAAY2D,OAAyB,OAAlBwhG,GAEE,OAAjBjvG,KAAKuvB,SACPvvB,KAAKuvB,QAAQmuB,WAAWuxD,GAG1BjvG,KAAK6R,cAAc,IAAIkxH,EAAAj5H,QAAkBg8F,MACM,UAAYmJ,KAO7D3lG,EAAQ/I,UAAU89C,OAAS,SAAStvC,GAClC6zH,EAAA94H,QAAqBvJ,UAAU89C,OAAOt+C,KAAKC,KAAM+O,GACjD/O,KAAKusG,0BAIQjjG,mBC3Tf7M,EAAA,KACA2V,EAAA9I,QAAA,8FCGA,MAAAirC,EAAA93C,EAAA,uBADA,IAAM6M,KAONA,EAAQ8I,OAASC,QAAQD,OAAO,iCAEhC9I,EAAQ8I,OAAOG,MAAM,8BACnByD,WAAY,iBAIC1M,iFCdf,QAAA7M,EAAA,QACAA,EAAA,wDAKA,IAAM6M,EAAU+I,QAAQD,OAAO,iBAC7BwgB,EAAA9oB,QAAwBsI,OAAOlH,OAIjC5B,EAAQiJ,MAAM,2BAMZ,SAACmrE,EAASqW,GACR,IAAMqH,EAAcrH,EAAA,yBACpB,YAAuB32F,IAAhBg+F,EAA4BA,EAC9BlqE,EAAApnB,QAASuxF,sBADP,8BA6FX/xF,EAAQqqF,WAAa,SAASmrC,EAAUuE,GACtC,OACEzvC,SAAU,IACVE,OAAO,EACPsH,YAAaioC,EACb7sH,uBALJlN,EAAQqqF,2DAURrqF,EAAQsrF,UAAU,gBAAiBtrF,EAAQqqF,sBAG5BrqF,yGC7Hf,QAAA7M,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SAGAA,EAAA,UAEAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,SAGAA,EAAA,UAGAA,EAAA,UAEAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,KACYkuB,0JAAZluB,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDAKA,IAAM6M,EAAU+I,QAAQD,OAAO,yBAC7BkxH,EAAAx5H,QAAqCsI,OAAOlH,KAC5Cq4H,EAAAz5H,QAAwCsI,OAAOlH,KAC/C4vF,EAAAhxF,QAAsBsI,OAAOlH,KAC7Bs4H,EAAA15H,QAAyCoB,KACzCu4H,EAAA35H,QAA6BsI,OAAOlH,KACpCmqF,EAAAvrF,QAAwBsI,OAAOlH,KAC/BonB,EAAAxoB,QAAesI,OAAOlH,KACtB8vF,EAAAlxF,QAAuBoB,KACvB0nB,EAAA9oB,QAAwBsI,OAAOlH,KAC/BoH,EAAAxI,QAAmBsI,OAAOlH,KAC1Bw4H,EAAA55H,QAAiBsI,OAAOlH,KACxBg1H,EAAAp2H,QAA0BoB,KAC1B4wH,EAAAhyH,QAAgBsI,OAAOlH,OA6BzB,SAASy4H,EAAqBC,EAAUjxH,EAAQgxH,GAC9C,OAAOA,EAAqBC,EAAUjxH,GA1BxCrJ,EAAQiJ,MAAM,uBAMZ,SAACqxH,EAAUjxH,GAET,MAAO,gQADmBue,EAAApnB,QAAQuxF,sBAA5B,6BACC,oEAwBXL,EAAAlxF,QAAuByI,MAAM,2BAM3B,SAACmrE,EAASqW,GAAV,OAAuB7iE,EAAApnB,QAAQuxF,sBAA/B,8BAwCF/xF,EAAQu6H,YACNrtH,WAAY,6CACZstH,UACE/0H,IAAO,mBACPnC,WAAc,2BACdm3H,qBAAwB,sCAE1BpqD,SAAUgqD,GAGZr6H,EAAQ06H,UAAU,eAAgB16H,EAAQu6H,YA4B1Cv6H,EAAQgyF,YAAc,SAASsoC,EAAUr6H,EAAO2wG,EAAMznG,EACpDwxH,EAAiBv6H,EAAiBw6H,EAClCC,EAA+B5oC,EAAczG,EAC7CsvC,EAAqBtK,EAAa9pG,GAAW,IAAA3jB,EAAArM,KAM7CA,KAAK+O,IAML/O,KAAK4M,WAML5M,KAAKqkI,OAAS5xH,EAMdzS,KAAKkK,OAASX,EAMdvJ,KAAKskI,MAAQpqB,EAMbl6G,KAAKwK,aAAed,EAMpB1J,KAAKkkI,2BAA6BA,EAMlClkI,KAAKmkI,8BAAgCA,EAMrCnkI,KAAK07F,cAAgBH,EAMrBv7F,KAAKg/E,gBAAkB8V,EAEvB,IAAMvkE,EAAOukE,EAAevkE,KAC5B/iB,EAAA1D,QAAY2D,OAAO8iB,GAMnBvwB,KAAKuwB,KAAOA,EAMZvwB,KAAKukI,qBAAuBH,EAM5BpkI,KAAK+5H,aAAeD,EAMpB95H,KAAKwkI,WAAaP,IAMlBjkI,KAAKykI,aAMLzkI,KAAK0kI,oBAML1kI,KAAK+jI,qBAML/jI,KAAK2kI,gBAAkB,KAMvB3kI,KAAKwO,UAMLxO,KAAKswB,WAAaN,EAGlB4zG,EAASpmD,GAAG,oBAAqB,WAC/BnxE,EAAKg4H,OAAOO,YAlIhBt7H,EAAQgyF,0OA0IRhyF,EAAQgyF,YAAY/6F,UAAUq7F,QAAU,WAAW,IAAAxrF,EAAApQ,KACjDA,KAAK+jI,sBAAqD,IAA9B/jI,KAAK+jI,qBACjC/jI,KAAK2kI,gBAAkB3kI,KAAKwK,aAAagjB,gBAAgBxtB,KAAK+O,IAC5DmiB,EAAApnB,QAAQ+6H,sBAEV,EAAAC,EAAAh7H,SAAmB9J,KAAK2kI,gBAAgBjvH,YAAYC,WAAY3V,KAAKwO,QAAQ,EAAMxO,KAAKqkI,OAAQ,kBAAM,IAGtGrkI,KAAKqkI,OAAOr/C,iBAAiB,kBAAM50E,EAAK5B,QACtC,WACE4B,EAAKrB,IAAIg2H,WAIb/kI,KAAKqkI,OAAOr/C,iBAAiB,WAC3B,GAAI50E,EAAK4uE,gBAAgBxuD,SACvB,OAAOpgB,EAAKxD,YAEb,SAACA,GACEA,GACFwD,EAAK40H,kBAAkB50H,EAAK4uE,gBAAgBxuD,aAUlDlnB,EAAQgyF,YAAY/6F,UAAUykI,kBAAoB,SAAS/wH,GAAU,IAAA/C,EAAAlR,KACnEiU,EAASqC,mBAAmB,SAAC6qE,GAC3B,GAAIA,EAAKvkF,KAAKgQ,WAAY,CACxB,IAAMH,EAAQ00E,EAAK10E,MACnBe,EAAA1D,QAAY0yE,iBAAiB/vE,EAA7Bw4H,EAAAn7H,SACAoH,EAAKg0H,uBAAuBz4H,EAA2D00E,EAAKvkF,UAWlG0M,EAAQgyF,YAAY/6F,UAAU2kI,uBAAyB,SAASz4H,EAAO7P,GAAM,IAAAy1B,EAAAryB,KAC3E,GAAIA,KAAK4M,YAAchQ,EAAKgQ,WAAY,CACtC,IAAMA,KACN,IAAK,IAAM6M,KAAO7c,EAAKgQ,WACrB,GAA6B,OAAzBhQ,EAAKgQ,WAAW6M,GAAe,CACjC,IAAMlH,EAAQvS,KAAK4M,WAAW6M,QAChBrc,IAAVmV,IACF3F,EAAW6M,GAAOlH,QAGpB3F,EAAW6M,GAAO7c,EAAKgQ,WAAW6M,GAGtC,IAAKkR,EAAMkC,QAAQjgB,GAAa,CAC9B,IAAMqK,EAASxK,EAAM+iB,YACjBvY,uBACFA,EAAO6V,iBAAiBlgB,GACfqK,wBAAqCA,uBAC9CA,EAAOoD,aAAazN,GAGpBH,EAAM04H,KAAK,gBAAiB,WAC1B33H,EAAA1D,QAAY0yE,iBAAiB/vE,EAA7Bw4H,EAAAn7H,SACAuoB,EAAK6yG,uBAAuBz4H,EAAO7P,QAkB7C0M,EAAQgyF,YAAY/6F,UAAUu9C,SAAW,SAAS7pC,GAChD,IAAIomH,SACApmH,EAASX,OAAOV,SAClB5S,KAAKg/E,gBAAgBxuD,SAAWvc,EAASX,OAEzC+mH,EAAer6H,KAAKg/E,gBAAgBzuD,KAAKnlB,SAASrK,OAC9Cf,KAAKg/E,gBAAgBvuD,qCAAuC,GAGlE,IAAMhkB,EAAQzM,KAAKukI,qBAAqBpK,YAAYlmH,EAAUjU,KAAK+O,IACjE/O,KAAK2kI,gBAAiBtK,GAExB,GAAI5tH,uBAA+B,CACjC,IAAM7P,EAA6DqX,EAASrX,KAC5EoD,KAAKklI,uBAAuBz4H,EAAO7P,GAGrC,OAAO6P,GAYTnD,EAAQgyF,YAAY/6F,UAAU6kI,UAAY,SAAStxC,EAAO7/E,GACxD,IAAMmmH,EAAiBp6H,KAAK2kI,gBAC5B7wC,EAAMtgF,IAAI,WAAY,WAEpB4mH,EAAe1kH,YAAYi4B,OAAO15B,EAASxH,UAU/CnD,EAAQgyF,YAAY/6F,UAAU8kI,aAAe,SAASpxH,GACpDA,EAASW,SAAiC,OAAxBX,EAASU,WAAsB,MAAQ,OAY3DrL,EAAQgyF,YAAY/6F,UAAU+kI,aAAe,SAASrxH,GACpD,OAAOA,EAASU,YAmBlBrL,EAAQgyF,YAAY/6F,UAAUglI,wBAA0B,SACtDC,EAAepiH,GACf,GAAKA,EAAL,CAGA,IAAMpN,EAAawvH,EAAc1vH,gBACjC,GAAIE,EACFxI,EAAA1D,QAAY0yE,iBAAiBxmE,EAA7BkzE,EAAAp/E,SACAkM,EAAW2N,eAAiBP,OACvB,GAAIoiH,EAAcp6H,SACvB,IAAK,IAAI7H,EAAI,EAAGC,EAAKgiI,EAAcp6H,SAASrK,OAAQwC,EAAIC,EAAID,IAC1DvD,KAAKulI,wBAAwBC,EAAcp6H,SAAS7H,GAAI6f,KAc9D9Z,EAAQgyF,YAAY/6F,UAAUklI,iBAAmB,SAASxxH,GACxD,IAAMyxH,EAAUzxH,EAASrX,KAAK+P,SAAS+4H,QAEvC,QAAgBtoI,IAAZsoI,EACF,OAAOA,EAGT,QAA+BtoI,IAA3B6W,EAASrX,KAAKwO,SAAlB,CAIA,IAAMiC,EAA8C4G,EAASrX,KAC7D,GAAsB,QAAlByQ,EAASC,KAAb,CAIA,IAAMa,EAAoDd,EAEpDs4H,EAAax3H,EAAYxB,SAASg5H,WAExC,QAAmBvoI,IAAfuoI,EAAJ,CAMA,IAAMx5G,EAAYhe,EAAYK,OAAO4X,MAAM,KAAK,GAC1Cw/G,EAAe5lI,KAAKg/E,gBAAgBrrD,aAAa1f,GACvD,OAAOjU,KAAKwK,aAAa6jB,gBACvBu3G,EAAal4H,IAAKye,OAAW/uB,EAAWuoI,OAa5Cr8H,EAAQgyF,YAAY/6F,UAAUslI,iBAAmB,SAAS5xH,GAAU,IAAAue,EAAAxyB,KAC5D8lI,KACN,QAAiE1oI,IAA5B6W,EAASrX,KAAMwO,SAClD,OAAO,KAGT,IAAMiC,EAA8C4G,EAASrX,KACvDmpI,EAAsB14H,EAASnC,KACrC,GAAImC,EAASV,SAASq5H,YAEpB,OADAF,EAAcC,GAAuB14H,EAASV,SAASq5H,YAChDF,EAGT,IAAMr5H,EAAQwH,EAASxH,MACvB,GAAsB,SAAlBY,EAASC,KAAiB,CAC5BE,EAAA1D,QAAY0yE,iBAAiB/vE,EAA7BkD,EAAA7F,SACA,IAAMm8H,EAAgBjmI,KAAKwK,aAAa0jB,iBAAiBzhB,GAEzD,OADAq5H,EAAcC,GAAuBE,EAC9BA,EAAgBH,EAAgB,KAEvC,IACII,EADsD74H,EAC5BmB,OACxBo3H,EAAe5lI,KAAKg/E,gBAAgBrrD,aAAa1f,GACjD88B,EAAQ/wC,KAAKmmI,YAWnB,OAPED,EADEN,EAAat4H,OAAS47E,EAAAp/E,QAAkBsS,WAAWgI,YACtC8hH,GAEDA,EAAY9/G,MAAM,MAEtBnZ,QAAQ,SAACkf,GACnB25G,EAAc35G,GAAaqG,EAAKhoB,aAAa6jB,gBAAgBu3G,EAAal4H,IAAKye,EAAW4kB,KAErF+0F,GAYXx8H,EAAQgyF,YAAY/6F,UAAU6lI,yBAA2B,SAASnyH,GAChE,IAAM6xH,EAAgB9lI,KAAK6lI,iBAAiB5xH,GAC5C,OAAO6xH,EAAgBzlI,OAAOg3B,KAAKyuG,GAAe/kI,OAAS,GAS7DuI,EAAQgyF,YAAY/6F,UAAU4lI,UAAY,WACxC,IAAM9gD,EAAOrlF,KAAK+O,IAAImgB,UAItB,OAHmBm2D,EAAKl2D,gBACZk2D,EAAK1jD,gBAAgB0kG,mBAEP,OADd,KAAO,MAWrB/8H,EAAQgyF,YAAY/6F,UAAU+lI,gBAAkB,SAASryH,GAAU,IAAA8f,EAAA/zB,KAC3DumI,EAAUtyH,EAASN,IAAInU,WACvB5C,EAAOqX,EAASrX,KAChB4pI,EAAc5pI,EAAK+P,SAAL,YACpB,QAAoBvP,IAAhBopI,EAA2B,CACvBD,KAAWvmI,KAAKykI,YACpBzkI,KAAKykI,UAAU8B,GAAWvmI,KAAKkK,OAAOG,IAAIm8H,GAAa54H,KACrD,SAAC64H,GAEC,OADa1yG,EAAKuwG,MAAMnqB,YAAYssB,EAAK73H,SAI/C,IAAM83H,EAAY1mI,KAAKwkI,WACvBxkI,KAAKykI,UAAU8B,GAAS34H,KAAK,SAACihF,GAC5B63C,EAAUnH,SAAS3iI,EAAKsO,MACxBw7H,EAAUjH,WAAW5wC,GACrB63C,EAAUrH,SAAQ,OAWxB/1H,EAAQgyF,YAAY/6F,UAAUomI,aAAe,WAC3C,IAAMC,EAAa5mI,KAAKg/E,gBAAgBxuD,SAAS5zB,KAAKwO,SAChDy7H,EAAmB7mI,KAAKg/E,gBAAgBxuD,SAASplB,SACjD07H,KAGNF,EAAW35H,QAAQ,SAACrQ,GAClBiqI,EAAiBx2H,KAAK,SAAC4D,GACjBA,EAASrX,OAASA,GACpBkqI,EAAUhmI,KAAKmT,MAIlBjU,MAGHA,KAAKg/E,gBAAgBxuD,SAASplB,SAAW07H,EAGzC9mI,KAAKwO,OAAOzN,OAAS,EACrBf,KAAKg/E,gBAAgBxuD,SAASplB,SAAS6B,QAAQ,SAASC,GACtDlN,KAAKwO,OAAO1N,KAAKoM,EAAMT,QACtBzM,MAGHA,KAAK07F,cAActV,2BAQrB98E,EAAQgyF,YAAY/6F,UAAUwmI,WAAa,SAASnqI,GAClDoD,KAAKg/E,gBAAgBlsD,YAAYl2B,IAOnC0M,EAAQgyF,YAAY/6F,UAAUymI,eAAiB,WAC7ChnI,KAAKg/E,gBAAgBjsD,aAQvBzpB,EAAQgyF,YAAY/6F,UAAU0mI,WAAa,WACzC,OAAOjnI,KAAKg/E,gBAAgBzuD,KAAKnlB,SAASrK,QAa5CuI,EAAQgyF,YAAY/6F,UAAU2mI,mBAAqB,SAAS75H,GAC1D,IAAMixB,EAAat+B,KAAK+O,IAAImgB,UAAUC,gBAChCre,EAAgBwhB,EAAAxoB,QAAe+G,qBAAqBxD,GAC1D,QAAsBjQ,IAAlB0T,GAA+BwtB,EAAaxtB,EAC9C,MAAO,oBAET,IAAMH,EAAgB2hB,EAAAxoB,QAAe4G,qBAAqBrD,GAC1D,YAAsBjQ,IAAlBuT,GAA+B2tB,EAAa3tB,EACvC,yBADT,GAaFrH,EAAQgyF,YAAY/6F,UAAU4mI,iBAAmB,SAASlzH,GACxD,IAAM5G,EAAiD4G,EAASrX,KAC1DyoF,EAAOrlF,KAAK+O,IAAImgB,UAChBoP,EAAa+mD,EAAKl2D,gBAClBre,EAAgBwhB,EAAAxoB,QAAe+G,qBAAqBxD,GAC1D,QAAsBjQ,IAAlB0T,GAA+BwtB,EAAaxtB,EAC9Cu0E,EAAK+hD,cAAc/hD,EAAKgiD,oBAAoBv2H,EAAe,EAAG,QACzD,CACL,IAAMH,EAAgB2hB,EAAAxoB,QAAe4G,qBAAqBrD,QACpCjQ,IAAlBuT,GAA+B2tB,EAAa3tB,GAC9C00E,EAAK+hD,cAAc/hD,EAAKgiD,oBAAoB12H,EAAe,GAAI,MAWrErH,EAAQgyF,YAAY/6F,UAAU+mI,iBAAmB,SAASC,GACxD7yG,EAAE6yG,GAAcC,QACdA,QAAQ,KASZl+H,EAAQgyF,YAAY/6F,UAAUknI,0BAA4B,SAASlsE,GACjEv7D,KAAKkkI,2BAA2BluH,WAAaulD,GAS/CjyD,EAAQgyF,YAAY/6F,UAAUmnI,oBAAsB,SAASH,GAC3D,OAAO7yG,EAAE6yG,GAAc1yG,GAAG,aAsB5BvrB,EAAQgyF,YAAY/6F,UAAUonI,sBAAwB,SAAS1zH,GAC7D,OAAQA,EAASrB,SAEb5S,KAAK4nI,eAAe3zH,IACpBjU,KAAK6nI,sBAAsB5zH,KAWjC3K,EAAQgyF,YAAY/6F,UAAUqnI,eAAiB,SAAS3zH,GACtD,IAAMrX,EAA2CqX,EAASrX,KAC1D,QAASA,EAAK+P,YACV/P,EAAK+P,SAASstE,UACdj6E,KAAK6lI,iBAAiB5xH,IAU5B3K,EAAQgyF,YAAY/6F,UAAUsnI,sBAAwB,SAAS5zH,GAC7D,IAAMrX,EAA2CqX,EAASrX,KACpDo8B,EAAiD/kB,EAASX,OAAO1W,KACvE,QAASqX,EAASxH,QAGO,IAAnBwH,EAASL,QAAgBhX,EAAKg3B,OAG9B3f,EAASL,MAAQ,GAAKolB,EAAWpF,QAKzCtqB,EAAQkN,WAAW,yBAA0BlN,EAAQgyF,uBAGtChyF,iGCj0Bf,MAAAirC,EAAA93C,EAAA,uBASA,IAAM6M,EAAU,SAASG,EAAIF,EAAOu+H,GAClC,IAAIC,SAAYC,SAGhBhoI,KAAKioI,gBAAkB,SAASC,GAC9B,QAASA,EAAW,MAGtBloI,KAAKmoI,YAAc,SAASC,GAC1B,MAAO,0CAA0ClkH,KAAKkkH,IAGxDpoI,KAAKqoI,aAAe,SAASD,GAC3B,MAAO,gBAAgBlkH,KAAKkkH,IAG9BpoI,KAAK+hI,MAAQ,SAASqG,GACpB,MAAO,OAAOlkH,KAAKkkH,IAAgB,UAAUlkH,KAAKkkH,IAGpDpoI,KAAKgiI,MAAQ,SAASoG,GACpB,MAAO,OAAOlkH,KAAKkkH,IAAgB,UAAUlkH,KAAKkkH,IAOpDpoI,KAAK0sB,KAAO,SAASkwG,GACnB,IAAMlyH,EAAQjB,EAAGiB,QAqBjB,OApBIq9H,GAAcA,EAAWvK,aAAeM,WAAWn+F,SACrDooG,EAAW1J,SAEb0J,EAAa,IAAIjK,YACNwK,OAAS,SAASr+C,GAC3Bv/E,EAAMwD,QAAQ+7E,EAAI2E,OAAOniE,SAE3Bs7G,EAAWpJ,QAAU,SAAS10C,GAC5B,IAAMlwE,EAAMkwE,EAAI2E,OAAO3gF,MACvBD,QAAQC,MAAM,wBAAyB8L,GACvCrP,EAAMoH,QACJ/D,QAAuB,IAAZgM,EAAI4kC,KAAampF,EAAQ,sBAAwBA,EAAQ,eACpES,OAAUxuH,EAAIhM,WAGlBg6H,EAAWvJ,WAAa,SAASv0C,GAC/Bv/E,EAAM6oB,OAAO02D,IAGf89C,EAAWS,WAAW5L,GACflyH,EAAME,SAQf5K,KAAK0/B,KAAO,SAAShyB,EAAK+6H,GAEpBT,GACFA,EAAS95H,UAEX85H,EAAWS,GAAeh/H,EAAGiB,QAG7B,IAAMA,EAAQjB,EAAGiB,QAYjB,OAXAnB,EAAMc,IAAIqD,GACRipF,QAASqxC,EAASp9H,UACjBgD,KAAK,SAACE,GACPpD,EAAMwD,QAAQJ,EAASc,OACtB,SAAC25H,GACFv6H,QAAQC,MAAM,0BAA2Bs6H,GACzC79H,EAAMoH,QACJ/D,QAAW+5H,EAAQ,iBACnBS,OAAUA,MAGP79H,EAAME,iFAIjBtB,EAAQ8I,OAASC,QAAQD,OAAO,gBAEjBI,QAAQ,WAAYlJ,aAGpBA,0kBChGf7M,EAAA,SACAA,EAAA,MACAA,EAAA,WACAA,EAAA,wDAEA,IAAM6M,cAUJ,SAAAA,EAAYmR,gGAASC,CAAA1a,KAAAsJ,GAAA,IAAA+C,mKAAAsO,CAAA3a,MAAAsJ,EAAAsR,WAAAva,OAAAwa,eAAAvR,IAAAvJ,KAAAC,KAEbya,IAEAu0E,EAAWv0E,EAAQu0E,SAJN,OAanB3iF,EAAKyG,WAAak8E,EAAS3kF,IAAI,cAQ/BgC,EAAKq8H,eArBcr8H,EAVjB,gUAAAwU,CAAAvX,EAAAgkB,EAAAxjB,SAAAiX,EAAAzX,IAAAmQ,IAAA,gBAAAlH,MAAA,SAqCUyD,GACZgL,EAAA1X,EAAA/I,UAAAqa,WAAAva,OAAAwa,eAAAvR,EAAA/I,WAAA,gBAAAP,MAAAD,KAAAC,KAAoBgW,GACpBxI,EAAA1D,QAAY0yE,iBAAiBxmE,EAA7BysH,EAAA34H,SACA9J,KAAKqvF,oBAAoBr5E,MAxCvByD,IAAA,sBAAAlH,MAAA,SA+CgByD,GAClBhW,KAAK0oI,YAAY1yH,EAAWiW,IAAMjsB,KAAK8S,WAAWG,OAChD,kBAAM+C,EAAWgW,SACjBhsB,KAAKuvF,+BAA+B1hF,KAAK7N,KAAMgW,OAlD/CyD,IAAA,iCAAAlH,MAAA,SA4D2ByD,EAAYzD,EAAOk9E,QAClCryF,IAAVmV,GACFyD,EAAWvJ,MAAMsf,WAAWxZ,MA9D5BkH,IAAA,mBAAAlH,MAAA,SAqEayD,GACfgL,EAAA1X,EAAA/I,UAAAqa,WAAAva,OAAAwa,eAAAvR,EAAA/I,WAAA,mBAAAP,MAAAD,KAAAC,KAAuBgW,GACvBxI,EAAA1D,QAAY0yE,iBAAiBxmE,EAA7BysH,EAAA34H,SACA9J,KAAKsvF,sBAAsBt5E,MAxEzByD,IAAA,wBAAAlH,MAAA,SA+EkByD,GACpBhW,KAAK0oI,YAAY1yH,EAAWiW,aACrBjsB,KAAK0oI,YAAY1yH,EAAWiW,QAjFjC3iB,eAsFSA,8UC3Ff7M,EAAA,QACAA,EAAA,MACY2M,0JAAZ3M,EAAA,uDAKA,IAAM6M,EAAU+I,QAAQD,OACtB,4CACEswH,EAAA54H,QAA0BsI,OAAOlH,OAOrC5B,EAAQgyF,YAAR,WAYE,SAAAqtC,EAAYl2H,EAAQ0tH,gGAAiBzlH,CAAA1a,KAAA2oI,GAQnC3oI,KAAKqL,MASLrL,KAAKqkI,OAAS5xH,EAMdzS,KAAKsgI,aAAeH,EAAgBhxH,WAnCxC,OAAAw5H,EAAA3H,SAAA,4BAAAjgH,EAAA4nH,IAAAlvH,IAAA,cAAAlH,MAAA,WA2CI,6BAA8BnJ,EAAO4D,OAAOhN,KAAKqL,UA3CrDoO,IAAA,SAAAlH,MAAA,WAmDIvS,KAAKqL,MAAMu9H,2BAnDfnvH,IAAA,mBAAAlH,MAAA,SA4DmByD,GACfA,EAAWgW,SAAWhW,EAAWgW,WA7DrCvS,IAAA,SAAAlH,MAAA,WAuEI,IAAK,IAAIhP,EAAIvD,KAAKqL,MAAM+hC,YAAYrsC,OAAS,EAAWwC,GAAH,EAAYA,IAC/DvD,KAAKsgI,aAAa3yF,OAAO3tC,KAAKqL,MAAM+hC,YAAY7pC,OAxEtDkW,IAAA,mBAAAlH,MAAA,SAiFmByD,GACfhW,KAAKsgI,aAAa3yF,OAAO33B,OAlF7B2yH,EAAA,GAuFAr/H,EAAQ06H,UAAU,0BAChBF,UACEz4H,MAAS,KAEXmL,WAAYlN,EAAQgyF,YACpBF,YAAa,kBAASlqE,EAAApnB,QAAQuxF,sBAAjB,4DAIA/xF,kBC9Gf,SAAAqI,EAAAU,GAA4B,aAa5B,IACAxE,EACAg7C,EACA57C,EACA47H,EACAC,EACAC,EACAC,EACAC,EACAC,EATAC,EAAA92H,EAAA+2H,SAAA,aAqkBA/2H,EAAAD,OAAA,iBACAi3H,SAAA,YAjcA,WACA,IAAAC,GAAA,EAEAtpI,KAAAupI,MAAA,yBAAAC,GAIA,OAHAF,GACAzgF,EAAA4gF,EAAAC,GAEA,SAAA76C,GACA,IAAA86C,KAIA,OAHAV,EAAAp6C,EAAAq6C,EAAAS,EAAA,SAAApjH,EAAAqjH,GACA,kBAAA1lH,KAAAslH,EAAAjjH,EAAAqjH,OAEAD,EAAAl4H,KAAA,OAmCAzR,KAAA6pI,UAAA,SAAAA,GACA,OAAAhB,EAAAgB,IACAP,EAAAO,EACA7pI,MAEAspI,GAQAz7H,EAAAwE,EAAAxE,KACAg7C,EAAAx2C,EAAAw2C,OACA57C,EAAAoF,EAAApF,QACA47H,EAAAx2H,EAAAw2H,UACAC,EAAAz2H,EAAAy2H,UACAC,EAAA12H,EAAA02H,KAEAE,EAsLA,SAAAp6C,EAAAi7C,GACAj7C,QACAA,EAAA,GACK,iBAAAA,IACLA,EAAA,GAAAA,GAGA,IAAAk7C,EAAAC,EAAAn7C,GACA,IAAAk7C,EAAA,SAGA,IAAAE,EAAA,EACA,GACA,OAAAA,EACA,MAAAd,EAAA,kEAEAc,IAGAp7C,EAAAk7C,EAAAn3B,UACAm3B,EAAAC,EAAAn7C,SACKA,IAAAk7C,EAAAn3B,WAGL,IADA,IAAAh2G,EAAAmtI,EAAAnyH,WACAhb,GAAA,CACA,OAAAA,EAAAkb,UACA,OACAgyH,EAAAtmH,MAAA5mB,EAAAupB,SAAAy7B,cAAAsoF,EAAAttI,EAAAqkB,aACA,MACA,OACA6oH,EAAAK,MAAAvtI,EAAAu0G,aAIA,IAAAi5B,EACA,MAAAA,EAAAxtI,EAAAgb,cACA,IAAAhb,EAAAkb,UACAgyH,EAAApmI,IAAA9G,EAAAupB,SAAAy7B,eAEAwoF,EAAAC,EAAA,cAAAztI,KAEA,WAAAwtI,IACAxtI,EAAAytI,EAAA,aAAAztI,MACAmtI,GACAK,EAAAC,EAAA,cAAAztI,GACA,IAAAA,EAAAkb,UACAgyH,EAAApmI,IAAA9G,EAAAupB,SAAAy7B,eAKAhlD,EAAAwtI,EAGA,KAAAxtI,EAAAmtI,EAAAnyH,YACAmyH,EAAA32B,YAAAx2G,IA5OAssI,EA0RA,SAAAS,EAAAW,GACA,IAAAC,GAAA,EACAn4F,EAAAvkC,EAAA87H,IAAA7oI,MACA,OACA0iB,MAAA,SAAAgnH,EAAAz2C,GACAy2C,EAAA1B,EAAA0B,IACAD,GAAAE,EAAAD,KACAD,EAAAC,GAEAD,IAAA,IAAAd,EAAAe,KACAp4F,EAAA,KACAA,EAAAo4F,GACAv9H,EAAA8mF,EAAA,SAAAxhF,EAAAkH,GACA,IAAAkoC,EAAAmnF,EAAArvH,GACAmwH,EAAA,QAAAY,GAAA,QAAA7oF,GAAA,eAAAA,GACA,IAAA+oF,EAAA/oF,KACA,IAAAgpF,EAAAhpF,KAAA2oF,EAAA/3H,EAAAq3H,KACAx3F,EAAA,KACAA,EAAA34B,GACA24B,EAAA,MACAA,EAAAw4F,EAAAr4H,IACA6/B,EAAA,QAGAA,EAAA,OAGA1uC,IAAA,SAAA8mI,GACAA,EAAA1B,EAAA0B,GACAD,IAAA,IAAAd,EAAAe,KAAA,IAAAK,EAAAL,KACAp4F,EAAA,MACAA,EAAAo4F,GACAp4F,EAAA,MAGAo4F,GAAAD,IACAA,GAAA,IAGAJ,MAAA,SAAAA,GACAI,GACAn4F,EAAAw4F,EAAAT,OAjUAnB,EAAAr3H,EAAAoG,KAAAxX,UAAAmyF,UAAA,SAAAl4B,GAEA,YAAAx6D,KAAA8qI,wBAAAtwE,KAIA,IAAAuwE,EAAA,kCAEAC,EAAA,eASAH,EAAAI,EAAA,0BAIAC,EAAAD,EAAA,kDACAE,EAAAF,EAAA,SACAG,EAAAviF,KACAsiF,EACAD,GAGAG,EAAAxiF,KAA+BqiF,EAAAD,EAAA,wKAK/BK,EAAAziF,KAAgCsiF,EAAAF,EAAA,8JAQhCvB,EAAAuB,EAAA,0NAKAR,EAAAQ,EAAA,gBAEAxB,EAAA5gF,KACAgiF,EACAQ,EACAC,EACAF,GAGAT,EAAAM,EAAA,gDAEAM,EAAAN,EAAA,oTAQAO,EAAAP,EAAA,kuCAcA,GAEAP,EAAA7hF,KACA8hF,EACAa,EACAD,GAEA,SAAAN,EAAAQ,EAAAC,GACA,IAAgBnoI,EAAhB0+B,KAAgB0pG,EAAAF,EAAArlH,MAAA,KAChB,IAAA7iB,EAAA,EAAeA,EAAAooI,EAAA5qI,OAAkBwC,IACjC0+B,EAAAypG,EAAA5C,EAAA6C,EAAApoI,IAAAooI,EAAApoI,KAAA,EAEA,OAAA0+B,EASA,IAAA+nG,EAAA,SAAAr4H,EAAAy8E,GACA,IAAAw9C,EACA,IAAAx9C,MAAAy9C,eAGA,MAAA1C,EAAA,iDAEA,IAAAY,IAJA6B,EAAAx9C,EAAAy9C,eAAAC,mBAAA,UAIAC,iBAAAH,EAAAI,sBAAAC,cAAA,QAIA,OADAlC,EAAAn3B,UAAA,uDACAm3B,EAAAkC,cAAA,QAIAlC,EAAAn3B,UAAA,mEACAm3B,EAAAkC,cAAA,WAyBA,SAAAp9C,GAGAA,EAAA,oBAAAA,EACA,IACA,IAAAR,GAAA,IAAA18E,EAAAu6H,WAAAC,gBAAAt9C,EAAA,aAAAR,KAEA,OADAA,EAAAz2E,WAAA+1B,SACA0gD,EACO,MAAA/jC,GACP,SAIA,SAAAukC,GASA,OARAk7C,EAAAn3B,UAAA/jB,EAIAT,EAAAg+C,cACAC,EAAAtC,GAGAA,IAxCA,SAAAl7C,GAGAA,EAAA,oBAAAA,EACA,IACAA,EAAAy9C,UAAAz9C,GACO,MAAAvkC,GACP,OAEA,IAAAiiF,EAAA,IAAA56H,EAAA66H,eACAD,EAAAE,aAAA,WACAF,EAAAxc,KAAA,sCAAsClhC,GAAA,GACtC09C,EAAAG,KAAA,MACA,IAAAr+C,EAAAk+C,EAAAz+H,SAAAugF,KAEA,OADAA,EAAAz2E,WAAA+1B,SACA0gD,GAtCA,CAiEG18E,IAAAy8E,UAyEH,SAAA87C,EAAAn2C,GAEA,IADA,IAAAhlF,KACAxL,EAAA,EAAAC,EAAAuwF,EAAAhzF,OAAsCwC,EAAAC,EAAQD,IAAA,CAC9C,IAAAopI,EAAA54C,EAAAxwF,GACAwL,EAAA49H,EAAAzhI,MAAAyhI,EAAAp6H,MAEA,OAAAxD,EAWA,SAAA67H,EAAAr4H,GACA,OAAAA,EACAkZ,QAAA,cACAA,QAAAs/G,EAAA,SAAAx4H,GAGA,kBAFAA,EAAA4jD,WAAA,GAEA,QADA5jD,EAAA4jD,WAAA,GACA,oBAEA1qC,QAAAu/G,EAAA,SAAAz4H,GACA,WAAAA,EAAA4jD,WAAA,SAEA1qC,QAAA,aACAA,QAAA,aAoEA,SAAA4gH,EAAAzvI,GACA,KAAAA,GAAA,CACA,GAAAA,EAAAkb,WAAAnG,EAAAoG,KAAAC,aAEA,IADA,IAAA+7E,EAAAn3F,EAAAqkB,WACA1d,EAAA,EAAA8L,EAAA0kF,EAAAhzF,OAAyCwC,EAAA8L,EAAO9L,IAAA,CAChD,IAAAqpI,EAAA74C,EAAAxwF,GACAspI,EAAAD,EAAA1hI,KAAA02C,cACA,cAAAirF,GAAA,IAAAA,EAAAC,YAAA,YACAlwI,EAAAmwI,oBAAAH,GACArpI,IACA8L,KAKA,IAAA+6H,EAAAxtI,EAAAgb,WACAwyH,GACAiC,EAAAjC,GAGAxtI,EAAAytI,EAAA,cAAAztI,IAIA,SAAAytI,EAAA2C,EAAApwI,GAEA,IAAAwtI,EAAAxtI,EAAAowI,GACA,GAAA5C,GAAApB,EAAAjpI,KAAAnD,EAAAwtI,GACA,MAAAjB,EAAA,yEAAoGvsI,EAAAqwI,WAAArwI,EAAAswI,WAEpG,OAAA9C,KAeAzsG,MAASwvG,eAAA,UAiIT96H,EAAAD,OAAA,cAAAhD,OAAA,8BAAAg+H,GACA,IAAAC,EACA,4FACAC,EAAA,YAEAC,EAAAl7H,EAAA+2H,SAAA,SACAP,EAAAx2H,EAAAw2H,UACA2E,EAAAn7H,EAAAm7H,WACAC,EAAAp7H,EAAAo7H,SACAC,EAAAr7H,EAAAq7H,SAEA,gBAAA/3F,EAAAi5C,EAAA3tE,GACA,SAAA00B,GAAA,KAAAA,EAAA,OAAAA,EACA,IAAA+3F,EAAA/3F,GAAA,MAAA43F,EAAA,gDAA0F53F,GAY1F,IAVA,IAKA/7B,EAGAlM,EACAnK,EATAoqI,EACAH,EAAAvsH,KACAwsH,EAAAxsH,GAAA,WAA6D,OAAAA,GAC7D,WAA2C,UAG3CszF,EAAA5+D,EACAk5C,KAGAj1E,EAAA26F,EAAA36F,MAAAyzH,IAEA3/H,EAAAkM,EAAA,GAEAA,EAAA,IAAAA,EAAA,KACAlM,GAAAkM,EAAA,wBAAAlM,GAEAnK,EAAAqW,EAAA1W,MACA0qI,EAAAr5B,EAAAx+E,OAAA,EAAAxyB,IACAsqI,EAAAngI,EAAAkM,EAAA,GAAA6R,QAAA6hH,EAAA,KACA/4B,IAAAt4E,UAAA14B,EAAAqW,EAAA,GAAA7Y,QAGA,OADA6sI,EAAAr5B,GACA64B,EAAAv+C,EAAAp9E,KAAA,KAEA,SAAAm8H,EAAAj4F,GApLA,IAAAw0F,EACAR,EAoLAh0F,GAGAk5C,EAAA/tF,MAxLAqpI,EAwLAx0F,EAtLAuzF,EADAS,KACAZ,GACAoB,SACAR,EAAAl4H,KAAA,MAuLA,SAAAo8H,EAAAngI,EAAAioC,GACA,IAAAl8B,EAAAq0H,EAAAH,EAAAjgI,GAGA,IAAA+L,KAFAo1E,EAAA/tF,KAAA,OAEAgtI,EACAj/C,EAAA/tF,KAAA2Y,EAAA,KAAAq0H,EAAAr0H,GAAA,OAGAovH,EAAAj6C,IAAA,WAAAk/C,GACAj/C,EAAA/tF,KAAA,WACA8tF,EACA,MAEAC,EAAA/tF,KAAA,SACA4M,EAAA+d,QAAA,eACA,MACAmiH,EAAAj4F,GACAk5C,EAAA/tF,KAAA,aArxBA,CA2xBC6Q,cAAAU,wFC7xBD,QAAA5V,EAAA,MACAA,EAAA,iEA+BgB,SAASsxI,EAAMC,EAAM/+H,EAAS6kF,EAAO1kF,GAKnD,IAAM6+H,EAASn6C,EAAM9O,iBAAiB,kBAAM+oD,GAAM,WAChD,IAAIxqI,SAAGC,SAAI6B,SACX,GAAI4J,EACF,IAAK1L,EAAIwqI,EAAKhtI,OAAS,EAAGsE,EAAI,EAAG9B,GAAK,IAAKA,EACrC6L,EAAO2+H,EAAKxqI,MACdyqI,EAAK3oI,KAAO0oI,EAAKxqI,SAIrB,IAAKA,EAAI,EAAGC,EAAKuqI,EAAKhtI,OAAQsE,EAAI,EAAG9B,EAAIC,IAAMD,EACzC6L,EAAO2+H,EAAKxqI,MACdyqI,EAAK3oI,KAAO0oI,EAAKxqI,IAIvByqI,EAAKjtI,OAASsE,IAMV6oI,EAASp6C,EAAM9O,iBAAiB,kBAAMgpD,GAAM,WAChD,IAAIzqI,SAAGC,SAAI6B,SACX,GAAI4J,EAAS,CACX,IAAK1L,EAAI,EAAGC,EAAKuqI,EAAKhtI,OAAQsE,EAAI2oI,EAAKjtI,OAAS,EAAGwC,EAAIC,IAAMD,EACvD6L,EAAO2+H,EAAKxqI,MACdwqI,EAAKxqI,GAAKyqI,EAAK3oI,MAGnBmI,EAAA1D,QAAY2D,QAAa,GAANpI,OACd,CACL,IAAK9B,EAAI,EAAGC,EAAKuqI,EAAKhtI,OAAQsE,EAAI,EAAG9B,EAAIC,IAAMD,EACzC6L,EAAO2+H,EAAKxqI,MACdwqI,EAAKxqI,GAAKyqI,EAAK3oI,MAGnBmI,EAAA1D,QAAY2D,OAAOpI,GAAK2oI,EAAKjtI,WAIjC,OAAO,WACLktI,IACAC,uFC/EJ,MAAA35F,EAAA93C,EAAA,iCAiBgB,SAAS0xI,EAAaC,GAOpCpuI,KAAK28E,UAAY,WACf,OAAOwxD,EAAYC,IAQrBpuI,KAAK48E,UAAY,SAAS1pE,GACxBi7H,EAAYC,GAAsBl7H,wFClCtC,MAAAqhC,EAAA93C,EAAA,uBAKA,IAAM6M,EAAU+I,QAAQD,OAAO,uBAoC/B9I,EAAQ+kI,mBAAqB,SAASC,GACpC,OACE16C,SAAU,IACVp9E,WAAY,yBAOZq9E,KAAM,SAACC,EAAOpW,EAASqW,EAAOv9E,GAC5B,IAAMomE,EAAY0xD,EAAOv6C,EAAA,oBAA6B9gE,OAElD2pD,GACFkX,EAAM7gF,OAEJ,kBAAMuD,EAAW+3H,SAASl+H,KAAK,SAAAm+H,GAAA,OAAsC,IAAvBA,EAAY16C,MAC1D,SAAC26C,GACC7xD,EAAUkX,EAAO26C,QAlB7BnlI,EAAQ+kI,sCA2BR/kI,EAAQsrF,UAAU,eAAgBtrF,EAAQ+kI,oBAW1C/kI,EAAQolI,mBAAqB,SAASj8H,GAKpCzS,KAAKuuI,YAMLvuI,KAAKqkI,OAAS5xH,GAXhBnJ,EAAQolI,sCAkBRplI,EAAQolI,mBAAmBnuI,UAAUouI,SAAW,SAASzrI,GACvDlD,KAAKuuI,SAASthI,QAAQ,SAAS2hI,EAAcrrI,GACvCA,GAAKL,GACP0rI,EAAa37G,OAAOjzB,KAAKqkI,QAAQ,IAElCrkI,OAQLsJ,EAAQolI,mBAAmBnuI,UAAUsuI,UAAY,SAASD,GAExD,OADA5uI,KAAKuuI,SAASztI,KAAK8tI,GACZ5uI,KAAKuuI,SAASxtI,OAAS,GAIhCuI,EAAQkN,WAAW,yBACjBlN,EAAQolI,oBAqBVplI,EAAQwlI,cAAgB,SAASR,GAC/B,OACES,SAAU,iBAAkB,WAC5Bn7C,SAAU,IAOVC,KAAM,SAACC,EAAOpW,EAASqW,EAAOi7C,GAC5B,IAAMC,EAAcD,EAAM,GACpBE,EAAcF,EAAM,GACtBG,GAAgB,EAEdC,EAAad,EAAOv6C,EAAA,SACpBs7C,EAAaD,EAAWn8G,YAGJ71B,IAAtBgyI,EAAWt7C,IACbu7C,EAAWv7C,GAAO,GAEA,OAAhBm7C,IACFE,EAAeF,EAAYJ,UAAUO,IAIvC1xD,EAAQF,GAAG,QAAS,WAClBsW,EAAM8wC,OAAO,WACXsK,EAAYI,eAAeJ,EAAYK,YACvCL,EAAYM,cAKhBN,EAAYM,QAAU,WAChBN,EAAYK,YAA8B,OAAhBN,GAC5BA,EAAYN,SAASQ,GAEvBzxD,EAAQ+xD,YAAY,SAAUP,EAAYK,gBAvClDjmI,EAAQwlI,iCA8CRxlI,EAAQsrF,UAAU,UAAWtrF,EAAQwlI,yBAGtBxlI,8MCvLfomI,EAMA,cANAA,EAYA,8DC0BA,MAAAC,EAAA,SAAAl1H,GAqJA,IAAAjD,EAWA,GA9JAyxF,EAAA,QAAAlpG,KAAAC,MACAgkG,gBAAA2rC,EAAAzmC,iBACA0mC,gBAAAD,EAAAE,iBACA/rC,YAAA6rC,EAAA7rC,YACAI,cAAAyrC,EAAAxrC,iBAOAnkG,KAAA8rG,WAAArxF,EAAAkvB,UACAlvB,EAAAkvB,YAAA,QAAAmmG,cAQA9vI,KAAA+vI,wBAAA,SAAA9M,GACA,OAAAt5F,EAAA,QAAAqmG,WAAA/M,IACAt5F,EAAA,QAAAjN,YAAAumG,IAOAjjI,KAAAiwI,iBAAAx1H,EAAAy1H,gBACAz1H,EAAAy1H,gBAAAlwI,KAAA+vI,wBAMA/vI,KAAAmwI,uBAAA11H,EAAA21H,sBACA31H,EAAA21H,sBAAAzmG,EAAA,QAAAsiE,OAOAjsG,KAAAqwI,eAAA,KAOArwI,KAAAswI,gBAAA,KAMAtwI,KAAAuwI,YAAA,KAQAvwI,KAAAwwI,wBAAA,EAMAxwI,KAAAywI,WAAA,EAOAzwI,KAAA8kG,OAAA,IAAA4rC,EAAA,QAMA1wI,KAAA2kG,qBAAAvnG,IAAAqd,EAAAy/E,eACAz/E,EAAAy/E,eAAA,GAMAl6F,KAAA2wI,kBAAA,EAQA3wI,KAAA4wI,kBAAA,EAMA5wI,KAAA6wI,iBAOA7wI,KAAA0rG,SAAA,IAAAC,EAAA,SACA10F,OAAA,IAAA20F,EAAA,SACAzuD,iBAAA,EACAxO,QAAAl0B,EAAAk0B,QAEA2O,MAAA7iC,EAAA6iC,MAAA7iC,EAAA6iC,MACAqyF,EAAA9jC,0BACAruD,sBAAA,EACAC,wBAAA,IAQAz9C,KAAA+kG,kBACA56E,MAAAnqB,KAAAwhG,oBACAp3E,WAAApqB,KAAAkhG,yBACA32E,WAAAvqB,KAAAkhG,yBACA72E,QAAArqB,KAAA4hG,sBACA38F,WAAAjF,KAAAyhG,yBACA9hG,gBAAAK,KAAAqhG,8BACAr7F,aAAAhG,KAAA6hG,2BACAoD,OAAAjlG,KAAAklG,qBACAv0B,mBAAA3wE,KAAAglG,kCAQAhlG,KAAAuvB,QAAA,KAGA9U,EAAAxD,QACAjX,KAAAuvB,QAAA9U,EAAAxD,OACAO,EAAA,IAAAs5H,EAAA,QAAA9wI,KAAAuvB,QAAAqyD,eACAhiD,EAAA,QAAAtrB,OAAAtU,KAAAuvB,QAAAwhH,EAAA,EAAApqC,WACA3mG,KAAAgxI,iBAAAhxI,MACA4/B,EAAA,QAAAtrB,OAAAtU,KAAAuvB,QAAAwhH,EAAA,EAAAnqC,cACA5mG,KAAAixI,oBAAAjxI,OAEAwX,EAAAiD,EAAAjD,UAEAA,EACA,UAAAqkB,MAAA,wDAOA77B,KAAAi3F,UAAAz/E,EAEAxX,KAAAi3F,UAAAhqF,QAAAjN,KAAAkxI,YAAArjI,KAAA7N,OACA4/B,EAAA,QAAAtrB,OAAAtU,KAAAi3F,UAAAk6C,EAAA,EAAA3qC,IACAxmG,KAAAo3F,kBAAAp3F,MACA4/B,EAAA,QAAAtrB,OAAAtU,KAAAi3F,UAAAk6C,EAAA,EAAA1qC,OACAzmG,KAAAq3F,qBAAAr3F,MAMAA,KAAAoxI,kBAAA,MAIA/wI,OAAA6+B,EAAA,SAAA7+B,CAAAsvI,EAAA1mC,EAAA,SAOA0mC,EAAA0B,mCAAA,EAMA1B,EAAA2B,0CAAA,EAOA3B,EAAApvI,UAAA2wI,YAAA,SAAAz4H,GACA,MAAAM,EAAAN,EAAA6sE,cACAvsE,KAAA1U,YAAArE,KAAA+kG,kBACA/kG,KAAA+kG,iBAAAhsF,EAAA1U,WAAAtE,KAAAC,KAAAyY,EAAAM,GAEA,MAAAhK,EAAA/O,KAAAm8F,SACAptF,KAAAwiI,cAAAvxI,KAAA28E,aACA38E,KAAAwxI,sBAAAxxI,KAAAuwI,WAAAxhI,GAEA6wB,EAAA,QAAAtrB,OAAAmE,EAAAqnB,EAAA,EAAAmD,OACAjjC,KAAAylG,qBAAAzlG,OAQA2vI,EAAApvI,UAAAkxI,oBAAA,SAAAxnD,GACAjqF,KAAAywI,YACAzwI,KAAAywI,WAAA,EACAzwI,KAAA6R,cAAA,IAAA89H,EAAA7pC,MACA4pC,EAAA1vI,KAAAi3F,UAAAhN,MASA0lD,EAAApvI,UAAAmxI,eAAA,SAAAj5H,GACAzY,KAAA2xI,0BAAAl5H,GAGAzY,KAAAqwI,gBAAA,IAAArwI,KAAAi3F,UAAAksC,cACAnjI,KAAA0rG,SAAAl8E,YAAAquB,cAAA79C,KAAAqwI,gBACArwI,KAAAqwI,eAAA,MAEAzwG,EAAA,QAAAyxC,SAAA54D,EAAAqnB,EAAA,EAAAmD,OACAjjC,KAAAylG,qBAAAzlG,OAQA2vI,EAAApvI,UAAAoxI,0BAAA,SAAAl5H,GACA,MAAA0tF,EAAAnmG,KAAA8kG,OACoDsB,KACpDD,EAAAl5F,QAIA,SAAArQ,GACA6b,IAAA7b,EAAA6b,SACA2tF,EAAAtlG,KAAAlE,KAGA,QAAA2G,EAAA6iG,EAAArlG,OAAA,EAAwCwC,GAAA,IAAQA,EAChD4iG,EAAAx4D,OAAAy4D,EAAA7iG,KAQAosI,EAAApvI,UAAAq8E,UAAA,SAAAn5D,GACAzjB,KAAAqwI,iBAAA5sH,IACAzjB,KAAA0rG,SAAAl8E,YAAAquB,cAAA79C,KAAAqwI,gBACArwI,KAAAqwI,eAAA,MAEApnC,EAAA,QAAA1oG,UAAAq8E,UAAA78E,KAAAC,KAAAyjB,IAOAksH,EAAApvI,UAAA89C,OAAA,SAAAtvC,GACA/O,KAAA0rG,SAAArtD,OAAAtvC,GACAk6F,EAAA,QAAA1oG,UAAA89C,OAAAt+C,KAAAC,KAAA+O,IAQA4gI,EAAApvI,UAAAywI,iBAAA,SAAAz0G,GACAA,EAAA9jB,SACAzY,KAAAi3F,UAAAn2F,KAAAy7B,EAAA9jB,UASAk3H,EAAApvI,UAAA0wI,oBAAA,SAAA10G,GACAA,EAAA9jB,SACAzY,KAAAi3F,UAAAtpD,OAAApR,EAAA9jB,UASAk3H,EAAApvI,UAAA62F,kBAAA,SAAAnN,GACAjqF,KAAAkxI,YAAyCjnD,EAAA,UAQzC0lD,EAAApvI,UAAAklG,qBAAA,SAAAxb,GACA,IAAAjqF,KAAA4wI,iBAAA,CACA,MAAAn4H,EAA0CwxE,EAAA,OAC1CjqF,KAAA0xI,eAAAj5H,GACAzY,KAAAkxI,YAAAz4H,KASAk3H,EAAApvI,UAAA82F,qBAAA,SAAApN,GACA,MAAAxxE,EAAwCwxE,EAAA,QACxCjqF,KAAA0xI,eAAAj5H,IASAk3H,EAAApvI,UAAAihG,oBAAA,SAAA/oF,EAAAM,GACA,MAAAnZ,EAAAmZ,EAAAlW,iBACA4lG,GACAhwF,UACAM,WACAuuF,SAAA1nG,MAEAI,KAAA8kG,OAAA4D,OAAA3vF,EAAApX,YAAA8mG,IASAknC,EAAApvI,UAAAkhG,yBAAA,SAAAhpF,EAAAM,GACA,MAAAnT,EAAAmT,EAAAlW,iBACA,IAAAjD,EAAA2D,EAAAC,EAAAilG,EACA,IAAAllG,EAAA,EAAAC,EAAAoC,EAAA7E,OAAiCwC,EAAAC,IAAQD,EAEzCklG,GACAhwF,UACAM,WACAnF,OAAArQ,GACAL,MAAAK,EACA+jG,SANA1nG,EAAAgG,EAAArC,GAMA3D,IAEAI,KAAA8kG,OAAA4D,OAAA3vF,EAAApX,YAAA8mG,IAUAknC,EAAApvI,UAAA2gG,yBAAA,SAAAzoF,EAAAM,GACA,MAAAnZ,EAAAmZ,EAAAlW,iBACA,IAAAU,EAAAC,EAAA8jG,EAAAmB,EACA,IAAAllG,EAAA,EAAAC,EAAA5D,EAAAmB,OAAA,EAA0CwC,EAAAC,IAAQD,EAElDklG,GACAhwF,UACAM,WACA7V,MAAAK,EACA+jG,QALAA,EAAA1nG,EAAAiB,MAAA0C,IAAA,IAOAvD,KAAA8kG,OAAA4D,OAAAroG,OAAAoE,EAAA,eAAApE,CAAAinG,GAAAmB,IAUAknC,EAAApvI,UAAA8gG,8BAAA,SAAA5oF,EAAAM,GACA,MAAA0gB,EAAA1gB,EAAAlW,iBACA,IAAAjD,EAAA2D,EAAAC,EAAA6B,EAAAyD,EAAAw+F,EAAAmB,EACA,IAAApjG,EAAA,EAAAyD,EAAA2wB,EAAA14B,OAAgCsE,EAAAyD,IAAQzD,EAExC,IAAA9B,EAAA,EAAAC,GADA5D,EAAA65B,EAAAp0B,IACAtE,OAAA,EAA4CwC,EAAAC,IAAQD,EAEpDklG,GACAhwF,UACAM,WACAnF,OAAAvO,GACAnC,MAAAK,EACA+jG,QANAA,EAAA1nG,EAAAiB,MAAA0C,IAAA,IAQAvD,KAAA8kG,OAAA4D,OAAAroG,OAAAoE,EAAA,eAAApE,CAAAinG,GAAAmB,IAWAknC,EAAApvI,UAAAqhG,sBAAA,SAAAnpF,EAAAM,GACA,MAAA2f,EAAA3f,EAAAlW,iBACA,IAAAjD,EAAA2D,EAAAC,EAAA6B,EAAAyD,EAAAw+F,EAAAmB,EACA,IAAApjG,EAAA,EAAAyD,EAAA4vB,EAAA33B,OAAgCsE,EAAAyD,IAAQzD,EAExC,IAAA9B,EAAA,EAAAC,GADA5D,EAAA84B,EAAArzB,IACAtE,OAAA,EAA4CwC,EAAAC,IAAQD,EAEpDklG,GACAhwF,UACAM,WACAnF,OAAAvO,GACAnC,MAAAK,EACA+jG,QANAA,EAAA1nG,EAAAiB,MAAA0C,IAAA,IAQAvD,KAAA8kG,OAAA4D,OAAAroG,OAAAoE,EAAA,eAAApE,CAAAinG,GAAAmB,IAWAknC,EAAApvI,UAAAshG,2BAAA,SAAAppF,EAAAM,GACA,MAAAlQ,EAAAkQ,EAAAlW,iBACA,IAAAjD,EAAA2D,EAAAC,EAAA6B,EAAAyD,EAAAi7C,EAAA4kD,EAAAjwE,EAAA4uE,EAAAmB,EACA,IAAA1kD,EAAA,EAAA4kD,EAAA9/F,EAAA9H,OAAmCgjD,EAAA4kD,IAAQ5kD,EAE3C,IAAA1+C,EAAA,EAAAyD,GADA4vB,EAAA7vB,EAAAk7C,IACAhjD,OAAkCsE,EAAAyD,IAAQzD,EAE1C,IAAA9B,EAAA,EAAAC,GADA5D,EAAA84B,EAAArzB,IACAtE,OAAA,EAA8CwC,EAAAC,IAAQD,EAEtDklG,GACAhwF,UACAM,WACAnF,OAAAvO,EAAA0+C,GACA7gD,MAAAK,EACA+jG,QANAA,EAAA1nG,EAAAiB,MAAA0C,IAAA,IAQAvD,KAAA8kG,OAAA4D,OAAAroG,OAAAoE,EAAA,eAAApE,CAAAinG,GAAAmB,IAkBAknC,EAAApvI,UAAA2kG,qBAAA,SAAAzsF,EAAAM,GACA,MAAAnZ,EAAAmZ,EAAA+qE,YACA8tD,GACAn5H,UACAM,WACA7V,MAAAysI,EAAA0B,mCACA/pC,SAAA1nG,MAEAiyI,GACAp5H,UACAM,WACA7V,MAAAysI,EAAA2B,0CACAhqC,SAAA1nG,MAEAkyI,GAAAF,EAAAC,GACAD,EAAAE,gBAAAD,EAAAC,kBACA9xI,KAAA8kG,OAAA4D,OAAAroG,OAAAoE,EAAA,6BAAApE,CAAAT,GAAAgyI,GACA5xI,KAAA8kG,OAAA4D,OAAA3vF,EAAApX,YAAAkwI,IASAlC,EAAApvI,UAAAykG,iCAAA,SAAAvsF,EAAAM,GACA,MAAAk4D,EAAAl4D,EAAA44D,qBACA,QAAApuE,EAAA,EAAiBA,EAAA0tE,EAAAlwE,SAAuBwC,EACxCvD,KAAA+kG,iBAAA9zB,EAAA1tE,GAAAc,WAAAtE,KACAC,KAAAyY,EAAAw4D,EAAA1tE,KAUAosI,EAAApvI,UAAAwxI,6BAAA,SAAAnyI,GACA,IAAAoyI,EAAAhyI,KAAAqwI,eACA,GAAA2B,EAIG,CAC2CA,EAAA1sD,cAC9CllF,eAAAR,QALAoyI,EAAA,IAAAtrG,EAAA,YAAAvc,EAAA,QAAAvqB,IACAI,KAAAqwI,eAAA2B,EACAhyI,KAAA0rG,SAAAl8E,YAAAkuB,WAAAs0F,GAKA,OAAAA,GAUArC,EAAAsC,gBAAA,SAAA5vF,EAAAzmB,GACA,OAAAymB,EAAAn/C,MAAA04B,EAAA14B,OAUAysI,EAAAzmC,iBAAA,SAAAjf,GACA,IAAAjqF,KAAA8rG,WAAA7hB,GACA,SAEAjqF,KAAAwxI,sBAAAvnD,EAAA8c,MAAA9c,EAAAl7E,KACA,MAAAi4F,EAAA/c,EAAAl7E,IAAAm4F,uBAAAjd,EAAA8c,OACA/mG,KAAA6wI,cAAA9vI,OAAA,EACAf,KAAAywI,WAAA,EACA,MAAAuB,EAAAhyI,KAAAqwI,eACA,GAAA2B,EAAA,CACA,MAAAE,KAEA93C,EAD8C43C,EAAA1sD,cAC9CziF,iBACAsvI,EAAA9xI,OAAAoE,EAAA,eAAApE,EAAA+5F,IACAg4C,EAAApyI,KAAA8kG,OAAAuC,YAAA8qC,GACAE,KACAD,EAAAnqC,KAAA0nC,EAAAsC,iBACA,QAAA1uI,EAAA,EAAAC,EAAA4uI,EAAArxI,OAAmDwC,EAAAC,IAAQD,EAAA,CAC3D,MAAA+uI,EAAAF,EAAA7uI,GACA+jG,EAAAgrC,EAAAhrC,QACA,IAAA3zF,EAAAtT,OAAA6+B,EAAA,OAAA7+B,CAAAiyI,EAAA75H,SACA,MAAA7E,EAAA0+H,EAAA1+H,MAOA,GANAA,IACAD,GAAA,IAAAC,EAAAnC,KAAA,MAEA4gI,EAAA1+H,KACA0+H,EAAA1+H,GAAA,IAAA/M,MAAA,IAEA0rI,EAAAv5H,SAAA1U,YAAAmmG,EAAA,QAAAhD,QACA8qC,EAAApvI,QAAAysI,EAAA2B,0CAAA,CAEA,MAAAiB,EAAA5C,EAAA6C,sBAAAxrC,EAAAsrC,GACA9wG,EAAA,QAAAixG,OAAAF,EAAAn4C,KAAAi4C,EAAA1+H,GAAA,KACA3T,KAAA6wI,cAAA/vI,MAAAwxI,EAAA,IACAD,EAAA1+H,GAAA,GAAA2+H,QAEO,GAAA9wG,EAAA,QAAAixG,OAAAnrC,EAAA,GAAAlN,KACPi4C,EAAA1+H,GAAA,GACA3T,KAAA6wI,cAAA/vI,MAAAwxI,EAAA,IACAD,EAAA1+H,GAAA,GAAA2+H,OACO,GAAA9wG,EAAA,QAAAixG,OAAAnrC,EAAA,GAAAlN,KACPi4C,EAAA1+H,GAAA,IAGA,IAAA2+H,EAAAv5H,SAAA1U,YACAmmG,EAAA,QAAA3M,aACAy0C,EAAAv5H,SAAA1U,YACAmmG,EAAA,QAAAjmG,oBACA8tI,EAAA1+H,GAAA,IACA,IAAA0+H,EAAA1+H,GAAA,GAAAzQ,MACA,SAGAlD,KAAA6wI,cAAA/vI,MAAAwxI,EAAA,IACAD,EAAA1+H,GAAA,GAAA2+H,OACOtyI,KAAAmwI,uBAAAlmD,IAAA5pF,OAAA6+B,EAAA,OAAA7+B,CAAAinG,KAAAtnG,KAAAswI,kBACP+B,EAAA1+H,GAAA,KAAA0+H,EAAA1+H,GAAA,IACAu+H,EAAApxI,MAAAwxI,EAAAl4C,IAGA83C,EAAAnxI,QACAf,KAAAyxI,oBAAAxnD,GAEA,QAAA5kF,EAAA6sI,EAAAnxI,OAAA,EAA2CsE,GAAA,IAAQA,EACnDrF,KAAA0yI,cAAA5qF,MAAA9nD,KAAAkyI,EAAA7sI,IAGA,QAAArF,KAAAqwI,gBASAV,EAAAE,iBAAA,SAAA5lD,GACAjqF,KAAAwwI,wBAAA,EACAxwI,KAAAyxI,oBAAAxnD,GAEA,MAAAmQ,EAAAnQ,EAAAzoD,WACA,QAAAj+B,EAAA,EAAAC,EAAAxD,KAAA6wI,cAAA9vI,OAAiDwC,EAAAC,IAAQD,EAAA,CACzD,MAAAovI,EAAA3yI,KAAA6wI,cAAAttI,GACAklG,EAAAkqC,EAAA,GACA/+H,EAAA60F,EAAA70F,MACAmF,EAAA0vF,EAAA1vF,SACA,IAAAnZ,EACA,MAAA0nG,EAAAmB,EAAAnB,QACApkG,EAAAyvI,EAAA,GAEA,KAAAv4C,EAAAr5F,OAAAgY,EAAAooF,aACA/G,EAAAt5F,KAAAwmG,EAAApkG,GAAAk3F,EAAAr5F,SAGA,OAAAgY,EAAA1U,WACA,KAAAmmG,EAAA,QAAA9zD,MACA92C,EAAAw6F,EACAkN,EAAA,GAAAA,EAAA,GAAAlN,EACA,MACA,KAAAoQ,EAAA,QAAA3kG,aACAjG,EAAAmZ,EAAAlW,kBACA4lG,EAAAvlG,OAAAk3F,EACAkN,EAAA,GAAAA,EAAA,GAAAlN,EACA,MACA,KAAAoQ,EAAA,QAAA3M,aACAj+F,EAAAmZ,EAAAlW,kBACA4lG,EAAAvlG,SAAAk3F,EACAkN,EAAApkG,GAAAk3F,EACA,MACA,KAAAoQ,EAAA,QAAAjmG,kBAKA,KAAAimG,EAAA,QAAA1M,SACAl+F,EAAAmZ,EAAAlW,kBACA+Q,EAAA,IAAA60F,EAAAvlG,SAAAk3F,EACAkN,EAAApkG,GAAAk3F,EACA,MACA,KAAAoQ,EAAA,QAAAzhG,eACAnJ,EAAAmZ,EAAAlW,kBACA+Q,EAAA,IAAAA,EAAA,IAAA60F,EAAAvlG,SAAAk3F,EACAkN,EAAApkG,GAAAk3F,EACA,MACA,KAAAoQ,EAAA,QAAAhD,OACAF,EAAA,GAAAA,EAAA,GAAAlN,EACAqO,EAAAvlG,QAAAysI,EAAA0B,oCACArxI,KAAA4wI,kBAAA,EACA73H,EAAA6sE,UAAAwU,GACAp6F,KAAA4wI,kBAAA,IAEA5wI,KAAA4wI,kBAAA,EACA73H,EAAA4+F,UAAAn2E,EAAA,QAAA+mE,SAAAxvF,EAAA+qE,YAAAsW,IACAp6F,KAAA4wI,kBAAA,GAOAhxI,GACAI,KAAA4yI,wBAAA75H,EAAAnZ,GAGAI,KAAA+xI,6BAAA33C,IAUAu1C,EAAAxrC,eAAA,SAAAla,GACA,IAAAwe,EACA1vF,EACA,QAAAxV,EAAAvD,KAAA6wI,cAAA9vI,OAAA,EAA6CwC,GAAA,IAAQA,EAGrD,IADAwV,GADA0vF,EAAAzoG,KAAA6wI,cAAAttI,GAAA,IACAwV,UACA1U,YAAAmmG,EAAA,QAAAhD,OAAA,CAEA,MAAA5nG,EAAAmZ,EAAA+qE,YACA8tD,EAAAnpC,EAAAqpC,gBAAA,GACAD,EAAAppC,EAAAqpC,gBAAA,GACAF,EAAAtqC,QAAA,GAAAsqC,EAAAtqC,QAAA,GAAA1nG,EACAiyI,EAAAvqC,QAAA,GAAAuqC,EAAAvqC,QAAA,GAAA1nG,EACAI,KAAA8kG,OAAA+tC,OAAAxyI,OAAAoE,EAAA,6BAAApE,CAAAT,GAAAgyI,GACA5xI,KAAA8kG,OAAA+tC,OAAA95H,EAAApX,YAAAkwI,QAEA7xI,KAAA8kG,OAAA+tC,OAAAxyI,OAAAoE,EAAA,eAAApE,CAAAooG,EAAAnB,SACAmB,GAQA,OALAzoG,KAAAywI,YACAzwI,KAAA6R,cAAA,IAAA89H,EAAA7pC,MACA4pC,EAAA1vI,KAAAi3F,UAAAhN,IACAjqF,KAAAywI,WAAA,IAEA,GAYAd,EAAA7rC,YAAA,SAAAm/B,GACA,KAAAA,aAAAt1B,EAAA,SACA,SAIA,IAAAmlC,EAmBA,OArBA9yI,KAAAoxI,kBAAAnO,EAGAA,EAAAl0H,IAAAmgB,UAAA6jH,kBACA9P,EAAA31H,MAAAu/F,EAAA,EAAAC,aACA9sG,KAAAgmG,wBACAhmG,KAAAotG,mBAAA61B,GAEAjjI,KAAAqwI,gBAAArwI,KAAAiwI,iBAAAhN,KAKA6P,IAJA7P,EAAA31H,MAAAu/F,EAAA,EAAAmmC,cACAhzI,KAAAwwI,yBACAxwI,KAAAizI,eAMAhQ,EAAA31H,MAAAu/F,EAAA,EAAAmmC,cACAhzI,KAAAwwI,wBAAA,GAGAvnC,EAAA,QAAAnF,YAAA/jG,KAAAC,KAAAijI,KACA6P,GAQAnD,EAAApvI,UAAA6sG,mBAAA,SAAAnjB,GACAjqF,KAAAuwI,WAAAtmD,EAAA8c,MACA/mG,KAAAwxI,sBAAAvnD,EAAA8c,MAAA9c,EAAAl7E,MASA4gI,EAAApvI,UAAAixI,sBAAA,SAAAzqC,EAAAh4F,GACA,MAAAi4F,EAAAj4F,EAAAm4F,uBAAAH,GACAlC,EAAA,SAAAxiD,EAAAzmB,GACA,OAAA+zG,EAAAuD,mCAAAlsC,EAAA3kD,GACAstF,EAAAuD,mCAAAlsC,EAAAprE,IAGAwrE,EAAA/mG,OAAAoE,EAAA,OAAApE,QAAAoE,EAAA,6BAAApE,CAAA2mG,GACAj4F,EAAAmgB,UAAAC,gBAAAnvB,KAAA2kG,iBAGAz4F,EADAlM,KAAA8kG,OACAuC,YAAAD,GACA,GAAAl7F,EAAAnL,OAAA,GACAmL,EAAA+7F,KAAApD,GACA,MAAAjoG,EAAAsP,EAAA,GACAg8F,EAAAtrG,EAAA0qG,QACA,IAAAlN,EAAAu1C,EAAA6C,sBAAAxrC,EAAApqG,GACA,MAAAorG,EAAAj5F,EAAAo5F,uBAAA/N,GACA,IAAAqN,EAAAjmE,EAAA,QAAA+mE,SAAAxB,EAAAiB,GACA,GAAAP,GAAAznG,KAAA2kG,gBAAA,CACA,MAAAwuC,KAEA,GAAAv2I,EAAAmc,SAAA1U,YAAAmmG,EAAA,QAAAhD,QACA5qG,EAAAsG,QAAAysI,EAAA2B,0CAEAtxI,KAAA2wI,kBAAA,EACA3wI,KAAA+xI,6BAAA33C,OACO,CACP,MAAAsN,EAAA34F,EAAAo5F,uBAAAD,EAAA,IACAP,EAAA54F,EAAAo5F,uBAAAD,EAAA,IACAN,EAAApmE,EAAA,QAAAl8B,gBAAA0iG,EAAAN,GACAG,EAAArmE,EAAA,QAAAl8B,gBAAA0iG,EAAAL,GAQA,IAAAL,EAPAG,EAAA5lG,KAAAC,KAAAD,KAAAk6D,IAAA6rC,EAAAC,IACA7nG,KAAA2wI,iBAAAlpC,GAAAznG,KAAA2kG,gBACA3kG,KAAA2wI,mBACAv2C,EAAAwN,EAAAC,EACAK,EAAA,GAAAA,EAAA,IAEAloG,KAAA+xI,6BAAA33C,GAEA,QAAA72F,EAAA,EAAAC,EAAA0I,EAAAnL,OAA0CwC,EAAAC,IAC1C8jG,EAAAp7F,EAAA3I,GAAA+jG,QACA9lE,EAAA,QAAAixG,OAAAvqC,EAAA,GAAAZ,EAAA,KACA9lE,EAAA,QAAAixG,OAAAvqC,EAAA,GAAAZ,EAAA,KACA9lE,EAAA,QAAAixG,OAAAvqC,EAAA,GAAAZ,EAAA,KACA9lE,EAAA,QAAAixG,OAAAvqC,EAAA,GAAAZ,EAAA,OALkD/jG,EAMlD4vI,EAAA9yI,OAAA6+B,EAAA,OAAA7+B,CAAAinG,KAAA,EASA,OAFA6rC,EAAA9yI,OAAA6+B,EAAA,OAAA7+B,CAAA6nG,KAAA,OACAloG,KAAAswI,gBAAA6C,IAIAnzI,KAAAqwI,iBACArwI,KAAA0rG,SAAAl8E,YAAAquB,cAAA79C,KAAAqwI,gBACArwI,KAAAqwI,eAAA,OAcAV,EAAAuD,mCAAA,SAAAE,EAAA3qC,GACA,MAAA1vF,EAAA0vF,EAAA1vF,SAEA,GAAAA,EAAA1U,YAAAmmG,EAAA,QAAAhD,OAAA,CACA,MAAA6rC,EAAqD,EAErD,GAAA5qC,EAAAvlG,QAAAysI,EAAA2B,0CAAA,CACA,MAAAgC,EACA9xG,EAAA,QAAAl8B,gBAAA+tI,EAAAvvD,YAAAsvD,GACAG,EACA1xI,KAAAC,KAAAwxI,GAAAD,EAAAr0C,YACA,OAAAu0C,KAGA,OAAA/xG,EAAA,QAAAsnE,yBAAAsqC,EAAA3qC,EAAAnB,UAYAqoC,EAAA6C,sBAAA,SAAAY,EAAA3qC,GACA,MAAA1vF,EAAA0vF,EAAA1vF,SAEA,OAAAA,EAAA1U,YAAAmmG,EAAA,QAAAhD,QACAiB,EAAAvlG,QAAAysI,EAAA2B,0CACAv4H,EAAAy6H,gBAAAJ,GAEA5xG,EAAA,QAAA8mE,iBAAA8qC,EAAA3qC,EAAAnB,UASAqoC,EAAApvI,UAAAmyI,cAAA,SAAAjqC,EAAArO,GACA,MAAAkN,EAAAmB,EAAAnB,QACA7uF,EAAAgwF,EAAAhwF,QACAM,EAAA0vF,EAAA1vF,SACAnF,EAAA60F,EAAA70F,MACA1Q,EAAkCulG,EAAA,MAClC,IAAA7oG,EAEA,KAAAw6F,EAAAr5F,OAAAgY,EAAAooF,aACA/G,EAAAt5F,KAAA,GAGA,OAAAiY,EAAA1U,WACA,KAAAmmG,EAAA,QAAAjmG,kBAIA,KAAAimG,EAAA,QAAA1M,SACAl+F,EAAAmZ,EAAAlW,kBACA+Q,EAAA,IAAAF,OAAAxQ,EAAA,IAAAk3F,GACA,MACA,KAAAoQ,EAAA,QAAAzhG,eACAnJ,EAAAmZ,EAAAlW,kBACA+Q,EAAA,IAAAA,EAAA,IAAAF,OAAAxQ,EAAA,IAAAk3F,GACA,MACA,KAAAoQ,EAAA,QAAA3M,aACAj+F,EAAAmZ,EAAAlW,kBACA6Q,OAAAxQ,EAAA,IAAAk3F,GACA,MACA,QACA,OAGAp6F,KAAA4yI,wBAAA75H,EAAAnZ,GACA,MAAA6zI,EAAAzzI,KAAA8kG,OACA2uC,EAAA9lG,OAAA86D,GACAzoG,KAAA0zI,sBAAA36H,EAAA7V,EAAA0Q,EAAA,GACA,MAAA+/H,GACArsC,WAAA,GAAAlN,GACA3hF,UACAM,WACAnF,QACA1Q,SAEAuwI,EAAA/qC,OAAAroG,OAAAoE,EAAA,eAAApE,CAAAszI,EAAArsC,SACAqsC,GACA3zI,KAAA6wI,cAAA/vI,MAAA6yI,EAAA,IAEA,MAAAC,GACAtsC,SAAAlN,EAAAkN,EAAA,IACA7uF,UACAM,WACAnF,QACA1Q,QAAA,GAEAuwI,EAAA/qC,OAAAroG,OAAAoE,EAAA,eAAApE,CAAAuzI,EAAAtsC,SACAssC,GACA5zI,KAAA6wI,cAAA/vI,MAAA8yI,EAAA,IACA5zI,KAAAwwI,wBAAA,GAQAb,EAAApvI,UAAA0yI,YAAA,WACA,GAAAjzI,KAAAoxI,mBAAApxI,KAAAoxI,kBAAA9jI,MAAAu/F,EAAA,EAAAG,YAAA,CACA,MAAA/iB,EAAAjqF,KAAAoxI,kBAMA,OALApxI,KAAAyxI,oBAAAxnD,GACAjqF,KAAA6zI,gBACA7zI,KAAA6R,cAAA,IAAA89H,EAAA7pC,MACA4pC,EAAA1vI,KAAAi3F,UAAAhN,IACAjqF,KAAAywI,WAAA,GACA,EAEA,UAQAd,EAAApvI,UAAAszI,cAAA,WACA,MAAAC,EAAA9zI,KAAA6wI,cACAkD,KACA,IACA/P,EAAApkI,EAAA+yI,EAAA55H,EAAAxV,EAAAL,EAAA2xD,EACAm/E,EAAAj/E,EAAA0zC,EAAA90F,EAFAsgI,GAAA,EAGA,IAAA1wI,EAAAuwI,EAAA/yI,OAAA,EAAmCwC,GAAA,IAAQA,EAE3CklG,GADAkqC,EAAAmB,EAAAvwI,IACA,GACAoQ,EAAAtT,OAAA6+B,EAAA,OAAA7+B,CAAAooG,EAAAhwF,SACAgwF,EAAA70F,QAEAD,GAAA,IAAA80F,EAAA70F,MAAAnC,KAAA,MAEAkC,KAAAogI,IACAA,EAAApgI,OAEA,IAAAg/H,EAAA,IACAoB,EAAApgI,GAAAohD,MAAA0zC,EACAsrC,EAAApgI,GAAAzQ,MAAAulG,EAAAvlG,OACK,GAAAyvI,EAAA,KACLoB,EAAApgI,GAAAkhD,KAAA4zC,EACAsrC,EAAApgI,GAAAzQ,MAAAulG,EAAAvlG,MAAA,GAIA,IAAAyQ,KAAAogI,EAAA,CAiBA,OAhBAh/E,EAAAg/E,EAAApgI,GAAAohD,MACAF,EAAAk/E,EAAApgI,GAAAkhD,MAEAm/E,GADA9wI,EAAA6wI,EAAApgI,GAAAzQ,OACA,GAMA,IACA8wI,EAAA,GAIAhQ,EADApkI,GADAmZ,GAPA0vF,OADArrG,IAAAy3D,EACAA,EAEAE,GAKAh8C,UACAlW,iBAEAoxI,GAAA,EACAl7H,EAAA1U,WACA,KAAAmmG,EAAA,QAAAjmG,kBACA3E,EAAA6oG,EAAA70F,MAAA,IAAA7S,OAAA,IACAnB,EAAA6oG,EAAA70F,MAAA,IAAAF,OAAAxQ,EAAA,GACA+wI,GAAA,GAEA,MACA,KAAAzpC,EAAA,QAAA3M,YACAj+F,EAAAmB,OAAA,IACAnB,EAAA8T,OAAAxQ,EAAA,GACA+wI,GAAA,GAEA,MACA,KAAAzpC,EAAA,QAAAzhG,cACAi7H,IAAAv7B,EAAA70F,MAAA,IAEA,KAAA42F,EAAA,QAAA1M,SACAkmC,IAAAv7B,EAAA70F,MAAA,KACA7S,OAAA,IACAmC,GAAA8gI,EAAAjjI,OAAA,IACAmC,EAAA,GAEA8gI,EAAAtwH,OAAAxQ,EAAA,GACA+wI,GAAA,EACA,IAAA/wI,IAEA8gI,EAAA39G,MACA29G,EAAAljI,KAAAkjI,EAAA,IACAgQ,EAAAhQ,EAAAjjI,OAAA,IAQA,GAAAkzI,EAAA,CACAj0I,KAAA4yI,wBAAA75H,EAAAnZ,GACA,MAAAu4B,KASA,QARA/6B,IAAAy3D,IACA70D,KAAA8kG,OAAAn3D,OAAAknB,GACA18B,EAAAr3B,KAAA+zD,EAAAyyC,QAAA,UAEAlqG,IAAA23D,IACA/0D,KAAA8kG,OAAAn3D,OAAAonB,GACA58B,EAAAr3B,KAAAi0D,EAAAuyC,QAAA,UAEAlqG,IAAAy3D,QAAAz3D,IAAA23D,EAAA,CACA,MAAA4+E,GACA//H,MAAA60F,EAAA70F,MACA6E,QAAAgwF,EAAAhwF,QACAM,SAAA0vF,EAAA1vF,SACA7V,MAAA8wI,EACA1sC,QAAAnvE,GAEAn4B,KAAA8kG,OAAA4D,OAAAroG,OAAAoE,EAAA,eAAApE,CAAAszI,EAAArsC,SACAqsC,GAEA3zI,KAAA0zI,sBAAA36H,EAAA7V,EAAAulG,EAAA70F,OAAA,GACA5T,KAAAqwI,iBACArwI,KAAA0rG,SAAAl8E,YAAAquB,cAAA79C,KAAAqwI,gBACArwI,KAAAqwI,eAAA,MAEAyD,EAAA/yI,OAAA,GAIA,OAAAkzI,GASAtE,EAAApvI,UAAAqyI,wBAAA,SAAA75H,EAAAnZ,GACAI,KAAA4wI,kBAAA,EACA73H,EAAA3Y,eAAAR,GACAI,KAAA4wI,kBAAA,GAWAjB,EAAApvI,UAAAmzI,sBAAA,SACA36H,EAAA7V,EAAA0Q,EAAAyjG,GACAr3G,KAAA8kG,OAAAuB,gBAAAttF,EAAApX,YAAA,SAAA2wI,GACAA,EAAAv5H,oBACA3b,IAAAwW,QAAAxW,IAAAk1I,EAAA1+H,OACAvT,OAAA0M,EAAA,OAAA1M,CAAAiyI,EAAA1+H,WACA0+H,EAAApvI,UACAovI,EAAApvI,OAAAm0G,MASAs4B,EAAA9jC,wBAAA,WACA,MAAAvuD,EAAAu9B,EAAA,QAAA2xB,uBACA,gBAAA/zF,EAAA6lB,GACA,OAAAgf,EAAAktD,EAAA,QAAA9zD,SAkBAi5F,EAAA7pC,MAAA,SAAAx4F,EAAAkK,EAAA08H,GAEApuC,EAAA,QAAA/lG,KAAAC,KAAAsN,GAOAtN,KAAAwX,WAOAxX,KAAAijI,gBAAAiR,GAEA7zI,OAAA6+B,EAAA,SAAA7+B,CAAAsvI,EAAA7pC,QAAA,SACArmG,EAAA,iGC/sCA,QAAAhD,EAAA,MACAA,EAAA,MACAA,EAAA,yDA8BA,IAAM6M,EAAU,SAASoJ,GAMvB1S,KAAKi9C,WAOLj9C,KAAKqkI,OAAS3xH,qDAYhBpJ,EAAQ/I,UAAU4zI,aAAe,SAAS1mH,EAAW2mH,EACnDC,GAAqB,IAAAhoI,EAAArM,KACjBs0I,EAAUt0I,KAAKi9C,QAAQxvB,GACtB6mH,IACHA,EAAUt0I,KAAKi9C,QAAQxvB,OAGzB,IAAM4jD,EAAWrxE,KAAKqkI,OAAOpxH,OAC3BmhI,EAAKz3D,UACL,SAACzpE,EAAQC,GACHD,IAAWC,IAGXD,EACF7G,EAAKkoI,iBAAiB9mH,EAAW2mH,GAEjC/nI,EAAKmoI,iBAAiB/mH,MAU5B,GANA6mH,EAAQxzI,MACNszI,KAAMA,EACNK,YAAaJ,IAAuB,EACpChjE,SAAUA,IAGR7jE,EAAA1D,QAAY4qI,eAAgB,CAE9B,IAAIC,EAAe,EACnBL,EAAQrnI,QAAQ,SAAC2nI,GACXA,EAAMH,aACRE,MAGJnnI,EAAA1D,QAAY2D,OACVknI,GAAgB,EADlB,uCAC4DlnH,KAWhEnkB,EAAQ/I,UAAUs0I,eAAiB,SAASpnH,EAAW2mH,GACrD,IAAME,EAAUt0I,KAAKi9C,QAAQxvB,GAC7B,GAAI6mH,EACF,IAAK,IAAI/wI,EAAI,EAAGA,EAAI+wI,EAAQvzI,OAAQwC,IAClC,GAAI+wI,EAAQ/wI,GAAG6wI,MAAQA,EAAM,CAC3BE,EAAQ/wI,GAAG8tE,WACXijE,EAAQ5gI,OAAOnQ,EAAG,GAClB,QAYR+F,EAAQ/I,UAAUu0I,gBAAkB,SAASrnH,GAC3C,IAAM6mH,EAAUt0I,KAAKi9C,QAAQxvB,GAC7B,GAAI6mH,EAAS,CACX,IAAK,IAAI/wI,EAAI,EAAGA,EAAI+wI,EAAQvzI,OAAQwC,IAClC+wI,EAAQ/wI,GAAG8tE,kBAENrxE,KAAKi9C,QAAQxvB,KAUxBnkB,EAAQ/I,UAAUw0I,aAAe,SAASX,GACxCA,EAAKx3D,WAAU,IASjBtzE,EAAQ/I,UAAUy0I,eAAiB,SAASZ,GAC1CA,EAAKx3D,WAAU,IAWjBtzE,EAAQ/I,UAAUg0I,iBAAmB,SAAS9mH,EAAW2mH,GAEvD,IADA,IAAME,EAAUt0I,KAAKi9C,QAAQxvB,GACpBlqB,EAAI,EAAGA,EAAI+wI,EAAQvzI,OAAQwC,IAC9B6wI,GAAQE,EAAQ/wI,GAAG6wI,MACrBE,EAAQ/wI,GAAG6wI,KAAKx3D,WAAU,IAYhCtzE,EAAQ/I,UAAUi0I,iBAAmB,SAAS/mH,GAK5C,IAJA,IAAM6mH,EAAUt0I,KAAKi9C,QAAQxvB,GACzBgnH,EAAc,KACdQ,GAAgB,EAEX1xI,EAAI,EAAGA,EAAI+wI,EAAQvzI,OAAQwC,IAClC0xI,EAAgBA,GAAiBX,EAAQ/wI,GAAG6wI,KAAKz3D,YAE7C23D,EAAQ/wI,GAAGkxI,cACbA,EAAcH,EAAQ/wI,GAAG6wI,MAIxBa,GAAiC,OAAhBR,GACpBA,EAAY73D,WAAU,KAK1BtzE,EAAQ8I,OAASC,QAAQD,OAAO,2BACjBI,QAAQ,sBAAuBlJ,aAG/BA,uGCvMf,QAAA7M,EAAA,QACAA,EAAA,MACY2M,0JAAZ3M,EAAA,QACAA,EAAA,SACAA,EAAA,yDAcA,IAAM6M,EAAU,SAAS0W,EAAQ9I,GAE/B,IAAMuD,OAA0Brd,IAAhB8Z,EAA4BA,KAU5C,GARA4lG,EAAAhzG,QAAuB/J,KAAKC,KAAMya,GAOlCza,KAAK4wG,iBACuBxzG,IAAxBqd,EAAQm2F,YACV5wG,KAAK4wG,YAAcn2F,EAAQm2F,gBACtB,CACL5wG,KAAK4wG,YAAcxiB,SAAS8iB,cAAc,QAC1ClxG,KAAK4wG,YAAYO,YAAc,sCAC/B,IAAM+jC,EAAK9mD,SAAS8iB,cAAc,MAClCgkC,EAAG/jC,YAAc,8CACjBnxG,KAAK4wG,YAAYtyG,YAAY42I,GAO/Bl1I,KAAKggB,OAASA,GAIhB5W,EAAO2B,SAASzB,EAAhBwzG,EAAAhzG,SAMAR,EAAQ/I,UAAUixG,sBAAwB,SAASl0D,EAAOrmC,GACxD,OAAO,IAAA8rH,EAAAj5H,SACLwD,KAA2C,aAC3C2J,OAAQA,EACRqmC,MAAOA,KAQXh0C,EAAQ/I,UAAUmyG,cAAgB,SAASnmG,GACzC,IAAMwwC,EAAOvvC,EAAA1D,QAAY0yE,iBAAiBx8E,KAAKivG,cAAc3pB,cAAhDwa,EAAAh2F,SACP2rB,EAAOz1B,KAAKm8F,SAASjtE,UAAUyS,gBACrCn0B,EAAA1D,QAAY2D,OAAOgoB,GAGnBlpB,EAFeuwG,EAAAhzG,QAAuBkoG,mBAAmBj1D,EAAMtnB,EAAMz1B,KAAK8wG,UAAW9wG,KAAKggB,QAC5E+8B,EAAKggE,gCAKNzzG,uFC5Ef7M,EAAA,YACAA,EAAA,MACYmuB,0JAAZnuB,EAAA,wDAcA,IAAM6M,EAAU,SAASC,EAAO4rI,GAM9Bn1I,KAAK44F,MAAQrvF,EAUbvJ,KAAKo1I,SAAWD,yEAclB7rI,EAAQ/I,UAAU80I,oBAAsB,SAASC,EAAU7wI,GACzD,IAAMiJ,EAAMkd,EAAMkE,aACb9uB,KAAKo1I,SADE,IACUE,EAAS7jI,KAAK,MAEhCkyB,KAAQl/B,EAAOgN,KAAK,OAGxB,OAAOzR,KAAK44F,MAAMvuF,IAAIqD,GAAKE,KAAK5N,KAAKu1I,mBAAmB1nI,KAAK7N,QAiB/DsJ,EAAQ/I,UAAUi1I,iCAAmC,SACnDF,EAAUltD,GAEV,IAAMr1E,KACA5B,KAFNgO,GAAA,EAAAC,GAAA,EAAAC,OAAAjiB,EAAA,IAIA,QAAAkiB,EAAAC,EAAqB6oE,EAArB5oE,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8B,KAAnB/P,EAAmBkQ,EAAA/M,MAC5BpB,EAAU/B,EAAOw7B,SAAjB,KAA8Bx7B,EAAOqmI,UAAcrmI,EAAOmD,MAC1DQ,EAAWjS,KAAKsO,EAAOw7B,WANzB,MAAA7wB,GAAAqF,GAAA,EAAAC,EAAAtF,EAAA,aAAAoF,GAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,GASAlO,EAAA,UAAsB4B,EAAWtB,KAAK,KAEtC,IAAM/D,EAAMkd,EAAMkE,aAAgB9uB,KAAKo1I,SAA3B,IAAuCE,EAAS7jI,KAAK,KAAQN,GACzE,OAAOnR,KAAK44F,MAAMvuF,IAAIqD,GAAKE,KAAK5N,KAAKu1I,mBAAmB1nI,KAAK7N,QAS/DsJ,EAAQ/I,UAAUg1I,mBAAqB,SAAS9O,GAC9C,OAAO,IAAAiP,EAAA5rI,SAAsB4N,aAAa+uH,EAAK73H,OAUjDtF,EAAQ/I,UAAUo1I,eAAiB,SAASC,EAASp+H,GACnD,IAAM9J,EAAS1N,KAAKo1I,SAAd,IAA0BQ,EAC1BC,GAAU,IAAAH,EAAA5rI,SAAsB8O,cAAcpB,GACpD,OAAOxX,KAAK44F,MAAMiC,KAAKntF,EAAKmoI,GAC1BC,SAAUC,eAAgB,oBAC1BxkI,iBAAiB,KAWrBjI,EAAQ/I,UAAUy1I,cAAgB,SAASJ,EAASn9H,GAClD,IAAM/K,EAAS1N,KAAKo1I,SAAd,IAA0BQ,EAAQp2I,WAAlC,IAAgDiZ,EAAQue,QACxD6+G,GAAU,IAAAH,EAAA5rI,SAAsB0O,aAAaC,GACnD,OAAOzY,KAAK44F,MAAMq9C,IAAIvoI,EAAKmoI,GACzBC,SAAUC,eAAgB,oBAC1BxkI,iBAAiB,KAWrBjI,EAAQ/I,UAAU21I,cAAgB,SAASN,EAASn9H,GAClD,IAAM/K,EAAS1N,KAAKo1I,SAAd,IAA0BQ,EAAQp2I,WAAlC,IAAgDiZ,EAAQue,QAC9D,OAAOh3B,KAAK44F,MAAMu9C,OAAOzoI,GACvBooI,SAAUC,eAAgB,oBAC1BxkI,iBAAiB,MAQrBjI,EAAQ8I,OAASC,QAAQD,OAAO,sBACjBI,QAAQ,iBAAkBlJ,aAG1BA,wFCxJf,QAAA7M,EAAA,QACAA,EAAA,MACY2M,0JAAZ3M,EAAA,QACAA,EAAA,SACAA,EAAA,yDAcA,IAAM6M,EAAU,SAAS0W,EAAQ9I,GAE/B,IAAMuD,OAA0Brd,IAAhB8Z,EAA4BA,KAU5C,GARA4lG,EAAAhzG,QAAuB/J,KAAKC,KAAMya,GAOlCza,KAAK4wG,iBACuBxzG,IAAxBqd,EAAQm2F,YACV5wG,KAAK4wG,YAAcn2F,EAAQm2F,gBACtB,CACL5wG,KAAK4wG,YAAcxiB,SAAS8iB,cAAc,QAC1ClxG,KAAK4wG,YAAYO,YAAc,yCAC/B,IAAM+jC,EAAK9mD,SAAS8iB,cAAc,MAClCgkC,EAAG/jC,YAAc,kDACjBnxG,KAAK4wG,YAAYtyG,YAAY42I,GAO/Bl1I,KAAKggB,OAASA,GAIhB5W,EAAO2B,SAASzB,EAAhBwzG,EAAAhzG,SAMAR,EAAQ/I,UAAUixG,sBAAwB,SAASl0D,EAAOrmC,GACxD,OAAO,IAAA8rH,EAAAj5H,SACLwD,KAA2C,UAC3C2J,OAAQA,EACRqmC,MAAOA,KAQXh0C,EAAQ/I,UAAUmyG,cAAgB,SAASnmG,GACzC,IAAMwwC,EAAOvvC,EAAA1D,QAAY0yE,iBAAiBx8E,KAAKivG,cAAc3pB,cAAhD8a,EAAAt2F,SACP2rB,EAAOz1B,KAAKm8F,SAASjtE,UAAUyS,gBACrCn0B,EAAA1D,QAAY2D,OAAOgoB,GACnB,IAAMqvB,EAASg4D,EAAAhzG,QAAuBgoG,iBAAiB/0D,EAAMtnB,EAAMz1B,KAAK8wG,UAAW9wG,KAAKggB,QAEpF6Z,EAAQ,KADUkjB,EAAKl6C,iBAAiB,GAAG9B,OAE3B,IAClB84B,EAAQkjB,EAAKyiE,mBAAmB38G,kBAElC0J,EAASu4C,EAAQjrB,cAIJvwB,4IChFf,QAAA7M,EAAA,SACAA,EAAA,MACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,KACY2M,0JAAZ3M,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,wDAEA,IAAM6M,EAAU+I,QAAQD,OAAO,qBAC7By7E,EAAA/jF,QAAoBsI,OAAOlH,KAC3B80G,EAAAl2G,QAAgBoB,OA0ClB5B,EAAQqqF,WAAa,WACnB,OACEn9E,WAAY,8BACZ2kF,kBAAkB,EAClBrH,OACErwE,OAAU,2BACVjM,SAAY,6BACZ4+H,SAAY,6BACZrnI,IAAO,2BAKbzF,EAAQsrF,UAAU,oBAAqBtrF,EAAQqqF,YAiB/CrqF,EAAQgyF,YAAc,SAAS3xF,EAAgBm1H,EAAUxpC,EAAS7iF,EAChEqd,EAAU+tD,GAAiB,IAAAxxE,EAAArM,KAM3BA,KAAKyjB,OAMLzjB,KAAKwX,SAMLxX,KAAKo2I,SAMLp2I,KAAK+O,IAML/O,KAAKowB,gBAAkBzmB,EAMvB3J,KAAKq2I,SAAWvX,EAMhB9+H,KAAKs2I,QAAUhhD,EAMft1F,KAAKqkI,OAAS5xH,EAMdzS,KAAKkuF,SAAWp+D,EAMhB9vB,KAAKi+E,iBAAmBJ,EAQxB79E,KAAKu2I,aAIL9jI,EAAOQ,OACL,kBAAM5G,EAAKoX,QACX,SAACvQ,GACC7G,EAAKkqI,aAAa35D,UAAU1pE,MA5ElC5J,EAAQgyF,kGAqFRhyF,EAAQgyF,YAAY/6F,UAAUq7F,QAAU,WACtC57F,KAAKyjB,QAAyB,IAAhBzjB,KAAKyjB,OACnB,IAAM9Z,EAAiB3J,KAAKowB,gBAGxBmsD,SACJ,GAAIv8E,KAAKo2I,WAAa76B,EAAAzxG,QAAiB4sC,OACnC12C,KAAKo2I,WAAa76B,EAAAzxG,QAAiBjE,YAErC02E,EAAc,IAAAwmD,EAAAj5H,SACZwD,KAA2C,eAExC,GAAItN,KAAKo2I,WAAa76B,EAAAzxG,QAAiB+zF,aAC1C79F,KAAKo2I,WAAa76B,EAAAzxG,QAAiBvF,kBACrC,CACA,IAAM6tG,EAAUzoG,EAAe+F,UAAU,iCACnC8mI,EAAU7sI,EAAe+F,UAC7B,4EAIF6sE,EAAc,IAAAk6D,EAAA3sI,QACZ9J,KAAKs2I,QAAQ,mBAEXh5F,MAAO,IAAAW,EAAAn0C,QACPmnG,SAAUjxG,KAAKq2I,SAAL,kBAAgCjkC,EAAhC,SAAApyG,CAAiDA,KAAKqkI,QAAQ,GACxEzzB,YAAa5wG,KAAKq2I,SAAL,kBAAgCG,EAAhC,SAAAx2I,CAAiDA,KAAKqkI,QAAQ,UAG1E,GAAIrkI,KAAKo2I,WAAa76B,EAAAzxG,QAAiBg0F,SAC1C99F,KAAKo2I,WAAa76B,EAAAzxG,QAAiBf,cACrC,CACA,IAAMqpG,EAAUzoG,EAAe+F,UAAU,+BACnC8mI,EAAU7sI,EAAe+F,UAC7B,gFAIF6sE,EAAc,IAAAm6D,EAAA5sI,QACZ9J,KAAKs2I,QAAQ,mBAEXh5F,MAAO,IAAAW,EAAAn0C,QACPmnG,SAAUjxG,KAAKq2I,SAAL,kBAAgCjkC,EAAhC,SAAApyG,CAAiDA,KAAKqkI,QAAQ,GACxEzzB,YAAa5wG,KAAKq2I,SAAL,kBAAgCG,EAAhC,SAAAx2I,CAAiDA,KAAKqkI,QAAQ,KAKjF72H,EAAA1D,QAAY2D,OAAO8uE,GAEnBA,EAAYK,UAAU58E,KAAKyjB,QAC3BzjB,KAAKu2I,aAAeh6D,EACpBv8E,KAAK+O,IAAIiqF,eAAezc,GAExB,IAAM5oE,EAAMvK,EAAO4D,OAAOhN,MACtBu8E,uBACFv8E,KAAKi+E,iBAAiBqJ,eACpB3zE,EACAU,EAAAvK,QAASwK,OACPioE,EACA,UACAv8E,KAAK22I,eACL32I,QAGKu8E,wBACRA,yBACDv8E,KAAKi+E,iBAAiBqJ,eACpB3zE,EACAU,EAAAvK,QAASwK,OACPioE,EACA,aACAv8E,KAAK22I,eACL32I,QAaRsJ,EAAQgyF,YAAY/6F,UAAUo2I,eAAiB,SAASp6G,GACtD,IAAIq6G,SAGFA,EAFEr6G,EAAM9jB,QAEC8jB,EAAM9jB,QAGN8jB,EAAM85D,OAAO59E,QAExBjL,EAAA1D,QAAY2D,OAAOmpI,GAGnB,IAAI79H,EAAW69H,EAAOtxD,cAChBh4E,EAAOyL,EAAS1U,UAClBrE,KAAKo2I,SAAS3iI,QAAQ,UAAYnG,EAAKmG,QAAQ,WACjDsF,EAAW84B,EAAA/nC,QAAU+sI,QAAQ99H,IAE/B,IAAMN,EAAU,IAAAurE,EAAAl6E,QAAciP,GAC1B/Y,KAAKwX,oBAALlI,EAAAxF,QACF9J,KAAKwX,SAAS1W,KAAK2X,GAEnBzY,KAAKwX,SAASkmC,WAAWjlC,IAQ7BnP,EAAQgyF,YAAY/6F,UAAUu2I,WAAa,WAAW,IAAA1mI,EAAApQ,KACpDA,KAAKkuF,SAAS,WACZ,IAAMv6E,EAAMvK,EAAO4D,OAAPoD,GACZA,EAAK6tE,iBAAiBuJ,iBAAiB7zE,GACvCvD,EAAKmmI,aAAa35D,WAAU,GAC5BxsE,EAAKrB,IAAIgqF,kBAAkB3oF,EAAKmmI,eAC/B,IAGLjtI,EAAQkN,WAAW,8BAA+BlN,EAAQgyF,uBAG3ChyF,oFC7Sf,QAAA7M,EAAA,UACAA,EAAA,SACAA,EAAA,wDAaA,IAAM6M,EAAU,SAASG,EAAIstI,EAAgB99H,GAM3CjZ,KAAK89E,GAAKr0E,EAMVzJ,KAAKg3I,gBAAkBD,EAMvB/2I,KAAKuK,cAAgB0O,EAMrBjZ,KAAKi3I,mBAAqB,wGAgB5B3tI,EAAQ/I,UAAU2kF,WAAa,WAE7B,IAAKllF,KAAKi3I,mBAAoB,CAC5Bj3I,KAAKi3I,mBAAqBj3I,KAAK89E,GAAGpzE,QAElC,IAAM0rI,EAAWp2I,KAAKuK,cAAcuP,SAClCxQ,EAAQ4tI,MAAMC,WACVlrH,EAAKjsB,KAAKuK,cAAcuP,SAC5BxQ,EAAQ4tI,MAAME,IACV3qI,EAAQzM,KAAKuK,cAAcuP,SAC/BxQ,EAAQ4tI,MAAMroH,OACV+b,EAAW5qC,KAAKuK,cAAcuP,SAClCxQ,EAAQ4tI,MAAMG,UACVlsI,EAAQnL,KAAKuK,cAAcuP,SAC/BxQ,EAAQ4tI,MAAMI,OAEZlB,GAAYnqH,GAAMxf,GAASm+B,GAAYz/B,EACzCnL,KAAKg3I,gBAAgBxB,kCAClB/oI,KAECgpI,SAAU,KACV7qG,SAAUA,EACVr4B,MAAO0Z,KAETre,KAAK5N,KAAKu1I,mBAAmB1nI,KAAK7N,KAAM4qC,EAAU3e,IAEpDjsB,KAAKi3I,mBAAmB/oI,QAAQ,MAIpC,OAAOlO,KAAKi3I,mBAAmBrsI,SASjCtB,EAAQ/I,UAAUg3I,YAAc,WAC9B,OAAOv3I,KAAKuK,cAAcuP,SACxBxQ,EAAQ4tI,MAAMC,YAQlB7tI,EAAQ/I,UAAUi3I,eAAiB,WACjC,OAAOx3I,KAAKuK,cAAcqoC,cACxBtpC,EAAQ4tI,MAAMroH,QAelBvlB,EAAQ/I,UAAUg1I,mBAAqB,SAAS97H,EAAKlH,EAAOiF,GAC1D,IAAIiB,SAEJ,GAAIjB,EAASzW,OACX0X,EAAUjB,EAAS,OACd,CACL,IAAMigI,KACNA,EAAkBh+H,GAAOlH,EACzBklI,EAAA,SAAgC,KAChCh/H,EAAU,IAAAurE,EAAAl6E,QAAc2tI,GAG1Bz3I,KAAKi3I,mBAAmB/oI,QAAQuK,IAQlCnP,EAAQ4tI,OAKNC,UAAW,yBAKXC,GAAI,mBAKJvoH,MAAO,sBAKPwoH,SAAU,yBAKVC,MAAO,wBAOThuI,EAAQ8I,OAASC,QAAQD,OAAO,2BAC9BslI,EAAA5tI,QAAsBsI,OAAOlH,KAC7BqP,EAAAzQ,QAAyBsI,OAAOlH,QAEnBsH,QAAQ,0BAA2BlJ,aAGnCA,oHCpLf7M,EAAA,YACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,wDAeA,IAAM6M,EAAU,SAASC,EAAOE,EAAIumB,GAMlChwB,KAAK44F,MAAQrvF,EAMbvJ,KAAK89E,GAAKr0E,EAMVzJ,KAAKswB,WAAaN,EAMlBhwB,KAAK23I,+BAAiC,gFASxCruI,EAAQ/I,UAAUq3I,uBAAyB,WAAW,IAAAvrI,EAAArM,KA8BpD,OA5BKA,KAAK23I,iCACR33I,KAAK23I,+BAAiC33I,KAAK89E,GAAGpzE,QAC9C1K,KAAKswB,WAAWrgB,sBAAsBrC,KAAK,SAACR,GAC1Cf,EAAKikB,WAAWvgB,kBAAkBnC,KAAK,SAAC3C,GACtC,GAAKA,EAAL,CAaA,IARA,IAAM4sI,EACFvuI,EAAQwuI,iCACN7sI,EACAmC,GAIA2qI,KACGx0I,EAAI,EAAGC,EAAKq0I,EAAuB92I,OAAQwC,EAAIC,EAAID,IACtDs0I,EAAuBt0I,GAAGy0I,UAAUrrI,SAAS8O,UAC/Cs8H,EAAoBj3I,KAAK+2I,EAAuBt0I,IAIpD8I,EAAKsrI,+BAA+BzpI,QAAQ6pI,SAK3C/3I,KAAK23I,+BAA+B/sI,SAgB7CtB,EAAQwuI,iCAAmC,SACzC7sI,EAAQmC,GAQR,IANA,IAAM2qI,KACF5sI,SACAE,SACAa,SACAtP,SAEK2G,EAAI,EAAGC,EAAKyH,EAAOlK,OAAQwC,EAAIC,EAAID,IAE1C,IAAK,IAAI8B,EAAI,EAAGyD,GADhBqC,EAA2CF,EAAO1H,IACvB6H,SAASrK,OAAQsE,EAAIyD,EAAIzD,IAIlD,IAHAgG,EAA2CF,EAAMC,SAAS/F,IAG/C+I,UAAX,CAIAlC,KACAomB,EAAAxoB,QAAeyB,aAAaF,EAAOa,GAEnC,IAAK,IAAI63C,EAAI,EAAG4kD,EAAKz8F,EAAMnL,OAAQgjD,EAAI4kD,EAAI5kD,KACzCnnD,EACEsP,EAAM63C,IAGC34C,UAAYxO,EAAKwO,SAASrK,QAI/BnE,EAAK+8F,aACP/8F,EAAK+8F,YAAY,IACjB/8F,EAAK+8F,YAAY,GAAGz6E,WAEpB64H,EAAoBj3I,MAClBk3I,UAAWp7I,EACXwR,UAAWhB,EAAW/B,EAAM+C,aAOtC,OAAO2pI,GAiBTzuI,EAAQ/I,UAAU03I,eAAiB,SAASC,EAAW12G,EAAYzyB,GACjE,IAAMs2E,EAAOt2E,EAAImgB,UACXsrE,EAAWnV,EAAK1jD,gBAAgB2B,UAChChF,EAAmC+mD,EAAKl2D,gBACxCgpH,EAAajvD,EAAAp/E,QAAkB0U,cAAcC,IAE7C25H,EADYF,EAAUF,UACExpI,OAAO4X,MAAM,KACrChY,EAAY8pI,EAAU9pI,UAEtB4R,EAAS,IAAAW,EAAA7W,SACb0E,OAAQ4pI,IAUJ1qI,EAPY,IAAAge,EAAA5hB,SAChB4D,IAAKU,EAAUV,IACfyD,QACE3C,OAAQ4pI,KAKA72G,qBAAqBC,EAAYlD,EAAYk8D,GACrD69C,YAAeF,EACfG,cAAiB,EACjBt2G,aAAgBo2G,IAIpB,OAAOp4I,KAAK44F,MAAMvuF,IAAIqD,GAAKE,KACzB,SAACE,GACC,IAAM0J,EAAWwI,EAAOtI,aAAa5J,EAASc,MAC9C,OAAQ4I,GAAYA,EAAS,GAAMA,EAAS,GAAK,SASvDlO,EAAQ8I,OAASC,QAAQD,OAAO,yBAC9BkgB,EAAAxoB,QAAesI,OAAOlH,QAETsH,QAAQ,wBAAyBlJ,aAGjCA,uKC3Mf7M,EAAA,KACAA,EAAA,OACAA,EAAA,YAEAA,EAAA,WACAA,EAAA,OAGAA,EAAA,WAGAA,EAAA,UAEAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,MAKY4zG,KAFZ5zG,EAAA,8JAEAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,wDA9BA,IAAM6M,KAkCNA,EAAQ8I,OAASC,QAAQD,OAAO,UAC9B4oF,EAAAlxF,QAAsBoB,KACtBqtI,EAAAzuI,QAAgBoB,KAChBstI,EAAA1uI,QAA0BoB,KAC1B82E,EAAAl4E,QAAwBsI,OAAOlH,KAC/BonB,EAAAxoB,QAAesI,OAAOlH,KACtButI,EAAA3uI,QAAwBsI,OAAOlH,OAGjC5B,EAAQovI,SAAS,eAAgB,iBACjCpvI,EAAQovI,SAAS,eAAgB,2DACjCpvI,EAAQovI,SAAS,aAAc,0FAC/BpvI,EAAQovI,SAAS,gCACfC,qBAAsB,MAExBrvI,EAAQovI,SAAS,sBAAuB,yCAaxCpvI,EAAQsvI,eAAiB,SAASC,EAAyB7oH,EACzD8kE,EAAgBgkD,GAAqB,IAAAzsI,EAAArM,KAMrCA,KAAKg/E,gBAAkB8V,EAEvB9kE,EAAUhf,aAESq/F,EAAOhmG,IAAI,cACnBwpG,WAAW,YAAa,WAAY,YAAa,cAM5D7zG,KAAK+4I,cAAgB,IAAA77F,EAAApzC,SACnB6kC,OAAO,IAOT3uC,KAAKsxG,aAAe,IAAAj0D,EAAAvzC,SAClBmN,OAAQjX,KAAK+4I,gBAOf/4I,KAAKkvG,eAAiB,IAAA5/F,EAAAxF,QAMtB9J,KAAK8iI,aAAe,IAAAzlF,EAAAvzC,SAClBmN,OAAQ,IAAAimC,EAAApzC,SACN0N,SAAUxX,KAAKkvG,eACfvgE,OAAO,MAQX3uC,KAAK+O,IAAM,IAAAklF,EAAAnqF,SACT0E,QACE,IAAAmB,EAAA7F,SACEmN,OAAQ,IAAA+hI,EAAAlvI,WAGZu7E,KAAM,IAAAwS,EAAA/tF,SACJy2B,WAAY,aACZC,aAAc,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,IAClD+B,QAAS,OAAQ,QACjB+gD,KAAM,MAIVtzD,EAAUjgB,kBAAkBnC,KAAK,SAAC3C,GAC5BA,IAEFoB,EAAK0C,IAAI6G,SAASvJ,EAAKilG,cACvBjlG,EAAK0C,IAAI6G,SAASvJ,EAAKy2H,iBAQ3B9iI,KAAKi5I,sBAAwBJ,EAAwBtB,cAMrDv3I,KAAKk5I,yBAA2BL,EAAwBrB,iBAMxDx3I,KAAKm5I,qBAAsB,EAE3B,IAAMC,EAA4B,IAAAC,EAAAvvI,QAChC9J,KAAM,uBACR84I,EAAoB3E,aAClB,WAAYiF,GAA2B,GAMzCp5I,KAAKs5I,aAAc,EAEnB,IAAMC,EAAoB,IAAAF,EAAAvvI,QACxB9J,KAAM,eACR84I,EAAoB3E,aAClB,WAAYoF,GAAmB,GAMjCv5I,KAAKw5I,qBAAuB,KAE5BX,EAAwB3zD,aAAat3E,KAAK,SAAC6K,GACzCpM,EAAKmtI,qBAAuB/gI,EACxBA,GACFpM,EAAK0sI,cAAcr7F,WAAWjlC,MApHpCnP,EAAQsvI,sGA0HRtvI,EAAQ8I,OAAOoE,WAAW,iBAAkBlN,EAAQsvI,0BAGrCtvI,iGC3Lf,QAAA7M,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UAGAA,EAAA,UAEAA,EAAA,QAGAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UAGAA,EAAA,UAEAA,EAAA,KACY2M,0JAAZ3M,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAGA,IAAMg9I,GACJC,IACEC,UAHJl9I,EAAA,KAGIk9I,YAQErwI,EAAU+I,QAAQD,OAAO,6BAC7BslI,EAAA5tI,QAAsBsI,OAAOlH,KAC7Bu4H,EAAA35H,QAA6BsI,OAAOlH,KACpCmqF,EAAAvrF,QAAwBsI,OAAOlH,KAC/B0uI,EAAA9vI,QAAsBsI,OAAOlH,KAC7B2uI,EAAA/vI,QAA+BoB,KAC/BoH,EAAAxI,QAAmBsI,OAAOlH,KAC1B4uI,EAAAhwI,QAAsBsI,OAAOlH,KAC7ButI,EAAA3uI,QAAwBsI,OAAOlH,OAyBjC,SAAS6uI,EAA4BnW,EAAUjxH,EAAQonI,GACrD,OAAOA,EAA4BnW,EAAUjxH,GAtB/CrJ,EAAQiJ,MAAM,8BAMZ,SAACqxH,EAAUjxH,GACT,IAAMyoF,EAAczoF,EAAA,4BACpB,YAAuBvV,IAAhBg+F,EAA4BA,EAC9BlqE,EAAApnB,QAAQuxF,sBADN,gGA4CX/xF,EAAQu6H,YACNrtH,WAAY,uCACZstH,UACErgH,OAAU,0BACVhL,QAAW,2BACX29H,SAAY,4BACZ4D,YAAe,+BACfjrI,IAAO,uBACPmgG,eAAkB,mCAEpB9T,YAAa2+C,GAGfzwI,EAAQ06H,UAAU,mBAAoB16H,EAAQu6H,YAsB9Cv6H,EAAQ2wI,WAAa,SAASxnI,EAAQqd,EAAUnmB,EAC9CotI,EAAgBmD,EAAuBplD,EACvCqlD,EAAmBzwI,EAAiBovI,GAQpC94I,KAAKyjB,OAMLzjB,KAAKyY,QAMLzY,KAAKo2I,SAMLp2I,KAAKg6I,YAMLh6I,KAAK+O,IAML/O,KAAKkvG,eASLlvG,KAAKqkI,OAAS5xH,EAMdzS,KAAKkuF,SAAWp+D,EAMhB9vB,KAAKowB,gBAAkBzmB,EAMvB3J,KAAKg3I,gBAAkBD,EAMvB/2I,KAAKo6I,uBAAyBF,EAM9Bl6I,KAAK+3I,oBAML/3I,KAAKq6I,2BASLr6I,KAAKs6I,yBAA0B,EAM/Bt6I,KAAKu6I,gBAAiB,EAMtBv6I,KAAKw6I,kBAAmB,EAMxBx6I,KAAKy6I,eAMLz6I,KAAKivF,iBAAmBvlF,EAMxB1J,KAAKg/E,gBAAkB8V,EAMvB90F,KAAK06I,mBAAqBP,EAM1Bn6I,KAAK26I,qBAAuB7B,EAS5B94I,KAAK46I,qBAAsB,EAM3B56I,KAAK66I,QAAUhB,EAAA/vI,QAA+BgxI,YAAYt0C,IAM1DxmG,KAAK+6I,kBAAoB,KAMzB/6I,KAAKg7I,eAAiB,IAAIvB,EAAKC,GAAGC,UAQlC35I,KAAKgT,OAMLhT,KAAKi7I,oBAMLj7I,KAAKk7I,kBAMLl7I,KAAKm7I,2BAMLn7I,KAAKo7I,gBAMLp7I,KAAKq7I,yBAOLr7I,KAAKs7I,SAAU,EAMft7I,KAAKu7I,OAAQ,EAMbv7I,KAAKuzF,iBAMLvzF,KAAKi3F,UAAY,IAAA3nF,EAAAxF,QAMjB9J,KAAKw7I,cAAgB,IAAAlsI,EAAAxF,QAMrB9J,KAAKy7I,QAAU,IAAAC,EAAA5xI,SACbomI,gBAAiBr+F,EAAA/nC,QAAUomI,gBAC3B14H,SAAUxX,KAAKi3F,UACf35C,MAAO68F,EAAkB9+B,gBAAe,KAE1Cr7G,KAAKw7I,cAAc16I,KAAKd,KAAKy7I,SAM7Bz7I,KAAK27I,oBAAsB,IAAAtC,EAAAvvI,QAAyB9J,KAAKy7I,QAAS,UAMlEz7I,KAAK47I,aAAc,EAMnB57I,KAAK67I,mBAAqB,IAAAxC,EAAAvvI,QAAyB9J,KAAM,gBArQ3DsJ,EAAQ2wI,gLA2QR3wI,EAAQ2wI,WAAW15I,UAAUq7F,QAAU,WAAW,IAAAvvF,EAAArM,KAChDA,KAAKo6I,uBAAuBxC,yBAAyBhqI,KACnD5N,KAAK87I,8BAA8BjuI,KAAK7N,OAG1CA,KAAKqkI,OAAOr/C,iBACV,WACE,GAAI34E,EAAK2yE,gBAAgBxuD,SACvB,OAAOnkB,EAAK2yE,gBAAgBxuD,SAASplB,UAGzC,SAACmH,GAGClG,EAAK6hF,SAAS,WACR37E,IACFlG,EAAK6sF,yBACL7sF,EAAK2yE,gBAAgBxuD,SAASla,mBAC5BjK,EAAK8sF,kBAAkBtrF,KAAvBxB,SAOV,IAAM0M,EAAW/Y,KAAKyY,QAAQ6sE,cAC9BtlF,KAAKgT,OAAS+F,EAAWzP,EAAQ2wI,WAAW8B,MAAMC,OAChD1yI,EAAQ2wI,WAAW8B,MAAME,OAE3Bj8I,KAAKqkI,OAAOr/C,iBACV,kBAAM34E,EAAK4uI,kBACX,SAAC/nI,EAAQC,GACHD,EAAOnS,SACa,IAAlBmS,EAAOnS,OACTsL,EAAKkvI,OAAQ,EAEblvI,EAAKkvI,OAAQ,KAMrB,IAAMW,GAAgB,GAAI,IAAK,KACzBC,GAAc,IAAK,GAAI,IAC7Bn8I,KAAKo8I,kBAAkBp8I,KAAKk7I,eAAgBgB,GAC5Cl8I,KAAKo8I,kBAAkBp8I,KAAKm7I,wBAAyBe,GAAc,GACnEl8I,KAAKo8I,kBAAkBp8I,KAAKo7I,aAAce,GAC1Cn8I,KAAKo8I,kBAAkBp8I,KAAKq7I,sBAAuBc,GAAY,GAE/Dn8I,KAAKqkI,OAAOpxH,OACV,kBAAM5G,EAAKkvI,OACXv7I,KAAKq8I,iBAAiBxuI,KAAK7N,OAG7BA,KAAKi3F,UAAUn2F,KAAKd,KAAKyY,SAEzBzY,KAAKy6I,gBAAkB6B,EAAAxyI,QAAqB+iB,QAAQ9T,GAGpD/Y,KAAKu8I,0BACLv8I,KAAKw8I,wBACLx8I,KAAKy8I,SAAQ,GACbz8I,KAAK08I,wBAEL18I,KAAKqkI,OAAO7wH,IAAI,WAAYxT,KAAK28I,eAAe9uI,KAAK7N,QAWvDsJ,EAAQ2wI,WAAW15I,UAAU41I,OAAS,WACpC,IACM7iH,EADiBtzB,KAAKowB,gBACD1gB,UACzB,6CAEEktI,QAAQtpH,KACVtzB,KAAKu7I,OAAQ,EACbv7I,KAAKs7I,SAAU,EAEft7I,KAAKg3I,gBAAgBd,cACnBl2I,KAAKg6I,YACLh6I,KAAKyY,SACL7K,KACA5N,KAAK68I,qBAAqBhvI,KAAK7N,SAWrCsJ,EAAQ2wI,WAAW15I,UAAUu8I,KAAO,WAElC98I,KAAKs7I,SAAU,EAQf,IAAM7iI,EAAUzY,KAAKyY,QAAQxX,QAC7BwX,EAAQkP,MAAM3nB,KAAKyY,QAAQue,SAC3B,IAAMje,EAAWN,EAAQ6sE,cACrBvsE,GACFujI,EAAAxyI,QAAqBizI,KAAKhkI,GAGxB/Y,KAAKgT,SAAW1J,EAAQ2wI,WAAW8B,MAAME,OAC3Cj8I,KAAKg3I,gBAAgBrB,eACnB31I,KAAKg6I,aACJvhI,IACD7K,KACA5N,KAAKg9I,mBAAmBnvI,KAAK7N,OAEtBA,KAAKgT,SAAW1J,EAAQ2wI,WAAW8B,MAAMC,QAClDh8I,KAAKg3I,gBAAgBhB,cACnBh2I,KAAKg6I,YACLvhI,GACA7K,KACA5N,KAAKg9I,mBAAmBnvI,KAAK7N,QAUnCsJ,EAAQ2wI,WAAW15I,UAAU08I,KAAO,WAElC,KAAIj9I,KAAKi7I,iBAAiBl6I,QAAU,GAApC,CAIAf,KAAK46I,qBAAsB,EAE3B56I,KAAKi7I,iBAAiB50H,MACtB,IAAMplB,EAAQqI,EAAQ2wI,WAAWiD,eAC/Bl9I,KAAKi7I,iBAAiBj7I,KAAKi7I,iBAAiBl6I,OAAS,IAEvDf,KAAKyY,QAAQm2F,YAAY3tG,GAEzBjB,KAAK46I,qBAAsB,IAS7BtxI,EAAQ2wI,WAAW15I,UAAU48I,cAAgB,WAC3C,OAAOn9I,KAAKgT,SAAW1J,EAAQ2wI,WAAW8B,MAAME,QAYlD3yI,EAAQ2wI,WAAW15I,UAAUs8I,qBAAuB,SAASpW,GAC3DzmI,KAAKyY,QAAQm2F,YAAY,MACzB5uG,KAAK08I,wBACL18I,KAAKgT,OAAS1J,EAAQ2wI,WAAW8B,MAAME,OACvCj8I,KAAKs7I,SAAU,EACft7I,KAAKo9I,oBASP9zI,EAAQ2wI,WAAW15I,UAAUy8I,mBAAqB,SAASvW,GAEzD,IAAMjvH,GAAW,IAAAk+H,EAAA5rI,SAAsB4N,aAAa+uH,EAAK73H,MACrD4I,EAASzW,QACXf,KAAKyY,QAAQkP,MAAMnQ,EAAS,GAAGwf,SAGjCh3B,KAAK08I,wBAED18I,KAAKyY,QAAQ6sE,cACftlF,KAAKgT,OAAS1J,EAAQ2wI,WAAW8B,MAAMC,OAEvCh8I,KAAKgT,OAAS1J,EAAQ2wI,WAAW8B,MAAME,OAGzCj8I,KAAKs7I,SAAU,EAEft7I,KAAKo9I,oBAQP9zI,EAAQ2wI,WAAW15I,UAAUg8I,wBAA0B,WACrDv8I,KAAKw7I,cAAcvuI,QAAQ,SAACsvE,GAC1BA,EAAYK,WAAU,GACtBzoE,EAAArK,QAAiByyE,YAAYA,MASjCjzE,EAAQ2wI,WAAW15I,UAAUi8I,sBAAwB,WAAW,IAAApsI,EAAApQ,KAC9DA,KAAKw7I,cAAcvuI,QAAQ,SAACsvE,GAC1BnsE,EAAKrB,IAAIiqF,eAAezc,MAS5BjzE,EAAQ2wI,WAAW15I,UAAU88I,wBAA0B,WAAW,IAAAnsI,EAAAlR,KAChEA,KAAKw7I,cAAcvuI,QAAQ,SAACsvE,GAC1BrrE,EAAKnC,IAAIgqF,kBAAkBxc,MAU/BjzE,EAAQ2wI,WAAW15I,UAAUk8I,QAAU,SAASh5H,GAE9C,IAAM4T,EAAOr3B,KAAKuzF,cACZ5/E,EAASrK,EAAQ2wI,WAAWqD,WAA5B,IAA0Cl0I,EAAO4D,OAAOhN,MACxDu9I,EAAUv9I,KAAK26I,qBAEjBl3H,GAEF4T,EAAKv2B,KACHuT,EAAAvK,QAASwK,OACPtU,KAAKyY,QACL+kI,EAAA1zI,QAASuiG,mBAAmBrsG,KAAKyY,QAAQye,mBACzCl3B,KAAKy9I,6BACLz9I,OAIJq3B,EAAKv2B,KACHuT,EAAAvK,QAASwK,OACPtU,KAAKy7I,QACL,gBACAz7I,KAAKq8I,iBACLr8I,OAIJq3B,EAAKv2B,KACHuT,EAAAvK,QAASwK,OACPtU,KAAKy7I,QACL,YACAz7I,KAAK09I,kCACL19I,OAIJq3B,EAAKv2B,KACHuT,EAAAvK,QAASwK,OACP3C,OACA,eACA3R,KAAK29I,0BACL39I,OAIJq3B,EAAKv2B,KACHuT,EAAAvK,QAASwK,OACPtU,KAAKkvG,eACL,MACAlvG,KAAK49I,yBACL59I,OAIJu9I,EAAQpJ,aAAaxgI,EAAK3T,KAAK27I,qBAAqB,GACpD4B,EAAQpJ,aAAaxgI,EAAK3T,KAAK67I,oBAAoB,KAInD77I,KAAK69I,kBAELxmH,EAAKpqB,QAAQoH,EAAAvK,QAASo2B,eACtB7I,EAAKt2B,OAAS,EAEdw8I,EAAQ1I,eAAelhI,EAAK3T,KAAK27I,qBACjC4B,EAAQ1I,eAAelhI,EAAK3T,KAAK67I,qBAInC77I,KAAKy7I,QAAQ7+D,UAAUn5D,IAQzBna,EAAQ2wI,WAAW15I,UAAUs9I,gBAAkB,WAC7C,IAAM58I,EAAQqI,EAAQ2wI,WAAWiD,eAC/Bl9I,KAAKi7I,iBAAiB,IACxBj7I,KAAKyY,QAAQm2F,YAAY3tG,GAEzBjB,KAAK08I,wBACL18I,KAAKu7I,OAAQ,EACbv7I,KAAKq8I,oBAUP/yI,EAAQ2wI,WAAW15I,UAAUm8I,sBAAwB,WAInD,GAHI18I,KAAKi7I,iBAAiBl6I,OAAS,IACjCf,KAAKi7I,iBAAiBl6I,OAAS,GAEI,IAAjCf,KAAKi7I,iBAAiBl6I,OAAc,CACtC,IAAMgY,EAAW/Y,KAAKyY,QAAQ6sE,cACxBrkF,EAAQqI,EAAQ2wI,WAAWiD,eAAenkI,GAChD/Y,KAAKi7I,iBAAiBn6I,KAAKG,KAe/BqI,EAAQ2wI,WAAW15I,UAAUm9I,kCAAoC,SAC/DzzD,GAEA,IAAIlxE,EAAW/Y,KAAKyY,QAAQ6sE,cAE5B,GAAIvsE,uBAAwC,CAC1C,IACM+kI,EADW99I,KAAKg7I,eAAetuH,KAAK3T,GACZm3B,OAAO,GACrCn3B,EAAW84B,EAAA/nC,QAAU+sI,QAAQ72I,KAAKg7I,eAAe+C,MAAMD,IACvD99I,KAAK46I,qBAAsB,EAC3B56I,KAAKyY,QAAQm2F,YAAY71F,EAAS9X,SAClCjB,KAAK46I,qBAAsB,EAG7B,IAAM35I,EAAQqI,EAAQ2wI,WAAWiD,eAAenkI,GAChDvL,EAAA1D,QAAY2D,OAAOxM,GACnBjB,KAAKi7I,iBAAiBn6I,KAAKG,GAC3BjB,KAAKqkI,OAAOO,UAWdt7H,EAAQ2wI,WAAW15I,UAAU67I,kBAAoB,SAC/CjuH,EAAQgoB,EAAO6nG,GAGf,IAAMC,GAAgC,IAAnBD,EACbE,EAAY/nG,EAAMt1C,QACxBq9I,EAAUp9I,KAAK,IAEf,IAAMm/B,EAAQ,IAAAygE,EAAA52F,SACZg2E,OAAQ,EACRhpC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOA,EACP0pC,MAAO,IAET5pC,KAAM,IAAAwqD,EAAA32F,SAAiBqsC,MAAO+nG,MAGhC/vH,EAAA,MAAkB,IAAA8vB,EAAAn0C,SAChBm2B,UAEF9R,EAAA,WAAuB,IAAA8vB,EAAAn0C,SACrBm2B,UAGF9R,EAAA,YACE,IAAA8vB,EAAAn0C,SACEgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOA,EACP0pC,MAAO,OAITo+D,GACF9vH,EAAA,WAAqBrtB,KACnBd,KAAK06I,mBAAmBr/B,gBAAe,IAG3CltF,EAAA,iBACE,IAAA8vB,EAAAn0C,SACEgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOA,EACP0pC,MAAO,OAITo+D,GACF9vH,EAAA,gBAA0BrtB,KACxBd,KAAK06I,mBAAmBr/B,gBAAe,IAI3CltF,EAAA,SACE,IAAA8vB,EAAAn0C,SACEgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOA,EACP0pC,MAAO,IAET5pC,KAAM,IAAAwqD,EAAA32F,SACJqsC,MAAO+nG,OAITD,GACF9vH,EAAA,QAAkBrtB,KAChBd,KAAK06I,mBAAmBr/B,gBAAe,IAG3CltF,EAAA,cACE,IAAA8vB,EAAAn0C,SACEgtC,OAAQ,IAAA8oC,EAAA91E,SACNqsC,MAAOA,EACP0pC,MAAO,IAET5pC,KAAM,IAAAwqD,EAAA32F,SACJqsC,MAAO+nG,OAITD,GACF9vH,EAAA,aAAuBrtB,KACrBd,KAAK06I,mBAAmBr/B,gBAAe,KAe7C/xG,EAAQ2wI,WAAW15I,UAAU87I,iBAAmB,WAC9C,IAAMtjI,EAAW/Y,KAAKyY,QAAQ6sE,cAC9B,GAAIvsE,EAAU,CACZ,IAAMq9H,EAAWr9H,EAAS1U,UACpB85I,EAAen+I,KAAKy7I,QAAQ9+D,YAC9Br/B,SAGAA,EAFAt9C,KAAKu7I,MACH4C,EACMn+I,KAAKo7I,aAAahF,GAElBp2I,KAAKq7I,sBAAsBjF,GAGjC+H,EACMn+I,KAAKk7I,eAAe9E,GAEpBp2I,KAAKm7I,wBAAwB/E,GAGzCp2I,KAAKyY,QAAQ6lC,SAAShB,KAgB1Bh0C,EAAQ2wI,WAAW15I,UAAU44F,kBAAoB,SAASllF,GAGxD,IAAMrX,EACJqX,EAASrX,KACX,KAAIA,EAAKwO,UAAYxO,EAAKwO,SAASrK,QAK/BnE,EAAKqvB,KAAOjsB,KAAKg6I,aAAa,CAChC,IAAMvtI,EAAQg3H,EAAA35H,QAA6Bg0C,SAAS7pC,GACpDzG,EAAA1D,QAAY2D,OACVhB,wBAAiCA,wBACnCzM,KAAK+6I,kBAAoBtuI,IAc7BnD,EAAQ2wI,WAAW15I,UAAU24F,uBAAyB,WACpDl5F,KAAK+6I,kBAAoB,MAQ3BzxI,EAAQ2wI,WAAW15I,UAAU68I,iBAAmB,WAC1Cp9I,KAAK+6I,mBACP/6I,KAAKivF,iBAAiB3/D,gBAAgBtvB,KAAK+6I,oBAY/CzxI,EAAQ2wI,WAAW15I,UAAUo9I,0BAA4B,SAASrzF,GAChE,IAAM3gD,EAAiB3J,KAAKowB,gBAC5B,GAAIpwB,KAAKu7I,MAAO,CACd,IAAMjoH,EAAM3pB,EAAe+F,UAAU,8BAErC,OADC46C,GAAK34C,OAAO4qB,OAAO6hH,YAAc9qH,EAC3BA,EAET,MAAO,IAYThqB,EAAQ2wI,WAAW15I,UAAUq9I,yBAA2B,SAAS3zD,GAC/D,IACMo0D,EAD2Cp0D,EAAIvM,QAErC4H,cAEVvoC,EAAO/8C,KAAKyY,QAAQ6sE,cAE1B,GAAIvoC,EAAM,CACR,IAAMuhG,EAAWt+I,KAAKg7I,eAAetuH,KAAKqwB,GACpCwhG,EAAiBv+I,KAAKg7I,eAAetuH,KAAK2xH,GAC5CG,SAUJ,GARIx+I,KAAK66I,UAAYhB,EAAA/vI,QAA+BgxI,YAAYt0C,IAC9Dg4C,EAAoBF,EAASG,MAAMF,GAE/BD,EAAS3rD,WAAW4rD,KACtBC,EAAoBF,EAASI,WAAWH,IAIxCC,EAAmB,CACrB,IAAMG,EAAgB3+I,KAAKg7I,eAAe+C,MAAMS,GAC1CtjH,EAAY2W,EAAA/nC,QAAU+sI,QAAQ8H,GACpC3+I,KAAKyY,QAAQm2F,YAAY1zE,EAAUj6B,eAG5BjB,KAAK66I,UAAYhB,EAAA/vI,QAA+BgxI,YAAYt0C,KACrExmG,KAAKyY,QAAQm2F,YAAY/8D,EAAA/nC,QAAU+sI,QAAQwH,EAAWp9I,UAGxDjB,KAAKkvG,eAAe3hE,SAetBjkC,EAAQ2wI,WAAW15I,UAAUk9I,6BAA+B,WAAW,IAAAprH,EAAAryB,KAC/D+8C,EAAO/8C,KAAKyY,QAAQ6sE,cAC1BtlF,KAAKkuF,SAAS,WACZ77D,EAAKooH,gBAAkB6B,EAAAxyI,QAAqB+iB,QAAQkwB,KAGlD/8C,KAAK46I,qBAIL79F,GAOF/8C,KAAKkuF,SAAS,WACZ77D,EAAK4oH,iBAAiBn6I,KAAKi8C,EAAK97C,YAWtCqI,EAAQ2wI,WAAW15I,UAAUu7I,8BAAgC,SAAS8C,GACpE5+I,KAAK+3I,oBAAsB6G,EACvB5+I,KAAK+3I,oBAAoBh3I,SAC3Bf,KAAKq6I,2BAA6Br6I,KAAK+3I,oBAAoB,KAQ/DzuI,EAAQ2wI,WAAW15I,UAAUo8I,eAAiB,WAC5C38I,KAAKi3F,UAAU1pD,QACfvtC,KAAKy8I,SAAQ,GACbz8I,KAAKq9I,2BAgBP/zI,EAAQ2wI,WAAWiD,eAAiB,SAASnkI,GAC3C,IAAI9X,EAAQ,KAIZ,OAHI8X,IACF9X,EAAQ8X,EAAS9X,SAEZA,GAQTqI,EAAQ2wI,WAAWqD,WAAa,KAMhCh0I,EAAQ2wI,WAAW8B,OACjBE,OAAQ,SACRD,OAAQ,UAIV1yI,EAAQkN,WAAW,6BACjBlN,EAAQ2wI,sBAGK3wI,iFChnCf,QAAA7M,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDARA,IAAM6M,GAqBNA,QAAkB,SAASyzC,GACzB,IAAIlwB,GAAU,EAId,OAHIkwB,GAAQA,yBACVlwB,EAA+C,IAArCkwB,EAAKn8C,qBAAqBG,QAE/B8rB,GAUTvjB,KAAe,SAASyzC,GACtB,GAAIA,uBACFA,EAAK38C,eACHy+I,EAAA/0I,QAA2BizI,KAAKhgG,EAAKl6C,iBAAkB,SAEpD,GAAIk6C,wBACAA,uBAETA,EAAK38C,eACHy+I,EAAA/0I,QAA2BizI,KAAKhgG,EAAKl6C,iBAAkB,SAEpD,GAAIk6C,wBACAA,uBAETA,EAAK38C,eACHy+I,EAAA/0I,QAA2BizI,KAAKhgG,EAAKl6C,iBAAkB,QAEpD,MAAIk6C,wBAKT,KAAM,0DAJNA,EAAK38C,eACHy+I,EAAA/0I,QAA2BizI,KAAKhgG,EAAKl6C,iBAAkB,iBAQ9CyG,iFC/Df,IAAMA,GAWNA,KAAe,SAAS1J,EAAak/I,GACnC,GAAgB,IAAZA,EACEl/I,EAAYmB,OAAS,IACvBnB,GAAeA,EAAY,GAAIA,EAAY,UAG7C,IAAK,IAAI2D,EAAI,EAAGC,EAAK5D,EAAYmB,OAAQwC,EAAIC,EAAID,IAC/C3D,EAAY2D,GAAK+F,EAAQyzI,KAAKn9I,EAAY2D,GAAIu7I,EAAU,GAG5D,OAAOl/I,cAIM0J,iFCzBf,QAAA7M,EAAA,QAGAA,EAAA,UAGAA,EAAA,UAGAA,EAAA,UAEAA,EAAA,UAGAA,EAAA,WAGAA,EAAA,OAEAA,EAAA,WACAA,EAAA,MACY2M,0JAAZ3M,EAAA,uDAKA,IAAM6M,EAAU+I,QAAQD,OAAO,kCAC7B2sI,EAAAj1I,QAAuCoB,KACvC8zI,EAAAl1I,QAAkCoB,KAClC+zI,EAAAn1I,QAAkDoB,KAClDg0I,EAAAp1I,QAAqBoB,KACrButI,EAAA3uI,QAAwBsI,OAAOlH,OAUjC5B,EAAQiJ,MAAM,mCA6CdjJ,EAAQqqF,WAAa,WACnB,OACEn9E,WAAY,6CACZs9E,OACErwE,OAAU,+BACV82H,eAAkB,uCAClBC,iBAAoB,yCACpB/hI,QAAW,gCACX29H,SAAY,iCACZrnI,IAAO,4BACP8rI,QAAW,gCACXsE,mBAAsB,2CACtBC,cAAiB,sCACjBlwC,eAAkB,wCAEpB/T,kBAAkB,EAClBC,YAAgBlqE,EAAApnB,QAAQuxF,sBAAxB,uCAIJ/xF,EAAQsrF,UAAU,wBAChBtrF,EAAQqqF,YAcVrqF,EAAQgyF,YAAc,SAAS9xF,EAAWiJ,EAAQqmI,GAQhD94I,KAAKyjB,OAMLzjB,KAAKu6I,eAMLv6I,KAAKw6I,iBAMLx6I,KAAKyY,QAMLzY,KAAKo2I,SAMLp2I,KAAK+O,IAML/O,KAAKm/I,mBAMLn/I,KAAK66I,QAML76I,KAAKo/I,cAMLp/I,KAAKkvG,eASLlvG,KAAKqkI,OAAS5xH,EAMdzS,KAAK26I,qBAAuB7B,EAQ5B94I,KAAKq/I,gBAAkB9jC,EAAAzxG,QAAiBg0F,QAMxC99F,KAAKs/I,oBAMLt/I,KAAKu/I,YAAa,EAElBv/I,KAAKw/I,cAAc,aACjBl2I,EAAQwxI,YAAYt0C,KAMtBxmG,KAAKy/I,aAAc,EAEnBz/I,KAAKw/I,cAAc,cACjBl2I,EAAQwxI,YAAY4E,QAMtB1/I,KAAK2/I,oBAAqB,EAM1B3/I,KAAK4/I,cAAgB/9I,KAAK00C,GAAK,IAAM,GAErC,IAAMspG,EACJr2I,EAAUa,IAAI,gCAMhBrK,KAAK8/I,oBAAyD1iJ,IAAxCyiJ,EAAelH,qBACnCkH,EAAelH,qBAAuB,IAExC34I,KAAKw/I,cAAc,qBACjBl2I,EAAQwxI,YAAYt0C,KAEtBxmG,KAAKw/I,cAAc,iBACjBl2I,EAAQwxI,YAAYt0C,KAAK,GAE3BxmG,KAAKw/I,cAAc,mBACjBl2I,EAAQwxI,YAAY4E,QAAQ,GAE9BjtI,EAAOe,IAAI,WAAYxT,KAAK28I,eAAe9uI,KAAK7N,QA9IlDsJ,EAAQgyF,iEAqKRhyF,EAAQgyF,YAAY/6F,UAAUi/I,cAAgB,SAC5CO,EAAgBlF,EAASmF,GACzB,IAAA3zI,EAAArM,KAEMo/I,GAAsC,IAAtBY,EAEtBhgJ,KAAKqkI,OAAOpxH,OACV,kBAAM5G,EAAK0zI,IACX//I,KAAKigJ,wBAAwBpyI,KAAK7N,KAAM66I,EAASuE,IAGnD,IAAM/zI,EAAW/B,EAAQgyF,YAAYgiD,WAA/B,IAA6Cl0I,EAAO4D,OAAOhN,MAC3DkgJ,EAAe,IAAA7G,EAAAvvI,QAAyB9J,KAAM+/I,GACpD//I,KAAK26I,qBAAqBxG,aAAa9oI,EAAO60I,GAAc,GAE5DlgJ,KAAKs/I,iBAAiBx+I,KAAKi/I,IAa7Bz2I,EAAQgyF,YAAY/6F,UAAU0/I,wBAA0B,SACtDpF,EAASuE,EAAelsI,GAIpBA,IACFlT,KAAK66I,QAAUA,EACf76I,KAAKo/I,cAAgBA,GAKvB,IADA,IAAI37H,GAAS,EACJlgB,EAAI,EAAGC,EAAKxD,KAAKs/I,iBAAiBv+I,OAAQwC,EAAIC,KACrDigB,EAASA,GAAUzjB,KAAKA,KAAKs/I,iBAAiB/7I,KADWA,KAM3DvD,KAAKyjB,OAASA,EAETzjB,KAAKyjB,SACRzjB,KAAKo/I,eAAgB,IAQzB91I,EAAQgyF,YAAY/6F,UAAUo8I,eAAiB,aAG/CrzI,EAAQkN,WAAW,kCACjBlN,EAAQgyF,aAOVhyF,EAAQgyF,YAAYgiD,WAAa,MAMjCh0I,EAAQwxI,aACNt0C,IAAK,MACLk5C,OAAQ,oBAIKp2I,mFC9Wf7M,EAAA,YACAA,EAAA,UACAA,EAAA,uDAKA,IAAM6M,EAAU+I,QAAQD,OAAO,0CAC7BwnI,EAAA9vI,QAAsBsI,OAAOlH,OA6B/B5B,EAAQqqF,WAAa,WACnB,OACEn9E,WAAY,0CACZs9E,OACErwE,OAAU,uCACVjM,SAAY,yCACZ0gI,UAAa,0CACbnpI,IAAO,qCAETosF,kBAAkB,IAItB7xF,EAAQsrF,UAAU,gCAChBtrF,EAAQqqF,YAaVrqF,EAAQgyF,YAAc,SAAS7oF,EAC7BynI,GAAuB,IAAA7tI,EAAArM,KAQvBA,KAAKyjB,OAELhR,EAAOQ,OACL,kBAAM5G,EAAKoX,QACXzjB,KAAKmgJ,oBAAoBtyI,KAAK7N,OAOhCA,KAAKwX,SAMLxX,KAAKk4I,UAMLl4I,KAAK+O,IASL/O,KAAKo6I,uBAAyBF,GAzChC5wI,EAAQgyF,uDAkDRhyF,EAAQgyF,YAAY/6F,UAAU4/I,oBAAsB,SAAS18H,GACvDA,EACFpP,EAAAvK,QAASwK,OACPtU,KAAK+O,IACL,QACA/O,KAAKogJ,gBACLpgJ,MAGFqU,EAAAvK,QAASunE,SACPrxE,KAAK+O,IACL,QACA/O,KAAKogJ,gBACLpgJ,OAUNsJ,EAAQgyF,YAAY/6F,UAAU6/I,gBAAkB,SAASn2D,GAAK,IAAA75E,EAAApQ,KAC5DA,KAAKo6I,uBAAuBnC,eAC1Bj4I,KAAKk4I,UACLjuD,EAAIzoD,WACJxhC,KAAK+O,KACLnB,KAAK,SAAC6K,GACFA,GACFrI,EAAKoH,SAAS1W,KAAK2X,MAKzBnP,EAAQkN,WAAW,0CACjBlN,EAAQgyF,uBAGKhyF,mFCzJf7M,EAAA,YACAA,EAAA,UACAA,EAAA,QACAA,EAAA,wDAEA,IAAM6M,EAAU+I,QAAQD,OAAO,wCAiD/B9I,EAAQqqF,WAAa,WACnB,OACEn9E,WAAY,8CACZ2kF,kBAAkB,EAClBrH,OACErwE,OAAU,2CACVgvD,MAAS,2CACTj7D,SAAY,6CACZzI,IAAO,wCACP+wE,OAAU,2CACVugE,MAAS,8CAKf/2I,EAAQsrF,UACN,oCACAtrF,EAAQqqF,YAaVrqF,EAAQgyF,YAAc,SAAS7oF,GAAQ,IAAApG,EAAArM,KAQrCA,KAAKyjB,QAAS,EAEdhR,EAAOQ,OACL,kBAAM5G,EAAKoX,QACX,SAACvQ,GACC7G,EAAKkqI,aAAa35D,UAAU1pE,KAQhClT,KAAKyyE,MAMLzyE,KAAKwX,SAMLxX,KAAK+O,IAML/O,KAAK8/E,OAML9/E,KAAKqgJ,MASLrgJ,KAAKu2I,aAMLv2I,KAAKsgJ,wBAEL7tI,EAAOe,IAAI,WAAYxT,KAAK28I,eAAe9uI,KAAK7N,QA9DlDsJ,EAAQgyF,+BAqERhyF,EAAQgyF,YAAY/6F,UAAUq7F,QAAU,WAEtC57F,KAAKu2I,aAAe,IAAAgK,EAAAz2I,SAClB2oE,MAAOzyE,KAAKyyE,MACZqN,OAAQ9/E,KAAK8/E,OACbugE,MAAOrgJ,KAAKqgJ,QAEdrgJ,KAAKu2I,aAAa35D,UAAU58E,KAAKyjB,QAEjCzjB,KAAKsgJ,wBAA0BjsI,EAAAvK,QAASwK,OACtCtU,KAAKu2I,aACL,UACAv2I,KAAK22I,eACL32I,MAGFA,KAAK+O,IAAIiqF,eAAeh5F,KAAKu2I,eAU/BjtI,EAAQgyF,YAAY/6F,UAAUo2I,eAAiB,SAAS1sD,GACtD,IAAMxxE,EAAU,IAAAurE,EAAAl6E,QAAcmgF,EAAIxxE,QAAQ6sE,eAC1CtlF,KAAKwX,SAAS1W,KAAK2X,IAQrBnP,EAAQgyF,YAAY/6F,UAAUo8I,eAAiB,WAC7CtoI,EAAAvK,QAASo2B,cAAclgC,KAAKsgJ,yBAC5BtgJ,KAAKu2I,aAAa35D,WAAU,GAC5B58E,KAAK+O,IAAIgqF,kBAAkB/4F,KAAKu2I,eAIlCjtI,EAAQkN,WACN,8CACAlN,EAAQgyF,uBAIKhyF,iFC1Mf,QAAA7M,EAAA,IACY2M,IAAZ3M,EAAA,QACAA,EAAA,QACAA,EAAA,KACYkmI,IAAZlmI,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,kNAaA,IAAM6M,EAAU,SAASmR,GAMvBza,KAAKwgJ,YAA2BpjJ,IAAlBqd,EAAQg4D,MAAsBh4D,EAAQg4D,MAAQ,EAM5DzyE,KAAKygJ,QAAUhmI,EAAQqlE,OAMvB9/E,KAAK0gJ,YAA2BtjJ,IAAlBqd,EAAQ4lI,MAAsB5lI,EAAQ4lI,MAAQ,EAM5DrgJ,KAAKuzF,iBAEL9W,EAAA3yE,QAAyB/J,KAAKC,MAC5B8jG,YAAa6+B,EAAYge,QAK7Bv3I,EAAO2B,SACLzB,EADFmzE,EAAA3yE,SASAR,EAAQ/I,UAAUq8E,UAAY,SAASn5D,GACrCg5D,EAAA3yE,QAAyBvJ,UAAUq8E,UAAU78E,KAAKC,KAAMyjB,GAEpDzjB,KAAKm8F,WACH14E,EACFzjB,KAAK4gJ,UAEL5gJ,KAAK6gJ,aASXv3I,EAAQ/I,UAAU89C,OAAS,SAAStvC,GAElC,IAAM0U,EAASzjB,KAAK28E,YAED38E,KAAKm8F,UACN14E,GAChBzjB,KAAK6gJ,WAGPpkE,EAAA3yE,QAAyBvJ,UAAU89C,OAAOt+C,KAAKC,KAAM+O,GAEjDA,GAAO0U,GACTzjB,KAAK4gJ,WAUTt3I,EAAQ/I,UAAUqgJ,QAAU,WAC1B,IAAM7xI,EAAM/O,KAAKm8F,SACjB3uF,EAAA1D,QAAY2D,OAAOsB,EAAK,sBACxB/O,KAAKuzF,cAAczyF,KACjBuT,EAAAvK,QAASwK,OAAOvF,EAAK,QAAS/O,KAAKogJ,gBAAiBpgJ,QASxDsJ,EAAQ/I,UAAUsgJ,SAAW,WAC3B,IAAM9xI,EAAM/O,KAAKm8F,SACjB3uF,EAAA1D,QAAY2D,OAAOsB,EAAK,sBACxB/O,KAAKuzF,cAActmF,QAAQoH,EAAAvK,QAASo2B,eACpClgC,KAAKuzF,cAAcxyF,OAAS,GAU9BuI,EAAQ/I,UAAU6/I,gBAAkB,SAASn2D,GAC3C,IAAM1nD,EAAS0nD,EAAIzoD,WACbzoB,EAAWqnF,EAAAt2F,QAAcg3I,WAC7B,IAAApgD,EAAA52F,QAAiBy4B,GAASviC,KAAK0gJ,QAGjCtgD,EAAAt2F,QAAci3I,YAAYhoI,EAAUwpB,EAAQviC,KAAKygJ,QAASzgJ,KAAKwgJ,QAE/DxgJ,KAAK6R,cAAc,IAAIkxH,EAAAj5H,QAAkBg8F,MACM,UAAY,IAAA9hB,EAAAl6E,QAAciP,gBAI5DzP,iFC/If,IAAA03I,EAAA,SAAAC,EAAA19I,GACA,OAAA09I,EAAAC,aAAAD,EAAAC,cAAAztI,QAAAlQ,IAAA,GCDAslD,EAAA,SAAA+lC,EAAA33E,GACA,QAAAwC,KAAAxC,EACAA,EAAA+6D,eAAAv4D,KAAAm1E,EAAAn1E,GAAAxC,EAAAwC,KCFA,SAAA0nI,KCEA,SAAAC,KCCA,SAAAC,KCHA,SAAAC,KCCA,SAAAC,KCDA,SAAAC,KCAA,SAAAC,KCCA,SAAAC,KCDA,SAAAC,KCAA,SAAAC,KCAA,SAAAC,EAAA9zI,GACA/N,KAAAkL,KAAA,mBACAlL,KAAA+N,UACA/N,KAAAulD,OAAA,IAAA1pB,OAAA0pB,MACA1pB,MAAA97B,KAAAC,KAAA+N,GTDA86C,EAAAu4F,EAAA7gJ,WACAuhJ,YAAA,SAAA5+I,EAAA6+I,EAAAxvI,KACA6wB,KAAA,aACA4+G,YAAA,SAAA9+I,EAAA6+I,KACAE,cAAA,WACA,OAAAzgI,UAAAzgB,OAAA,CACAygB,UAAA,QACG,OAAAA,UAAAzgB,OAAA,CACHygB,UAAA,GAAAA,UAAA,KAGA0gI,kBAAA,SAAA3+I,KACA4+I,aAAA,aACAC,KAAA,SAAAl/I,KACAm/I,eAAA,SAAAC,KACAC,KAAA,aACAC,KAAA,SAAAt/I,KACAu/I,kBAAA,aACAvB,YAAA,WACA,OAAAC,IAEAuB,SAAA,WACA,OAAAtB,KAGAA,EAAAlvF,EAAA,EACAkvF,EAAAjvF,EAAA,EACAivF,EAAAhvF,EAAA,EACAgvF,EAAAtqF,EAAA,EC3BAjO,EAAAw4F,EAAA9gJ,WACAoiJ,OAAA,WACA,OAAAnhI,UAAAzgB,QACA,GAAAygB,UAAA,aAAA5a,MAAA,CACA4a,UAAA,QACI,GAAAw/H,EAAAx/H,UAAA,GAAA4/H,GAAA,CACJ5/H,UAAA,SAEG,OAAAA,UAAAzgB,OAAA,CACHygB,UAAA,GAAAA,UAAA,KAGA0/H,YAAA,WACA,UAEAwB,SAAA,WACA,OAAArB,KElBAx4F,EAAA04F,EAAAhhJ,WACA6O,OAAA,SAAA2tC,KACAmkG,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAnB,KGNA14F,EAAA64F,EAAAnhJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAhB,KAGAA,EAAAkB,oBAAA,SAAAC,EAAAC,EAAA3oD,GACA,OAAAt4F,KAAAynD,IAAAu5F,EAAAC,IAAA3oD,GCVAwnD,EAAAlkJ,MAAAgI,IAAAytD,OAAAz1D,MAAAgI,IACAk8I,EAAAoB,iBAAAt9I,OACAk8I,EAAAqB,iBAAAv9I,OACAk8I,EAAAsB,WAAAx9I,KAAAytD,OAAAzL,SAAAhiD,IACAk8I,EAAAuB,UAAAhwF,OAAAgwF,UEEArB,EAAAthJ,UAAAF,OAAAsiJ,OAAA9mH,MAAAt7B,WACAshJ,EAAAthJ,UAAAq7G,YAAA//E,MCRA,IAAA9wB,EAAA,SAAAiwD,EAAAn0C,GACAm0C,EAAAz6D,UAAAF,OAAAsiJ,OAAA97H,EAAAtmB,WACAy6D,EAAAz6D,UAAAq7G,YAAA5gD,GCCA,SAAAmoF,IACA,OAAA3hI,UAAAzgB,OACA8gJ,EAAA9hJ,KAAAC,WACE,OAAAwhB,UAAAzgB,OAAA,CACF,IAAAgN,EAAAyT,UAAA,GACAqgI,EAAA9hJ,KAAAC,KAAA+N,ICNA,SAAAq1I,KCOA,SAAAC,IAIA,GAHArjJ,KAAAsB,EAAA,KACAtB,KAAAuB,EAAA,KACAvB,KAAA61B,EAAA,KACA,IAAArU,UAAAzgB,OACAsiJ,EAAAtjJ,KAAAC,KAAA,UACE,OAAAwhB,UAAAzgB,OAAA,CACF,IAAAi6D,EAAAx5C,UAAA,GACA6hI,EAAAtjJ,KAAAC,KAAAg7D,EAAA15D,EAAA05D,EAAAz5D,EAAAy5D,EAAAnlC,QACE,OAAArU,UAAAzgB,OAAA,CACF,IAAAO,EAAAkgB,UAAA,GAAAjgB,EAAAigB,UAAA,GACA6hI,EAAAtjJ,KAAAC,KAAAsB,EAAAC,EAAA8hJ,EAAAC,oBACE,OAAA9hI,UAAAzgB,OAAA,CACF,IAAAO,EAAAkgB,UAAA,GAAAjgB,EAAAigB,UAAA,GAAAqU,EAAArU,UAAA,GACAxhB,KAAAsB,IACAtB,KAAAuB,IACAvB,KAAA61B,KA4HA,SAAA0tH,IAEA,GADAvjJ,KAAAwjJ,kBAAA,EACA,IAAAhiI,UAAAzgB,OACAwiJ,EAAAxjJ,KAAAC,KAAA,QACE,OAAAwhB,UAAAzgB,OAAA,CACF,IAAA0iJ,EAAAjiI,UAAA,GACA,OAAAiiI,GAAA,IAAAA,EAAA,UAAAnC,EAAA,2CACAthJ,KAAAwjJ,kBAAAC,GCxJA,SAAA7oH,IAKA,GAJA56B,KAAA0jJ,MAAA,KACA1jJ,KAAA2jJ,MAAA,KACA3jJ,KAAA4jJ,MAAA,KACA5jJ,KAAA6jJ,MAAA,KACA,IAAAriI,UAAAzgB,OACAf,KAAAo+C,YACE,OAAA58B,UAAAzgB,QACF,GAAAygB,UAAA,aAAA6hI,EAAA,CACA,IAAAx8H,EAAArF,UAAA,GACAxhB,KAAAo+C,KAAAv3B,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,QACG,GAAAigB,UAAA,aAAAoZ,EAAA,CACH,IAAA0nH,EAAA9gI,UAAA,GACAxhB,KAAAo+C,KAAAkkG,SAEE,OAAA9gI,UAAAzgB,OAAA,CACF,IAAA+iJ,EAAAtiI,UAAA,GAAAuiI,EAAAviI,UAAA,GACAxhB,KAAAo+C,KAAA0lG,EAAAxiJ,EAAAyiJ,EAAAziJ,EAAAwiJ,EAAAviJ,EAAAwiJ,EAAAxiJ,QACE,OAAAigB,UAAAzgB,OAAA,CACF,IAAA8hJ,EAAArhI,UAAA,GAAAshI,EAAAthI,UAAA,GAAAwiI,EAAAxiI,UAAA,GAAAyiI,EAAAziI,UAAA,GACAxhB,KAAAo+C,KAAAykG,EAAAC,EAAAkB,EAAAC,IChBA,SAAAC,IACAlkJ,KAAAmkJ,UAAA,KACAnkJ,KAAAokJ,SAAA,KACApkJ,KAAAqkJ,MAAA,KACArkJ,KAAAskJ,UAAA,KACA,IAAAhwG,EAAA9yB,UAAA,GACAxhB,KAAAokJ,SAAA9vG,EACAt0C,KAAAqkJ,MAAA/vG,EAAAiwG,UCdA,SAAAC,KCAA,SAAAC,KAUA,SAAAC,KAYA,SAAAC,KAYA,SAAAC,KAYA,SAAAC,KC1CA,SAAAC,KCIA,SAAAhU,KCHA,SAAAiU,EAAAh3I,GACA/N,KAAA+N,WAAA,GCEA,SAAAi3I,KCHA,SAAAC,EAAAl3I,GACA/N,KAAA+N,WAAA,GCDA,SAAAm3I,EAAAn3I,GACA/N,KAAA+N,WAAA,GCMA,SAAAo3I,IAKAnlJ,KAAAolJ,UAEA5jI,UAAA,aAAAsvH,GACA9wI,KAAAqlJ,OAAA7jI,UAAA,IbVAzW,EAAAo4I,EAAAtB,GACAh5F,EAAAs6F,EAAA5iJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAS,KCdAt6F,EAAAu6F,EAAA7iJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAU,KAGAA,EAAAkC,qBAAA,WACA,OAAA9jI,UAAAzgB,OACAqiJ,EAAAkC,qBAAA,WACE,OAAA9jI,UAAAzgB,OAAA,CACF,IAAAgN,EAAAyT,UAAA,GACA,UAAA2hI,EAAA,kCAAAp1I,EAAA,KAAAA,EAAA,OAGAq1I,EAAAmC,OAAA,WACA,OAAA/jI,UAAAzgB,OAAA,CACA,IAAAykJ,EAAAhkI,UAAA,GACA4hI,EAAAmC,OAAAC,EAAA,WACE,OAAAhkI,UAAAzgB,OAAA,CACF,IAAAykJ,EAAAhkI,UAAA,GAAAzT,EAAAyT,UAAA,GACA,IAAAgkI,EACA,aAAAz3I,EACA,IAAAo1I,EAEA,IAAAA,EAAAp1I,KAKAq1I,EAAA3Q,OAAA,WACA,OAAAjxH,UAAAzgB,OAAA,CACA,IAAA0kJ,EAAAjkI,UAAA,GAAAkkI,EAAAlkI,UAAA,GACA4hI,EAAA3Q,OAAAgT,EAAAC,EAAA,WACE,OAAAlkI,UAAAzgB,OAAA,CACF,IAAA0kJ,EAAAjkI,UAAA,GAAAkkI,EAAAlkI,UAAA,GAAAzT,EAAAyT,UAAA,GACA,IAAAkkI,EAAAjT,OAAAgT,GACA,UAAAtC,EAAA,YAAAsC,EAAA,oBAAAC,GAAA,OAAA33I,EAAA,KAAAA,EAAA,OCbA86C,EAAAw6F,EAAA9iJ,WACAuhJ,YAAA,SAAAC,EAAAxvI,GACA,OAAAwvI,GACA,KAAAsB,EAAAnxF,EACAlyD,KAAAsB,EAAAiR,EACA,MACA,KAAA8wI,EAAAlxF,EACAnyD,KAAAuB,EAAAgR,EACA,MACA,KAAA8wI,EAAAjxF,EACApyD,KAAA61B,EAAAtjB,EACA,MACA,QACA,UAAA+uI,EAAA,2BAAAS,KAGA4D,SAAA,WACA,OAAAnkI,UAAAzgB,OAAA,CACA,IAAA6kJ,EAAApkI,UAAA,GACA,OAAAxhB,KAAAsB,IAAAskJ,EAAAtkJ,GAGAtB,KAAAuB,IAAAqkJ,EAAArkJ,EAIG,OAAAigB,UAAAzgB,OAAA,CACH,IAAAi6D,EAAAx5C,UAAA,GAAA24E,EAAA34E,UAAA,GACA,QAAAkgI,EAAAkB,oBAAA5iJ,KAAAsB,EAAA05D,EAAA15D,EAAA64F,MAGAunD,EAAAkB,oBAAA5iJ,KAAAuB,EAAAy5D,EAAAz5D,EAAA44F,KAMA6nD,YAAA,SAAAD,GACA,OAAAA,GACA,KAAAsB,EAAAnxF,EACA,OAAAlyD,KAAAsB,EACA,KAAA+hJ,EAAAlxF,EACA,OAAAnyD,KAAAuB,EACA,KAAA8hJ,EAAAjxF,EACA,OAAApyD,KAAA61B,EAEA,UAAAyrH,EAAA,2BAAAS,IAEA8D,SAAA,SAAAD,GACA,OAAA5lJ,KAAAsB,IAAAskJ,EAAAtkJ,GAAAtB,KAAAuB,IAAAqkJ,EAAArkJ,IAAAvB,KAAA61B,IAAA+vH,EAAA/vH,GAAA8rH,EAAAlkJ,MAAAuC,KAAA61B,IAAA8rH,EAAAlkJ,MAAAmoJ,EAAA/vH,KAEA48G,OAAA,SAAAmT,GACA,OAAAA,aAAAvC,GAGArjJ,KAAA2lJ,SAAAC,IAEAE,SAAA,SAAA9qF,EAAAm/B,GACA,OAAAunD,EAAAkB,oBAAA5iJ,KAAA61B,EAAAmlC,EAAAnlC,EAAAskE,IAEA4rD,UAAA,SAAA9E,GACA,IAAA2E,EAAA3E,EACA,OAAAjhJ,KAAAsB,EAAAskJ,EAAAtkJ,GAAA,EACAtB,KAAAsB,EAAAskJ,EAAAtkJ,EAAA,EACAtB,KAAAuB,EAAAqkJ,EAAArkJ,GAAA,EACAvB,KAAAuB,EAAAqkJ,EAAArkJ,EAAA,EACA,GAEAN,MAAA,WACA,IAEA,OADA,KAEG,MAAAqpD,GACH,GAAAA,aAAA07F,2BAEA,OADA5C,EAAAkC,qBAAA,yDACA,KACI,MAAAh7F,IAGJi4F,KAAA,WACA,WAAAc,EAAArjJ,OAEAR,SAAA,WACA,UAAAQ,KAAAsB,EAAA,KAAAtB,KAAAuB,EAAA,KAAAvB,KAAA61B,EAAA,KAEAowH,WAAA,SAAAjrF,GACA,IAAAmnC,EAAAniG,KAAAsB,EAAA05D,EAAA15D,EACA8gG,EAAApiG,KAAAuB,EAAAy5D,EAAAz5D,EACA2kJ,EAAAlmJ,KAAA61B,EAAAmlC,EAAAnlC,EACA,OAAAh0B,KAAAC,KAAAqgG,IAAAC,IAAA8jD,MAEA39C,SAAA,SAAAvtC,GACA,IAAAmnC,EAAAniG,KAAAsB,EAAA05D,EAAA15D,EACA8gG,EAAApiG,KAAAuB,EAAAy5D,EAAAz5D,EACA,OAAAM,KAAAC,KAAAqgG,IAAAC,MAEA+jD,SAAA,WACA,IAAA15H,EAAA,GAGA,OADAA,EAAA,IADAA,EAAA,GAAAA,EAAA42H,EAAA8C,SAAAnmJ,KAAAsB,IACA+hJ,EAAA8C,SAAAnmJ,KAAAuB,IAGA6kJ,cAAA,SAAAR,GACA5lJ,KAAAsB,EAAAskJ,EAAAtkJ,EACAtB,KAAAuB,EAAAqkJ,EAAArkJ,EACAvB,KAAA61B,EAAA+vH,EAAA/vH,GAEAqrH,YAAA,WACA,OAAAM,EAAAL,EAAAM,IAEAiB,SAAA,WACA,OAAAW,KAGAA,EAAA8C,SAAA,WACA,OAAA3kI,UAAAzgB,QAAA,iBAAAygB,UAAA,IACA,IAAAlgB,EAAAkgB,UAAA,GACA,IAAAg6C,EAAAmmF,EAAAoB,iBAAAzhJ,GACA,OAAAO,KAAAwkJ,MAAA7qF,MAAA,MAaA3S,EAAA06F,EAAAhjJ,WACA+lJ,QAAA,SAAAC,EAAAC,GACA,IAAAz5E,EAAAw5E,EACAv5E,EAAAw5E,EACAC,EAAAlD,EAAA+C,QAAAv5E,EAAAzrE,EAAA0rE,EAAA1rE,GACA,OAAAmlJ,EAAA,OAAAA,EACA,IAAAC,EAAAnD,EAAA+C,QAAAv5E,EAAAxrE,EAAAyrE,EAAAzrE,GACA,WAAAmlJ,IACA1mJ,KAAAwjJ,mBAAA,IACAD,EAAA+C,QAAAv5E,EAAAl3C,EAAAm3C,EAAAn3C,IAGAqrH,YAAA,WACA,OAAAU,IAEAc,SAAA,WACA,OAAAa,KAGAA,EAAA+C,QAAA,SAAAjkG,EAAAzmB,GACA,OAAAymB,EAAAzmB,GAAA,EACAymB,EAAAzmB,EAAA,EACA+lH,EAAAlkJ,MAAA4kD,GACAs/F,EAAAlkJ,MAAAm+B,GAAA,GACA,EAEA+lH,EAAAlkJ,MAAAm+B,GAAA,EACA,GAEAynH,EAAAE,wBACAF,EAAAsD,iBAAA,mBACAtD,EAAAC,cAAA3B,EAAArhF,IACA+iF,EAAAnxF,EAAA,EACAmxF,EAAAlxF,EAAA,EACAkxF,EAAAjxF,EAAA,ECtKAvJ,EAAAjuB,EAAAr6B,WACA6G,QAAA,WACA,OAAApH,KAAA0/F,WAAA1/F,KAAA4mJ,aAEAnU,OAAA,SAAAmT,GACA,KAAAA,aAAAhrH,GACA,SAEA,IAAAisH,EAAAjB,EACA,OAAA5lJ,KAAAmzF,SACA0zD,EAAA1zD,SAEAnzF,KAAA2jJ,QAAAkD,EAAAC,WAAA9mJ,KAAA6jJ,QAAAgD,EAAAE,WAAA/mJ,KAAA0jJ,QAAAmD,EAAAG,WAAAhnJ,KAAA4jJ,QAAAiD,EAAAI,WAEAC,aAAA,SAAA5E,GACA,GAAAtiJ,KAAAmzF,UAAAmvD,EAAAnvD,WAAAnzF,KAAA2yF,WAAA2vD,GAAA,WAAA1nH,EACA,IAAAusH,EAAAnnJ,KAAA0jJ,MAAApB,EAAAoB,MAAA1jJ,KAAA0jJ,MAAApB,EAAAoB,MACA0D,EAAApnJ,KAAA4jJ,MAAAtB,EAAAsB,MAAA5jJ,KAAA4jJ,MAAAtB,EAAAsB,MAGA,WAAAhpH,EAAAusH,EAFAnnJ,KAAA2jJ,MAAArB,EAAAqB,MAAA3jJ,KAAA2jJ,MAAArB,EAAAqB,MAEAyD,EADApnJ,KAAA6jJ,MAAAvB,EAAAuB,MAAA7jJ,KAAA6jJ,MAAAvB,EAAAuB,QAGA1wD,OAAA,WACA,OAAAnzF,KAAA2jJ,MAAA3jJ,KAAA0jJ,OAEAoD,QAAA,WACA,OAAA9mJ,KAAA2jJ,OAEA0D,OAAA,WACA,OAAA7lI,UAAAzgB,OAAA,CACA,GAAAygB,UAAA,aAAA6hI,EAAA,CACA,IAAAx8H,EAAArF,UAAA,GACA,OAAAxhB,KAAAqnJ,OAAAxgI,EAAAvlB,EAAAulB,EAAAtlB,GACI,GAAAigB,UAAA,aAAAoZ,EAAA,CACJ,IAAAgrH,EAAApkI,UAAA,GACA,OAAAxhB,KAAAmzF,WAAAyyD,EAAAzyD,WAGAyyD,EAAAoB,WAAAhnJ,KAAA0jJ,OAAAkC,EAAAkB,WAAA9mJ,KAAA2jJ,OAAAiC,EAAAqB,WAAAjnJ,KAAA4jJ,OAAAgC,EAAAmB,WAAA/mJ,KAAA6jJ,aAEG,OAAAriI,UAAAzgB,OAAA,CACH,IAAAO,EAAAkgB,UAAA,GAAAjgB,EAAAigB,UAAA,GACA,OAAAxhB,KAAAmzF,WACA7xF,GAAAtB,KAAA0jJ,OAAApiJ,GAAAtB,KAAA2jJ,OAAApiJ,GAAAvB,KAAA4jJ,OAAAriJ,GAAAvB,KAAA6jJ,SAGAlxD,WAAA,WACA,OAAAnxE,UAAAzgB,OAAA,CACA,GAAAygB,UAAA,aAAAoZ,EAAA,CACA,IAAAgrH,EAAApkI,UAAA,GACA,OAAAxhB,KAAAmzF,WAAAyyD,EAAAzyD,YAGAyyD,EAAAlC,MAAA1jJ,KAAA2jJ,OAAAiC,EAAAjC,MAAA3jJ,KAAA0jJ,OAAAkC,EAAAhC,MAAA5jJ,KAAA6jJ,OAAA+B,EAAA/B,MAAA7jJ,KAAA4jJ,OACI,GAAApiI,UAAA,aAAA6hI,EAAA,CACJ,IAAAx8H,EAAArF,UAAA,GACA,OAAAxhB,KAAA2yF,WAAA9rE,EAAAvlB,EAAAulB,EAAAtlB,SAEG,OAAAigB,UAAAzgB,OACH,GAAAygB,UAAA,aAAA6hI,GAAA7hI,UAAA,aAAA6hI,EAAA,CACA,IAAAhhG,EAAA7gC,UAAA,GAAAoa,EAAApa,UAAA,GACA,OAAAxhB,KAAAmzF,cAGA9wC,EAAA/gD,EAAAs6B,EAAAt6B,EAAA+gD,EAAA/gD,EAAAs6B,EAAAt6B,GACAtB,KAAA2jJ,YACAthG,EAAA/gD,EAAAs6B,EAAAt6B,EAAA+gD,EAAA/gD,EAAAs6B,EAAAt6B,GACAtB,KAAA0jJ,YACArhG,EAAA9gD,EAAAq6B,EAAAr6B,EAAA8gD,EAAA9gD,EAAAq6B,EAAAr6B,GACAvB,KAAA6jJ,WACAxhG,EAAA9gD,EAAAq6B,EAAAr6B,EAAA8gD,EAAA9gD,EAAAq6B,EAAAr6B,GACAvB,KAAA4jJ,eAEI,oBAAApiI,UAAA,qBAAAA,UAAA,IACJ,IAAAlgB,EAAAkgB,UAAA,GAAAjgB,EAAAigB,UAAA,GACA,OAAAxhB,KAAAmzF,YACA7xF,EAAAtB,KAAA2jJ,OAAAriJ,EAAAtB,KAAA0jJ,OAAAniJ,EAAAvB,KAAA6jJ,OAAAtiJ,EAAAvB,KAAA4jJ,SAIAqD,QAAA,WACA,OAAAjnJ,KAAA4jJ,OAEAoD,QAAA,WACA,OAAAhnJ,KAAA0jJ,OAEA4D,gBAAA,WACA,OAAA9lI,UAAAzgB,QACA,GAAAygB,UAAA,aAAA6hI,EAAA,CACA,IAAAx8H,EAAArF,UAAA,GACAxhB,KAAAsnJ,gBAAAzgI,EAAAvlB,EAAAulB,EAAAtlB,QACI,GAAAigB,UAAA,aAAAoZ,EAAA,CACJ,IAAAgrH,EAAApkI,UAAA,GACA,GAAAokI,EAAAzyD,SACA,YAEAnzF,KAAAmzF,UACAnzF,KAAA0jJ,MAAAkC,EAAAoB,UACAhnJ,KAAA2jJ,MAAAiC,EAAAkB,UACA9mJ,KAAA4jJ,MAAAgC,EAAAqB,UACAjnJ,KAAA6jJ,MAAA+B,EAAAmB,YAEAnB,EAAAlC,MAAA1jJ,KAAA0jJ,QACA1jJ,KAAA0jJ,MAAAkC,EAAAlC,OAEAkC,EAAAjC,MAAA3jJ,KAAA2jJ,QACA3jJ,KAAA2jJ,MAAAiC,EAAAjC,OAEAiC,EAAAhC,MAAA5jJ,KAAA4jJ,QACA5jJ,KAAA4jJ,MAAAgC,EAAAhC,OAEAgC,EAAA/B,MAAA7jJ,KAAA6jJ,QACA7jJ,KAAA6jJ,MAAA+B,EAAA/B,cAIG,OAAAriI,UAAAzgB,OAAA,CACH,IAAAO,EAAAkgB,UAAA,GAAAjgB,EAAAigB,UAAA,GACAxhB,KAAAmzF,UACAnzF,KAAA0jJ,MAAApiJ,EACAtB,KAAA2jJ,MAAAriJ,EACAtB,KAAA4jJ,MAAAriJ,EACAvB,KAAA6jJ,MAAAtiJ,IAEAD,EAAAtB,KAAA0jJ,QACA1jJ,KAAA0jJ,MAAApiJ,GAEAA,EAAAtB,KAAA2jJ,QACA3jJ,KAAA2jJ,MAAAriJ,GAEAC,EAAAvB,KAAA4jJ,QACA5jJ,KAAA4jJ,MAAAriJ,GAEAA,EAAAvB,KAAA6jJ,QACA7jJ,KAAA6jJ,MAAAtiJ,MAKAgmJ,UAAA,WACA,GAAAvnJ,KAAAmzF,SAAA,SACA,IAAAw2B,EAAA3pH,KAAA0/F,WACAhkC,EAAA17D,KAAA4mJ,YACA,OAAAj9B,EAAAjuD,EAAAiuD,EACAjuD,GAEAgkC,SAAA,WACA,OAAA1/F,KAAAmzF,SACA,EAEAnzF,KAAA2jJ,MAAA3jJ,KAAA0jJ,OAEAqC,UAAA,SAAA9E,GACA,IAAAqB,EAAArB,EACA,OAAAjhJ,KAAAmzF,SACAmvD,EAAAnvD,SAAA,GACA,EAEAmvD,EAAAnvD,SAAA,EAEAnzF,KAAA0jJ,MAAApB,EAAAoB,OAAA,EACA1jJ,KAAA0jJ,MAAApB,EAAAoB,MAAA,EACA1jJ,KAAA4jJ,MAAAtB,EAAAsB,OAAA,EACA5jJ,KAAA4jJ,MAAAtB,EAAAsB,MAAA,EACA5jJ,KAAA2jJ,MAAArB,EAAAqB,OAAA,EACA3jJ,KAAA2jJ,MAAArB,EAAAqB,MAAA,EACA3jJ,KAAA6jJ,MAAAvB,EAAAuB,OAAA,EACA7jJ,KAAA6jJ,MAAAvB,EAAAuB,MAAA,EACA,GAEA7wE,UAAA,SAAAw0E,EAAAC,GACA,GAAAznJ,KAAAmzF,SACA,YAEAnzF,KAAAo+C,KAAAp+C,KAAAgnJ,UAAAQ,EAAAxnJ,KAAA8mJ,UAAAU,EAAAxnJ,KAAAinJ,UAAAQ,EAAAznJ,KAAA+mJ,UAAAU,IAEAjoJ,SAAA,WACA,aAAAQ,KAAA0jJ,MAAA,MAAA1jJ,KAAA2jJ,MAAA,KAAA3jJ,KAAA4jJ,MAAA,MAAA5jJ,KAAA6jJ,MAAA,KAEA6D,UAAA,WACA1nJ,KAAA0jJ,MAAA,EACA1jJ,KAAA2jJ,OAAA,EACA3jJ,KAAA4jJ,MAAA,EACA5jJ,KAAA6jJ,OAAA,GAEA+C,UAAA,WACA,OAAA5mJ,KAAAmzF,SACA,EAEAnzF,KAAA6jJ,MAAA7jJ,KAAA4jJ,OAEA+D,UAAA,WACA,GAAA3nJ,KAAAmzF,SAAA,SACA,IAAAw2B,EAAA3pH,KAAA0/F,WACAhkC,EAAA17D,KAAA4mJ,YACA,OAAAj9B,EAAAjuD,EAAAiuD,EACAjuD,GAEAksF,SAAA,WACA,OAAApmI,UAAAzgB,OAAA,CACA,IAAAwnG,EAAA/mF,UAAA,GACAxhB,KAAA4nJ,SAAAr/C,UACG,OAAA/mF,UAAAzgB,OAAA,CACH,IAAAkyE,EAAAzxD,UAAA,GAAA0xD,EAAA1xD,UAAA,GACA,GAAAxhB,KAAAmzF,SAAA,YACAnzF,KAAA0jJ,OAAAzwE,EACAjzE,KAAA2jJ,OAAA1wE,EACAjzE,KAAA4jJ,OAAA1wE,EACAlzE,KAAA6jJ,OAAA3wE,GACAlzE,KAAA0jJ,MAAA1jJ,KAAA2jJ,OAAA3jJ,KAAA4jJ,MAAA5jJ,KAAA6jJ,QAAA7jJ,KAAA0nJ,cAGAh1D,SAAA,WACA,OAAAlxE,UAAAzgB,OAAA,CACA,GAAAygB,UAAA,aAAAoZ,EAAA,CACA,IAAAgrH,EAAApkI,UAAA,GACA,OAAAxhB,KAAAqnJ,OAAAzB,GACI,GAAApkI,UAAA,aAAA6hI,EAAA,CACJ,IAAAx8H,EAAArF,UAAA,GACA,OAAAxhB,KAAAqnJ,OAAAxgI,SAEG,OAAArF,UAAAzgB,OAAA,CACH,IAAAO,EAAAkgB,UAAA,GAAAjgB,EAAAigB,UAAA,GACA,OAAAxhB,KAAAqnJ,OAAA/lJ,EAAAC,KAGAsmJ,OAAA,WACA,OAAA7nJ,KAAAmzF,SAAA,KACA,IAAAkwD,GAAArjJ,KAAAgnJ,UAAAhnJ,KAAA8mJ,WAAA,GAAA9mJ,KAAAinJ,UAAAjnJ,KAAA+mJ,WAAA,IAEA3oG,KAAA,WACA,OAAA58B,UAAAzgB,OACAf,KAAA0nJ,iBACG,OAAAlmI,UAAAzgB,QACH,GAAAygB,UAAA,aAAA6hI,EAAA,CACA,IAAAx8H,EAAArF,UAAA,GACAxhB,KAAAo+C,KAAAv3B,EAAAvlB,EAAAulB,EAAAvlB,EAAAulB,EAAAtlB,EAAAslB,EAAAtlB,QACI,GAAAigB,UAAA,aAAAoZ,EAAA,CACJ,IAAA0nH,EAAA9gI,UAAA,GACAxhB,KAAA0jJ,MAAApB,EAAAoB,MACA1jJ,KAAA2jJ,MAAArB,EAAAqB,MACA3jJ,KAAA4jJ,MAAAtB,EAAAsB,MACA5jJ,KAAA6jJ,MAAAvB,EAAAuB,YAEG,OAAAriI,UAAAzgB,OAAA,CACH,IAAA+iJ,EAAAtiI,UAAA,GAAAuiI,EAAAviI,UAAA,GACAxhB,KAAAo+C,KAAA0lG,EAAAxiJ,EAAAyiJ,EAAAziJ,EAAAwiJ,EAAAviJ,EAAAwiJ,EAAAxiJ,QACG,OAAAigB,UAAAzgB,OAAA,CACH,IAAA8hJ,EAAArhI,UAAA,GAAAshI,EAAAthI,UAAA,GAAAwiI,EAAAxiI,UAAA,GAAAyiI,EAAAziI,UAAA,GACAqhI,EAAAC,GACA9iJ,KAAA0jJ,MAAAb,EACA7iJ,KAAA2jJ,MAAAb,IAEA9iJ,KAAA0jJ,MAAAZ,EACA9iJ,KAAA2jJ,MAAAd,GAEAmB,EAAAC,GACAjkJ,KAAA4jJ,MAAAI,EACAhkJ,KAAA6jJ,MAAAI,IAEAjkJ,KAAA4jJ,MAAAK,EACAjkJ,KAAA6jJ,MAAAG,KAIA+C,QAAA,WACA,OAAA/mJ,KAAA6jJ,OAEAt7C,SAAA,SAAA+5C,GACA,GAAAtiJ,KAAA2yF,WAAA2vD,GAAA,SACA,IAAAngD,EAAA,EACAniG,KAAA2jJ,MAAArB,EAAAoB,MAAAvhD,EAAAmgD,EAAAoB,MAAA1jJ,KAAA2jJ,MAA0D3jJ,KAAA0jJ,MAAApB,EAAAqB,QAAAxhD,EAAAniG,KAAA0jJ,MAAApB,EAAAqB,OAC1D,IAAAvhD,EAAA,EAEA,OADApiG,KAAA6jJ,MAAAvB,EAAAsB,MAAAxhD,EAAAkgD,EAAAsB,MAAA5jJ,KAAA6jJ,MAA0D7jJ,KAAA4jJ,MAAAtB,EAAAuB,QAAAzhD,EAAApiG,KAAA4jJ,MAAAtB,EAAAuB,OAC1D,IAAA1hD,EAAAC,EACA,IAAAA,EAAAD,EACAtgG,KAAAC,KAAAqgG,IAAAC,MAEA+jD,SAAA,WACA,IAAA15H,EAAA,GAKA,OADAA,EAAA,IADAA,EAAA,IADAA,EAAA,IADAA,EAAA,GAAAA,EAAA42H,EAAA8C,SAAAnmJ,KAAA0jJ,QACAL,EAAA8C,SAAAnmJ,KAAA2jJ,QACAN,EAAA8C,SAAAnmJ,KAAA4jJ,QACAP,EAAA8C,SAAAnmJ,KAAA6jJ,QAGA3C,YAAA,WACA,OAAAM,EAAAC,IAEAiB,SAAA,WACA,OAAA9nH,KAGAA,EAAA+3D,WAAA,WACA,OAAAnxE,UAAAzgB,OAAA,CACA,IAAA+iJ,EAAAtiI,UAAA,GAAAuiI,EAAAviI,UAAA,GAAAmmD,EAAAnmD,UAAA,GACA,OAAAmmD,EAAArmE,IAAAwiJ,EAAAxiJ,EAAAyiJ,EAAAziJ,EAAAwiJ,EAAAxiJ,EAAAyiJ,EAAAziJ,IAAAqmE,EAAArmE,IAAAwiJ,EAAAxiJ,EAAAyiJ,EAAAziJ,EAAAwiJ,EAAAxiJ,EAAAyiJ,EAAAziJ,IAAAqmE,EAAApmE,IAAAuiJ,EAAAviJ,EAAAwiJ,EAAAxiJ,EAAAuiJ,EAAAviJ,EAAAwiJ,EAAAxiJ,IAAAomE,EAAApmE,IAAAuiJ,EAAAviJ,EAAAwiJ,EAAAxiJ,EAAAuiJ,EAAAviJ,EAAAwiJ,EAAAxiJ,GAIE,OAAAigB,UAAAzgB,OAAA,CACF,IAAA+iJ,EAAAtiI,UAAA,GAAAuiI,EAAAviI,UAAA,GAAAsmI,EAAAtmI,UAAA,GAAAumI,EAAAvmI,UAAA,GACA,IAAAwmI,EAAAnmJ,KAAAk6D,IAAA+rF,EAAAxmJ,EAAAymJ,EAAAzmJ,GACA2mJ,EAAApmJ,KAAAi6D,IAAAgsF,EAAAxmJ,EAAAymJ,EAAAzmJ,GACA4mJ,EAAArmJ,KAAAk6D,IAAA+nF,EAAAxiJ,EAAAyiJ,EAAAziJ,GACA6mJ,EAAAtmJ,KAAAi6D,IAAAgoF,EAAAxiJ,EAAAyiJ,EAAAziJ,GACA,QAAA4mJ,EAAAD,OACAE,EAAAH,KACAA,EAAAnmJ,KAAAk6D,IAAA+rF,EAAAvmJ,EAAAwmJ,EAAAxmJ,GACA0mJ,EAAApmJ,KAAAi6D,IAAAgsF,EAAAvmJ,EAAAwmJ,EAAAxmJ,GACA2mJ,EAAArmJ,KAAAk6D,IAAA+nF,EAAAviJ,EAAAwiJ,EAAAxiJ,GACA4mJ,EAAAtmJ,KAAAi6D,IAAAgoF,EAAAviJ,EAAAwiJ,EAAAxiJ,KACA2mJ,EAAAD,MACAE,EAAAH,OAIAptH,EAAA+rH,iBAAA,mBCvUA99F,EAAAq7F,EAAA3jJ,WACA6nJ,qBAAA,WACA,OAAApoJ,KAAAqoJ,gBAAAnE,EAAAoE,6BAEAC,WAAA,WACA,OAAAvoJ,KAAAokJ,UAEAoE,aAAA,SAAA/iJ,GACA,OAAAzF,MAEAoH,QAAA,WACA,UAEAqhJ,YAAA,WACA,UAEAhW,OAAA,WACA,GAAAjxH,UAAA,aAAA0iI,EAAA,CACA,IAAAvoH,EAAAna,UAAA,GACA,cAAAma,GACA37B,KAAA0oJ,WAAA/sH,GACG,GAAAna,UAAA,aAAAnhB,OAAA,CACH,IAAA4gJ,EAAAz/H,UAAA,GACA,KAAAy/H,aAAAiD,GAAA,SACA,IAAAvoH,EAAAslH,EACA,OAAAjhJ,KAAA2oJ,YAAAhtH,KAGAgtH,YAAA,SAAA/C,GACA,OAAA5lJ,OAAA4lJ,GAAA5lJ,KAAA2oJ,YAAA/C,EAAA,IAEAgD,gBAAA,WACA5oJ,KAAA8nD,MAAAo8F,EAAA2E,wBAEAC,sBAAA,WACA9oJ,KAAAmkJ,UAAA,MAEA4E,WAAA,SAAAptH,GACA,cAAAA,GACA37B,KAAAgpJ,OAAAL,YAAAhtH,EAAAqtH,SAEA7lB,UAAA,WACA,UAEA8lB,iBAAA,WACA,UAEAlD,UAAA,WACA,OAAAvkI,UAAAzgB,OAAA,CACA,IAAAkgJ,EAAAz/H,UAAA,GACA,IAAAokI,EAAA3E,EACA,OAAAjhJ,KAAAqoJ,gBAAAzC,EAAAyC,cACAroJ,KAAAqoJ,cAAAzC,EAAAyC,cAEAroJ,KAAA6sB,WAAA+4H,EAAA/4H,UACA,EAEA7sB,KAAA6sB,WACA,EAEA+4H,EAAA/4H,UACA,EAEA7sB,KAAAkpJ,mBAAAjI,GACG,OAAAz/H,UAAAzgB,OAAA,CACH,IAAAkgJ,EAAAz/H,UAAA,GAAA2nI,EAAA3nI,UAAA,GACAokI,EAAA3E,EACA,OAAAjhJ,KAAAqoJ,gBAAAzC,EAAAyC,cACAroJ,KAAAqoJ,cAAAzC,EAAAyC,cAEAroJ,KAAA6sB,WAAA+4H,EAAA/4H,UACA,EAEA7sB,KAAA6sB,WACA,EAEA+4H,EAAA/4H,UACA,EAEA7sB,KAAAkpJ,mBAAAjI,EAAAkI,KAGAC,YAAA,WACA,OAAAppJ,KAAAskJ,WAEAC,QAAA,WACA,OAAAvkJ,KAAAqkJ,OAEAgF,YAAA,WACA,OAAArpJ,KAAAuoJ,aAAAe,WAAAtpJ,KAAAupJ,wBAEAC,2BAAA,SAAA7tH,GACA,GAAAA,EAAA0sH,gBAAAnE,EAAAoE,4BACA,UAAAhH,EAAA,8DAGAmI,MAAA,SAAApnG,EAAAzmB,EAAAu+D,GACA,WAAAA,EACA93C,EAAAowF,OAAA72G,GAEAymB,EAAAkmD,SAAA3sE,IAAAu+D,GAEA6uD,KAAA,WACA,IAAAzG,EAAAviJ,KAAAuiJ,OAEA,OADAA,EAAAmH,YACAnH,GAEAoH,kBAAA,WACA,OAAA3pJ,KAAAokJ,SAAAuF,qBAEAJ,oBAAA,WAIA,OAHA,OAAAvpJ,KAAAmkJ,YACAnkJ,KAAAmkJ,UAAAnkJ,KAAA4pJ,2BAEA,IAAAhvH,EAAA56B,KAAAmkJ,YAEA0F,QAAA,SAAAC,GACA9pJ,KAAAqkJ,MAAAyF,GAEAC,YAAA,SAAAC,GACAhqJ,KAAAskJ,UAAA0F,GAEA1D,QAAA,SAAAjkG,EAAAzmB,GAGA,IAFA,IAAAr4B,EAAA8+C,EAAA5iC,WACApa,EAAAu2B,EAAAnc,WACAlc,EAAA0mJ,WAAA5kJ,EAAA4kJ,WAAA,CACA,IAAAC,EAAA3mJ,EAAAmc,OACAyqI,EAAA9kJ,EAAAqa,OACA0qI,EAAAF,EAAAnE,UAAAoE,GACA,OAAAC,EACA,OAAAA,EAGA,OAAA7mJ,EAAA0mJ,UACA,EAEA5kJ,EAAA4kJ,WACA,EAEA,GAEA9D,SAAA,WACA,OAAAnmJ,KAAAupJ,sBAAApD,YAEAkE,8BAAA,WACA,OAAArqJ,KAAAqoJ,gBAAAnE,EAAAoE,6BAAAtoJ,KAAAqoJ,gBAAAnE,EAAAoG,qBAAAtqJ,KAAAqoJ,gBAAAnE,EAAAqG,0BAAAvqJ,KAAAqoJ,gBAAAnE,EAAAsG,uBAKAtJ,YAAA,WACA,OAAAC,EAAAK,EAAAC,IAEAiB,SAAA,WACA,OAAAwB,KAGAA,EAAAuG,oBAAA,SAAAx5E,GACA,QAAA1tE,EAAA,EAAgBA,EAAA0tE,EAAAlwE,OAAuBwC,IACvC,IAAA0tE,EAAA1tE,GAAAspB,UACA,SAGA,UAEAq3H,EAAAwG,gBAAA,SAAA39I,GACA,QAAAxJ,EAAA,EAAgBA,EAAAwJ,EAAAhM,OAAkBwC,IAClC,UAAAwJ,EAAAxJ,GACA,SAGA,UAEA2gJ,EAAAyC,iBAAA,mBACAzC,EAAAyG,eAAA,EACAzG,EAAAoG,oBAAA,EACApG,EAAA0G,oBAAA,EACA1G,EAAA2G,oBAAA,EACA3G,EAAAqG,yBAAA,EACArG,EAAA4G,iBAAA,EACA5G,EAAAsG,sBAAA,EACAtG,EAAAoE,4BAAA,EACApE,EAAA6G,eAAA,QACA7G,EAAA8G,oBAAA,aACA9G,EAAA+G,oBAAA,aACA/G,EAAAgH,oBAAA,aACAhH,EAAAiH,yBAAA,kBACAjH,EAAAkH,iBAAA,UACAlH,EAAAmH,sBAAA,eACAnH,EAAAoH,4BAAA,qBACApH,EAAA2E,uBACA3H,YAAA,WACA,OAAAK,IAEAnyI,OAAA,SAAA2tC,GACAA,EAAA+rG,0BClNAjgG,EAAA27F,EAAAjkJ,WACA6O,OAAA,SAAAyqB,KACAqnH,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA8B,KCNA37F,EAAA47F,EAAAlkJ,WACAgrJ,aAAA,SAAAC,KACAtK,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA+B,KAIA57F,EAAA67F,EAAAnkJ,WACAgrJ,aAAA,SAAAC,GACA,OAAAA,EAAA,MAEAtK,YAAA,WACA,OAAAuD,IAEA/B,SAAA,WACA,OAAAgC,KAIA77F,EAAA87F,EAAApkJ,WACAgrJ,aAAA,SAAAC,GACA,OAAAA,EAAA,GAEAtK,YAAA,WACA,OAAAuD,IAEA/B,SAAA,WACA,OAAAiC,KAIA97F,EAAA+7F,EAAArkJ,WACAgrJ,aAAA,SAAAC,GACA,OAAAA,EAAA,GAEAtK,YAAA,WACA,OAAAuD,IAEA/B,SAAA,WACA,OAAAkC,KAIA/7F,EAAAg8F,EAAAtkJ,WACAgrJ,aAAA,SAAAC,GACA,WAAAA,GAEAtK,YAAA,WACA,OAAAuD,IAEA/B,SAAA,WACA,OAAAmC,KAGAJ,EAAAC,uBACAD,EAAAE,2BACAF,EAAAG,sCACAH,EAAAI,qCACAJ,EAAAgH,mBAAA,IAAA/G,EACAD,EAAAiH,uBAAA,IAAA/G,EACAF,EAAAkH,mCAAA,IAAA/G,EACAH,EAAAmH,kCAAA,IAAA/G,EACAJ,EAAAoH,sBAAApH,EAAAgH,mBCxDA3G,EAAAvkJ,UAAA0pJ,QAAA,aAMAnF,EAAAvkJ,UAAAmf,KAAA,aAMAolI,EAAAvkJ,UAAAotC,OAAA,aCNAmjG,EAAAvwI,UAAAsqD,IAAA,aAUAimF,EAAAvwI,UAAA8kJ,OAAA,aAOAvU,EAAAvwI,UAAAssB,QAAA,aAOAikH,EAAAvwI,UAAAkf,SAAA,aAOAqxH,EAAAvwI,UAAA6iC,KAAA,aAOA0tG,EAAAvwI,UAAAurJ,QAAA,aASAhb,EAAAvwI,UAAAotC,OAAA,aCvDAo3G,EAAAxkJ,UAAA,IAAAs7B,MAKAkpH,EAAAxkJ,UAAA2K,KAAA,4BCJA85I,EAAAzkJ,UAAAF,OAAAsiJ,OAAA7R,EAAAvwI,WACAykJ,EAAAzkJ,UAAAq7G,YAAAopC,EAOAA,EAAAzkJ,UAAA8J,IAAA,aAUA26I,EAAAzkJ,UAAAmM,IAAA,aAOAs4I,EAAAzkJ,UAAAssB,QAAA,aC1BAo4H,EAAA1kJ,UAAA,IAAAs7B,MAMAopH,EAAA1kJ,UAAA2K,KAAA,yBCNAg6I,EAAA3kJ,UAAA,IAAAs7B,MAMAqpH,EAAA3kJ,UAAA2K,KAAA,wBCSAi6I,EAAA5kJ,UAAAF,OAAAsiJ,OAAAqC,EAAAzkJ,WACA4kJ,EAAA5kJ,UAAAq7G,YAAAupC,EAEAA,EAAA5kJ,UAAAwrJ,eAAA,aACA5G,EAAA5kJ,UAAA2gJ,YAAA,WAA+C,OAAA8D,EAAAlU,IAK/CqU,EAAA5kJ,UAAAsqD,IAAA,SAAAP,GAMA,OALA,IAAA9oC,UAAAzgB,OACAf,KAAAolJ,OAAAtkJ,KAAAwpD,GAEAtqD,KAAAolJ,OAAA1xI,OAAA8N,UAAA,GAAAA,UAAA,KAEA,GAGA2jI,EAAA5kJ,UAAAgtC,MAAA,WACAvtC,KAAAolJ,WAMAD,EAAA5kJ,UAAA8kJ,OAAA,SAAArqF,GACA,QAAAz3D,EAAAy3D,EAAAv7C,WAA4Blc,EAAA0mJ,WAC5BjqJ,KAAA6qD,IAAAtnD,EAAAmc,QAEA,UAOAylI,EAAA5kJ,UAAAmM,IAAA,SAAAxJ,EAAAw6E,GACA,IAAAsuE,EAAAhsJ,KAAAolJ,OAAAliJ,GAEA,OADAlD,KAAAolJ,OAAAliJ,GAAAw6E,EACAsuE,GAOA7G,EAAA5kJ,UAAAkf,SAAA,WACA,WAAAwsI,EAAAjsJ,OAOAmlJ,EAAA5kJ,UAAA8J,IAAA,SAAAnH,GACA,GAAAA,EAAA,GAAAA,GAAAlD,KAAAojC,OACA,UAAA2hH,EAGA,OAAA/kJ,KAAAolJ,OAAAliJ,IAOAiiJ,EAAA5kJ,UAAAssB,QAAA,WACA,WAAA7sB,KAAAolJ,OAAArkJ,QAOAokJ,EAAA5kJ,UAAA6iC,KAAA,WACA,OAAApjC,KAAAolJ,OAAArkJ,QAOAokJ,EAAA5kJ,UAAAurJ,QAAA,WAGA,IAFA,IAAA/+I,KAEAxJ,EAAA,EAAAmD,EAAA1G,KAAAolJ,OAAArkJ,OAA2CwC,EAAAmD,EAASnD,IACpDwJ,EAAAjM,KAAAd,KAAAolJ,OAAA7hJ,IAGA,OAAAwJ,GAOAo4I,EAAA5kJ,UAAAotC,OAAA,SAAAszG,GAGA,IAFA,IAAAjzH,GAAA,EAEAzqB,EAAA,EAAAmD,EAAA1G,KAAAolJ,OAAArkJ,OAA2CwC,EAAAmD,EAASnD,IACpD,GAAAvD,KAAAolJ,OAAA7hJ,KAAA09I,EAAA,CACAjhJ,KAAAolJ,OAAA1xI,OAAAnQ,EAAA,GACAyqB,GAAA,EACA,MAIA,OAAAA,GAWA,IAAAi+H,EAAA,SAAAC,GAKAlsJ,KAAAmsJ,WAAAD,EAKAlsJ,KAAAosJ,UAAA,GClJA,SAAAC,IAEA,GADAlH,EAAAr9F,MAAA9nD,MACA,IAAAwhB,UAAAzgB,aAA+B,OAAAygB,UAAAzgB,OAAA,CAC/B,IAAA84B,EAAArY,UAAA,GACAxhB,KAAA+rJ,eAAAlyH,EAAA94B,QACAf,KAAA6qD,IAAAhxB,GAAA,QACE,OAAArY,UAAAzgB,OAAA,CACF,IAAA84B,EAAArY,UAAA,GAAA8qI,EAAA9qI,UAAA,GACAxhB,KAAA+rJ,eAAAlyH,EAAA94B,QACAf,KAAA6qD,IAAAhxB,EAAAyyH,ICbA,SAAAC,KCFA,SAAAC,KCOA,SAAAC,KAmLA,SAAAC,KAcA,SAAAC,KClMA,SAAAC,KCGA,SAAAC,KCAA,SAAAC,KCIA,SAAAC,IAKA/sJ,KAAAolJ,UAEA5jI,UAAA,aAAAsvH,GACA9wI,KAAAqlJ,OAAA7jI,UAAA,IR0IAyqI,EAAA1rJ,UAAAmf,KAAA,WACA,GAAA1f,KAAAosJ,YAAApsJ,KAAAmsJ,WAAA/oH,OACA,UAAA6hH,EAEA,OAAAjlJ,KAAAmsJ,WAAA9hJ,IAAArK,KAAAosJ,cAOAH,EAAA1rJ,UAAA0pJ,QAAA,WACA,OAAAjqJ,KAAAosJ,UAAApsJ,KAAAmsJ,WAAA/oH,QAWA6oH,EAAA1rJ,UAAAmM,IAAA,SAAAgxE,GACA,OAAA19E,KAAAmsJ,WAAAz/I,IAAA1M,KAAAosJ,UAAA,EAAA1uE,IAOAuuE,EAAA1rJ,UAAAotC,OAAA,WACA3tC,KAAAmsJ,WAAAx+G,OAAA3tC,KAAAmsJ,WAAA9hJ,IAAArK,KAAAosJ,aC7KArhJ,EAAAshJ,EAAAlH,GACAt8F,EAAAwjG,EAAA9rJ,WACA0hJ,cAAA,SAAA1+I,GACA,OAAAvD,KAAAqK,IAAA9G,IAEA8hJ,OAAA,WACA,OAAA7jI,UAAAzgB,QAAA,kBAAAygB,UAAA,IAAAw/H,EAAAx/H,UAAA,GAAAsvH,GAAA,CACA,IAAAkc,EAAAxrI,UAAA,GAAA8qI,EAAA9qI,UAAA,GAEA,IADA,IAAAyrI,GAAA,EACA1pJ,EAAAypJ,EAAAvtI,WAAgClc,EAAA0mJ,WAChCjqJ,KAAA6qD,IAAAtnD,EAAAmc,OAAA4sI,GACAW,GAAA,EAEA,OAAAA,EACG,OAAA9H,EAAA5kJ,UAAA8kJ,OAAAv9F,MAAA9nD,KAAAwhB,YAEHvgB,MAAA,WAEA,IADA,IAAAA,EAAAkkJ,EAAA5kJ,UAAAU,MAAAlB,KAAAC,MACAuD,EAAA,EAAiBA,EAAAvD,KAAAojC,OAAiB7/B,IAClCtC,EAAA4pD,IAAAtnD,EAAAvD,KAAAqK,IAAA9G,GAAAtC,SAEA,OAAAA,GAEAwhJ,kBAAA,WACA,OAAAziJ,KAAA8rJ,QAAAO,EAAAa,iBAEAriG,IAAA,WACA,OAAArpC,UAAAzgB,OAAA,CACA,IAAA84B,EAAArY,UAAA,GACA2jI,EAAA5kJ,UAAAsqD,IAAA9qD,KAAAC,KAAA65B,QACG,OAAArY,UAAAzgB,OAAA,CACH,GAAAygB,UAAA,aAAA5a,OAAA,kBAAA4a,UAAA,IACA,IAAAqY,EAAArY,UAAA,GAAA8qI,EAAA9qI,UAAA,GAEA,OADAxhB,KAAA6qD,IAAAhxB,EAAAyyH,GAAA,IACA,EACI,GAAA9qI,UAAA,aAAA6hI,GAAA,kBAAA7hI,UAAA,IACJ,IAAAqY,EAAArY,UAAA,GACA,IADAA,UAAA,GAEA,GAAAxhB,KAAAojC,QAAA,EAEA,GADApjC,KAAAqK,IAAArK,KAAAojC,OAAA,GACAuiH,SAAA9rH,GAAA,YAGAsrH,EAAA5kJ,UAAAsqD,IAAA9qD,KAAAC,KAAA65B,QACI,GAAArY,UAAA,aAAAnhB,QAAA,kBAAAmhB,UAAA,IACJ,IAAAygB,EAAAzgB,UAAA,GAAA8qI,EAAA9qI,UAAA,GAEA,OADAxhB,KAAA6qD,IAAA5oB,EAAAqqH,IACA,QAEG,OAAA9qI,UAAAzgB,OAAA,CACH,qBAAAygB,UAAA,IAAAA,UAAA,aAAA5a,OAAA,kBAAA4a,UAAA,IACA,IAAAqY,EAAArY,UAAA,GAAA8qI,EAAA9qI,UAAA,GACA,GADAA,UAAA,GAEA,QAAAje,EAAA,EAAoBA,EAAAs2B,EAAA94B,OAAkBwC,IACtCvD,KAAA6qD,IAAAhxB,EAAAt2B,GAAA+oJ,QAGA,IAAA/oJ,EAAAs2B,EAAA94B,OAAA,EAAmCwC,GAAA,EAAQA,IAC3CvD,KAAA6qD,IAAAhxB,EAAAt2B,GAAA+oJ,GAGA,SACI,qBAAA9qI,UAAA,IAAA0xC,OAAAi6F,UAAA3rI,UAAA,KAAAA,UAAA,aAAA6hI,EAAA,CACJ,IAAA9/I,EAAAie,UAAA,GAAAqY,EAAArY,UAAA,GACA,IADAA,UAAA,GACA,CACA,IAAA4hB,EAAApjC,KAAAojC,OACA,GAAAA,EAAA,GACA,GAAA7/B,EAAA,EAEA,GADAvD,KAAAqK,IAAA9G,EAAA,GACAoiJ,SAAA9rH,GAAA,YAEA,GAAAt2B,EAAA6/B,EAEA,GADApjC,KAAAqK,IAAA9G,GACAoiJ,SAAA9rH,GAAA,aAIAsrH,EAAA5kJ,UAAAsqD,IAAA9qD,KAAAC,KAAAuD,EAAAs2B,SAEG,OAAArY,UAAAzgB,OAAA,CACH,IAAA84B,EAAArY,UAAA,GAAA8qI,EAAA9qI,UAAA,GAAAgC,EAAAhC,UAAA,GAAA9d,EAAA8d,UAAA,GACA,IAAA4rI,EAAA,EACA5pI,EAAA9f,IAAA0pJ,GAAA,GACA,IAAA7pJ,EAAAigB,EAAsBjgB,IAAAG,EAAWH,GAAA6pJ,EACjCptJ,KAAA6qD,IAAAhxB,EAAAt2B,GAAA+oJ,GAEA,WAGAe,UAAA,WACArtJ,KAAAojC,OAAA,GAAApjC,KAAA6qD,IAAA,IAAAw4F,EAAArjJ,KAAAqK,IAAA,SAEA62I,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA2J,KAGAA,EAAAa,eAAA,IAAAtmJ,MAAA,GAAAqvC,KAAA,MClHA4S,EAAA0jG,EAAAhsJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA6J,KAGAA,EAAAe,MAAA,SAAAhsJ,GACA,IAAAisJ,EAAA1rJ,KAAAqmD,IAAA5mD,GACA,OAAAqgJ,EAAAsB,WAAAsK,KACA5L,EAAAlkJ,MAAA8vJ,KACAA,EAAAhB,EAAAiB,QAEAjB,EAAAxwF,IAAA,SAAA0xF,EAAAC,EAAAC,EAAAC,GACA,IAAA7xF,EAAA0xF,EAIA,OAHAC,EAAA3xF,MAAA2xF,GACAC,EAAA5xF,MAAA4xF,GACAC,EAAA7xF,MAAA6xF,GACA7xF,GAEAwwF,EAAAsB,MAAA,WACA,oBAAArsI,UAAA,qBAAAA,UAAA,qBAAAA,UAAA,IACA,IAAAlgB,EAAAkgB,UAAA,GAAAu6C,EAAAv6C,UAAA,GAAAs6C,EAAAt6C,UAAA,GACA,OAAAlgB,EAAAy6D,IACAz6D,EAAAw6D,IACAx6D,EACE,GAAA4xD,OAAAi6F,UAAA3rI,UAAA,KAAA0xC,OAAAi6F,UAAA3rI,UAAA,KAAA0xC,OAAAi6F,UAAA3rI,UAAA,KACF,IAAAlgB,EAAAkgB,UAAA,GAAAu6C,EAAAv6C,UAAA,GAAAs6C,EAAAt6C,UAAA,GACA,OAAAlgB,EAAAy6D,IACAz6D,EAAAw6D,IACAx6D,IAGAirJ,EAAAuB,KAAA,SAAA5qJ,EAAA44D,GACA,OAAA54D,EAAA,EACA44D,IAAA54D,EAAA44D,EAEA54D,EAAA44D,GAEAywF,EAAAzwF,IAAA,WACA,OAAAt6C,UAAAzgB,OAAA,CACA,IAAA0sJ,EAAAjsI,UAAA,GAAAksI,EAAAlsI,UAAA,GAAAmsI,EAAAnsI,UAAA,GAIA,OAFAksI,GADA5xF,EAAA2xF,KACA3xF,EAAA4xF,GACAC,EAAA7xF,MAAA6xF,GACA7xF,EACE,OAAAt6C,UAAAzgB,OAAA,CACF,IAAA0sJ,EAAAjsI,UAAA,GAAAksI,EAAAlsI,UAAA,GAAAmsI,EAAAnsI,UAAA,GAAAosI,EAAApsI,UAAA,GACA,IAAAs6C,EAIA,OAHA4xF,GADA5xF,EAAA2xF,KACA3xF,EAAA4xF,GACAC,EAAA7xF,MAAA6xF,GACAC,EAAA9xF,MAAA8xF,GACA9xF,IAGAywF,EAAAwB,QAAA,SAAAlL,EAAAC,GACA,OAAAD,EAAAC,GAAA,GAEAyJ,EAAAiB,OAAA3rJ,KAAAqmD,IAAA,IC5DAskG,EAAAwB,UAAA,EAAAxvH,EAAAyvH,EAAAl+F,EAAAm+F,EAAAxnJ,KACA,IAAAs0D,EAAA,EACA,QAAAz3D,EAAA0qJ,EAAsB1qJ,EAAA0qJ,EAAAvnJ,EAAkBnD,IACxCwsD,EAAAm+F,EAAAlzF,GAAAx8B,EAAAj7B,GACAy3D,MAIAwxF,EAAA2B,YAAA,CAAAjjJ,KAEAkjJ,iBAAA,OACGljJ,ICLH29C,EAAA4jG,EAAAlsJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA+J,KAGAA,EAAA4B,OAAA,SAAAC,GACA,QAAAA,EAAAvtJ,OAAA,MACAutJ,EAAA,GAAA3I,SAAA2I,IAAAvtJ,OAAA,KAGA0rJ,EAAA8B,YAAA,SAAAC,EAAAF,GACA,QAAA/qJ,EAAA,EAAgBA,EAAAirJ,EAAAztJ,OAAoBwC,IAAA,CACpC,IAAAkrJ,EAAAD,EAAAjrJ,GACA,GAAAkpJ,EAAAh5I,QAAAg7I,EAAAH,GAAA,SAAAG,EAEA,aAEAhC,EAAAiC,OAAA,SAAA9uJ,EAAA+uJ,GACA,IAAAprJ,EAAAkpJ,EAAAh5I,QAAAk7I,EAAA/uJ,GACA,GAAA2D,EAAA,cACA,IAAAqrJ,EAAA,IAAAhoJ,MAAAhH,EAAAmB,QAAAk1C,KAAA,MACAu2G,EAAAwB,UAAApuJ,EAAA2D,EAAAqrJ,EAAA,EAAAhvJ,EAAAmB,OAAAwC,GACAipJ,EAAAwB,UAAApuJ,EAAA,EAAAgvJ,EAAAhvJ,EAAAmB,OAAAwC,KACAipJ,EAAAwB,UAAAY,EAAA,EAAAhvJ,EAAA,EAAAA,EAAAmB,SAEA0rJ,EAAAha,OAAA,WACA,OAAAjxH,UAAAzgB,OAAA,CACA,IAAA8tJ,EAAArtI,UAAA,GAAAstI,EAAAttI,UAAA,GACA,GAAAqtI,IAAAC,EAAA,SACA,UAAAD,GAAA,OAAAC,EAAA,SACA,GAAAD,EAAA9tJ,SAAA+tJ,EAAA/tJ,OAAA,SACA,QAAAwC,EAAA,EAAiBA,EAAAsrJ,EAAA9tJ,OAAmBwC,IACpC,IAAAsrJ,EAAAtrJ,GAAAkvI,OAAAqc,EAAAvrJ,IAAA,SAEA,SACE,OAAAie,UAAAzgB,OAAA,CACF,IAAA8tJ,EAAArtI,UAAA,GAAAstI,EAAAttI,UAAA,GAAAutI,EAAAvtI,UAAA,GACA,GAAAqtI,IAAAC,EAAA,SACA,UAAAD,GAAA,OAAAC,EAAA,SACA,GAAAD,EAAA9tJ,SAAA+tJ,EAAA/tJ,OAAA,SACA,IAAAwC,EAAA,EAAiBA,EAAAsrJ,EAAA9tJ,OAAmBwC,IACpC,OAAAwrJ,EAAAzI,QAAAuI,EAAAtrJ,GAAAurJ,EAAAvrJ,IAAA,SAEA,WAGAkpJ,EAAAvF,aAAA,SAAAtnJ,EAAA0iJ,GAEA,IADA,IAAA0M,EAAA,IAAA3C,EACA9oJ,EAAA,EAAgBA,EAAA3D,EAAAmB,OAAwBwC,IACxC++I,EAAA3vD,WAAA/yF,EAAA2D,KAAAyrJ,EAAAnkG,IAAAjrD,EAAA2D,IAAA,GAEA,OAAAyrJ,EAAAvM,qBAEAgK,EAAAwC,kBAAA,SAAAp1H,GACA,QAAAt2B,EAAA,EAAgBA,EAAAs2B,EAAA94B,OAAkBwC,IAClC,GAAAs2B,EAAAt2B,EAAA,GAAAkvI,OAAA54G,EAAAt2B,IACA,SAGA,UAEAkpJ,EAAAyC,qBAAA,SAAAr1H,GACA,OAAA4yH,EAAAwC,kBAAAp1H,GACA,IAAAwyH,EAAAxyH,GAAA,GACA4oH,oBAFA5oH,GAIA4yH,EAAAx9I,QAAA,SAAA4qB,GAGA,IAFA,IAAAg1E,EAAAh1E,EAAA94B,OAAA,EACAouJ,EAAAttJ,KAAAwkJ,MAAAx3C,EAAA,GACAtrG,EAAA,EAAgBA,GAAA4rJ,EAAU5rJ,IAAA,CAC1B,IAAAktC,EAAA5W,EAAAt2B,GACAs2B,EAAAt2B,GAAAs2B,EAAAg1E,EAAAtrG,GACAs2B,EAAAg1E,EAAAtrG,GAAAktC,IAGAg8G,EAAA2C,WAAA,SAAAv1H,GAEA,IADA,IAAAw1H,EAAA,EACA9rJ,EAAA,EAAgBA,EAAAs2B,EAAA94B,OAAkBwC,IAClC,OAAAs2B,EAAAt2B,IAAA8rJ,IAEA,IAAAC,EAAA,IAAA1oJ,MAAAyoJ,GAAAp5G,KAAA,MACA,OAAAo5G,EAAA,OAAAC,EACA,IAAAjqJ,EAAA,EACA,IAAA9B,EAAA,EAAgBA,EAAAs2B,EAAA94B,OAAkBwC,IAClC,OAAAs2B,EAAAt2B,KAAA+rJ,EAAAjqJ,KAAAw0B,EAAAt2B,IAEA,OAAA+rJ,GAEA7C,EAAA8C,SAAA,WACA,OAAA/tI,UAAAzgB,OAAA,CACA,IAAAnB,EAAA4hB,UAAA,GAEA,IADA,IAAA+gI,EAAA,IAAA37I,MAAAhH,EAAAmB,QAAAk1C,KAAA,MACA1yC,EAAA,EAAiBA,EAAA3D,EAAAmB,OAAwBwC,IACzCg/I,EAAAh/I,GAAA,IAAA8/I,EAAAzjJ,EAAA2D,IAEA,OAAAg/I,EACE,OAAA/gI,UAAAzgB,OAAA,CACF,IAAAy9B,EAAAhd,UAAA,GAAAguI,EAAAhuI,UAAA,GAAAuuC,EAAAvuC,UAAA,GAAAiuI,EAAAjuI,UAAA,GAAAzgB,EAAAygB,UAAA,GACA,IAAAje,EAAA,EAAiBA,EAAAxC,EAAYwC,IAC7BwsD,EAAA0/F,EAAAlsJ,GAAA,IAAA8/I,EAAA7kH,EAAAgxH,EAAAjsJ,MAIAkpJ,EAAAiD,gBAAA,SAAAC,EAAAC,GACA,QAAArsJ,EAAA,EAAgBA,EAAAosJ,EAAA5uJ,OAAiBwC,IAAA,CACjC,IAAAugJ,EAAA6L,EAAApsJ,GACAwgJ,EAAA6L,EAAAD,EAAA5uJ,OAAAwC,EAAA,GACA,OAAAugJ,EAAAiC,UAAAhC,GAAA,SAEA,UAEA0I,EAAAoD,SAAA,SAAAjwJ,GAEA,IADA,IAAA0iJ,EAAA,IAAA1nH,EACAr3B,EAAA,EAAgBA,EAAA3D,EAAAmB,OAAwBwC,IACxC++I,EAAAgF,gBAAA1nJ,EAAA2D,IAEA,OAAA++I,GAEAmK,EAAAhK,kBAAA,SAAAuM,GACA,OAAAA,EAAAlD,QAAAW,EAAAS,iBAEAT,EAAAqD,6BAAA,SAAArqJ,EAAAu1D,GACA,OAAAA,EAAAj6D,QAAA0E,EAAAu1D,MAEAyxF,EAAAh5I,QAAA,SAAA+tB,EAAA5hC,GACA,QAAA2D,EAAA,EAAgBA,EAAA3D,EAAAmB,OAAwBwC,IACxC,GAAAi+B,EAAAixG,OAAA7yI,EAAA2D,IACA,OAAAA,EAGA,UAEAkpJ,EAAAsD,oBAAA,SAAAzB,GACA,QAAA/qJ,EAAA,EAAgBA,EAAA1B,KAAAwkJ,MAAAiI,EAAAvtJ,OAAA,GAAgCwC,IAAA,CAChD,IAAA8B,EAAAipJ,EAAAvtJ,OAAA,EAAAwC,EACA4lJ,EAAAmF,EAAA/qJ,GAAAwiJ,UAAAuI,EAAAjpJ,IACA,OAAA8jJ,EAAA,OAAAA,EAEA,UAEAsD,EAAAnG,QAAA,SAAAqJ,EAAAC,GAEA,IADA,IAAArsJ,EAAA,EACAA,EAAAosJ,EAAA5uJ,QAAAwC,EAAAqsJ,EAAA7uJ,QAAA,CACA,IAAAulJ,EAAAqJ,EAAApsJ,GAAAwiJ,UAAA6J,EAAArsJ,IACA,OAAA+iJ,EAAA,OAAAA,EACA/iJ,IAEA,OAAAA,EAAAqsJ,EAAA7uJ,QAAA,EACAwC,EAAAosJ,EAAA5uJ,OAAA,EACA,GAEA0rJ,EAAAuD,cAAA,SAAApwJ,GAEA,IADA,IAAAqwJ,EAAA,KACA1sJ,EAAA,EAAgBA,EAAA3D,EAAAmB,OAAwBwC,KACxC,OAAA0sJ,KAAAlK,UAAAnmJ,EAAA2D,IAAA,KACA0sJ,EAAArwJ,EAAA2D,IAGA,OAAA0sJ,GAEAxD,EAAAyD,QAAA,SAAA5B,EAAA9qI,EAAA9f,GACA8f,EAAA+oI,EAAAsB,MAAArqI,EAAA,EAAA8qI,EAAAvtJ,QAEA,IAAAovJ,GADAzsJ,EAAA6oJ,EAAAsB,MAAAnqJ,GAAA,EAAA4qJ,EAAAvtJ,SACAyiB,EAAA,EACA9f,EAAA,IAAAysJ,EAAA,GACA3sI,GAAA8qI,EAAAvtJ,SAAAovJ,EAAA,GACAzsJ,EAAA8f,IAAA2sI,EAAA,GACA,IAAAC,EAAA,IAAAxpJ,MAAAupJ,GAAAl6G,KAAA,MACA,OAAAk6G,EAAA,OAAAC,EAEA,IADA,IAAAC,EAAA,EACA9sJ,EAAAigB,EAAoBjgB,GAAAG,EAAUH,IAC9B6sJ,EAAAC,KAAA/B,EAAA/qJ,GAEA,OAAA6sJ,GAGAvnG,EAAA6jG,EAAAnsJ,WACA+lJ,QAAA,SAAAC,EAAAC,GACA,IAAAmJ,EAAApJ,EACAqJ,EAAApJ,EACA,OAAAiG,EAAAnG,QAAAqJ,EAAAC,IAEA1O,YAAA,WACA,OAAAU,IAEAc,SAAA,WACA,OAAAgK,KAIA7jG,EAAA8jG,EAAApsJ,WACA+lJ,QAAA,SAAAC,EAAAC,GACA,IAAAmJ,EAAApJ,EACAqJ,EAAApJ,EACA,GAAAmJ,EAAA5uJ,OAAA6uJ,EAAA7uJ,OAAA,SACA,GAAA4uJ,EAAA5uJ,OAAA6uJ,EAAA7uJ,OAAA,SACA,OAAA4uJ,EAAA5uJ,OAAA,SACA,IAAAuvJ,EAAA7D,EAAAnG,QAAAqJ,EAAAC,GAEA,OADAnD,EAAAiD,gBAAAC,EAAAC,GACA,EACAU,GAEAC,WAAA,SAAAhK,EAAAC,GACA,IAAAmJ,EAAApJ,EACAqJ,EAAApJ,EACA,GAAAmJ,EAAA5uJ,OAAA6uJ,EAAA7uJ,OAAA,SACA,GAAA4uJ,EAAA5uJ,OAAA6uJ,EAAA7uJ,OAAA,SACA,OAAA4uJ,EAAA5uJ,OAAA,SAKA,IAJA,IAAAyvJ,EAAA/D,EAAAsD,oBAAAJ,GACAc,EAAAhE,EAAAsD,oBAAAH,GACAc,EAAAF,EAAA,IAAAb,EAAA5uJ,OAAA,EACA4vJ,EAAAF,EAAA,IAAAd,EAAA5uJ,OAAA,EACAwC,EAAA,EAAiBA,EAAAosJ,EAAA5uJ,OAAiBwC,IAAA,CAClC,IAAAqtJ,EAAAjB,EAAAe,GAAA3K,UAAA6J,EAAAe,IACA,OAAAC,EAAA,OAAAA,EACAF,GAAAF,EACAG,GAAAF,EAEA,UAEAvP,YAAA,WACA,OAAAU,IAEAc,SAAA,WACA,OAAAiK,KAGAF,EAAAC,oBACAD,EAAAE,0BACAF,EAAAS,eAAA,IAAAtmJ,MAAA,GAAAqvC,KAAA,MCjOA22G,EAAArsJ,UAAA8J,IAAA,aAUAuiJ,EAAArsJ,UAAA01I,IAAA,aAOA2W,EAAArsJ,UAAA6iC,KAAA,aAOAwpH,EAAArsJ,UAAAkP,OAAA,aAkBAm9I,EAAArsJ,UAAAswJ,SAAA,aC/CAhE,EAAAtsJ,UAAA,IAAAqsJ,ECAAE,EAAAvsJ,UAAA,IAAAuwI,EAUAgc,EAAAvsJ,UAAAmyF,SAAA,aCIAq6D,EAAAxsJ,UAAA,IAAAusJ,EAMAC,EAAAxsJ,UAAAmyF,SAAA,SAAAuuD,GACA,QAAA19I,EAAA,EAAAmD,EAAA1G,KAAAolJ,OAAArkJ,OAA2CwC,EAAAmD,EAASnD,IAAA,CAEpD,GADAvD,KAAAolJ,OAAA7hJ,KACA09I,EACA,SAGA,UAOA8L,EAAAxsJ,UAAAsqD,IAAA,SAAAo2F,GACA,OAAAjhJ,KAAA0yF,SAAAuuD,KAIAjhJ,KAAAolJ,OAAAtkJ,KAAAmgJ,IAEA,IAOA8L,EAAAxsJ,UAAA8kJ,OAAA,SAAArqF,GACA,QAAAz3D,EAAAy3D,EAAAv7C,WAA4Blc,EAAA0mJ,WAC5BjqJ,KAAA6qD,IAAAtnD,EAAAmc,QAEA,UAOAqtI,EAAAxsJ,UAAAotC,OAAA,SAAAszG,GACA,UAAA6P,WAAAC,KAAA7L,uBAOA6H,EAAAxsJ,UAAA6iC,KAAA,WACA,OAAApjC,KAAAolJ,OAAArkJ,QAOAgsJ,EAAAxsJ,UAAAssB,QAAA,WACA,WAAA7sB,KAAAolJ,OAAArkJ,QAOAgsJ,EAAAxsJ,UAAAurJ,QAAA,WAGA,IAFA,IAAA/+I,KAEAxJ,EAAA,EAAAmD,EAAA1G,KAAAolJ,OAAArkJ,OAA2CwC,EAAAmD,EAASnD,IACpDwJ,EAAAjM,KAAAd,KAAAolJ,OAAA7hJ,IAGA,OAAAwJ,GAOAggJ,EAAAxsJ,UAAAkf,SAAA,WACA,WAAAuxI,EAAAhxJ,OAWA,IAAAgxJ,EAAA,SAAAC,GAKAjxJ,KAAAkxJ,SAAAD,EAKAjxJ,KAAAosJ,UAAA,GAOA4E,EAAAzwJ,UAAAmf,KAAA,WACA,GAAA1f,KAAAosJ,YAAApsJ,KAAAkxJ,SAAA9tH,OACA,UAAA6hH,EAEA,OAAAjlJ,KAAAkxJ,SAAA9L,OAAAplJ,KAAAosJ,cAOA4E,EAAAzwJ,UAAA0pJ,QAAA,WACA,OAAAjqJ,KAAAosJ,UAAApsJ,KAAAkxJ,SAAA9tH,QAWA4tH,EAAAzwJ,UAAAotC,OAAA,WACA,UAAAu3G,GC5JA,MAAAiM,EAAA,EAEA,SAAAC,EAAAvqI,GAAsB,aAAAA,EAAAsqI,EAAAtqI,EAAAsvB,MACtB,SAAAk7G,EAAAxqI,GAAuB,aAAAA,EAAA,KAAAA,EAAAvT,OACvB,SAAAg+I,EAAAzqI,EAAAm0C,GAA0B,OAAAn0C,MAAAsvB,MAAA6kB,GAC1B,SAAAu2F,EAAA1qI,GAAqB,aAAAA,EAAA,KAAAA,EAAAguC,KACrB,SAAA28F,EAAA3qI,GAAsB,aAAAA,EAAA,KAAAA,EAAAkuC,MAStB,SAAA08F,KAKAzxJ,KAAA0xJ,MAAA,KAKA1xJ,KAAA2xJ,MAAA,EC5BA,SAAAC,MCQA,SAAAC,MCIA,SAAAC,KAKA9xJ,KAAAolJ,UAEA5jI,UAAA,aAAAsvH,GACA9wI,KAAAqlJ,OAAA7jI,UAAA,IHUAiwI,GAAAlxJ,UAAA,IAAAssJ,EAMA4E,GAAAlxJ,UAAA8J,IAAA,SAAAoP,GAEA,IADA,IAAAoN,EAAA7mB,KAAA0xJ,MACA,OAAA7qI,GAAA,CACA,IAAAkrI,EAAAt4I,EAAA,UAAAoN,EAAApN,KACA,GAAAs4I,EAAA,EACAlrI,IAAAguC,SACK,MAAAk9F,EAAA,GAGL,OAAAlrI,EAAAtU,MAFAsU,IAAAkuC,OAKA,aAOA08F,GAAAlxJ,UAAA01I,IAAA,SAAAx8H,EAAAlH,GACA,UAAAvS,KAAA0xJ,MAYA,OAXA1xJ,KAAA0xJ,OACAj4I,MACAlH,QACAsiD,KAAA,KACAE,MAAA,KACAzhD,OAAA,KACA6iC,MAAAg7G,EACAa,WAAkB,OAAAhyJ,KAAAuS,OAClBy/I,SAAgB,OAAAhyJ,KAAAyZ,MAEhBzZ,KAAA2xJ,MAAA,EACA,KAEA,IAAAr+I,EAAAy+I,EAAAr/F,EAAA1yD,KAAA0xJ,MACA,GAGA,GAFAp+I,EAAAo/C,GACAq/F,EAAAt4I,EAAA,UAAAi5C,EAAAj5C,MACA,EACAi5C,IAAAmC,SACK,MAAAk9F,EAAA,GAEA,CACL,IAAAtiE,EAAA/8B,EAAAngD,MAEA,OADAmgD,EAAAngD,QACAk9E,EAJA/8B,IAAAqC,aAMG,OAAArC,GACH,IAAApI,GACA7wC,MACAo7C,KAAA,KACAE,MAAA,KACAxiD,QACAe,SACA6iC,MAAAg7G,EACAa,WAAgB,OAAAhyJ,KAAAuS,OAChBy/I,SAAc,OAAAhyJ,KAAAyZ,MASd,OAPAs4I,EAAA,EACAz+I,EAAAuhD,KAAAvK,EAEAh3C,EAAAyhD,MAAAzK,EAEAtqD,KAAAiyJ,kBAAA3nG,GACAtqD,KAAA2xJ,QACA,MAOAF,GAAAlxJ,UAAA0xJ,kBAAA,SAAA3wJ,GAEA,IADAA,EAAA60C,MAzGA,EA0GA,MAAA70C,MAAAtB,KAAA0xJ,OA1GA,GA0GApwJ,EAAAgS,OAAA6iC,OAAA,CAEA,IAgBA50C,EAjBA,GAAA8vJ,EAAA/vJ,IAAAiwJ,EAAAF,IAAA/vJ,KA3GA,GA6GA8vJ,EADA7vJ,EAAAiwJ,EAAAH,IAAA/vJ,OAEAgwJ,EAAAD,EAAA/vJ,GAAA6vJ,GACAG,EAAA/vJ,EAAA4vJ,GACAG,EAAAD,IAAA/vJ,IAhHA,GAiHAA,EAAA+vJ,IAAA/vJ,MAEAA,GAAAkwJ,EAAAH,EAAA/vJ,MACAA,EAAA+vJ,EAAA/vJ,GACAtB,KAAAkyJ,WAAA5wJ,IAEAgwJ,EAAAD,EAAA/vJ,GAAA6vJ,GACAG,EAAAD,IAAA/vJ,IAxHA,GAyHAtB,KAAAmyJ,YAAAd,IAAA/vJ,WAzHA,GA6HA8vJ,EADA7vJ,EAAAgwJ,EAAAF,IAAA/vJ,OAEAgwJ,EAAAD,EAAA/vJ,GAAA6vJ,GACAG,EAAA/vJ,EAAA4vJ,GACAG,EAAAD,IAAA/vJ,IAhIA,GAiIAA,EAAA+vJ,IAAA/vJ,MAEAA,GAAAiwJ,EAAAF,EAAA/vJ,MACAA,EAAA+vJ,EAAA/vJ,GACAtB,KAAAmyJ,YAAA7wJ,IAEAgwJ,EAAAD,EAAA/vJ,GAAA6vJ,GACAG,EAAAD,IAAA/vJ,IAxIA,GAyIAtB,KAAAkyJ,WAAAb,IAAA/vJ,MAIAtB,KAAA0xJ,MAAAv7G,MAAAg7G,GAOAM,GAAAlxJ,UAAAkP,OAAA,WACA,IAAAy8I,EAAA,IAAA/G,EACAt+H,EAAA7mB,KAAAoyJ,gBACA,UAAAvrI,EAEA,IADAqlI,EAAArhG,IAAAhkC,EAAAtU,OACA,QAAAsU,EAAA4qI,GAAAY,UAAAxrI,KACAqlI,EAAArhG,IAAAhkC,EAAAtU,OAGA,OAAA25I,GAOAuF,GAAAlxJ,UAAAswJ,SAAA,WACA,IAAAI,EAAA,IAAAlE,EACAlmI,EAAA7mB,KAAAoyJ,gBACA,UAAAvrI,EAEA,IADAoqI,EAAApmG,IAAAhkC,GACA,QAAAA,EAAA4qI,GAAAY,UAAAxrI,KACAoqI,EAAApmG,IAAAhkC,GAGA,OAAAoqI,GAOAQ,GAAAlxJ,UAAA2xJ,WAAA,SAAArrI,GACA,SAAAA,EAAA,CACA,IAAA6U,EAAA7U,EAAAkuC,MACAluC,EAAAkuC,MAAAr5B,EAAAm5B,KACA,MAAAn5B,EAAAm5B,OACAn5B,EAAAm5B,KAAAvhD,OAAAuT,GACA6U,EAAApoB,OAAAuT,EAAAvT,OACA,MAAAuT,EAAAvT,OACAtT,KAAA0xJ,MAAAh2H,EACA7U,EAAAvT,OAAAuhD,MAAAhuC,EACAA,EAAAvT,OAAAuhD,KAAAn5B,EAEA7U,EAAAvT,OAAAyhD,MAAAr5B,EACAA,EAAAm5B,KAAAhuC,EACAA,EAAAvT,OAAAooB,IAQA+1H,GAAAlxJ,UAAA4xJ,YAAA,SAAAtrI,GACA,SAAAA,EAAA,CACA,IAAAxX,EAAAwX,EAAAguC,KACAhuC,EAAAguC,KAAAxlD,EAAA0lD,MACA,MAAA1lD,EAAA0lD,QAAA1lD,EAAA0lD,MAAAzhD,OAAAuT,GACAxX,EAAAiE,OAAAuT,EAAAvT,OACA,MAAAuT,EAAAvT,OACAtT,KAAA0xJ,MAAAriJ,EACAwX,EAAAvT,OAAAyhD,OAAAluC,EACAA,EAAAvT,OAAAyhD,MAAA1lD,EACAwX,EAAAvT,OAAAuhD,KAAAxlD,EACAA,EAAA0lD,MAAAluC,EACAA,EAAAvT,OAAAjE,IAQAoiJ,GAAAlxJ,UAAA6xJ,cAAA,WACA,IAAAvrI,EAAA7mB,KAAA0xJ,MACA,SAAA7qI,EACA,WAAAA,EAAAguC,MACAhuC,IAAAguC,KAGA,OAAAhuC,GASA4qI,GAAAY,UAAA,SAAA3/F,GACA,UAAAA,EACA,YACA,UAAAA,EAAAqC,MAAA,CAEA,IADA,IAAAluC,EAAA6rC,EAAAqC,MACA,OAAAluC,EAAAguC,MACAhuC,IAAAguC,KAEA,OAAAhuC,EAEAA,EAAA6rC,EAAAp/C,OAEA,IAFA,IACAg/I,EAAA5/F,EACA,OAAA7rC,GAAAyrI,IAAAzrI,EAAAkuC,OACAu9F,EAAAzrI,EACAA,IAAAvT,OAEA,OAAAuT,GAQA4qI,GAAAlxJ,UAAA6iC,KAAA,WACA,OAAApjC,KAAA2xJ,OC1QA9oG,EAAA+oG,GAAArxJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAkP,MCGAC,GAAAtxJ,UAAA,IAAAusJ,ECcAgF,GAAAvxJ,UAAA,IAAAsxJ,GAMAC,GAAAvxJ,UAAAmyF,SAAA,SAAAuuD,GACA,QAAA19I,EAAA,EAAAmD,EAAA1G,KAAAolJ,OAAArkJ,OAA2CwC,EAAAmD,EAASnD,IAAA,CAEpD,OADAvD,KAAAolJ,OAAA7hJ,GACA,UAAA09I,GACA,SAGA,UAOA6Q,GAAAvxJ,UAAAsqD,IAAA,SAAAo2F,GACA,GAAAjhJ,KAAA0yF,SAAAuuD,GACA,SAGA,QAAA19I,EAAA,EAAAmD,EAAA1G,KAAAolJ,OAAArkJ,OAA2CwC,EAAAmD,EAASnD,IAAA,CAEpD,OADAvD,KAAAolJ,OAAA7hJ,GACA,UAAA09I,GAEA,OADAjhJ,KAAAolJ,OAAA1xI,OAAAnQ,EAAA,EAAA09I,IACA,EAMA,OAFAjhJ,KAAAolJ,OAAAtkJ,KAAAmgJ,IAEA,GAOA6Q,GAAAvxJ,UAAA8kJ,OAAA,SAAArqF,GACA,QAAAz3D,EAAAy3D,EAAAv7C,WAA4Blc,EAAA0mJ,WAC5BjqJ,KAAA6qD,IAAAtnD,EAAAmc,QAEA,UAOAoyI,GAAAvxJ,UAAAotC,OAAA,SAAA2c,GACA,UAAA46F,GAOA4M,GAAAvxJ,UAAA6iC,KAAA,WACA,OAAApjC,KAAAolJ,OAAArkJ,QAOA+wJ,GAAAvxJ,UAAAssB,QAAA,WACA,WAAA7sB,KAAAolJ,OAAArkJ,QAOA+wJ,GAAAvxJ,UAAAurJ,QAAA,WAGA,IAFA,IAAA/+I,KAEAxJ,EAAA,EAAAmD,EAAA1G,KAAAolJ,OAAArkJ,OAA2CwC,EAAAmD,EAASnD,IACpDwJ,EAAAjM,KAAAd,KAAAolJ,OAAA7hJ,IAGA,OAAAwJ,GAOA+kJ,GAAAvxJ,UAAAkf,SAAA,WACA,WAAA8yI,GAAAvyJ,OAWA,IC9HAwyJ,GD8HAD,GAAA,SAAAE,GAKAzyJ,KAAA0yJ,SAAAD,EAKAzyJ,KAAAosJ,UAAA,GEjIA,SAAAuG,MCRA,SAAAC,MCGA,SAAA53E,MCFA,SAAA63E,MCAA,SAAAC,MCaA,SAAAniF,KACA3wE,KAAA+yJ,YAAA,KACA,IAAA9hF,EAAAzvD,UAAA,GAAA8yB,EAAA9yB,UAAA,GAKA,GAJA0iI,EAAAnkJ,KAAAC,KAAAs0C,GACA,OAAA28B,IACAA,MAEAizE,EAAAwG,gBAAAz5E,GACA,UAAAqwE,EAAA,6CAEAthJ,KAAA+yJ,YAAA9hF,ECjBA,SAAAtxE,KACA,IAAA2D,EAAAke,UAAA,GAAA8yB,EAAA9yB,UAAA,GACAmvD,GAAA5wE,KAAAC,KAAAsD,EAAAgxC,GCFA,SAAA0+G,KAKA,GAJAhzJ,KAAAizJ,MAAA,KACAjzJ,KAAAkzJ,UAAA,KACAlzJ,KAAAmzJ,QAAA,KACAnzJ,KAAAozJ,aAAA,KACA,IAAA5xI,UAAAzgB,OAAA,CACA,IAAAg8C,EAAAv7B,UAAA,GACAwxI,GAAAjzJ,KAAAC,KAAA+8C,EAAA0nG,EAAAgH,yBACE,OAAAjqI,UAAAzgB,OAAA,CACF,IAAAg8C,EAAAv7B,UAAA,GAAA6xI,EAAA7xI,UAAA,GACAxhB,KAAAizJ,MAAAl2G,EACA/8C,KAAAkzJ,UAAAn2G,EAAAwrG,aACAvoJ,KAAAmzJ,QAAAE,GAiFA,SAAAC,KACAtzJ,KAAAsmB,MAAA,KCnGA,SAAAitI,MCFA,SAAAC,MCUA,SAAAC,MCVA,SAAAC,GAAAjoB,GACAzrI,KAAAyrI,MCKA,SAAAkoB,MCSA,SAAAvpI,KACApqB,KAAA4zJ,QAAA,KACA,IAAAhuJ,EAAA4b,UAAA,GAAA8yB,EAAA9yB,UAAA,GACA0iI,EAAAnkJ,KAAAC,KAAAs0C,GACAt0C,KAAAo+C,KAAAx4C,GClBA,SAAAiuJ,MCWA,SAAA1pI,KACAnqB,KAAA8zJ,aAAA,KACA,IAAAl0J,EAAA4hB,UAAA,GAAA8yB,EAAA9yB,UAAA,GACA0iI,EAAAnkJ,KAAAC,KAAAs0C,GACAt0C,KAAAo+C,KAAAx+C,GCZA,SAAAm0J,MCJA,SAAAC,GAAAvoB,GACAzrI,KAAAyrI,MCDA,SAAAwoB,GAAA1hJ,GACAvS,KAAAuS,QCOA,SAAA2hJ,KAGA,GAFAl0J,KAAAm0J,IAAA,EACAn0J,KAAAo0J,IAAA,EACA,IAAA5yI,UAAAzgB,OACAf,KAAAo+C,KAAA,QACE,OAAA58B,UAAAzgB,QACF,oBAAAygB,UAAA,IACA,IAAAlgB,EAAAkgB,UAAA,GACAxhB,KAAAo+C,KAAA98C,QACG,GAAAkgB,UAAA,aAAA0yI,GAAA,CACH,IAAAxuF,EAAAlkD,UAAA,GACAxhB,KAAAo+C,KAAAsnB,QACG,oBAAAlkD,UAAA,IACH,IAAAiqH,EAAAjqH,UAAA,GACA0yI,GAAAn0J,KAAAC,KAAAk0J,GAAA12J,MAAAiuI,UAEE,OAAAjqH,UAAAzgB,OAAA,CACF,IAAAu8D,EAAA97C,UAAA,GAAA6yI,EAAA7yI,UAAA,GACAxhB,KAAAo+C,KAAAkf,EAAA+2F,ICvBA,SAAAC,MCAA,SAAAC,MCFA,SAAAC,MCcA,SAAAnqI,KACArqB,KAAAy0J,OAAA,KACAz0J,KAAA00J,OAAA,KACA,IAAAC,EAAAnzI,UAAA,GAAAozI,EAAApzI,UAAA,GAAA8yB,EAAA9yB,UAAA,GAQA,GAPA0iI,EAAAnkJ,KAAAC,KAAAs0C,GACA,OAAAqgH,IACAA,EAAA30J,KAAAuoJ,aAAAsM,oBAEA,OAAAD,IACAA,MAEA1Q,EAAAwG,gBAAAkK,GACA,UAAAtT,EAAA,wCAEA,GAAAqT,EAAA9nI,WAAAq3H,EAAAuG,oBAAAmK,GACA,UAAAtT,EAAA,oCAEAthJ,KAAAy0J,OAAAE,EACA30J,KAAA00J,OAAAE,EC3BA,SAAA3vJ,KACA,IAAAW,EAAA4b,UAAA,GAAA8yB,EAAA9yB,UAAA,GACAmvD,GAAA5wE,KAAAC,KAAA4F,EAAA0uC,GCEA,SAAA/pB,KACA,GAAA/I,UAAA,aAAA5a,OAAA4a,UAAA,aAAAszI,GAAA,CACA,IAAAlvJ,EAAA4b,UAAA,GAAA8yB,EAAA9yB,UAAA,GACA+I,GAAAxqB,KAAAC,KAAAs0C,EAAAygH,+BAAApS,OAAA/8I,GAAA0uC,QACE,GAAA0sG,EAAAx/H,UAAA,GAAA4/H,IAAA5/H,UAAA,aAAAszI,GAAA,CACF,IAAAlvJ,EAAA4b,UAAA,GAAA8yB,EAAA9yB,UAAA,GACA4I,GAAArqB,KAAAC,KAAA4F,EAAA0uC,GACAt0C,KAAAg1J,wBCXA,SAAAhvJ,KACA,IAAA6C,EAAA2Y,UAAA,GAAA8yB,EAAA9yB,UAAA,GACAmvD,GAAA5wE,KAAAC,KAAA6I,EAAAyrC,GCGA,SAAA2gH,KAGA,GAFAj1J,KAAAokJ,SAAA,KACApkJ,KAAAk1J,mBAAA,EACA,IAAA1zI,UAAAzgB,aAA+B,OAAAygB,UAAAzgB,OAAA,CAC/B,IAAAuzC,EAAA9yB,UAAA,GACAxhB,KAAAokJ,SAAA9vG,GAgFA,SAAA6gH,MAEA,SAAAC,MAYA,SAAAC,MAsBA,SAAAC,MC5HA,SAAAC,KAGA,GAFAv1J,KAAAw1J,WAAA,EACAx1J,KAAA8zJ,aAAA,KACA,IAAAtyI,UAAAzgB,QACA,GAAAygB,UAAA,aAAA5a,MAAA,CACA,IAAAhH,EAAA4hB,UAAA,GACA+zI,GAAAx1J,KAAAC,KAAAJ,EAAA,QACG,GAAAszD,OAAAi6F,UAAA3rI,UAAA,KACH,IAAA4hB,EAAA5hB,UAAA,GACAxhB,KAAA8zJ,aAAA,IAAAltJ,MAAAw8B,GAAA6S,KAAA,MACA,QAAA1yC,EAAA,EAAkBA,EAAA6/B,EAAU7/B,IAC5BvD,KAAA8zJ,aAAAvwJ,GAAA,IAAA8/I,OAEG,GAAArC,EAAAx/H,UAAA,GAAA4/H,GAAA,CACH,IAAAqU,EAAAj0I,UAAA,GACA,UAAAi0I,EAEA,OADAz1J,KAAA8zJ,aAAA,IAAAltJ,MAAA,GAAAqvC,KAAA,MACA,KAEAj2C,KAAAw1J,WAAAC,EAAAtT,eACAniJ,KAAA8zJ,aAAA,IAAAltJ,MAAA6uJ,EAAAryH,QAAA6S,KAAA,MACA,IAAA1yC,EAAA,EAAkBA,EAAAvD,KAAA8zJ,aAAA/yJ,OAA8BwC,IAChDvD,KAAA8zJ,aAAAvwJ,GAAAkyJ,EAAAvT,kBAAA3+I,SAGE,OAAAie,UAAAzgB,OACF,GAAAygB,UAAA,aAAA5a,OAAAssD,OAAAi6F,UAAA3rI,UAAA,KACA,IAAA5hB,EAAA4hB,UAAA,GAAA8wG,EAAA9wG,UAAA,GACAxhB,KAAA8zJ,aAAAl0J,EACAI,KAAAw1J,WAAAljC,EACA,OAAA1yH,IAAAI,KAAA8zJ,aAAA,IAAAltJ,MAAA,GAAAqvC,KAAA,YACG,GAAAid,OAAAi6F,UAAA3rI,UAAA,KAAA0xC,OAAAi6F,UAAA3rI,UAAA,KACH,IAAA4hB,EAAA5hB,UAAA,GAAA8wG,EAAA9wG,UAAA,GACAxhB,KAAA8zJ,aAAA,IAAAltJ,MAAAw8B,GAAA6S,KAAA,MACAj2C,KAAAw1J,WAAAljC,EACA,IAAA/uH,EAAA,EAAkBA,EAAA6/B,EAAU7/B,IAC5BvD,KAAA8zJ,aAAAvwJ,GAAA,IAAA8/I,GCtCA,SAAAqS,M/B0IAnD,GAAAhyJ,UAAAmf,KAAA,WACA,GAAA1f,KAAAosJ,YAAApsJ,KAAA0yJ,SAAAtvH,OACA,UAAA6hH,EAEA,OAAAjlJ,KAAA0yJ,SAAAtN,OAAAplJ,KAAAosJ,cAOAmG,GAAAhyJ,UAAA0pJ,QAAA,WACA,OAAAjqJ,KAAAosJ,UAAApsJ,KAAA0yJ,SAAAtvH,QAWAmvH,GAAAhyJ,UAAAotC,OAAA,WACA,UAAAu3G,GE5JAyN,GAAA1qD,KAAA,WACA,IAAA1kG,EAAAmvD,EAAAijG,EAAArP,EAAAjkG,EAAA7gC,UAAA,GACA,OAAAA,UAAAzgB,OAKA,OAJAulJ,EAAA,SAAAjkG,EAAAzmB,GACA,OAAAymB,EAAA0jG,UAAAnqH,SAEAymB,EAAA4lD,KAAAq+C,GAEG,OAAA9kI,UAAAzgB,OACH40J,EAAAn0I,UAAA,GACA8kI,EAAA,SAAAjkG,EAAAzmB,GACA,OAAA+5H,EAAA,QAAAtzG,EAAAzmB,IAEAymB,EAAA4lD,KAAAq+C,OACG,QAAA9kI,UAAAzgB,OAAA,EACH2xD,EAAArQ,EAAAxhD,MAAA2gB,UAAA,GAAAA,UAAA,KACAymF,OACA,IAAAvsE,EAAA2mB,EAAAxhD,MAAA,EAAA2gB,UAAA,IAAAkuE,OAAAh9B,EAAArQ,EAAAxhD,MAAA2gB,UAAA,GAAA6gC,EAAAthD,SAEA,IADAshD,EAAA3uC,OAAA,EAAA2uC,EAAAthD,QACAwC,EAAA,EAAeA,EAAAm4B,EAAA36B,OAAcwC,IAC7B8+C,EAAAvhD,KAAA46B,EAAAn4B,IAEA,OACG,OAAAie,UAAAzgB,OAAA,CASH,IARA2xD,EAAArQ,EAAAxhD,MAAA2gB,UAAA,GAAAA,UAAA,IACAm0I,EAAAn0I,UAAA,GACA8kI,EAAA,SAAAjkG,EAAAzmB,GACA,OAAA+5H,EAAA,QAAAtzG,EAAAzmB,IAEA82B,EAAAu1C,KAAAq+C,GACA5qH,EAAA2mB,EAAAxhD,MAAA,EAAA2gB,UAAA,IAAAkuE,OAAAh9B,EAAArQ,EAAAxhD,MAAA2gB,UAAA,GAAA6gC,EAAAthD,SACAshD,EAAA3uC,OAAA,EAAA2uC,EAAAthD,QACAwC,EAAA,EAAeA,EAAAm4B,EAAA36B,OAAcwC,IAC7B8+C,EAAAvhD,KAAA46B,EAAAn4B,IAEA,UASAovJ,GAAAiD,OAAA,SAAA7oJ,GAEA,IADA,IAAAm/I,EAAA,IAAA/G,EACA5hJ,EAAA,EAAAmD,EAAAqG,EAAAhM,OAAqCwC,EAAAmD,EAASnD,IAC9C2oJ,EAAArhG,IAAA99C,EAAAxJ,IAEA,OAAA2oJ,GC5DA0G,GAAAiD,aAAA76F,OAAA,IAAAA,GAAA,QAAAA,GACA43F,GAAAh+F,YAAAoG,MAAApG,eCEA/L,EAAAmyB,GAAAz6E,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA1nE,MAGAA,GAAA86E,kBAAA,SAAAC,GACA,OAAAA,GACA,KAAA/6E,GAAAooD,MACA,OAAApoD,GAAAg7E,UACA,KAAAh7E,GAAA2lE,KACA,OAAA3lE,GAAAi7E,SACA,KAAAj7E,GAAAk7E,SACA,OAAAl7E,GAAAm7E,aACA,KAAAn7E,GAAA3pB,EACA,OAAA2pB,GAAAo7E,MACA,KAAAp7E,GAAAgnB,EACA,OAAAhnB,GAAAq7E,MACA,KAAAr7E,GAAAnkB,EACA,OAAAmkB,GAAAs7E,MAEA,UAAAhV,EAAA,4BAAAyU,IAEA/6E,GAAAu7E,iBAAA,SAAAC,GACA,OAAA5D,GAAAh+F,YAAA4hG,IACA,KAAAx7E,GAAAg7E,UACA,OAAAh7E,GAAAooD,MACA,KAAApoD,GAAAi7E,SACA,OAAAj7E,GAAA2lE,KACA,KAAA3lE,GAAAm7E,aACA,OAAAn7E,GAAAk7E,SACA,KAAAl7E,GAAAo7E,MACA,OAAAp7E,GAAA3pB,EACA,KAAA2pB,GAAAq7E,MACA,OAAAr7E,GAAAgnB,EACA,KAAAhnB,GAAAs7E,MACA,OAAAt7E,GAAAnkB,EAEA,UAAAyqF,EAAA,6BAAAkV,IAEAx7E,GAAA3pB,EAAA,EACA2pB,GAAAgnB,EAAA,EACAhnB,GAAAnkB,EAAA,EACAmkB,GAAAooD,OAAA,EACApoD,GAAA2lE,MAAA,EACA3lE,GAAAk7E,UAAA,EACAl7E,GAAAg7E,UAAA,IACAh7E,GAAAi7E,SAAA,IACAj7E,GAAAm7E,aAAA,IACAn7E,GAAAo7E,MAAA,IACAp7E,GAAAq7E,MAAA,IACAr7E,GAAAs7E,MAAA,ICvDAztG,EAAAgqG,GAAAtyJ,WACA6O,OAAA,SAAA2tC,KACAmkG,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAmQ,MCNAhqG,EAAAiqG,GAAAvyJ,WACA6O,OAAA,SAAAqnJ,EAAAlzJ,KACAmzJ,OAAA,aACAC,kBAAA,aACAzV,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAoQ,MCgBA/nJ,EAAA4lE,GAAAuzE,GACAr7F,EAAA8nB,GAAApwE,WACAqpJ,wBAAA,WAEA,IADA,IAAAiG,EAAA,IAAAj1H,EACAr3B,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9CssJ,EAAAvI,gBAAAtnJ,KAAA+yJ,YAAAxvJ,GAAAgmJ,uBAEA,OAAAsG,GAEArH,aAAA,SAAA/iJ,GACA,OAAAzF,KAAA+yJ,YAAAttJ,IAEA5C,eAAA,WAGA,IAFA,IAAAjD,EAAA,IAAAgH,MAAA5G,KAAA42J,gBAAA3gH,KAAA,MACA8N,GAAA,EACAxgD,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAE9C,IADA,IAAAszJ,EAAA72J,KAAA+yJ,YAAAxvJ,GAAAV,iBACAwC,EAAA,EAAkBA,EAAAwxJ,EAAA91J,OAA6BsE,IAE/CzF,IADAmkD,GACA8yG,EAAAxxJ,GAGA,OAAAzF,GAEAwH,QAAA,WAEA,IADA,IAAAooE,EAAA,EACAjsE,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9CisE,GAAAxvE,KAAA+yJ,YAAAxvJ,GAAA6D,UAEA,OAAAooE,GAEAm5E,YAAA,WACA,OAAAnnI,UAAAzgB,QAAA,iBAAAygB,UAAA,IAAAA,UAAA,aAAA0iI,EAAA,CACA,IAAA0B,EAAApkI,UAAA,GAAA24E,EAAA34E,UAAA,GACA,IAAAxhB,KAAA82J,kBAAAlR,GACA,SAEA,IAAAmR,EAAAnR,EACA,GAAA5lJ,KAAA+yJ,YAAAhyJ,SAAAg2J,EAAAhE,YAAAhyJ,OACA,SAEA,QAAAwC,EAAA,EAAkBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC/C,IAAAvD,KAAA+yJ,YAAAxvJ,GAAAolJ,YAAAoO,EAAAhE,YAAAxvJ,GAAA42F,GACA,SAGA,SACG,OAAA+pD,EAAA3jJ,UAAAooJ,YAAA7gG,MAAA9nD,KAAAwhB,YAEHkoI,UAAA,WACA,QAAAnmJ,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9CvD,KAAA+yJ,YAAAxvJ,GAAAmmJ,YAEAiJ,GAAA1qD,KAAAjoG,KAAA+yJ,cAEA9Q,cAAA,WACA,OAAAjiJ,KAAA6sB,UAAA,KACA7sB,KAAA+yJ,YAAA,GAAA9Q,iBAEA+U,qBAAA,WAEA,IADA,IAAA1kC,EAAAt3C,GAAAooD,MACA7/H,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9C+uH,EAAAzwH,KAAAi6D,IAAAw2D,EAAAtyH,KAAA+yJ,YAAAxvJ,GAAAyzJ,wBAEA,OAAA1kC,GAEA+1B,YAAA,WACA,OAAAnE,EAAAoE,6BAEAnG,aAAA,WAEA,IADA,IAAA7vB,EAAAt3C,GAAAooD,MACA7/H,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9C+uH,EAAAzwH,KAAAi6D,IAAAw2D,EAAAtyH,KAAA+yJ,YAAAxvJ,GAAA4+I,gBAEA,OAAA7vB,GAEA6Q,UAAA,WAEA,IADA,IAAA8zB,EAAA,EACA1zJ,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9C0zJ,GAAAj3J,KAAA+yJ,YAAAxvJ,GAAA4/H,YAEA,OAAA8zB,GAEAL,aAAA,WAEA,IADA,IAAAM,EAAA,EACA3zJ,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9C2zJ,GAAAl3J,KAAA+yJ,YAAAxvJ,GAAAqzJ,eAEA,OAAAM,GAEAjO,iBAAA,WACA,OAAAjpJ,KAAA+yJ,YAAAhyJ,QAEAkO,QAAA,WAGA,IAFA,IAAAxJ,EAAAzF,KAAA+yJ,YAAAhyJ,OACAo2J,EAAA,IAAAvwJ,MAAAnB,GAAAwwC,KAAA,MACA1yC,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9C4zJ,EAAA5zJ,GAAAvD,KAAA+yJ,YAAAxvJ,GAAA0L,UAEA,OAAAjP,KAAAuoJ,aAAA6O,yBAAAD,IAEAjO,mBAAA,WACA,OAAA1nI,UAAAzgB,OAAA,CACA,IAAAkgJ,EAAAz/H,UAAA,GACA,IAAA61I,EAAA,IAAAvF,GAAAa,GAAAiD,OAAA51J,KAAA+yJ,cACAuE,EAAA,IAAAxF,GAAAa,GAAAiD,OAAA3U,EAAA8R,cACA,OAAA/yJ,KAAAsmJ,QAAA+Q,EAAAC,GACG,OAAA91I,UAAAzgB,OAAA,CACH,IAAAkgJ,EAAAz/H,UAAA,GAAA2nI,EAAA3nI,UAAA,GAKA,IAJA,IAAA+1I,EAAAtW,EACAuW,EAAAx3J,KAAAipJ,mBACAwO,EAAAF,EAAAtO,mBACA1lJ,EAAA,EACAA,EAAAi0J,GAAAj0J,EAAAk0J,GAAA,CACA,IAAAC,EAAA13J,KAAAwoJ,aAAAjlJ,GACAo0J,EAAAJ,EAAA/O,aAAAjlJ,GACAq0J,EAAAF,EAAAxO,mBAAAyO,EAAAxO,GACA,OAAAyO,EAAA,OAAAA,EACAr0J,IAEA,OAAAA,EAAAi0J,EAAA,EACAj0J,EAAAk0J,GAAA,EACA,IAGA3vG,MAAA,WACA,GAAAk5F,EAAAx/H,UAAA,GAAAgjI,GAAA,CACA,IAAAp1I,EAAAoS,UAAA,GACA,QAAAje,EAAA,EAAkBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC/CvD,KAAA+yJ,YAAAxvJ,GAAAukD,MAAA14C,QAEG,GAAA4xI,EAAAx/H,UAAA,GAAAsxI,IAAA,CACH,IAAA1jJ,EAAAoS,UAAA,GACA,OAAAxhB,KAAA+yJ,YAAAhyJ,OAAA,YACA,IAAAwC,EAAA,EAAkBA,EAAAvD,KAAA+yJ,YAAAhyJ,SAClBf,KAAA+yJ,YAAAxvJ,GAAAukD,MAAA14C,IACAA,EAAAsnJ,UAF+CnzJ,KAM/C6L,EAAAunJ,qBAAA32J,KAAA4oJ,uBACG,GAAA5H,EAAAx/H,UAAA,GAAAqxI,IAAA,CACH,IAAAzjJ,EAAAoS,UAAA,GACApS,SAAApP,MACA,IAAAuD,EAAA,EAAkBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC/CvD,KAAA+yJ,YAAAxvJ,GAAAukD,MAAA14C,QAEG,GAAA4xI,EAAAx/H,UAAA,GAAA+/H,GAAA,CACH,IAAAnyI,EAAAoS,UAAA,GACApS,SAAApP,MACA,IAAAuD,EAAA,EAAkBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC/CvD,KAAA+yJ,YAAAxvJ,GAAAukD,MAAA14C,KAIAyoJ,YAAA,WAGA,OAFA73J,KAAAwpJ,2BAAAxpJ,MACAojJ,EAAAkC,uBACA,MAEAwS,gBAAA,WACA,OAAA5T,EAAAoH,6BAEA/I,KAAA,WAEA,IADA,IAAAtxE,EAAA,IAAArqE,MAAA5G,KAAA+yJ,YAAAhyJ,QAAAk1C,KAAA,MACA1yC,EAAA,EAAiBA,EAAA0tE,EAAAlwE,OAAuBwC,IACxC0tE,EAAA1tE,GAAAvD,KAAA+yJ,YAAAxvJ,GAAAg/I,OAEA,WAAA5xE,GAAAM,EAAAjxE,KAAAokJ,WAEAv3H,QAAA,WACA,QAAAtpB,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9C,IAAAvD,KAAA+yJ,YAAAxvJ,GAAAspB,UACA,SAGA,UAEAq0H,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA/xE,MAGAA,GAAAg2E,kBAAA,mBCxMA57I,EAAApL,GAAAgxE,IACA9nB,EAAAlpD,GAAAY,WACAooJ,YAAA,WACA,OAAAnnI,UAAAzgB,QAAA,iBAAAygB,UAAA,IAAAA,UAAA,aAAA0iI,EAAA,CACA,IAAA0B,EAAApkI,UAAA,GAAA24E,EAAA34E,UAAA,GACA,QAAAxhB,KAAA82J,kBAAAlR,IAGAj1E,GAAApwE,UAAAooJ,YAAA5oJ,KAAAC,KAAA4lJ,EAAAzrD,GACG,OAAAxpB,GAAApwE,UAAAooJ,YAAA7gG,MAAA9nD,KAAAwhB,YAEHw1I,qBAAA,WACA,OAAAh3J,KAAA+3J,WACA/8E,GAAAooD,MAEA,GAEA20B,SAAA,WACA,GAAA/3J,KAAA6sB,UACA,SAEA,QAAAtpB,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9C,IAAAvD,KAAA+yJ,YAAAxvJ,GAAAw0J,WACA,SAGA,UAEA1P,YAAA,WACA,OAAAnE,EAAAqG,0BAEApI,aAAA,WACA,UAEAlzI,QAAA,WAGA,IAFA,IAAA+oJ,EAAAh4J,KAAA+yJ,YAAAhyJ,OACAk3J,EAAA,IAAArxJ,MAAAoxJ,GAAA/hH,KAAA,MACA1yC,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9C00J,EAAAD,EAAA,EAAAz0J,GAAAvD,KAAA+yJ,YAAAxvJ,GAAA0L,UAEA,OAAAjP,KAAAuoJ,aAAA2P,sBAAAD,IAEAJ,YAAA,WACA,WAAA7E,GAAAhzJ,MAAA63J,eAEAC,gBAAA,WACA,OAAA5T,EAAAiH,0BAEA5I,KAAA,WAEA,IADA,IAAAj/I,EAAA,IAAAsD,MAAA5G,KAAA+yJ,YAAAhyJ,QAAAk1C,KAAA,MACA1yC,EAAA,EAAiBA,EAAAD,EAAAvC,OAAwBwC,IACzCD,EAAAC,GAAAvD,KAAA+yJ,YAAAxvJ,GAAAg/I,OAEA,WAAA5iJ,GAAA2D,EAAAtD,KAAAokJ,WAEAlD,YAAA,WACA,OAAA0Q,KAEAlP,SAAA,WACA,OAAA/iJ,MAGAA,GAAAgnJ,iBAAA,mBCnDA99F,EAAAmqG,GAAAzyJ,WACA43J,wBAAA,SAAAC,GACA,GAAAp4J,KAAAizJ,MAAApmI,UACA,OAAA7sB,KAAAq4J,qBAEA,IAAAC,EAAAt4J,KAAAu4J,2BAAAH,GACA,WAAAE,EAAAv3J,OACAf,KAAAkzJ,UAAAsF,YAAAF,EAAA,IAEAt4J,KAAAkzJ,UAAAuF,2BAAAH,IAEAT,YAAA,WACA,OAAA73J,KAAAizJ,iBAAA7oI,GAAApqB,KAAA04J,mBAAA14J,KAAAizJ,OACAjzJ,KAAAizJ,iBAAAtzJ,GAAAK,KAAAm4J,wBAAAn4J,KAAAizJ,OACAjzJ,KAAAizJ,MAAA4E,eAEAa,mBAAA,SAAAlgI,GACA,OAAAx4B,KAAAizJ,MAAApmI,UACA7sB,KAAAq4J,qBAEA7/H,EAAAu/H,WACA/3J,KAAAmzJ,QAAA5H,aAAA,GAEA/yH,EAAAmgI,gBAEA34J,KAAAkzJ,UAAA0F,mBAGA54J,KAAAkzJ,UAAA0F,kBAAApgI,EAAAmgI,gBAAAngI,EAAAqgI,iBAEAR,mBAAA,WACA,OAAAr4J,KAAAkzJ,UAAA0F,oBAEAL,2BAAA,SAAAH,GACA,IAAAE,EAAA,IAAAnT,EACAnlJ,KAAAozJ,aAAA,IAAA3B,GACA,QAAAluJ,EAAA,EAAiBA,EAAA60J,EAAAnP,mBAA8B1lJ,IAAA,CAC/C,IAAAi1B,EAAA4/H,EAAA5P,aAAAjlJ,GACA,IAAAi1B,EAAAo+H,iBACA52J,KAAA84J,YAAAtgI,EAAAugI,eAAA,IACA/4J,KAAA84J,YAAAtgI,EAAAugI,eAAAvgI,EAAAo+H,eAAA,KAEA,QAAAoC,EAAAh5J,KAAAozJ,aAAAvC,WAAApxI,WAAwDu5I,EAAA/O,WAAc,CACtE,IAAArV,EAAAokB,EAAAt5I,OAEAu5I,EADArkB,EAAAskB,WACA5yI,MACAtmB,KAAAmzJ,QAAA5H,aAAA0N,IACAX,EAAAztG,IAAA+pF,EAAAukB,UAGA,OAAA1M,EAAAhK,kBAAA6V,IAEAQ,YAAA,SAAA3uG,GACA,IAAAivG,EAAAp5J,KAAAozJ,aAAA/oJ,IAAA8/C,GACA,OAAAivG,IACAA,EAAA,IAAA9F,GACAtzJ,KAAAozJ,aAAAnd,IAAA9rF,EAAAivG,IAEAA,EAAA9yI,SAEA46H,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAsQ,MAGAA,GAAA6E,YAAA,WACA,OAAAr2I,UAAAzgB,OAAA,CAGA,OADA,IAAAiyJ,GADAxxI,UAAA,IAEAq2I,cACE,OAAAr2I,UAAAzgB,OAAA,CAGF,OADA,IAAAiyJ,GADAxxI,UAAA,GAAAA,UAAA,IAEAq2I,gBAMAhvG,EAAAyqG,GAAA/yJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA4Q,MCzGAzqG,EAAA0qG,GAAAhzJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA6Q,MAGAA,GAAA8F,OAAA,SAAA/K,GACA,IAAA7oJ,EAAA6oJ,EAAAlrH,OACA,GAAA39B,GAAA,WACA,IAAAiB,EAAA,EACAmgB,EAAA,IAAAw8H,EACAiL,EAAArM,cAAA,EAAAp7H,GAGA,IAFA,IAAA68B,EAAA78B,EAAAvlB,EACAsiD,EAAA/8B,EAAAtlB,EACAgC,EAAA,EAAgBA,EAAAkC,EAAOlC,IAAA,CACvB+qJ,EAAArM,cAAA1+I,EAAAsjB,GACA,IAAAg8H,EAAAh8H,EAAAvlB,EACA0iJ,EAAAn9H,EAAAtlB,EACA4gG,EAAA0gD,EAAAn/F,EACA0+C,EAAA4hD,EAAApgG,EACAl9C,GAAA7E,KAAAC,KAAAqgG,IAAAC,KACA1+C,EAAAm/F,EACAj/F,EAAAogG,EAEA,OAAAt9I,GElBAmiD,EAAA4qG,GAAAlzJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA+Q,MAGAA,GAAAtpB,MAAA,SAAAnvE,EAAAv1D,GAEA,IADA,IAAA6sJ,EAAA,IAAA1rJ,MAAAnB,GAAAwwC,KAAA,MACA1yC,EAAA,EAAgBA,EAAAkC,EAAOlC,IACvB+uJ,EAAA/uJ,GAAAy3D,EAEA,WAAA3oB,OAAAigH,IAEAmB,GAAA6F,cAAA,WACA,OAAA93I,UAAAzgB,OAAA,CACA,IAAA2xD,EAAAlxC,UAAA,GACA,IAAA+3I,EAAA,IoB7BA,apB8BAC,EAAA,IqB9BA,YrB8BA,CAAAD,GAEA,OADA7mG,EAAA+mG,gBAAAD,GACAD,EAAA/5J,WACE,OAAAgiB,UAAAzgB,OAAA,CACF,IAAA2xD,EAAAlxC,UAAA,GAAA5N,EAAA4N,UAAA,GAIA,IAHA,IAAAk4I,EAAA,GAEAC,EAAA,IsBrCA,YtBqCA,CADA,IuBpCA,YvBoCA,CAAAlG,GAAA6F,cAAA5mG,KAEAnvD,EAAA,EAAiBA,EAAAqQ,EAAWrQ,IAC5B,IACAm2J,GAAAC,EAAAC,WAAAnG,GAAAoG,QACI,MAAAvvG,GACJ,KAAAA,aAAAkpG,IAEK,MAAAlpG,EADL84F,EAAAkC,uBAIA,OAAAoU,IAGAjG,GAAArtI,MAAA,SAAAvpB,EAAAi9J,GAKA,IAJA,IAAAC,EAAAD,EAAA/4J,OACAi5J,EAAA,IAAA7U,EACA8U,EAAA,GAAAp9J,EACAm/C,EAAAi+G,EAAAxmJ,QAAAqmJ,GACA99G,GAAA,IACA,IAAAk+G,EAAAD,EAAAh+H,UAAA,EAAA+f,GACAg+G,EAAAnvG,IAAAqvG,GAEAl+G,GADAi+G,IAAAh+H,UAAA+f,EAAA+9G,IACAtmJ,QAAAqmJ,GAEAG,EAAAl5J,OAAA,GAAAi5J,EAAAnvG,IAAAovG,GAEA,IADA,IAAA34I,EAAA,IAAA1a,MAAAozJ,EAAA52H,QAAA6S,KAAA,MACA1yC,EAAA,EAAgBA,EAAA+d,EAAAvgB,OAAgBwC,IAChC+d,EAAA/d,GAAAy2J,EAAA3vJ,IAAA9G,GAEA,OAAA+d,GAEAmyI,GAAAj0J,SAAA,WACA,OAAAgiB,UAAAzgB,QAAA,iBAAAygB,UAAA,IACA,IAAA85C,EAAA95C,UAAA,GACA,OAAAiyI,GAAA0G,uBAAAn6I,OAAAs7C,KAGAm4F,GAAA2G,OAAA,SAAA30J,GACA,OAAAguJ,GAAAtpB,MAAA,IAAA1kI,IAEAguJ,GAAAoG,QAAArN,EAAA2B,YAAA,kBACAsF,GAAA0G,uBAAA,IwB9EA,YxB8EA,QC1EAzG,GAAAnzJ,UAAA+tF,OAAA,SAAAhkC,GACAtqD,KAAAyrI,KAAAnhF,GAGAopG,GAAAnzJ,UAAA85J,UAAA,SAAA92J,EAAAy3D,GACAh7D,KAAAyrI,IAAAzrI,KAAAyrI,IAAA11G,OAAA,EAAAxyB,GAAAy3D,EAAAh7D,KAAAyrI,IAAA11G,OAAAxyB,EAAA,IAGAmwJ,GAAAnzJ,UAAAf,SAAA,SAAA8qD,GACA,OAAAtqD,KAAAyrI,KCNA5iF,EAAA8qG,GAAApzJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAiR,MAGAA,GAAA2G,UAAA,SAAA97H,EAAAyvH,EAAAl+F,EAAAm+F,GAEA,IADA,IAAAqM,EAAA14J,KAAAk6D,IAAAv9B,EAAA2jH,eAAApyF,EAAAoyF,gBACArmG,EAAA,EAAkBA,EAAAy+G,EAAcz+G,IAChCiU,EAAA+xF,YAAAoM,EAAApyG,EAAAtd,EAAAwjH,YAAAiM,EAAAnyG,KAGA63G,GAAAtF,OAAA,SAAAoI,GACA,IAAAhxJ,EAAAgxJ,EAAArzH,OACA,WAAA39B,KACAA,GAAA,KACAgxJ,EAAAzU,YAAA,EAAAZ,EAAAlvF,KAAAukG,EAAAzU,YAAAv8I,EAAA,EAAA27I,EAAAlvF,IAAAukG,EAAAzU,YAAA,EAAAZ,EAAAjvF,KAAAskG,EAAAzU,YAAAv8I,EAAA,EAAA27I,EAAAjvF,KAEAwhG,GAAA6G,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAr3H,OAEA,GAAAu3H,IADAD,EAAAt3H,OACA,SAEA,IADA,IAAA0Y,EAAAj6C,KAAAk6D,IAAA0+F,EAAAtY,eAAAuY,EAAAvY,gBACA5+I,EAAA,EAAgBA,EAAAo3J,EAAap3J,IAC7B,QAAA+3D,EAAA,EAAiBA,EAAAxf,EAASwf,IAAA,CAC1B,IAAAmyF,EAAAgN,EAAAzY,YAAAz+I,EAAA+3D,GACAoyF,EAAAgN,EAAA1Y,YAAAz+I,EAAA+3D,GACA,GAAAm/F,EAAAzY,YAAAz+I,EAAA+3D,KAAAo/F,EAAA1Y,YAAAz+I,EAAA+3D,MACAqmF,EAAAlkJ,MAAAgwJ,KAAA9L,EAAAlkJ,MAAAiwJ,IACA,SAGA,UAEAiG,GAAA9qG,OAAA,SAAA+xG,EAAAnE,EAAArzH,GACA,IAAAy3H,EAAAD,EAAAjY,OAAAv/G,EAAAqzH,EAAAtU,gBACA18I,EAAAgxJ,EAAArzH,OAEA,GADAuwH,GAAApR,KAAAkU,EAAA,EAAAoE,EAAA,EAAAp1J,GACAA,EAAA,EACA,QAAAlC,EAAAkC,EAAiBlC,EAAA6/B,EAAU7/B,IAAAowJ,GAAApR,KAAAkU,EAAAhxJ,EAAA,EAAAo1J,EAAAt3J,EAAA,GAE3B,OAAAs3J,GAEAlH,GAAA1kJ,QAAA,SAAAwnJ,GAGA,IAFA,IAAA5nD,EAAA4nD,EAAArzH,OAAA,EACA+rH,EAAAttJ,KAAAwkJ,MAAAx3C,EAAA,GACAtrG,EAAA,EAAgBA,GAAA4rJ,EAAU5rJ,IAC1BowJ,GAAAmH,KAAArE,EAAAlzJ,EAAAsrG,EAAAtrG,IAGAowJ,GAAAmH,KAAA,SAAArE,EAAAlzJ,EAAA8B,GACA,GAAA9B,IAAA8B,EAAA,YACA,QAAAy2C,EAAA,EAAkBA,EAAA26G,EAAAtU,eAA0BrmG,IAAA,CAC5C,IAAArL,EAAAgmH,EAAAzU,YAAAz+I,EAAAu4C,GACA26G,EAAA3U,YAAAv+I,EAAAu4C,EAAA26G,EAAAzU,YAAA38I,EAAAy2C,IACA26G,EAAA3U,YAAAz8I,EAAAy2C,EAAArL,KAGAkjH,GAAApR,KAAA,SAAA/jH,EAAAyvH,EAAAl+F,EAAAm+F,EAAAntJ,GACA,QAAAwC,EAAA,EAAgBA,EAAAxC,EAAYwC,IAC5BowJ,GAAA2G,UAAA97H,EAAAyvH,EAAA1qJ,EAAAwsD,EAAAm+F,EAAA3qJ,IAGAowJ,GAAAn0J,SAAA,WACA,OAAAgiB,UAAAzgB,QAAAigJ,EAAAx/H,UAAA,GAAA4/H,GAAA,CACA,IAAAnmF,EAAAz5C,UAAA,GACA,IAAA4hB,EAAA63B,EAAA73B,OACA,OAAAA,EAAA,WACA,IAAA0Y,EAAAmf,EAAAknF,eACA4Y,EAAA,IAAArH,GACAqH,EAAAzsE,OAAA,KACA,QAAA/qF,EAAA,EAAiBA,EAAA6/B,EAAU7/B,IAAA,CAC3BA,EAAA,GAAAw3J,EAAAzsE,OAAA,KACA,QAAAhzB,EAAA,EAAkBA,EAAAxf,EAASwf,IAC3BA,EAAA,GAAAy/F,EAAAzsE,OAAA,KACAysE,EAAAzsE,OAAAmlE,GAAAj0J,SAAAy7D,EAAA+mF,YAAAz+I,EAAA+3D,KAIA,OADAy/F,EAAAzsE,OAAA,KACAysE,EAAAv7J,aAGAm0J,GAAAqH,gBAAA,SAAAJ,EAAAnE,GACA,IAAAhxJ,EAAAgxJ,EAAArzH,OACA,WAAA39B,EAAAgxJ,EACAhxJ,GAAA,EAAAkuJ,GAAAsH,iBAAAL,EAAAnE,EAAA,GACAA,EAAAzU,YAAA,EAAAZ,EAAAlvF,KAAAukG,EAAAzU,YAAAv8I,EAAA,EAAA27I,EAAAlvF,IAAAukG,EAAAzU,YAAA,EAAAZ,EAAAjvF,KAAAskG,EAAAzU,YAAAv8I,EAAA,EAAA27I,EAAAjvF,GACAskG,EACA9C,GAAAsH,iBAAAL,EAAAnE,EAAAhxJ,EAAA,IAEAkuJ,GAAAsH,iBAAA,SAAAL,EAAAnE,EAAArzH,GACA,IAAAy3H,EAAAD,EAAAjY,OAAAv/G,EAAAqzH,EAAAtU,gBACA18I,EAAAgxJ,EAAArzH,OACAuwH,GAAApR,KAAAkU,EAAA,EAAAoE,EAAA,EAAAp1J,GACA,QAAAlC,EAAAkC,EAAgBlC,EAAA6/B,EAAU7/B,IAAAowJ,GAAApR,KAAAkU,EAAA,EAAAoE,EAAAt3J,EAAA,GAC1B,OAAAs3J,GCnFA9vJ,EAAAqf,GAAA85H,GACAr7F,EAAAz+B,GAAA7pB,WACAqpJ,wBAAA,WACA,OAAA5pJ,KAAA6sB,UACA,IAAA+N,EAEA56B,KAAA4zJ,QAAAvR,eAAA,IAAAznH,IAEAyzH,OAAA,WACA,OAAAruJ,KAAA+3J,YAAA/3J,KAAAk7J,YAEAr4J,eAAA,WACA,OAAA7C,KAAA4zJ,QAAAnR,qBAEAkG,YAAA,WACA,OAAAnnI,UAAAzgB,QAAA,iBAAAygB,UAAA,IAAAA,UAAA,aAAA0iI,EAAA,CACA,IAAA0B,EAAApkI,UAAA,GAAA24E,EAAA34E,UAAA,GACA,IAAAxhB,KAAA82J,kBAAAlR,GACA,SAEA,IAAAuV,EAAAvV,EACA,GAAA5lJ,KAAA4zJ,QAAAxwH,SAAA+3H,EAAAvH,QAAAxwH,OACA,SAEA,QAAA7/B,EAAA,EAAkBA,EAAAvD,KAAA4zJ,QAAAxwH,OAAyB7/B,IAC3C,IAAAvD,KAAAypJ,MAAAzpJ,KAAA4zJ,QAAA3R,cAAA1+I,GAAA43J,EAAAvH,QAAA3R,cAAA1+I,GAAA42F,GACA,SAGA,SACG,OAAA+pD,EAAA3jJ,UAAAooJ,YAAA7gG,MAAA9nD,KAAAwhB,YAEHkoI,UAAA,WACA,QAAAnmJ,EAAA,EAAiBA,EAAA1B,KAAAwkJ,MAAArmJ,KAAA4zJ,QAAAxwH,OAAA,GAAyC7/B,IAAA,CAC1D,IAAA8B,EAAArF,KAAA4zJ,QAAAxwH,OAAA,EAAA7/B,EACA,IAAAvD,KAAA4zJ,QAAA3R,cAAA1+I,GAAAkvI,OAAAzyI,KAAA4zJ,QAAA3R,cAAA58I,IAAA,CACA,GAAArF,KAAA4zJ,QAAA3R,cAAA1+I,GAAAwiJ,UAAA/lJ,KAAA4zJ,QAAA3R,cAAA58I,IAAA,GACA,IAAAk9I,EAAAviJ,KAAA4zJ,QAAArR,OACAoR,GAAA1kJ,QAAAszI,GACAviJ,KAAA4zJ,QAAArR,EAEA,eAIAN,cAAA,WACA,OAAAjiJ,KAAA6sB,UAAA,KACA7sB,KAAA4zJ,QAAA3R,cAAA,IAEA+U,qBAAA,WACA,OAAAh3J,KAAA+3J,WACA/8E,GAAAooD,MAEA,GAEA20B,SAAA,WACA,OAAA/3J,KAAA6sB,WAGA7sB,KAAA+4J,eAAA,GAAApT,SAAA3lJ,KAAA+4J,eAAA/4J,KAAA42J,eAAA,KAEAiC,YAAA,WACA,OAAA74J,KAAA6sB,UACA,KAEA7sB,KAAAo7J,UAAAp7J,KAAA42J,eAAA,IAEAvO,YAAA,WACA,OAAAnE,EAAA0G,qBAEAzI,aAAA,WACA,UAEAhf,UAAA,WACA,OAAAowB,GAAA8F,OAAAr5J,KAAA4zJ,UAEAgD,aAAA,WACA,OAAA52J,KAAA4zJ,QAAAxwH,QAEAn0B,QAAA,WACA,IAAAwnJ,EAAAz2J,KAAA4zJ,QAAArR,OAGA,OAFAoR,GAAA1kJ,QAAAwnJ,GACAz2J,KAAAuoJ,aAAA8S,iBAAA5E,IAGAvN,mBAAA,WACA,OAAA1nI,UAAAzgB,OAAA,CAKA,IAHA,IAAAy3B,EADAhX,UAAA,GAEAje,EAAA,EACA8B,EAAA,EACA9B,EAAAvD,KAAA4zJ,QAAAxwH,QAAA/9B,EAAAmzB,EAAAo7H,QAAAxwH,QAAA,CACA,IAAAgnH,EAAApqJ,KAAA4zJ,QAAA3R,cAAA1+I,GAAAwiJ,UAAAvtH,EAAAo7H,QAAA3R,cAAA58I,IACA,OAAA+kJ,EACA,OAAAA,EAEA7mJ,IACA8B,IAEA,OAAA9B,EAAAvD,KAAA4zJ,QAAAxwH,OACA,EAEA/9B,EAAAmzB,EAAAo7H,QAAAxwH,QACA,EAEA,EACG,OAAA5hB,UAAAzgB,OAAA,CAEHy3B,EADAhX,UAAA,GAEA,OAFAA,UAAA,GAEA8kI,QAAAtmJ,KAAA4zJ,QAAAp7H,EAAAo7H,WAGA9rG,MAAA,WACA,GAAAk5F,EAAAx/H,UAAA,GAAAgjI,GAAA,CACA,IAAAp1I,EAAAoS,UAAA,GACA,QAAAje,EAAA,EAAkBA,EAAAvD,KAAA4zJ,QAAAxwH,OAAyB7/B,IAC3C6L,SAAApP,KAAA4zJ,QAAA3R,cAAA1+I,SAEG,GAAAy9I,EAAAx/H,UAAA,GAAAsxI,IAAA,CACH,IAAA1jJ,EAAAoS,UAAA,GACA,OAAAxhB,KAAA4zJ,QAAAxwH,OAAA,YACA,IAAA7/B,EAAA,EAAkBA,EAAAvD,KAAA4zJ,QAAAxwH,SAClBh0B,SAAApP,KAAA4zJ,QAAArwJ,IACA6L,EAAAsnJ,UAF2CnzJ,KAI3C6L,EAAAunJ,qBAAA32J,KAAA4oJ,uBACG,GAAA5H,EAAAx/H,UAAA,GAAAqxI,IAAA,CACHrxI,UAAA,GACApS,OAAApP,WACG,GAAAghJ,EAAAx/H,UAAA,GAAA+/H,GAAA,CACH//H,UAAA,GACApS,OAAApP,QAGA63J,YAAA,WACA,WAAA7E,GAAAhzJ,MAAA63J,eAEAf,kBAAA,SAAAlR,GACA,OAAAA,aAAAx7H,IAEA2uI,eAAA,SAAAtzJ,GACA,OAAAzF,KAAA4zJ,QAAA3R,cAAAx8I,IAEAqyJ,gBAAA,WACA,OAAA5T,EAAA+G,qBAEA1I,KAAA,WACA,WAAAn4H,GAAApqB,KAAA4zJ,QAAArR,OAAAviJ,KAAAokJ,WAEAkX,sBAAA,WACA,OAAAt7J,KAAA4zJ,SAEA/mI,QAAA,WACA,WAAA7sB,KAAA4zJ,QAAAxwH,QAEAgb,KAAA,SAAAx4C,GAIA,GAHA,OAAAA,IACAA,EAAA5F,KAAAuoJ,aAAAwM,+BAAApS,YAEA,IAAA/8I,EAAAw9B,OACA,UAAAk+G,EAAA,iDAAA17I,EAAAw9B,OAAA,yBAEApjC,KAAA4zJ,QAAAhuJ,GAEA21J,aAAA,SAAApxG,GACA,QAAA5mD,EAAA,EAAiBA,EAAAvD,KAAA4zJ,QAAAxwH,OAAyB7/B,IAC1C,GAAAvD,KAAA4zJ,QAAA3R,cAAA1+I,GAAAkvI,OAAAtoF,GACA,SAGA,UAEAwuG,cAAA,WACA,OAAA34J,KAAA6sB,UACA,KAEA7sB,KAAAo7J,UAAA,IAEAA,UAAA,SAAA31J,GACA,OAAAzF,KAAAuoJ,aAAAiQ,YAAAx4J,KAAA4zJ,QAAA3R,cAAAx8I,KAEAy7I,YAAA,WACA,OAAA0Q,KAEAlP,SAAA,WACA,OAAAt4H,MAGAA,GAAAu8H,iBAAA,mBC/MA99F,EAAAgrG,GAAAtzJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAmR,MCWA9oJ,EAAAof,GAAA+5H,GACAr7F,EAAA1+B,GAAA5pB,WACAqpJ,wBAAA,WACA,GAAA5pJ,KAAA6sB,UACA,WAAA+N,EAEA,IAAA0nH,EAAA,IAAA1nH,EAEA,OADA0nH,EAAAgF,gBAAAtnJ,KAAA8zJ,aAAA1R,KAAA,GAAApiJ,KAAA8zJ,aAAAtR,KAAA,IACAF,GAEAz/I,eAAA,WACA,OAAA7C,KAAA6sB,cAAA7sB,KAAAiiJ,kBAEA0G,YAAA,WACA,OAAAnnI,UAAAzgB,QAAA,iBAAAygB,UAAA,IAAAA,UAAA,aAAA0iI,EAAA,CACA,IAAA0B,EAAApkI,UAAA,GAAA24E,EAAA34E,UAAA,GACA,QAAAxhB,KAAA82J,kBAAAlR,QAGA5lJ,KAAA6sB,YAAA+4H,EAAA/4H,YAGA7sB,KAAA6sB,YAAA+4H,EAAA/4H,WAGA7sB,KAAAypJ,MAAA7D,EAAA3D,gBAAAjiJ,KAAAiiJ,gBAAA9nD,IACG,OAAA+pD,EAAA3jJ,UAAAooJ,YAAA7gG,MAAA9nD,KAAAwhB,YAEHkoI,UAAA,aACAzH,cAAA,WACA,WAAAjiJ,KAAA8zJ,aAAA1wH,OAAApjC,KAAA8zJ,aAAA7R,cAAA,SAEA+U,qBAAA,WACA,OAAAh8E,GAAAooD,OAEAilB,YAAA,WACA,OAAAnE,EAAAyG,gBAEAxI,aAAA,WACA,UAEAyU,aAAA,WACA,OAAA52J,KAAA6sB,UAAA,KAEA5d,QAAA,WACA,OAAAjP,KAAAuiJ,QAEAH,KAAA,WACA,UAAApiJ,KAAAiiJ,gBACA,UAAAuZ,sBAAA,8BAEA,OAAAx7J,KAAAiiJ,gBAAA3gJ,GAEA4nJ,mBAAA,WACA,OAAA1nI,UAAAzgB,OAAA,CAEA,IAAAoE,EADAqc,UAAA,GAEA,OAAAxhB,KAAAiiJ,gBAAA8D,UAAA5gJ,EAAA88I,iBACG,OAAAzgI,UAAAzgB,OAAA,CAEHoE,EADAqc,UAAA,GAEA,OAFAA,UAAA,GAEA8kI,QAAAtmJ,KAAA8zJ,aAAA3uJ,EAAA2uJ,gBAGAhsG,MAAA,WACA,GAAAk5F,EAAAx/H,UAAA,GAAAgjI,GAAA,CACA,IAAAp1I,EAAAoS,UAAA,GACA,GAAAxhB,KAAA6sB,UACA,YAEAzd,SAAApP,KAAAiiJ,sBACG,GAAAjB,EAAAx/H,UAAA,GAAAsxI,IAAA,CACH,IAAA1jJ,EAAAoS,UAAA,GACA,GAAAxhB,KAAA6sB,UAAA,YACAzd,SAAApP,KAAA8zJ,aAAA,GACA1kJ,EAAAunJ,qBAAA32J,KAAA4oJ,uBACG,GAAA5H,EAAAx/H,UAAA,GAAAqxI,IAAA,CACHrxI,UAAA,GACApS,OAAApP,WACG,GAAAghJ,EAAAx/H,UAAA,GAAA+/H,GAAA,CACH//H,UAAA,GACApS,OAAApP,QAGA63J,YAAA,WACA,OAAA73J,KAAAuoJ,aAAA6O,4BAEAU,gBAAA,WACA,OAAA5T,EAAA6G,gBAEAxI,KAAA,WACA,WAAAp4H,GAAAnqB,KAAA8zJ,aAAAvR,OAAAviJ,KAAAokJ,WAEAkX,sBAAA,WACA,OAAAt7J,KAAA8zJ,cAEAtR,KAAA,WACA,UAAAxiJ,KAAAiiJ,gBACA,UAAAuZ,sBAAA,8BAEA,OAAAx7J,KAAAiiJ,gBAAA1gJ,GAEAsrB,QAAA,WACA,WAAA7sB,KAAA8zJ,aAAA1wH,QAEAgb,KAAA,SAAAx+C,GACA,OAAAA,IACAA,EAAAI,KAAAuoJ,aAAAwM,+BAAApS,YAEAS,EAAAmC,OAAA3lJ,EAAAwjC,QAAA,GACApjC,KAAA8zJ,aAAAl0J,GAEAs7J,SAAA,WACA,UAEAha,YAAA,WACA,OAAA2S,KAEAnR,SAAA,WACA,OAAAv4H,MAGAA,GAAAw8H,iBAAA,mBCvIA99F,EAAAkrG,GAAAxzJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAqR,MAGAA,GAAA0H,OAAA,WACA,GAAAj6I,UAAA,aAAA5a,MAAA,CACA,IAAAwiB,EAAA5H,UAAA,GACA,OAAA3f,KAAAynD,IAAAyqG,GAAA2H,aAAAtyI,IACE,GAAA43H,EAAAx/H,UAAA,GAAA4/H,GAAA,CACF,IAAAh4H,EAAA5H,UAAA,GACA,OAAA3f,KAAAynD,IAAAyqG,GAAA2H,aAAAtyI,MAGA2qI,GAAA2H,aAAA,WACA,GAAAl6I,UAAA,aAAA5a,MAAA,CACA,IAAAwiB,EAAA5H,UAAA,GACA,GAAA4H,EAAAroB,OAAA,WAGA,IAFA,IAAAk2J,EAAA,EACAvzG,EAAAt6B,EAAA,GAAA9nB,EACAiC,EAAA,EAAiBA,EAAA6lB,EAAAroB,OAAA,EAAqBwC,IAAA,CACtC,IAAAjC,EAAA8nB,EAAA7lB,GAAAjC,EAAAoiD,EACAsgG,EAAA56H,EAAA7lB,EAAA,GAAAhC,EAEA01J,GAAA31J,GADA8nB,EAAA7lB,EAAA,GAAAhC,EACAyiJ,GAEA,OAAAiT,EAAA,EACE,GAAAjW,EAAAx/H,UAAA,GAAA4/H,GAAA,CACF,IAAAh4H,EAAA5H,UAAA,GACA,IAAA/b,EAAA2jB,EAAAga,OACA,GAAA39B,EAAA,WACA,IAAAk2J,EAAA,IAAAtY,EACAS,EAAA,IAAAT,EACAU,EAAA,IAAAV,EACAj6H,EAAA64H,cAAA,EAAA6B,GACA16H,EAAA64H,cAAA,EAAA8B,GACArgG,EAAAogG,EAAAxiJ,EACAyiJ,EAAAziJ,GAAAoiD,EAEA,IADAuzG,EAAA,EACA1zJ,EAAA,EAAiBA,EAAAkC,EAAA,EAAWlC,IAC5Bo4J,EAAAp6J,EAAAuiJ,EAAAviJ,EACAuiJ,EAAAxiJ,EAAAyiJ,EAAAziJ,EACAwiJ,EAAAviJ,EAAAwiJ,EAAAxiJ,EACA6nB,EAAA64H,cAAA1+I,EAAA,EAAAwgJ,GACAA,EAAAziJ,GAAAoiD,EACAuzG,GAAAnT,EAAAxiJ,GAAAq6J,EAAAp6J,EAAAwiJ,EAAAxiJ,GAEA,OAAA01J,EAAA,ICnDAjD,GAAAzzJ,UAAA+tF,OAAA,SAAAhkC,GACAtqD,KAAAyrI,KAAAnhF,GAGA0pG,GAAAzzJ,UAAA85J,UAAA,SAAA92J,EAAAy3D,GACAh7D,KAAAyrI,IAAAzrI,KAAAyrI,IAAA11G,OAAA,EAAAxyB,GAAAy3D,EAAAh7D,KAAAyrI,IAAA11G,OAAAxyB,EAAA,IAGAywJ,GAAAzzJ,UAAAf,SAAA,SAAA8qD,GACA,OAAAtqD,KAAAyrI,KCTAwoB,GAAA1zJ,UAAAq7J,SAAA,WACA,OAAA57J,KAAAuS,OAEA0hJ,GAAA1zJ,UAAAwlJ,UAAA,SAAA9E,GACA,OAAAjhJ,KAAAuS,MAAA0uI,GAAA,EACAjhJ,KAAAuS,MAAA0uI,EAAA,EACA,GAGAgT,GAAAx2J,MAAAgI,IAAAytD,OAAAz1D,MAAAgI,ICgBAojD,EAAAqrG,GAAA3zJ,WACAs7J,GAAA,SAAAt6J,GACA,OAAAvB,KAAAm0J,IAAA5yJ,EAAA4yJ,KAAAn0J,KAAAm0J,MAAA5yJ,EAAA4yJ,KAAAn0J,KAAAo0J,KAAA7yJ,EAAA6yJ,KAEA0H,yBAAA,SAAAC,EAAAC,GACA,IAAAz6J,EAAAvB,KAAAspD,MACA2yG,EAAA/H,GAAA8H,UAAAz6J,EAAA4yJ,KACApjH,EAAAmjH,GAAAgI,IAAAxyG,IAAAuyG,IACA16J,IAAA46J,OAAAprH,IACAqrH,GAAAlI,GAAAgI,MACA36J,IAAA46J,OAAAjI,GAAAgI,KACAD,GAAA,GACG16J,EAAA86J,GAAAnI,GAAAoI,OACH/6J,IAAAg7J,SAAArI,GAAAgI,KACAD,GAAA,GAKA,IAHA,IAAAO,EAAAP,EAAA,EACAtyB,EAAA,IAAAqqB,GACAyI,EAAAvI,GAAAwI,iBAAA,EACAn5J,EAAA,EAAiBA,GAAAk5J,EAAgBl5J,IAAA,CACjCw4J,GAAAx4J,IAAAi5J,GACA7yB,EAAAr7C,OAAA,KAEA,IAAAquE,EAAA96J,KAAAwkJ,MAAA9kJ,EAAA4yJ,KAEA,GAAAwI,EAAA,EACA,MAEA,IAAAC,GAAA,EACAC,EAAA,EACAF,EAAA,GACAC,GAAA,EACAC,EAAA,KAEAA,EAAA,IAAAF,EAEAhzB,EAAAr7C,OAAAuuE,GACAt7J,IAAAu7J,SAAA5I,GAAA6I,QAAAJ,IAAAJ,SAAArI,GAAAgI,KACAU,GAAAr7J,EAAAy7J,QAAA9I,GAAAgI,KACA,IAAAe,GAAA,EACAC,EAAAhJ,GAAA8H,UAAAz6J,EAAA4yJ,KAEA,GADA+I,EAAA,GAAAr7J,KAAAynD,IAAA4zG,IAAAT,EAAAl5J,IAAA05J,GAAA,IACAA,EAAA,MAGA,OADAjB,EAAA,GAAAC,EACAtyB,EAAAnqI,YAEA29J,IAAA,WACA,OAAAn9J,KAAAu8J,SAAAv8J,OAEAo9J,YAAA,WACA,OAAAp9J,KAAAm0J,IAAAn0J,KAAAo0J,KAEA0I,SAAA,WACA,GAAAt7I,UAAA,aAAA0yI,GAAA,CACA,IAAA3yJ,EAAAigB,UAAA,GACA,OAAAxhB,KAAA6qD,IAAAtpD,EAAA87J,UACG,oBAAA77I,UAAA,IACH,IAAAjgB,EAAAigB,UAAA,GACA,OAAAxhB,KAAA6qD,KAAAtpD,KAGAkxI,OAAA,WACA,OAAAjxH,UAAAzgB,QAAAygB,UAAA,aAAA0yI,GAAA,CACA,IAAA3yJ,EAAAigB,UAAA,GACA,OAAAxhB,KAAAm0J,MAAA5yJ,EAAA4yJ,KAAAn0J,KAAAo0J,MAAA7yJ,EAAA6yJ,MAGAkJ,OAAA,WACA,WAAAt9J,KAAAm0J,KAAA,IAAAn0J,KAAAo0J,KAEAmJ,aAAA,WACA,GAAA/7I,UAAA,aAAA0yI,GAAA,CACA,IAAA3yJ,EAAAigB,UAAA,GACA,OAAAxhB,KAAAvC,QAAAuC,KACAA,KAAAg9J,SAAAz7J,EAAA4yJ,KAAA5yJ,EAAA6yJ,KACG,oBAAA5yI,UAAA,IACH,IAAAjgB,EAAAigB,UAAA,GACA,OAAAxhB,KAAAvC,QAAAuC,KACAA,KAAAg9J,SAAAz7J,EAAA,KAGAi8J,uBAAA,WACA,OAAAx9J,KAAAs9J,SAAA,MACAt9J,KAAAvC,QAAA,OACA,MAEAs+D,IAAA,SAAAz6D,GACA,OAAAtB,KAAA67J,GAAAv6J,GACAtB,KAEAsB,GAGAm8J,WAAA,WACA,OAAAj8I,UAAAzgB,OAAA,CACA,GAAAygB,UAAA,aAAA0yI,GAAA,CACA,IAAA3yJ,EAAAigB,UAAA,GACA,OAAAxhB,KAAAy9J,WAAAl8J,EAAA4yJ,IAAA5yJ,EAAA6yJ,KACI,oBAAA5yI,UAAA,IACJ,IAAAjgB,EAAAigB,UAAA,GACA,OAAAxhB,KAAAy9J,WAAAl8J,EAAA,SAEG,OAAAigB,UAAAzgB,OAAA,CACH,IAAA28J,EAAAl8I,UAAA,GAAAm8I,EAAAn8I,UAAA,GACA,IAAAo8I,EAAAC,EAAAjnG,EAAAknG,EAAAC,EAAA,KAAAC,EAAA,KAAAhjG,EAAA,KAAAoJ,EAAA,KAgBA,OAfAxN,EAAA52D,KAAAm0J,IAAAuJ,EAUAt5F,GANA25F,GAHA/iG,EAAAk5F,GAAA+J,MAAArnG,IACAmnG,EAAA/iG,EAAApE,KAMAonG,GALA55F,EAAA8vF,GAAA+J,MAAAP,IAGAM,EAAA55F,EAAAs5F,KACAI,EAAAlnG,EAAA8mG,GAGAK,GADAF,EAAAH,EAAAM,IAJAJ,EAAAhnG,EAAAmnG,GAKAC,EAAAJ,EAAAC,EAEAz5F,EAAAxN,GADAoE,GAAAh7D,KAAAm0J,IAAA2J,EAAA15F,EAAApkE,KAAAo0J,IAAAx9F,EAAA+mG,GAAAD,GAEA19J,KAAAm0J,IAAA/vF,EACApkE,KAAAo0J,IAAAx9F,EAAAwN,EAAApJ,EACAh7D,OAGAk+J,KAAA,WACA,YAAAl+J,KAAAm0J,IAAA,KAAAn0J,KAAAo0J,IAAA,KAEA+H,OAAA,WACA,GAAA36I,UAAA,aAAA0yI,GAAA,CACA,IAAA3yJ,EAAAigB,UAAA,GACA,IAAAo8I,EAAAC,EAAAjnG,EAAAknG,EAAAC,EAAA,KAAAC,EAAA,KAAAhjG,EAAA,KAAAoJ,EAAA,KAgBA,OAVAw5F,GALAhnG,EAAA52D,KAAAm0J,IAAA5yJ,EAAA4yJ,MAIA4J,GAHA/iG,EAAAk5F,GAAA+J,MAAArnG,IACAmnG,EAAA/iG,EAAApE,IAQAwN,EAAA25F,GAFAC,GALA55F,EAAA8vF,GAAA+J,MAAA18J,EAAA4yJ,MAGA6J,EAAA55F,EAAA7iE,EAAA4yJ,OACA2J,EAAAlnG,EAAAr1D,EAAA4yJ,KAGA4J,GADAF,EAAAt8J,EAAA4yJ,IAAA6J,GACAJ,EAAAI,EAAAJ,EAAAC,EAKA,IAAA3J,GAHA9vF,EAAAxN,GADAoE,GAAAh7D,KAAAm0J,IAAA2J,EAAA15F,EAAApkE,KAAAo0J,IAAAx9F,EAAAr1D,EAAA6yJ,KAAA7yJ,EAAA4yJ,KAGAv9F,EAAAwN,EAAApJ,GAEG,oBAAAx5C,UAAA,IACH,IAAAjgB,EAAAigB,UAAA,GACA,OAAAmgI,EAAAlkJ,MAAA8D,GAAA2yJ,GAAAiK,YACAjK,GAAA3R,KAAAviJ,MAAAy9J,WAAAl8J,EAAA,KAGA68J,GAAA,SAAA78J,GACA,OAAAvB,KAAAm0J,IAAA5yJ,EAAA4yJ,KAAAn0J,KAAAm0J,MAAA5yJ,EAAA4yJ,KAAAn0J,KAAAo0J,KAAA7yJ,EAAA6yJ,KAEA1qG,IAAA,SAAAgB,GACA,OAAAA,EAAA,OAAAwpG,GAAA6I,QAAA,GACA,IAAArhI,EAAA,IAAAw4H,GAAAl0J,MACAnD,EAAAq3J,GAAA6I,QAAA,GACAt3J,EAAA5D,KAAAynD,IAAAoB,GACA,GAAAjlD,EAAA,EACA,KAAAA,EAAA,GACAA,EAAA,MACA5I,EAAAwhK,aAAA3iI,IAEAj2B,GAAA,GACA,IAAAi2B,IAAAyhI,YAGAtgK,EAAA6+B,EAEA,OAAAgvB,EAAA,EAAA7tD,EAAAyhK,aACAzhK,GAEA4lC,KAAA,WACA,GAAAziC,KAAAvC,QAAA,OAAAy2J,GAAA5zF,IACA,IAAAi+F,EAAA18J,KAAA4gC,KAAAziC,KAAAm0J,KACAqK,EAAA,EAIA,OAHAD,IAAAv+J,KAAAm0J,MACAqK,EAAA38J,KAAA4gC,KAAAziC,KAAAo0J,MAEA,IAAAF,GAAAqK,EAAAC,IAEAzY,UAAA,SAAA9E,GACA,IAAA2E,EAAA3E,EACA,OAAAjhJ,KAAAm0J,IAAAvO,EAAAuO,KAAA,EACAn0J,KAAAm0J,IAAAvO,EAAAuO,IAAA,EACAn0J,KAAAo0J,IAAAxO,EAAAwO,KAAA,EACAp0J,KAAAo0J,IAAAxO,EAAAwO,IAAA,EACA,GAEAqK,KAAA,WACA,OAAAz+J,KAAAvC,QAAAuC,KACAA,KAAA6qD,IAAA,IACA3oB,SAEAw8H,SAAA,WACA,GAAAl9I,UAAA,aAAA0yI,GAAA,CACA,IAAA3hJ,EAAAiP,UAAA,GAEA,OADAxhB,KAAAo+C,KAAA7rC,GACAvS,KACG,oBAAAwhB,UAAA,IACH,IAAAjP,EAAAiP,UAAA,GAEA,OADAxhB,KAAAo+C,KAAA7rC,GACAvS,OAGA87D,IAAA,SAAAx6D,GACA,OAAAtB,KAAAo+J,GAAA98J,GACAtB,KAEAsB,GAGAQ,KAAA,WACA,GAAA9B,KAAAs9J,SAAA,OAAApJ,GAAA6I,QAAA,GACA,GAAA/8J,KAAA2+J,aACA,OAAAzK,GAAA5zF,IAEA,IAAAh/D,EAAA,EAAAO,KAAAC,KAAA9B,KAAAm0J,KACAyK,EAAA5+J,KAAAm0J,IAAA7yJ,EACAu9J,EAAA3K,GAAA6I,QAAA6B,GAEAE,EADA9+J,KAAA88J,SAAA+B,EAAA1B,OACAhJ,KAAA,GAAA7yJ,GACA,OAAAu9J,EAAAh0G,IAAAi0G,IAEA9B,QAAA,WACA,OAAAx7I,UAAAzgB,OAAA,CACA,GAAAygB,UAAA,aAAA0yI,GAAA,CACA,IAAA3yJ,EAAAigB,UAAA,GACA,OAAAxhB,KAAAg9J,QAAAz7J,EAAA4yJ,IAAA5yJ,EAAA6yJ,KACI,oBAAA5yI,UAAA,IACJ,IAAAjgB,EAAAigB,UAAA,GACA,IAAAusD,EAAA,KAAArS,EAAA,KAAAoY,EAAA,KAAAj3E,EAAA,KAAAytD,EAAA,KAAAkR,EAAA,KAUA,OAPA3+D,GAFAi3E,EAAA9zE,KAAAm0J,IAAA5yJ,IACA+oD,EAAAwpB,EAAA9zE,KAAAm0J,KAKAz4F,GAFAF,GADA3+D,EAAA0E,EAAA+oD,GAAAtqD,KAAAm0J,IAAAt3J,IACAmD,KAAAo0J,MAEAtgF,GADA/F,EAAA+F,EAAAtY,IAEAx7D,KAAAm0J,IAAApmF,EAAArS,EACA17D,KAAAo0J,IAAA14F,GAAAqS,EAAA/tE,KAAAm0J,KACAn0J,WAEG,OAAAwhB,UAAAzgB,OAAA,CACH,IAAA28J,EAAAl8I,UAAA,GAAAm8I,EAAAn8I,UAAA,GACAusD,EAAA,KAAArS,EAAA,SAAA/E,EAAAjE,EAAA,KAAAohB,EAAA,KAAAj3E,EAAA,KAAAytD,EAAA,KAAAkR,EAAA,KACAsY,EAAA9zE,KAAAm0J,IAAAuJ,EACA/mG,EAAA32D,KAAAo0J,IAAAuJ,EAGA9gK,EAAAi3E,GAFAxpB,EAAAwpB,EAAA9zE,KAAAm0J,KAGAzhG,EAAAiE,GAFA6E,EAAA7E,EAAA32D,KAAAo0J,KASA,IAAA2K,GAHAhxF,EAAA+F,GADAxpB,GAFAztD,EAAA6gK,EAAApzG,GAAAtqD,KAAAm0J,IAAAt3J,IAEA85D,KAGArM,GAJAoI,EAAAirG,EAAAniG,GAAAx7D,KAAAo0J,IAAA1hG,KAGAgJ,EAAApR,GAAAwpB,EAAA/F,KAGAixF,EAAA10G,GAAAyjB,EAAAgxF,GAGA,OAFA/+J,KAAAm0J,IAAA4K,EACA/+J,KAAAo0J,IAAA4K,EACAh/J,OAGAq+J,aAAA,WACA,OAAA78I,UAAAzgB,OAAA,CACA,GAAAygB,UAAA,aAAA0yI,GAAA,CACA,IAAA3yJ,EAAAigB,UAAA,GACA,OAAAxhB,KAAAq+J,aAAA98J,EAAA4yJ,IAAA5yJ,EAAA6yJ,KACI,oBAAA5yI,UAAA,IACJ,IAAAjgB,EAAAigB,UAAA,GACA,OAAAxhB,KAAAq+J,aAAA98J,EAAA,SAEG,OAAAigB,UAAAzgB,OAAA,CACH,IAAA28J,EAAAl8I,UAAA,GAAAm8I,EAAAn8I,UAAA,GACA,IAAAy9I,EAAApB,EAAAqB,EAAA,KAAAlB,EAAA,KAAApnG,EAAA,KAAAoE,EAAA,KAEAkkG,GADAtoG,EAAAs9F,GAAA+J,MAAAj+J,KAAAm0J,KACAn0J,KAAAm0J,IACAn5F,EAAAk5F,GAAA+J,MAAAP,EACAwB,EAAAtoG,EAAAsoG,EACAD,EAAAj/J,KAAAm0J,IAAA+K,EACAlB,EAAAhjG,EAAA0iG,EAKA,IAAAqB,GAJAnoG,EAAA52D,KAAAm0J,IAAAuJ,IAGA1iG,EAAAkkG,GAFAlB,EAAAhjG,EAAAgjG,GAEApnG,EAAAsoG,GADArB,EAAAH,EAAAM,GACAiB,EAAAjB,EAAAiB,EAAApB,GAAA79J,KAAAm0J,IAAAwJ,EAAA39J,KAAAo0J,IAAAsJ,IAGAsB,EAAAhkG,GADAkkG,EAAAtoG,EAAAmoG,GAIA,OAFA/+J,KAAAm0J,IAAA4K,EACA/+J,KAAAo0J,IAAA4K,EACAh/J,OAGAm/J,QAAA,WACA,OAAAn/J,KAAAq+J,aAAAr+J,OAEAkiC,MAAA,WACA,GAAAliC,KAAAvC,QAAA,OAAAy2J,GAAA5zF,IACA,IAAAi+F,EAAA18J,KAAAqgC,MAAAliC,KAAAm0J,KACAqK,EAAA,EAIA,OAHAD,IAAAv+J,KAAAm0J,MACAqK,EAAA38J,KAAAqgC,MAAAliC,KAAAo0J,MAEA,IAAAF,GAAAqK,EAAAC,IAEAnB,OAAA,WACA,OAAAr9J,KAAAvC,QAAAuC,KACA,IAAAk0J,IAAAl0J,KAAAm0J,KAAAn0J,KAAAo0J,MAEAnzJ,MAAA,WACA,IACA,YACG,MAAAw7H,GACH,GAAAA,aAAAupB,2BACA,YACI,MAAAvpB,IAGJ8/B,SAAA,WACA,GAAA/6I,UAAA,aAAA0yI,GAAA,CACA,IAAA3yJ,EAAAigB,UAAA,GACA,OAAAjgB,EAAA9D,QAAAy2J,GAAAiK,YACAjK,GAAA3R,KAAAviJ,MAAAq+J,aAAA98J,GACG,oBAAAigB,UAAA,IACH,IAAAjgB,EAAAigB,UAAA,GACA,OAAAmgI,EAAAlkJ,MAAA8D,GAAA2yJ,GAAAiK,YACAjK,GAAA3R,KAAAviJ,MAAAq+J,aAAA98J,EAAA,KAGA9D,MAAA,WACA,OAAAkkJ,EAAAlkJ,MAAAuC,KAAAm0J,MAEAyH,SAAA,WACA,OAAA/5J,KAAAwkJ,MAAArmJ,KAAAm0J,MAEA30J,SAAA,WACA,IAAAy8J,EAAA/H,GAAA8H,UAAAh8J,KAAAm0J,KACA,OAAA8H,IAAA,GAAAA,GAAA,GAAAj8J,KAAAo/J,qBACAp/J,KAAAq/J,iBAEAD,mBAAA,WACA,IAAAE,EAAAt/J,KAAAw9J,yBACA,UAAA8B,EAAA,OAAAA,EACA,IAAAtD,EAAA,IAAAp1J,MAAA,GAAAqvC,KAAA,MACAspH,EAAAv/J,KAAA87J,0BAAA,EAAAE,GACAQ,EAAAR,EAAA,KACA/oG,EAAAssG,EACA,SAAAA,EAAAjtH,OAAA,GACA2gB,EAAA,IAAAssG,OACG,GAAA/C,EAAA,EACHvpG,EAAA,KAAAihG,GAAAsL,aAAA,KAAAhD,GAAA+C,OACG,QAAAA,EAAA9rJ,QAAA,MACH,IAAAgsJ,EAAAjD,EAAA+C,EAAAx+J,OAEAkyD,EAAAssG,EADArL,GAAAsL,aAAA,IAAAC,GACA,KAEA,OAAAz/J,KAAA2+J,aAAA,IAAA1rG,EACAA,GAEAqrG,WAAA,WACA,IAAAV,EAAAC,EAAAjnG,EAAAknG,EAAAC,EAAA,KAAAC,EAAA,KAAAhjG,EAAA,KAAAoJ,EAAA,KAMAw5F,GALAhnG,EAAA,EAAA52D,KAAAm0J,MAIA4J,GAHA/iG,EAAAk5F,GAAA+J,MAAArnG,IACAmnG,EAAA/iG,EAAApE,IAIAonG,GAHA55F,EAAA8vF,GAAA+J,MAAAj+J,KAAAm0J,KAGAn0J,KAAAm0J,IAMA,IAAA4K,EAAAnoG,GADAoE,GAAA,GAJA8iG,EAAAlnG,EAAA52D,KAAAm0J,MAGA/vF,EAAA25F,GAFAC,EAAA55F,EAAA45F,GAEAF,EAAAC,GADAF,EAAA79J,KAAAm0J,IAAA6J,GACAJ,EAAAI,EAAAJ,EAAAC,GACAjnG,EAAA52D,KAAAo0J,KAAAp0J,KAAAm0J,KAGA,WAAAD,GAAA6K,EADAnoG,EAAAmoG,EAAA/jG,IAGAqkG,cAAA,WACA,GAAAr/J,KAAAs9J,SAAA,OAAApJ,GAAAwL,aACA,IAAAJ,EAAAt/J,KAAAw9J,yBACA,UAAA8B,EAAA,OAAAA,EACA,IAAAtD,EAAA,IAAAp1J,MAAA,GAAAqvC,KAAA,MACA0pH,EAAA3/J,KAAA87J,0BAAA,EAAAE,GACA4D,EAAA1L,GAAA2L,sBAAA7D,EAAA,GACA,SAAA2D,EAAArtH,OAAA,GACA,UAAAkpH,sBAAA,uBAAAmE,GAEA,IAAAG,EAAA,GACAH,EAAA5+J,OAAA,IAAA++J,EAAAH,EAAA1jI,UAAA,IACA,IAAA8jI,EAAAJ,EAAArtH,OAAA,OAAAwtH,EACA,OAAA9/J,KAAA2+J,aAAA,IAAAoB,EAAAH,EACAG,EAAAH,GAEAt2G,IAAA,WACA,OAAAtpD,KAAAvC,QAAAy2J,GAAA5zF,IACAtgE,KAAA2+J,aAAA3+J,KAAAq9J,SACA,IAAAnJ,GAAAl0J,OAEAggK,WAAA,WACA,OAAAhgK,KAAAm0J,IAAA,OAAAn0J,KAAAm0J,KAAAn0J,KAAAo0J,IAAA,GAEAiI,GAAA,SAAA96J,GACA,OAAAvB,KAAAm0J,IAAA5yJ,EAAA4yJ,KAAAn0J,KAAAm0J,MAAA5yJ,EAAA4yJ,KAAAn0J,KAAAo0J,IAAA7yJ,EAAA6yJ,KAEAvpG,IAAA,WACA,GAAArpC,UAAA,aAAA0yI,GAAA,CACA,IAAA3yJ,EAAAigB,UAAA,GACA,OAAA0yI,GAAA3R,KAAAviJ,MAAAg9J,QAAAz7J,GACG,oBAAAigB,UAAA,IACH,IAAAjgB,EAAAigB,UAAA,GACA,OAAA0yI,GAAA3R,KAAAviJ,MAAAg9J,QAAAz7J,KAGA68C,KAAA,WACA,OAAA58B,UAAAzgB,QACA,oBAAAygB,UAAA,IACA,IAAAlgB,EAAAkgB,UAAA,GACAxhB,KAAAm0J,IAAA7yJ,EACAtB,KAAAo0J,IAAA,OACI,GAAA5yI,UAAA,aAAA0yI,GAAA,CACJ,IAAAxuF,EAAAlkD,UAAA,GACAxhB,KAAAm0J,IAAAzuF,EAAAyuF,IACAn0J,KAAAo0J,IAAA1uF,EAAA0uF,UAEG,OAAA5yI,UAAAzgB,OAAA,CACH,IAAAu8D,EAAA97C,UAAA,GAAA6yI,EAAA7yI,UAAA,GACAxhB,KAAAm0J,IAAA72F,EACAt9D,KAAAo0J,IAAAC,IAGA+H,GAAA,SAAA76J,GACA,OAAAvB,KAAAm0J,IAAA5yJ,EAAA4yJ,KAAAn0J,KAAAm0J,MAAA5yJ,EAAA4yJ,KAAAn0J,KAAAo0J,IAAA7yJ,EAAA6yJ,KAEAuK,WAAA,WACA,OAAA3+J,KAAAm0J,IAAA,OAAAn0J,KAAAm0J,KAAAn0J,KAAAo0J,IAAA,GAEA/N,MAAA,WACA,OAAArmJ,KAAAvC,QAAAy2J,GAAA5zF,IACAtgE,KAAAggK,aAAAhgK,KAAAkiC,QAA6CliC,KAAAyiC,QAE7Cw9H,OAAA,WACA,OAAAjgK,KAAAm0J,IAAA,IACAn0J,KAAAm0J,IAAA,KACAn0J,KAAAo0J,IAAA,IACAp0J,KAAAo0J,IAAA,KACA,GAEAlT,YAAA,WACA,OAAAO,EAAAD,EAAAL,IAEAuB,SAAA,WACA,OAAAwR,MAGAA,GAAAiJ,IAAA,SAAA77J,GACA,OAAA4yJ,GAAA6I,QAAAz7J,GAAA+8J,aAAA/8J,IAEA4yJ,GAAA6I,QAAA,WACA,oBAAAv7I,UAAA,IACA,IAAAiqH,EAAAjqH,UAAA,GACA,OAAA0yI,GAAA12J,MAAAiuI,GACE,oBAAAjqH,UAAA,IAEF,WAAA0yI,GADA1yI,UAAA,MAIA0yI,GAAApyJ,KAAA,SAAAR,GACA,OAAA4yJ,GAAA6I,QAAAz7J,GAAAQ,QAEAoyJ,GAAA12J,MAAA,SAAAiuI,GAGA,IAFA,IAAAloI,EAAA,EACA28J,EAAAz0B,EAAA1qI,OACA6xJ,GAAAiD,aAAApqB,EAAAn5F,OAAA/uC,SACA,IAAAo7J,GAAA,EACA,GAAAp7J,EAAA28J,EAAA,CACA,IAAAC,EAAA10B,EAAAn5F,OAAA/uC,GACA,MAAA48J,GAAA,MAAAA,IACA58J,IACA,MAAA48J,IAAAxB,GAAA,IAOA,IAJA,IAAAlpJ,EAAA,IAAAy+I,GACAuI,EAAA,EACA2D,EAAA,EACA11G,EAAA,IAEAnnD,GAAA28J,IADA,CAEA,IAAA5N,EAAA7mB,EAAAn5F,OAAA/uC,GAEA,GADAA,IACAqvJ,GAAAyN,QAAA/N,GAAA,CACA,IAAAh3F,EAAAg3F,EAAA,IACA78I,EAAA4oJ,aAAAnK,GAAAgI,KACAzmJ,EAAAunJ,QAAA1hG,GACAmhG,QAJA,CAOA,SAAAnK,EAAA,CAIA,SAAAA,GAAA,MAAAA,EAAA,CACA,IAAAsN,EAAAn0B,EAAAxvG,UAAA14B,GACA,IACAmnD,EAAAupG,GAAAl2J,SAAA6hK,GACI,MAAAnjC,GACJ,MAAAA,aAAA6jC,sBACA,IAAAA,sBAAA,oBAAAV,EAAA,cAAAn0B,GACKhP,EAEL,MAEA,UAAA6jC,sBAAA,yBAAAhO,EAAA,iBAAA/uJ,EAAA,cAAAkoI,GAdA20B,EAAA3D,GAgBA,IAAA8D,EAAA9qJ,EACA+qJ,EAAA/D,EAAA2D,EAAA11G,EACA,OAAA81G,EACAD,EAAA9qJ,OACE,GAAA+qJ,EAAA,GACF,IAAAzvH,EAAAmjH,GAAAgI,IAAAxyG,IAAA82G,GACAD,EAAA9qJ,EAAA0mJ,OAAAprH,QACE,GAAAyvH,EAAA,GACFzvH,EAAAmjH,GAAAgI,IAAAxyG,KAAA82G,GACAD,EAAA9qJ,EAAA8mJ,SAAAxrH,GAEA,OAAA4tH,EACA4B,EAAAlD,SAEAkD,GAEArM,GAAAiK,UAAA,WACA,WAAAjK,GAAAvS,EAAArhF,IAAAqhF,EAAArhF,MAEA4zF,GAAA3R,KAAA,SAAA78E,GACA,WAAAwuF,GAAAxuF,IAEAwuF,GAAA8H,UAAA,SAAA16J,GACA,IAAAm/J,EAAA5+J,KAAAynD,IAAAhoD,GACAo/J,EAAA7+J,KAAAqmD,IAAAu4G,GAAA5+J,KAAAqmD,IAAA,IACAy4G,EAAA9+J,KAAAwkJ,MAAAxkJ,KAAAqgC,MAAAw+H,IAGA,OADA,GADA7+J,KAAA6nD,IAAA,GAAAi3G,IACAF,IAAAE,GAAA,GACAA,GAEAzM,GAAAsL,aAAA,SAAAlN,EAAA5rJ,GAEA,IADA,IAAAijI,EAAA,IAAAqqB,GACAzwJ,EAAA,EAAgBA,EAAAmD,EAASnD,IACzBomI,EAAAr7C,OAAAgkE,GAEA,OAAA3oB,EAAAnqI,YAEA00J,GAAA39G,GAAA,IAAA29G,GAAA,0CACAA,GAAA1zG,OAAA,IAAA0zG,GAAA,0CACAA,GAAA0M,KAAA,IAAA1M,GAAA,0CACAA,GAAA2M,EAAA,IAAA3M,GAAA,0CACAA,GAAA5zF,IAAA,IAAA4zF,GAAAvS,EAAArhF,IAAAqhF,EAAArhF,KACA4zF,GAAA4M,IAAA,qBACA5M,GAAA+J,MAAA,UACA/J,GAAAwI,iBAAA,GACAxI,GAAAgI,IAAAhI,GAAA6I,QAAA,IACA7I,GAAAoI,IAAApI,GAAA6I,QAAA,GACA7I,GAAA2L,sBAAA,IACA3L,GAAAwL,aAAA,QC/kBA72G,EAAAyrG,GAAA/zJ,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA4R,MAGAA,GAAAyM,iBAAA,SAAAjd,EAAAC,EAAAp8E,GACA,IAAAzkE,EAAAoxJ,GAAA0M,uBAAAld,EAAAC,EAAAp8E,GACA,GAAAzkE,GAAA,SAAAA,EACA,IAAA+9J,EAAA/M,GAAA6I,QAAAhZ,EAAAziJ,GAAA07J,SAAAlZ,EAAAxiJ,GACA4/J,EAAAhN,GAAA6I,QAAAhZ,EAAAxiJ,GAAAy7J,SAAAlZ,EAAAviJ,GACA4/J,EAAAjN,GAAA6I,QAAAp1F,EAAArmE,GAAA07J,SAAAjZ,EAAAziJ,GACA8/J,EAAAlN,GAAA6I,QAAAp1F,EAAApmE,GAAAy7J,SAAAjZ,EAAAxiJ,GACA,OAAA0/J,EAAA5C,aAAA+C,GAAA7D,aAAA2D,EAAA7C,aAAA8C,IAAAlB,UAEA3L,GAAA+M,aAAA,WACA,GAAA7/I,UAAA,aAAA0yI,GAAA,CACA,IAAArR,EAAArhI,UAAA,GAAAwiI,EAAAxiI,UAAA,GAAAshI,EAAAthI,UAAA,GAAAyiI,EAAAziI,UAAA,GAEA,OADAqhI,EAAA0Z,SAAAtY,GAAAsZ,aAAAvZ,EAAAuY,SAAAzZ,IACAmd,SACE,oBAAAz+I,UAAA,IACF,IAAAy/I,EAAAz/I,UAAA,GAAA0/I,EAAA1/I,UAAA,GAAA2/I,EAAA3/I,UAAA,GAAA4/I,EAAA5/I,UAAA,GACA,IAAAqhI,EAAAqR,GAAA6I,QAAAkE,GACAjd,EAAAkQ,GAAA6I,QAAAmE,GACApe,EAAAoR,GAAA6I,QAAAoE,GACAld,EAAAiQ,GAAA6I,QAAAqE,GAEA,OADAve,EAAA0Z,SAAAtY,GAAAsZ,aAAAvZ,EAAAuY,SAAAzZ,IACAmd,WAGA3L,GAAApN,aAAA,SAAApD,EAAAC,EAAA+D,EAAAC,GACA,IAAAuZ,EAAApN,GAAA6I,QAAAhV,EAAAxmJ,GAAAg8J,aAAAzV,EAAAvmJ,GAAA88J,aAAAnK,GAAA6I,QAAAhZ,EAAAziJ,GAAAi8J,aAAAzZ,EAAAxiJ,IACAigK,EAAArN,GAAA6I,QAAAhV,EAAAzmJ,GAAAi8J,aAAAzV,EAAAxmJ,GAAA+8J,aAAAnK,GAAA6I,QAAAhZ,EAAAxiJ,GAAAg8J,aAAAzZ,EAAAviJ,IACAigK,EAAAF,EAAAxE,SAAAyE,GACAE,EAAAvN,GAAA6I,QAAAhV,EAAAzmJ,GAAAi8J,aAAAzV,EAAAxmJ,GAAA+8J,aAAAnK,GAAA6I,QAAAjZ,EAAAviJ,GAAAg8J,aAAAzV,EAAAvmJ,IACAmgK,EAAAxN,GAAA6I,QAAAhV,EAAAxmJ,GAAAg8J,aAAAzV,EAAAvmJ,GAAA88J,aAAAnK,GAAA6I,QAAAjZ,EAAAxiJ,GAAAi8J,aAAAzV,EAAAxmJ,IAEAqgK,EADAF,EAAA3E,SAAA4E,GACAjE,WAAA+D,GAAApE,cACA97J,EAAA4yJ,GAAA6I,QAAAjZ,EAAAxiJ,GAAA07J,QAAA9I,GAAA6I,QAAAhZ,EAAAziJ,GAAAi8J,aAAAzZ,EAAAxiJ,GAAA+8J,aAAAsD,IAAAvE,cACAwE,EAAA1N,GAAA6I,QAAAhZ,EAAAziJ,GAAAi8J,aAAAzZ,EAAAxiJ,GAAA+8J,aAAAnK,GAAA6I,QAAAjZ,EAAAviJ,GAAAg8J,aAAAzV,EAAAvmJ,IACAsgK,EAAA3N,GAAA6I,QAAAhZ,EAAAxiJ,GAAAg8J,aAAAzZ,EAAAviJ,GAAA88J,aAAAnK,GAAA6I,QAAAjZ,EAAAxiJ,GAAAi8J,aAAAzV,EAAAxmJ,IAEAwgK,EADAF,EAAA9E,SAAA+E,GACApE,WAAA+D,GAAApE,cAEA,WAAA/Z,EAAA/hJ,EADA4yJ,GAAA6I,QAAAjV,EAAAvmJ,GAAAy7J,QAAA9I,GAAA6I,QAAAhV,EAAAxmJ,GAAAg8J,aAAAzV,EAAAvmJ,GAAA88J,aAAAyD,IAAA1E,gBAGA9I,GAAA0M,uBAAA,SAAAe,EAAAC,EAAAC,GACA,IAAAC,EAAA,KACAC,GAAAJ,EAAAzgK,EAAA2gK,EAAA3gK,IAAA0gK,EAAAzgK,EAAA0gK,EAAA1gK,GACA6gK,GAAAL,EAAAxgK,EAAA0gK,EAAA1gK,IAAAygK,EAAA1gK,EAAA2gK,EAAA3gK,GACA+gK,EAAAF,EAAAC,EACA,GAAAD,EAAA,GACA,GAAAC,GAAA,EACA,OAAA9N,GAAA2L,OAAAoC,GAEAH,EAAAC,EAAAC,MAEE,MAAAD,EAAA,GAOF,OAAA7N,GAAA2L,OAAAoC,GANA,GAAAD,GAAA,EACA,OAAA9N,GAAA2L,OAAAoC,GAEAH,GAAAC,EAAAC,EAKA,IAAAE,EAAAhO,GAAAiO,gBAAAL,EACA,OAAAG,GAAAC,IAAAD,GAAAC,EACAhO,GAAA2L,OAAAoC,GAEA,GAEA/N,GAAA2L,OAAA,SAAA3+J,GACA,OAAAA,EAAA,IACAA,EAAA,KACA,GAEAgzJ,GAAAiO,gBAAA,MC/EA15G,EAAA0rG,GAAAh0J,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA6R,MAGAA,GAAArxJ,MAAA,SAAA4gJ,EAAAC,EAAAp8E,GACA,OAAA2sF,GAAAyM,iBAAAjd,EAAAC,EAAAp8E,IAEA4sF,GAAAiO,MAAA,SAAAp5I,GACA,IAAAq5I,EAAAr5I,EAAAroB,OAAA,EACA,GAAA0hK,EAAA,YAAAnhB,EAAA,qEAGA,IAFA,IAAAohB,EAAAt5I,EAAA,GACAu5I,EAAA,EACAp/J,EAAA,EAAgBA,GAAAk/J,EAAWl/J,IAAA,CAC3B,IAAAsjB,EAAAuC,EAAA7lB,GACAsjB,EAAAtlB,EAAAmhK,EAAAnhK,IACAmhK,EAAA77I,EACA87I,EAAAp/J,GAGA,IAAAq/J,EAAAD,EACA,IACAC,GAAA,GACA,IAAAA,EAAAH,SACEr5I,EAAAw5I,GAAAjd,SAAA+c,IAAAE,IAAAD,GACF,IAAAE,EAAAF,EACA,GACAE,KAAA,GAAAJ,QACEr5I,EAAAy5I,GAAAld,SAAA+c,IAAAG,IAAAF,GACF,IAAAG,EAAA15I,EAAAw5I,GACAljJ,EAAA0J,EAAAy5I,GACA,GAAAC,EAAAnd,SAAA+c,IAAAhjJ,EAAAimI,SAAA+c,IAAAI,EAAAnd,SAAAjmI,GAAA,SACA,IAAAqjJ,EAAAxO,GAAArxJ,MAAA4/J,EAAAJ,EAAAhjJ,GAOA,OALA,IAAAqjJ,EACAD,EAAAxhK,EAAAoe,EAAApe,EAEAyhK,EAAA,GAIAxO,GAAAyO,WAAA,EACAzO,GAAA1lF,MAAA0lF,GAAAyO,UACAzO,GAAA0O,iBAAA,EACA1O,GAAAxlF,KAAAwlF,GAAA0O,iBACA1O,GAAA2O,UAAA,EACA3O,GAAA4O,SAAA5O,GAAA2O,UCnDAr6G,EAAA2rG,GAAAj0J,WACA2gJ,YAAA,WACA,UAEAwB,SAAA,WACA,OAAA8R,MC4BAzpJ,EAAAsf,GAAA65H,GACAr7F,EAAAx+B,GAAA9pB,WACAqpJ,wBAAA,WACA,OAAA5pJ,KAAAy0J,OAAAlL,uBAEA1mJ,eAAA,WACA,GAAA7C,KAAA6sB,UACA,SAKA,IAHA,IAAAjtB,EAAA,IAAAgH,MAAA5G,KAAA42J,gBAAA3gH,KAAA,MACA8N,GAAA,EACAq/G,EAAApjK,KAAAy0J,OAAA5xJ,iBACAvB,EAAA,EAAiBA,EAAA8hK,EAAAriK,OAA6BO,IAE9C1B,IADAmkD,GACAq/G,EAAA9hK,GAEA,QAAAiC,EAAA,EAAiBA,EAAAvD,KAAA00J,OAAA3zJ,OAAwBwC,IAEzC,IADA,IAAAszJ,EAAA72J,KAAA00J,OAAAnxJ,GAAAV,iBACAwC,EAAA,EAAkBA,EAAAwxJ,EAAA91J,OAA6BsE,IAE/CzF,IADAmkD,GACA8yG,EAAAxxJ,GAGA,OAAAzF,GAEAwH,QAAA,WACA,IAAAooE,EAAA,EACAA,GAAAukF,GAAA0H,OAAAz7J,KAAAy0J,OAAA6G,yBACA,QAAA/3J,EAAA,EAAiBA,EAAAvD,KAAA00J,OAAA3zJ,OAAwBwC,IACzCisE,GAAAukF,GAAA0H,OAAAz7J,KAAA00J,OAAAnxJ,GAAA+3J,yBAEA,OAAA9rF,GAEAi5E,YAAA,WACA,OAAAzoJ,KAAAqjK,qBAAA,SACA,UAAArjK,KAAAy0J,OAAA,SACA,OAAAz0J,KAAAy0J,OAAAmC,eAAA,SAGA,IAFA,IAAAH,EAAAz2J,KAAAy0J,OAAA6G,wBACAhZ,EAAAtiJ,KAAAupJ,sBACAhmJ,EAAA,EAAiBA,EAAA,EAAOA,IAAA,CAExB,IADAjC,EAAAm1J,EAAArU,KAAA7+I,MACA++I,EAAA0E,WAAA1lJ,IAAAghJ,EAAAwE,UAAA,SAEA,IADAvlJ,EAAAk1J,EAAAjU,KAAAj/I,MACA++I,EAAA2E,WAAA1lJ,IAAA+gJ,EAAAyE,UAAA,SAEA,IAAAuc,EAAA7M,EAAArU,KAAA,GACAmhB,EAAA9M,EAAAjU,KAAA,GACA,IAAAj/I,EAAA,EAAiBA,GAAA,EAAQA,IAAA,CACzB,IAAAjC,EACAC,EAGA,IAJAD,EAAAm1J,EAAArU,KAAA7+I,MAEA+/J,MADA/hK,EAAAk1J,EAAAjU,KAAAj/I,MAEAggK,GACA,SACAD,EAAAhiK,EACAiiK,EAAAhiK,EAEA,UAEAonJ,YAAA,WACA,OAAAnnI,UAAAzgB,QAAA,iBAAAygB,UAAA,IAAAA,UAAA,aAAA0iI,EAAA,CACA,IAAA0B,EAAApkI,UAAA,GAAA24E,EAAA34E,UAAA,GACA,IAAAxhB,KAAA82J,kBAAAlR,GACA,SAEA,IAAA4d,EAAA5d,EACA6d,EAAAzjK,KAAAy0J,OACAiP,EAAAF,EAAA/O,OACA,IAAAgP,EAAA9a,YAAA+a,EAAAvpE,GACA,SAEA,GAAAn6F,KAAA00J,OAAA3zJ,SAAAyiK,EAAA9O,OAAA3zJ,OACA,SAEA,QAAAwC,EAAA,EAAkBA,EAAAvD,KAAA00J,OAAA3zJ,OAAwBwC,IAC1C,IAAAvD,KAAA00J,OAAAnxJ,GAAAolJ,YAAA6a,EAAA9O,OAAAnxJ,GAAA42F,GACA,SAGA,SACG,OAAA+pD,EAAA3jJ,UAAAooJ,YAAA7gG,MAAA9nD,KAAAwhB,YAEHkoI,UAAA,WACA,OAAAloI,UAAAzgB,OAAA,CACAf,KAAA0pJ,UAAA1pJ,KAAAy0J,QAAA,GACA,QAAAlxJ,EAAA,EAAkBA,EAAAvD,KAAA00J,OAAA3zJ,OAAwBwC,IAC1CvD,KAAA0pJ,UAAA1pJ,KAAA00J,OAAAnxJ,IAAA,GAEAovJ,GAAA1qD,KAAAjoG,KAAA00J,aACG,OAAAlzI,UAAAzgB,OAAA,CACH,IAAAqoB,EAAA5H,UAAA,GAAAmiJ,EAAAniJ,UAAA,GACA,GAAA4H,EAAAyD,UACA,YAEA,IAAA+2I,EAAA,IAAAh9J,MAAAwiB,EAAAvmB,iBAAA9B,OAAA,GAAAk1C,KAAA,MACAu2G,EAAAwB,UAAA5kI,EAAAvmB,iBAAA,EAAA+gK,EAAA,EAAAA,EAAA7iK,QACA,IAAAivJ,EAAAvD,EAAAuD,cAAA5mI,EAAAvmB,kBACA4pJ,EAAAiC,OAAAkV,EAAA5T,GACAxD,EAAAwB,UAAA4V,EAAA,EAAAx6I,EAAAvmB,iBAAA,EAAA+gK,EAAA7iK,QACAqoB,EAAAvmB,iBAAA+gK,EAAA7iK,QAAA6iK,EAAA,GACArP,GAAAiO,MAAAp5I,EAAAvmB,oBAAA8gK,GACAlX,EAAAx9I,QAAAma,EAAAvmB,oBAIAo/I,cAAA,WACA,OAAAjiJ,KAAAy0J,OAAAxS,iBAEAohB,mBAAA,WACA,OAAArjK,KAAA00J,OAAA3zJ,QAEAi2J,qBAAA,WACA,UAEA3O,YAAA,WACA,OAAAnE,EAAA4G,kBAEA3I,aAAA,WACA,UAEAhf,UAAA,WACA,IAAAz8H,EAAA,EACAA,GAAA1G,KAAAy0J,OAAAtxB,YACA,QAAA5/H,EAAA,EAAiBA,EAAAvD,KAAA00J,OAAA3zJ,OAAwBwC,IACzCmD,GAAA1G,KAAA00J,OAAAnxJ,GAAA4/H,YAEA,OAAAz8H,GAEAkwJ,aAAA,WAEA,IADA,IAAAM,EAAAl3J,KAAAy0J,OAAAmC,eACArzJ,EAAA,EAAiBA,EAAAvD,KAAA00J,OAAA3zJ,OAAwBwC,IACzC2zJ,GAAAl3J,KAAA00J,OAAAnxJ,GAAAqzJ,eAEA,OAAAM,GAEAjoJ,QAAA,WACA,IAAA06D,EAAA3pE,KAAAuiJ,OACA54E,EAAA8qF,OAAAz0J,KAAAy0J,OAAAlS,OAAAtzI,UACA06D,EAAA+qF,OAAA,IAAA9tJ,MAAA5G,KAAA00J,OAAA3zJ,QAAAk1C,KAAA,MACA,QAAA1yC,EAAA,EAAiBA,EAAAvD,KAAA00J,OAAA3zJ,OAAwBwC,IACzComE,EAAA+qF,OAAAnxJ,GAAAvD,KAAA00J,OAAAnxJ,GAAAg/I,OAAAtzI,UAEA,OAAA06D,GAEAk6F,WAAA,WACA,OAAA7jK,KAAA8jK,kBAAAD,cAEA3a,mBAAA,WACA,OAAA1nI,UAAAzgB,OAAA,CACA,IAAAkgJ,EAAAz/H,UAAA,GACA,IAAAiiJ,EAAAzjK,KAAAy0J,OACAsP,EAAA9iB,EAAAwT,OACA,OAAAgP,EAAAva,mBAAA6a,GACG,OAAAviJ,UAAAzgB,OAAA,CACH,IAAAkgJ,EAAAz/H,UAAA,GAAA2nI,EAAA3nI,UAAA,GACA,IAAAmoD,EAAAs3E,EAGA+iB,GAFAP,EAAAzjK,KAAAy0J,OACAsP,EAAAp6F,EAAA8qF,OACAgP,EAAAva,mBAAA6a,EAAA5a,IACA,OAAA6a,EAAA,OAAAA,EAIA,IAHA,IAAAC,EAAAjkK,KAAAqjK,qBACAa,EAAAv6F,EAAA05F,qBACA9/J,EAAA,EACAA,EAAA0gK,GAAA1gK,EAAA2gK,GAAA,CACA,IAAAC,EAAAnkK,KAAAokK,iBAAA7gK,GACA8gK,EAAA16F,EAAAy6F,iBAAA7gK,GACAq0J,EAAAuM,EAAAjb,mBAAAmb,EAAAlb,GACA,OAAAyO,EAAA,OAAAA,EACAr0J,IAEA,OAAAA,EAAA0gK,EAAA,EACA1gK,EAAA2gK,GAAA,EACA,IAGAp8G,MAAA,WACA,GAAAk5F,EAAAx/H,UAAA,GAAAgjI,GAAA,CACA,IAAAp1I,EAAAoS,UAAA,GACAxhB,KAAAy0J,OAAA3sG,MAAA14C,GACA,QAAA7L,EAAA,EAAkBA,EAAAvD,KAAA00J,OAAA3zJ,OAAwBwC,IAC1CvD,KAAA00J,OAAAnxJ,GAAAukD,MAAA14C,QAEG,GAAA4xI,EAAAx/H,UAAA,GAAAsxI,IAAA,CACH,IAAA1jJ,EAAAoS,UAAA,GAEA,GADAxhB,KAAAy0J,OAAA3sG,MAAA14C,IACAA,EAAAsnJ,SACA,IAAAnzJ,EAAA,EAAmBA,EAAAvD,KAAA00J,OAAA3zJ,SACnBf,KAAA00J,OAAAnxJ,GAAAukD,MAAA14C,IACAA,EAAAsnJ,UAF2CnzJ,KAK3C6L,EAAAunJ,qBAAA32J,KAAA4oJ,uBACG,GAAA5H,EAAAx/H,UAAA,GAAAqxI,IAAA,CACHrxI,UAAA,GACApS,OAAApP,WACG,GAAAghJ,EAAAx/H,UAAA,GAAA+/H,GAAA,CACH,IAAAnyI,EAAAoS,UAAA,GACApS,SAAApP,MACAA,KAAAy0J,OAAA3sG,MAAA14C,GACA,IAAA7L,EAAA,EAAkBA,EAAAvD,KAAA00J,OAAA3zJ,OAAwBwC,IAC1CvD,KAAA00J,OAAAnxJ,GAAAukD,MAAA14C,KAIAyoJ,YAAA,WACA,GAAA73J,KAAA6sB,UACA,OAAA7sB,KAAAuoJ,aAAA2P,wBAEA,IAAAx/H,EAAA,IAAA9xB,MAAA5G,KAAA00J,OAAA3zJ,OAAA,GAAAk1C,KAAA,MACAvd,EAAA,GAAA14B,KAAAy0J,OACA,QAAAlxJ,EAAA,EAAiBA,EAAAvD,KAAA00J,OAAA3zJ,OAAwBwC,IACzCm1B,EAAAn1B,EAAA,GAAAvD,KAAA00J,OAAAnxJ,GAEA,OAAAm1B,EAAA33B,QAAA,EAAAf,KAAAuoJ,aAAAsM,iBAAAn8H,EAAA,GAAA4iI,yBACAt7J,KAAAuoJ,aAAA2P,sBAAAx/H,IAEAo/H,gBAAA,WACA,OAAA5T,EAAAkH,kBAEA7I,KAAA,WAGA,IAFA,IAAA+hB,EAAAtkK,KAAAy0J,OAAAlS,OACAgiB,EAAA,IAAA39J,MAAA5G,KAAA00J,OAAA3zJ,QAAAk1C,KAAA,MACA1yC,EAAA,EAAiBA,EAAAvD,KAAA00J,OAAA3zJ,OAAwBwC,IACzCghK,EAAAhhK,GAAAvD,KAAA00J,OAAAnxJ,GAAAg/I,OAEA,WAAAl4H,GAAAi6I,EAAAC,EAAAvkK,KAAAokJ,WAEA0f,gBAAA,WACA,OAAA9jK,KAAAy0J,QAEA5nI,QAAA,WACA,OAAA7sB,KAAAy0J,OAAA5nI,WAEAu3I,iBAAA,SAAA3+J,GACA,OAAAzF,KAAA00J,OAAAjvJ,IAEAy7I,YAAA,WACA,OAAAsT,KAEA9R,SAAA,WACA,OAAAr4H,MAGAA,GAAAs8H,kBAAA,mBC3QA57I,EAAA9F,GAAA0rE,IACA9nB,EAAA5jD,GAAA1E,WACAikK,QAAA,WACA,UAEA7b,YAAA,WACA,OAAAnnI,UAAAzgB,QAAA,iBAAAygB,UAAA,IAAAA,UAAA,aAAA0iI,EAAA,CACA,IAAA0B,EAAApkI,UAAA,GAAA24E,EAAA34E,UAAA,GACA,QAAAxhB,KAAA82J,kBAAAlR,IAGAj1E,GAAApwE,UAAAooJ,YAAA5oJ,KAAAC,KAAA4lJ,EAAAzrD,GACG,OAAAxpB,GAAApwE,UAAAooJ,YAAA7gG,MAAA9nD,KAAAwhB,YAEHygI,cAAA,WACA,OAAAzgI,UAAAzgB,QAAAmyD,OAAAi6F,UAAA3rI,UAAA,KACA,IAAA/b,EAAA+b,UAAA,GACA,OAAAxhB,KAAA+yJ,YAAAttJ,GAAAw8I,gBACG,OAAAtxE,GAAApwE,UAAA0hJ,cAAAn6F,MAAA9nD,KAAAwhB,YAEHw1I,qBAAA,WACA,OAAAh8E,GAAAooD,OAEAilB,YAAA,WACA,OAAAnE,EAAAoG,qBAEAnI,aAAA,WACA,UAEA0V,YAAA,WACA,OAAA73J,KAAAuoJ,aAAA6O,4BAEAU,gBAAA,WACA,OAAA5T,EAAA8G,qBAEAzI,KAAA,WAEA,IADA,IAAA38I,EAAA,IAAAgB,MAAA5G,KAAA+yJ,YAAAhyJ,QAAAk1C,KAAA,MACA1yC,EAAA,EAAiBA,EAAAqC,EAAA7E,OAAmBwC,IACpCqC,EAAArC,GAAAvD,KAAA+yJ,YAAAxvJ,GAAAg/I,OAEA,WAAAt9I,GAAAW,EAAA5F,KAAAokJ,WAEAlD,YAAA,WACA,OAAA2S,KAEAnR,SAAA,WACA,OAAAz9I,MAGAA,GAAA0hJ,kBAAA,mBCvCA57I,EAAAwf,GAAAH,IACAy+B,EAAAt+B,GAAAhqB,WACAy2J,qBAAA,WACA,OAAAh8E,GAAAooD,OAEA20B,SAAA,WACA,QAAA/3J,KAAA6sB,WAGAzC,GAAA7pB,UAAAw3J,SAAAh4J,KAAAC,OAEAqoJ,YAAA,WACA,OAAAnE,EAAA2G,qBAEA57I,QAAA,WACA,IAAAwnJ,EAAAz2J,KAAA4zJ,QAAArR,OAGA,OAFAoR,GAAA1kJ,QAAAwnJ,GACAz2J,KAAAuoJ,aAAAsM,iBAAA4B,IAGAzB,qBAAA,WACA,IAAAh1J,KAAA6sB,YAAAzC,GAAA7pB,UAAAw3J,SAAAh4J,KAAAC,MACA,UAAAshJ,EAAA,wDAEA,GAAAthJ,KAAAs7J,wBAAAl4H,QAAA,GAAApjC,KAAAs7J,wBAAAl4H,OAAA7Y,GAAAk6I,mBACA,UAAAnjB,EAAA,iDAAAthJ,KAAAs7J,wBAAAl4H,OAAA,0BAGA00H,gBAAA,WACA,OAAA5T,EAAAgH,qBAEA3I,KAAA,WACA,WAAAh4H,GAAAvqB,KAAA4zJ,QAAArR,OAAAviJ,KAAAokJ,WAEAlD,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAn4H,MAGAA,GAAAk6I,mBAAA,EACAl6I,GAAAo8H,kBAAA,mBCpDA57I,EAAA/E,GAAA2qE,IACA9nB,EAAA7iD,GAAAzF,WACAooJ,YAAA,WACA,OAAAnnI,UAAAzgB,QAAA,iBAAAygB,UAAA,IAAAA,UAAA,aAAA0iI,EAAA,CACA,IAAA0B,EAAApkI,UAAA,GAAA24E,EAAA34E,UAAA,GACA,QAAAxhB,KAAA82J,kBAAAlR,IAGAj1E,GAAApwE,UAAAooJ,YAAA5oJ,KAAAC,KAAA4lJ,EAAAzrD,GACG,OAAAxpB,GAAApwE,UAAAooJ,YAAA7gG,MAAA9nD,KAAAwhB,YAEHw1I,qBAAA,WACA,UAEA3O,YAAA,WACA,OAAAnE,EAAAsG,uBAEArI,aAAA,WACA,UAEAlzI,QAAA,WAGA,IAFA,IAAAxJ,EAAAzF,KAAA+yJ,YAAAhyJ,OACAo2J,EAAA,IAAAvwJ,MAAAnB,GAAAwwC,KAAA,MACA1yC,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAC9C4zJ,EAAA5zJ,GAAAvD,KAAA+yJ,YAAAxvJ,GAAA0L,UAEA,OAAAjP,KAAAuoJ,aAAAmc,mBAAAvN,IAEAU,YAAA,WACA,GAAA73J,KAAA6sB,UACA,OAAA7sB,KAAAuoJ,aAAA2P,wBAGA,IADA,IAAAyM,EAAA,IAAAxf,EACA5hJ,EAAA,EAAiBA,EAAAvD,KAAA+yJ,YAAAhyJ,OAA6BwC,IAG9C,IAFA,IACAm1B,EADA14B,KAAA+yJ,YAAAxvJ,GACAs0J,cACAxyJ,EAAA,EAAkBA,EAAAqzB,EAAAuwH,mBAA8B5jJ,IAChDs/J,EAAA95G,IAAAnyB,EAAA8vH,aAAAnjJ,IAGA,IAAAu/J,EAAA,IAAAh+J,MAAA+9J,EAAAvhI,QAAA6S,KAAA,MACA,OAAAj2C,KAAAuoJ,aAAA2P,sBAAAyM,EAAA7Y,QAAA8Y,KAEA9M,gBAAA,WACA,OAAA5T,EAAAmH,uBAEA9I,KAAA,WAEA,IADA,IAAA15I,EAAA,IAAAjC,MAAA5G,KAAA+yJ,YAAAhyJ,QAAAk1C,KAAA,MACA1yC,EAAA,EAAiBA,EAAAsF,EAAA9H,OAAqBwC,IACtCsF,EAAAtF,GAAAvD,KAAA+yJ,YAAAxvJ,GAAAg/I,OAEA,WAAAv8I,GAAA6C,EAAA7I,KAAAokJ,WAEAlD,YAAA,WACA,OAAAsT,KAEA9R,SAAA,WACA,OAAA18I,MAGAA,GAAA2gJ,kBAAA,kBCnDA99F,EAAAosG,GAAA10J,WACAskK,gBAAA,SAAAC,GACA9kK,KAAAk1J,kBAAA4P,GAEAC,KAAA,SAAAhsJ,EAAAisJ,GACA,UAAAjsJ,EAAA,YACA,IAAA0T,EAAAzsB,KAAAilK,aAAAlsJ,EAAAisJ,GAIA,OAHAhlK,KAAAk1J,mBACAzoI,EAAAs9H,YAAAhxI,EAAAqwI,eAEA38H,GAEAw4I,aAAA,SAAAlsJ,EAAAisJ,GAEA,OADA,OAAAhlK,KAAAokJ,WAAApkJ,KAAAokJ,SAAArrI,EAAAwvI,cACAxvI,aAAA43D,GACA3wE,KAAAklK,uBAAAnsJ,EAAAisJ,GAEAjsJ,aAAAsR,GACArqB,KAAAmlK,YAAApsJ,EAAAisJ,GAEAjsJ,aAAAoR,GACA66I,EAAAD,KAAAhsJ,EAAA/Y,KAAAokJ,UAEArrI,aAAAqR,GACA46I,EAAAD,KAAAhsJ,EAAA/Y,KAAAokJ,WAEAhB,EAAAkC,qBAAA,+BAAAvsI,EAAA2pI,WAAA0iB,WACA,OAEAF,uBAAA,SAAA/1J,EAAA61J,GAGA,IAFA,IAAAK,EAAAL,EAAAD,KAAA51J,EAAAnP,KAAAokJ,UACAnzE,EAAA,IAAAk0E,EACA5hJ,EAAA,EAAiBA,EAAA8hK,EAAApc,mBAA0C1lJ,IAAA,CAC3D,IAAAwV,EAAA/Y,KAAA+kK,KAAAM,EAAA7c,aAAAjlJ,GAAAyhK,GACA,OAAAjsJ,KAAA8T,WAGAokD,EAAApmB,IAAA9xC,GAEA,OAAAssJ,EAAA3iB,aAAAz9I,GACAjF,KAAAokJ,SAAAwU,iBAAA3nF,EAAA66E,aAEAuZ,EAAA3iB,aAAA/iJ,GACAK,KAAAokJ,SAAA8T,sBAAAjnF,EAAA66E,aAEAuZ,EAAA3iB,aAAA18I,GACAhG,KAAAokJ,SAAAsgB,mBAAAzzF,EAAA66E,aAEA9rJ,KAAAokJ,SAAAgT,yBAAAnmF,EAAA66E,cAEAqZ,YAAA,SAAA3+J,EAAAw+J,GACA,IAAAM,EAAAN,EAAAD,KAAAv+J,EAAAxG,KAAAokJ,UAEA,GADA,OAAAkhB,MAAAtlK,KAAAokJ,SAAAmhB,iBACAD,EAAAz4I,UACA,OAAAy4I,EAEA,IAAA3Q,EAAA30J,KAAA+kK,KAAAO,EAAAxB,kBAAAkB,GACA,UAAArQ,KAAA9nI,UACA,OAAA7sB,KAAAokJ,SAAAmhB,gBAGA,IADA,IAAA3Q,EAAA,IAAAzP,EACA5hJ,EAAA,EAAiBA,EAAA+hK,EAAAjC,qBAAqC9/J,IAAA,CACtD,IAAAiiK,EAAAxlK,KAAA+kK,KAAAO,EAAAlB,iBAAA7gK,GAAAyhK,GACA,OAAAQ,KAAA34I,WAGA+nI,EAAA/pG,IAAA26G,GAEA,OAAAxlK,KAAAokJ,SAAAmhB,cAAA5Q,EAAAC,EAAA9I,cAEA5K,YAAA,WACA,UAEAwB,SAAA,WACA,OAAAuS,MAIAA,GAAAE,2BAEAtsG,EAAAusG,GAAA70J,WACAwkK,KAAA,SAAAhsJ,EAAAu7B,GACA,OAAAv7B,GAEAmoI,YAAA,WACA,OAAAiU,KAEAzS,SAAA,WACA,OAAA0S,MAIAvsG,EAAAwsG,GAAA90J,WACAwkK,KAAA,SAAAhsJ,EAAAu7B,GACA,IAAA10C,EAAAI,KAAA+kK,KAAAhsJ,EAAAlW,iBAAAkW,GACA,OAAAA,aAAAwR,GACA,OAAA3qB,EAAA00C,EAAAugH,mBAA+DvgH,EAAAugH,iBAAAj1J,GAE/DmZ,aAAAqR,GACA,OAAAxqB,EAAA00C,EAAA+mH,mBAA+D/mH,EAAA+mH,iBAAAz7J,GAE/DmZ,aAAAoR,GACA,OAAAvqB,GAAA,IAAAA,EAAAmB,OAAAuzC,EAAAkkH,cAAsFlkH,EAAAkkH,YAAA54J,EAAA,IAEtFmZ,GAEAmoI,YAAA,WACA,OAAAiU,KAEAzS,SAAA,WACA,OAAA2S,MAIAxsG,EAAAysG,GAAA/0J,WACAwkK,KAAA,SAAAhsJ,EAAAu7B,GACA,OAAAv7B,aAAAwR,GACA+pB,EAAAugH,iBAAA70J,KAAA+kK,KAAAhsJ,EAAAuiJ,wBAAAviJ,IAEAA,aAAAqR,GACAkqB,EAAA+mH,iBAAAr7J,KAAA+kK,KAAAhsJ,EAAAuiJ,wBAAAviJ,IAEAA,aAAAoR,GACAmqB,EAAAkkH,YAAAx4J,KAAA+kK,KAAAhsJ,EAAAuiJ,wBAAAviJ,IAEAA,GAEAmoI,YAAA,WACA,OAAAiU,KAEAzS,SAAA,WACA,OAAA4S,MAGAL,GAAAG,yBACAH,GAAAI,uBACAJ,GAAAK,+BC1GAzsG,EAAA0sG,GAAAh1J,WACAuhJ,YAAA,SAAA5+I,EAAA6+I,EAAAxvI,GACA,OAAAwvI,GACA,KAAAX,EAAAlvF,EACAlyD,KAAA8zJ,aAAA5wJ,GAAA5B,EAAAiR,EACA,MACA,KAAA6uI,EAAAjvF,EACAnyD,KAAA8zJ,aAAA5wJ,GAAA3B,EAAAgR,EACA,MACA,KAAA6uI,EAAAhvF,EACApyD,KAAA8zJ,aAAA5wJ,GAAA2yB,EAAAtjB,EACA,MACA,QACA,UAAA+uI,EAAA,2BAGAl+G,KAAA,WACA,OAAApjC,KAAA8zJ,aAAA/yJ,QAEAihJ,YAAA,SAAA9+I,EAAA6+I,GACA,OAAAA,GACA,KAAAX,EAAAlvF,EACA,OAAAlyD,KAAA8zJ,aAAA5wJ,GAAA5B,EACA,KAAA8/I,EAAAjvF,EACA,OAAAnyD,KAAA8zJ,aAAA5wJ,GAAA3B,EACA,KAAA6/I,EAAAhvF,EACA,OAAApyD,KAAA8zJ,aAAA5wJ,GAAA2yB,EAEA,OAAA8rH,EAAArhF,KAEA2hF,cAAA,WACA,OAAAzgI,UAAAzgB,OAAA,CACA,IAAAwC,EAAAie,UAAA,GACA,OAAAxhB,KAAA8zJ,aAAAvwJ,GACG,OAAAie,UAAAzgB,OAAA,CACH,IAAAmC,EAAAse,UAAA,GAAAqY,EAAArY,UAAA,GACAqY,EAAAv4B,EAAAtB,KAAA8zJ,aAAA5wJ,GAAA5B,EACAu4B,EAAAt4B,EAAAvB,KAAA8zJ,aAAA5wJ,GAAA3B,EACAs4B,EAAAhE,EAAA71B,KAAA8zJ,aAAA5wJ,GAAA2yB,IAGAqsH,kBAAA,SAAA3+I,GACA,WAAA8/I,EAAArjJ,KAAA8zJ,aAAAvwJ,KAEA4+I,aAAA,WACA,OAAAniJ,KAAAw1J,YAEApT,KAAA,SAAAl/I,GACA,OAAAlD,KAAA8zJ,aAAA5wJ,GAAA5B,GAEA+gJ,eAAA,SAAAC,GACA,QAAA/+I,EAAA,EAAiBA,EAAAvD,KAAA8zJ,aAAA/yJ,OAA8BwC,IAC/C++I,EAAAgF,gBAAAtnJ,KAAA8zJ,aAAAvwJ,IAEA,OAAA++I,GAEAC,KAAA,WAEA,IADA,IAAAkjB,EAAA,IAAA7+J,MAAA5G,KAAAojC,QAAA6S,KAAA,MACA1yC,EAAA,EAAiBA,EAAAvD,KAAA8zJ,aAAA/yJ,OAA8BwC,IAC/CkiK,EAAAliK,GAAAvD,KAAA8zJ,aAAAvwJ,GAAAg/I,OAEA,WAAAgT,GAAAkQ,EAAAzlK,KAAAw1J,aAEAh2J,SAAA,WACA,GAAAQ,KAAA8zJ,aAAA/yJ,OAAA,GACA,IAAA2kK,EAAA,IAAAhS,GAAA,GAAA1zJ,KAAA8zJ,aAAA/yJ,QACA2kK,EAAAp3E,OAAA,KACAo3E,EAAAp3E,OAAAtuF,KAAA8zJ,aAAA,IACA,QAAAvwJ,EAAA,EAAkBA,EAAAvD,KAAA8zJ,aAAA/yJ,OAA8BwC,IAChDmiK,EAAAp3E,OAAA,MACAo3E,EAAAp3E,OAAAtuF,KAAA8zJ,aAAAvwJ,IAGA,OADAmiK,EAAAp3E,OAAA,KACAo3E,EAAAlmK,WAEA,YAGAgjJ,KAAA,SAAAt/I,GACA,OAAAlD,KAAA8zJ,aAAA5wJ,GAAA3B,GAEAkhJ,kBAAA,WACA,OAAAziJ,KAAA8zJ,cAEA5S,YAAA,WACA,OAAAE,EAAAK,IAEAiB,SAAA,WACA,OAAA6S,MAGAA,GAAA5O,kBAAA,kBCrIA99F,EAAA6sG,GAAAn1J,WACAolK,YAAA,WACA,OAAAjQ,GAAAkQ,YAEAjjB,OAAA,WACA,OAAAnhI,UAAAzgB,OAAA,CACA,GAAAygB,UAAA,aAAA5a,MAAA,CAEA,WAAA2uJ,GADA/zI,UAAA,IAEI,GAAAw/H,EAAAx/H,UAAA,GAAA4/H,GAAA,CAEJ,WAAAmU,GADA/zI,UAAA,UAGG,OAAAA,UAAAzgB,OAAA,CACH,IAAAqiC,EAAA5hB,UAAA,GAAA8wG,EAAA9wG,UAAA,GAEA,OADA8wG,EAAA,IAAAA,EAAA,GACAA,EAAA,MAAAijC,GAAAnyH,GACA,IAAAmyH,GAAAnyH,EAAAkvF,KAGA4uB,YAAA,WACA,OAAAG,EAAAI,IAEAiB,SAAA,WACA,OAAAgT,MAGAA,GAAAkQ,SAAA,WACA,OAAAlQ,GAAAmQ,gBAEAnQ,GAAA/O,kBAAA,mBACA+O,GAAAmQ,eAAA,IAAAnQ,G9BnCA,IAAAh5E,GAAAr8E,OAAAq8E,eAGA,IAAAopF,GAsBA,SAAAC,EAAAC,GACA,SAAAl1B,EAAAzuF,GACA,IAAAriD,WAAA47G,cAAAk1B,EAAA,WAAAA,EAAAzuF,GACAriD,KAAAimK,SACAjmK,KAAAkmK,WACAlmK,KAAAmmK,QACAnmK,KAAAgmK,aAGA3jH,GAiBA,SAAAA,GAEAriD,KAAA6qD,IAAAxI,EAAAp1C,QAAAjN,KAAA6qD,IAAA7qD,MAEAqiD,EAAAp1C,QAAA,SAAAo1C,GAA+BriD,KAAA0M,IAAA21C,EAAA,GAAAA,EAAA,KAAuBriD,OArBtDD,KAAAC,KAAAqiD,GAIA2jH,GACAtpF,GAAAqpF,EAAA,QACA17J,IAAA+7J,KAQA,OAHAL,EAAAnqD,YAAAk1B,EACAA,EAAAvwI,UAAAwlK,EAEAj1B,EA7CA,EAEAqF,OAqDA,SAAA18H,GACAzZ,KAAAoK,IAAAqP,KACAzZ,KAAAimK,MAAAvyJ,OAAA8+I,GAAA,GACAxyJ,KAAAkmK,QAAAxyJ,OAAA8+I,GAAA,GAEAxyJ,KAAAmmK,KAAAl5J,QAAA,SAAA4Z,GAAoC2rI,GAAA3rI,EAAA,IAAAA,EAAA,QAGpC,OAAA2rI,IAAA,GA1DApoJ,IAyEA,SAAAmI,GACA,OATA,SAAA8zJ,EAAA5sJ,GACA,GAAAzZ,KAAAgmK,YAAAvsJ,IAAApZ,OAAAoZ,GAAA,UAAA05C,UAAA,6CAEA,GAAA15C,MAAA,IAAAA,EAAA,IAAA+4I,GAAA6T,EAAAtlK,OAAqDyxJ,OA3ErDnwG,EA2EqDgkH,EAAA7T,IA3ErD52H,EA2EqDniB,EA3EjC4oC,IAAAzmB,IAAAymB,MAAAzmB,cA4EpB42H,GAAA6T,EAAA5yJ,QAAAgG,GA5EA,IAAA4oC,EAAAzmB,EA6EA,OAAA42H,IAAA,GAIAzyJ,KAAAC,UAAAimK,MAAA1zJ,IAxEAlI,IA2DA,SAAAoP,GACA,OAAAzZ,KAAAoK,IAAAqP,GAAAzZ,KAAAkmK,QAAA1T,SAAAp1J,GA1DAsP,IAyEA,SAAA+M,EAAAlH,GAEA,OADAvS,KAAAoK,IAAAqP,GAAAzZ,KAAAkmK,QAAA1T,IAAAjgJ,EAAAvS,KAAAkmK,QAAAlmK,KAAAimK,MAAAnlK,KAAA2Y,GAAA,GAAAlH,EACAvS,MAzEAq3B,KAiFA,WACA,OAAAivI,GAAAtmK,KAAAmmK,KAAAnmK,KAAAimK,QAhFAx2J,OAmFA,WACA,OAAA62J,GAAAtmK,KAAAmmK,KAAAnmK,KAAAkmK,UAlFA5xB,QAqFA,WACA,OAAAgyB,GAAAtmK,KAAAmmK,KAAAnmK,KAAAimK,MAAAjmK,KAAAkmK,UApFAj5J,QA+GA,SAAAV,EAAAwZ,GAEA,IADA,IAAAizI,EAAAh5J,KAAAs0I,YACS,CACT,IAAA54G,EAAAs9H,EAAAt5I,OACA,GAAAgc,EAAA/b,KAAA,MACApT,EAAAxM,KAAAgmB,EAAA2V,EAAAnpB,MAAA,GAAAmpB,EAAAnpB,MAAA,GAAAvS,QAlHAutC,MAoEA,YACAvtC,KAAAimK,OAAA,GAAAllK,OACAf,KAAAkmK,QAAAnlK,OAAA,KAeA,SAAAulK,GAAAC,EAAAx5J,EAAAy5J,GACA,IAAA3/I,GAAA,GACAlH,GAAA,EAEA,OADA4mJ,EAAAzlK,KAAA+lB,IAEAnH,KAAA,WACA,IAAA0iC,EACA2B,EAAAl9B,EAAA,GAQA,OAPAlH,GAAAokC,EAAAh3C,EAAAhM,QACAqhD,EAAAokH,GAAAz5J,EAAAg3C,GAAAyiH,EAAAziH,IAAAh3C,EAAAg3C,GACAl9B,EAAA,OAEAlH,GAAA,EACA4mJ,EAAA7yJ,OAAA6yJ,EAAA9yJ,QAAAoT,GAAA,KAEclH,OAAApN,MAAA6vC,KAKd,SAAAgkH,KACA,OAAApmK,KAAAkmK,QAAAnlK,OoC9HA,IAAA0lK,GAAA,oBAAAC,SAAAnmK,UAAAkP,OAAAi3J,IAAAZ,GASA,SAAAa,KAKA3mK,KAAAm/E,KAAA,IAAAsnF,GCZA,SAAAG,KAGA,GAFA5mK,KAAA6mK,WAAA,KACA7mK,KAAA8mK,OAAA,KACA,IAAAtlJ,UAAAzgB,OACAf,KAAA6mK,WAAAD,GAAAG,cACE,OAAAvlJ,UAAAzgB,OACF,GAAAygB,UAAA,aAAAhF,GAAA,CACA,IAAAwqJ,EAAAxlJ,UAAA,GACAxhB,KAAA6mK,WAAAG,EACAA,IAAAJ,GAAAK,OACAjnK,KAAAk5C,SAAA,QAEG,oBAAA13B,UAAA,IACH,IAAAuvB,EAAAvvB,UAAA,GACAxhB,KAAA6mK,WAAAD,GAAAK,MACAjnK,KAAAk5C,SAAAnI,QACG,GAAAvvB,UAAA,aAAAolJ,GAAA,CACH,IAAAniH,EAAAjjC,UAAA,GACAxhB,KAAA6mK,WAAApiH,EAAAoiH,WACA7mK,KAAA8mK,OAAAriH,EAAAqiH,QAkFA,SAAAtqJ,KACAxc,KAAAknK,MAAA,KACA,IAAAh8J,EAAAsW,UAAA,GACAxhB,KAAAknK,MAAAh8J,EACAsR,GAAA2qJ,cAAAlxB,IAAA/qI,EAAAlL,MC5FA,SAAA80J,KAIA,GAHA90J,KAAAonK,gBAAA,KACApnK,KAAAqnK,2BAAA,KACArnK,KAAAqkJ,MAAA,KACA,IAAA7iI,UAAAzgB,OACA+zJ,GAAA/0J,KAAAC,KAAA,IAAA4mK,GAAA,QACE,OAAAplJ,UAAAzgB,QACF,GAAAigJ,EAAAx/H,UAAA,GAAA6/H,GAAA,CACA,IAAAimB,EAAA9lJ,UAAA,GACAszI,GAAA/0J,KAAAC,KAAA,IAAA4mK,GAAA,EAAAU,QACG,GAAA9lJ,UAAA,aAAAolJ,GAAA,CACH,IAAAW,EAAA/lJ,UAAA,GACAszI,GAAA/0J,KAAAC,KAAAunK,EAAA,EAAAzS,GAAA0S,6CAEE,OAAAhmJ,UAAAzgB,OAAA,CACF,IAAAwmK,EAAA/lJ,UAAA,GAAAsoI,EAAAtoI,UAAA,GACAszI,GAAA/0J,KAAAC,KAAAunK,EAAAzd,EAAAgL,GAAA0S,4CACE,OAAAhmJ,UAAAzgB,OAAA,CACF,IAAAwmK,EAAA/lJ,UAAA,GAAAsoI,EAAAtoI,UAAA,GAAA8lJ,EAAA9lJ,UAAA,GACAxhB,KAAAonK,gBAAAG,EACAvnK,KAAAqnK,2BAAAC,EACAtnK,KAAAqkJ,MAAAyF,GFpBA6c,GAAApmK,UAAA,IAAAqsJ,EAKA+Z,GAAApmK,UAAA8J,IAAA,SAAAoP,GACA,OAAAzZ,KAAAm/E,KAAA90E,IAAAoP,IAAA,MAMAktJ,GAAApmK,UAAA01I,IAAA,SAAAx8H,EAAAlH,GAEA,OADAvS,KAAAm/E,KAAAzyE,IAAA+M,EAAAlH,GACAA,GAMAo0J,GAAApmK,UAAAkP,OAAA,WACA,MAAAy8I,EAAA,IAAA/G,EACA6T,EAAAh5J,KAAAm/E,KAAA1vE,SACA,IAAAwxI,EAAA+X,EAAAt5I,OACA,MAAAuhI,EAAAthI,MACAusI,EAAArhG,IAAAo2F,EAAA1uI,OACA0uI,EAAA+X,EAAAt5I,OAEA,OAAAwsI,GAMAya,GAAApmK,UAAAswJ,SAAA,WACA,MAAAI,EAAA,IAAAlE,EAEA,OADA/sJ,KAAAm/E,KAAAm1D,UAAArnI,QAAA2nI,GAAAqc,EAAApmG,IAAA+pF,IACAqc,GAMA0V,GAAApmK,UAAA6iC,KAAA,WACA,OAAApjC,KAAAm/E,KAAA/7C,QCnCAylB,EAAA+9G,GAAArmK,WACAkyI,OAAA,SAAAmT,GACA,KAAAA,aAAAghB,IACA,SAEA,IAAAa,EAAA7hB,EACA,OAAA5lJ,KAAA6mK,aAAAY,EAAAZ,YAAA7mK,KAAA8mK,SAAAW,EAAAX,QAEA/gB,UAAA,SAAA9E,GACA,IAAA2E,EAAA3E,EACAse,EAAAv/J,KAAA0nK,8BACAC,EAAA/hB,EAAA8hB,8BACA,WAAAzT,GAAAsL,GAAAxZ,UAAA,IAAAkO,GAAA0T,KAEA5vH,SAAA,WACA,OAAA/3C,KAAA8mK,QAEAc,WAAA,WACA,OAAA5nK,KAAA6mK,aAAAD,GAAAG,UAAA/mK,KAAA6mK,aAAAD,GAAAiB,iBAEAxjK,QAAA,WACA,OAAArE,KAAA6mK,YAEArnK,SAAA,WACA,IAAAi2G,EAAA,UAQA,OAPAz1G,KAAA6mK,aAAAD,GAAAG,SACAtxD,EAAA,WACGz1G,KAAA6mK,aAAAD,GAAAiB,gBACHpyD,EAAA,kBACGz1G,KAAA6mK,aAAAD,GAAAK,QACHxxD,EAAA,gBAAAz1G,KAAA+3C,WAAA,KAEA09D,GAEAqyD,YAAA,WACA,oBAAAtmJ,UAAA,IACA,IAAA/L,EAAA+L,UAAA,GACA,OAAAmgI,EAAAlkJ,MAAAgY,KACAzV,KAAA6mK,aAAAD,GAAAiB,gBACApyJ,EAGAzV,KAAA6mK,aAAAD,GAAAK,MACAplK,KAAAmhC,MAAAvtB,EAAAzV,KAAA8mK,QAAA9mK,KAAA8mK,OAEArxJ,OACG,GAAA+L,UAAA,aAAA6hI,EAAA,CACH,IAAAxpH,EAAArY,UAAA,GACA,GAAAxhB,KAAA6mK,aAAAD,GAAAG,SAAA,YACAltI,EAAAv4B,EAAAtB,KAAA8nK,YAAAjuI,EAAAv4B,GACAu4B,EAAAt4B,EAAAvB,KAAA8nK,YAAAjuI,EAAAt4B,KAGAmmK,4BAAA,WACA,IAAAK,EAAA,GAQA,OAPA/nK,KAAA6mK,aAAAD,GAAAG,SACAgB,EAAA,GACG/nK,KAAA6mK,aAAAD,GAAAiB,gBACHE,EAAA,EACG/nK,KAAA6mK,aAAAD,GAAAK,QACHc,EAAA,EAAAlmK,KAAAwkJ,MAAAxkJ,KAAA4gC,KAAA5gC,KAAAqmD,IAAAloD,KAAA+3C,YAAAl2C,KAAAqmD,IAAA,OAEA6/G,GAEA7uH,SAAA,SAAAnI,GACA/wC,KAAA8mK,OAAAjlK,KAAAynD,IAAAvY,IAEAmwG,YAAA,WACA,OAAAO,EAAAD,IAEAkB,SAAA,WACA,OAAAkkB,MAGAA,GAAAoB,YAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAliB,UAAAmiB,IAAA,EAAAD,EACAC,GAQAr/G,EAAArsC,GAAAjc,WACAolK,YAAA,WACA,OAAAnpJ,GAAA2qJ,cAAA98J,IAAArK,KAAAknK,QAEA1nK,SAAA,WACA,OAAAQ,KAAAknK,OAEAhmB,YAAA,WACA,OAAAO,IAEAiB,SAAA,WACA,OAAAlmI,MAGAA,GAAAmqI,kBAAA,kBACAnqI,GAAA2qJ,cAAA,IAAAR,GACAC,GAAApqJ,QACAoqJ,GAAAjgB,iBAAA,mBACAigB,GAAAK,MAAA,IAAAzqJ,GAAA,SACAoqJ,GAAAG,SAAA,IAAAvqJ,GAAA,YACAoqJ,GAAAiB,gBAAA,IAAArrJ,GAAA,mBACAoqJ,GAAAuB,oBAAA,iBC3FAt/G,EAAAisG,GAAAv0J,WACA+oJ,WAAA,SAAAuG,GACA,OAAAA,EAAA18D,SACAnzF,KAAAw4J,cAEA3I,EAAA7I,YAAA6I,EAAA/I,WAAA+I,EAAA5I,YAAA4I,EAAA9I,UACA/mJ,KAAAw4J,YAAA,IAAAnV,EAAAwM,EAAA7I,UAAA6I,EAAA5I,YAEA4I,EAAA7I,YAAA6I,EAAA/I,WAAA+I,EAAA5I,YAAA4I,EAAA9I,UACA/mJ,KAAAq7J,kBAAA,IAAAhY,EAAAwM,EAAA7I,UAAA6I,EAAA5I,WAAA,IAAA5D,EAAAwM,EAAA/I,UAAA+I,EAAA9I,aAEA/mJ,KAAAulK,cAAAvlK,KAAA60J,kBAAA,IAAAxR,EAAAwM,EAAA7I,UAAA6I,EAAA5I,WAAA,IAAA5D,EAAAwM,EAAA7I,UAAA6I,EAAA9I,WAAA,IAAA1D,EAAAwM,EAAA/I,UAAA+I,EAAA9I,WAAA,IAAA1D,EAAAwM,EAAA/I,UAAA+I,EAAA5I,WAAA,IAAA5D,EAAAwM,EAAA7I,UAAA6I,EAAA5I,aAAA,OAEAoU,iBAAA,WACA,OAAA75I,UAAAzgB,OACA,OAAAf,KAAAq7J,iBAAAr7J,KAAA+0J,+BAAApS,YACG,OAAAnhI,UAAAzgB,OAAA,CACH,GAAAygB,UAAA,aAAA5a,MAAA,CACA,IAAAhH,EAAA4hB,UAAA,GACA,OAAAxhB,KAAAq7J,iBAAA,OAAAz7J,EAAAI,KAAA+0J,+BAAApS,OAAA/iJ,GAAA,MACI,GAAAohJ,EAAAx/H,UAAA,GAAA4/H,GAAA,CAEJ,WAAAh3H,GADA5I,UAAA,GACAxhB,SAIAk4J,sBAAA,WACA,OAAA12I,UAAAzgB,OACA,WAAApB,GAAA,KAAAK,MACG,OAAAwhB,UAAAzgB,OAAA,CAEH,WAAApB,GADA6hB,UAAA,GACAxhB,QAGAooK,cAAA,SAAAC,GAIA,IAHA,IAAAC,EAAA,KACAC,GAAA,EACAC,GAAA,EACAjlK,EAAA8kK,EAAA5oJ,WAAmClc,EAAA0mJ,WAAa,CAChD,IAAAltG,EAAAx5C,EAAAmc,OACA+oJ,EAAA1rH,EAAA2lG,WACA,OAAA4lB,IACAA,EAAAG,GAEAA,IAAAH,IACAC,GAAA,GAEAxrH,aAAA4zB,KAAA63F,GAAA,GAEA,UAAAF,EACA,OAAAtoK,KAAAo3J,2BAEA,GAAAmR,GAAAC,EACA,OAAAxoK,KAAAo3J,yBAAAtC,GAAA4T,gBAAAL,IAEA,IAAAM,EAAAN,EAAA5oJ,WAAAC,OAEA,GADA2oJ,EAAAjlI,OAAA,EACA,CACA,GAAAulI,aAAAt+I,GACA,OAAArqB,KAAA0kK,mBAAA5P,GAAA8T,eAAAP,IACI,GAAAM,aAAAv+I,GACJ,OAAApqB,KAAAk4J,sBAAApD,GAAA+T,kBAAAR,IACI,GAAAM,aAAAx+I,GACJ,OAAAnqB,KAAA44J,iBAAA9D,GAAAgU,aAAAT,IAEAjlB,EAAAkC,qBAAA,oBAAAqjB,EAAAjmB,WAAA0iB,WAEA,OAAAuD,GAEAlQ,2BAAA,SAAA74J,GACA,OAAAI,KAAA44J,iBAAA,OAAAh5J,EAAAI,KAAA+0J,+BAAApS,OAAA/iJ,GAAA,OAEA44J,YAAA,WACA,OAAAh3I,UAAAzgB,OACA,OAAAf,KAAAw4J,YAAAx4J,KAAA+0J,+BAAApS,YACG,OAAAnhI,UAAAzgB,OAAA,CACH,GAAAygB,UAAA,aAAA6hI,EAAA,CACA,IAAA7hH,EAAAhgB,UAAA,GACA,OAAAxhB,KAAAw4J,YAAA,OAAAh3H,EAAAxhC,KAAA+0J,+BAAApS,QAAAnhH,IAAA,MACI,GAAAw/G,EAAAx/H,UAAA,GAAA4/H,GAAA,CAEJ,WAAAj3H,GADA3I,UAAA,GACAxhB,SAIA+0J,6BAAA,WACA,OAAA/0J,KAAAqnK,4BAEA9B,cAAA,WACA,OAAA/jJ,UAAAzgB,OACA,OAAAf,KAAAulK,cAAA,WACG,OAAA/jJ,UAAAzgB,OAAA,CACH,GAAAigJ,EAAAx/H,UAAA,GAAA4/H,GAAA,CACA,IAAAuT,EAAAnzI,UAAA,GACA,OAAAxhB,KAAAulK,cAAAvlK,KAAA60J,iBAAAF,IACI,GAAAnzI,UAAA,aAAA5a,MAAA,CACJ,IAAA+tJ,EAAAnzI,UAAA,GACA,OAAAxhB,KAAAulK,cAAAvlK,KAAA60J,iBAAAF,IACI,GAAAnzI,UAAA,aAAA+I,GAAA,CACJ,IAAAoqI,EAAAnzI,UAAA,GACA,OAAAxhB,KAAAulK,cAAA5Q,EAAA,YAEG,OAAAnzI,UAAAzgB,OAAA,CAEH,WAAAspB,GADA7I,UAAA,GAAAA,UAAA,GACAxhB,QAGAukJ,QAAA,WACA,OAAAvkJ,KAAAqkJ,OAEA+S,yBAAA,WACA,OAAA51I,UAAAzgB,OACA,WAAA4vE,GAAA,KAAA3wE,MACG,OAAAwhB,UAAAzgB,OAAA,CAEH,WAAA4vE,GADAnvD,UAAA,GACAxhB,QAGA+oK,eAAA,SAAAptI,GAEA,OADA,IAAAs5H,GAAAj1J,MACA+kK,KAAAppI,GACAopI,KAAA,WACA,OAAAvjJ,UAAAzgB,QAAAygB,UAAA,aAAA0iI,GAAAlD,EAAAx/H,UAAA,GAAA4/H,GAAA,CACA,IAAAqU,EAAAj0I,UAAA,GAAAA,UAAA,GACA,OAAAxhB,KAAAqnK,2BAAA1kB,OAAA8S,QAKA9L,kBAAA,WACA,OAAA3pJ,KAAAonK,iBAEAvS,iBAAA,WACA,OAAArzI,UAAAzgB,OACA,OAAAf,KAAA60J,iBAAA70J,KAAA+0J,+BAAApS,YACG,OAAAnhI,UAAAzgB,OAAA,CACH,GAAAygB,UAAA,aAAA5a,MAAA,CACA,IAAAhH,EAAA4hB,UAAA,GACA,OAAAxhB,KAAA60J,iBAAA,OAAAj1J,EAAAI,KAAA+0J,+BAAApS,OAAA/iJ,GAAA,MACI,GAAAohJ,EAAAx/H,UAAA,GAAA4/H,GAAA,CAEJ,WAAA72H,GADA/I,UAAA,GACAxhB,SAIA0kK,mBAAA,WACA,OAAAljJ,UAAAzgB,OACA,WAAAiF,GAAA,KAAAhG,MACG,OAAAwhB,UAAAzgB,OAAA,CAEH,WAAAiF,GADAwb,UAAA,GACAxhB,QAGA44J,iBAAA,WACA,OAAAp3I,UAAAzgB,OACA,WAAAkE,GAAA,KAAAjF,MACG,OAAAwhB,UAAAzgB,OAAA,CACH,GAAAygB,UAAA,aAAA5a,MAAA,CAEA,WAAA3B,GADAuc,UAAA,GACAxhB,MACI,GAAAghJ,EAAAx/H,UAAA,GAAA4/H,GAAA,CACJ,IAAAxhJ,EAAA4hB,UAAA,GACA,UAAA5hB,EACA,OAAAI,KAAA44J,iBAAA,IAAAhyJ,MAAA,GAAAqvC,KAAA,OAGA,IADA,IAAArwC,EAAA,IAAAgB,MAAAhH,EAAAwjC,QAAA6S,KAAA,MACA1yC,EAAA,EAAmBA,EAAA3D,EAAAwjC,OAAwB7/B,IAAA,CAC3C,IAAAylK,EAAAhpK,KAAA+0J,+BAAApS,OAAA,EAAA/iJ,EAAAuiJ,gBACAwR,GAAApR,KAAA3iJ,EAAA2D,EAAAylK,EAAA,KACApjK,EAAArC,GAAAvD,KAAAw4J,YAAAwQ,GAEA,OAAAhpK,KAAA44J,iBAAAhzJ,MAIAs7I,YAAA,WACA,OAAAO,IAEAiB,SAAA,WACA,OAAAoS,MAGAA,GAAAmU,oBAAA,SAAAC,GACA,IAAAC,EAAA,IAAAviK,MAAAsiK,EAAA9lI,QAAA6S,KAAA,MACA,OAAAizH,EAAApd,QAAAqd,IAEArU,GAAA4T,gBAAA,SAAAz3F,GACA,UAAAA,EAAA,YACA,IAAAm4F,EAAA,IAAAxiK,MAAAqqE,EAAA7tC,QAAA6S,KAAA,MACA,OAAAg7B,EAAA66E,QAAAsd,IAEAtU,GAAA0S,oCAAA,WACA,OAAA9R,GAAAkQ,YAEA9Q,GAAAuU,uBAAA,SAAAC,GACA,IAAAC,EAAA,IAAA3iK,MAAA0iK,EAAAlmI,QAAA6S,KAAA,MACA,OAAAqzH,EAAAxd,QAAAyd,IAEAzU,GAAA+T,kBAAA,SAAAvlK,GACA,IAAAkmK,EAAA,IAAA5iK,MAAAtD,EAAA8/B,QAAA6S,KAAA,MACA,OAAA3yC,EAAAwoJ,QAAA0d,IAEA1U,GAAA2U,kBAAA,SAAAC,GACA,IAAAC,EAAA,IAAA/iK,MAAA8iK,EAAAtmI,QAAA6S,KAAA,MACA,OAAAyzH,EAAA5d,QAAA6d,IAEA7U,GAAA8U,kBAAA,SAAAx0C,GACA,IAAAy0C,EAAA,IAAAjjK,MAAAwuH,EAAAhyF,QAAA6S,KAAA,MACA,OAAAm/E,EAAA02B,QAAA+d,IAEA/U,GAAAgU,aAAA,SAAAljK,GACA,IAAAkkK,EAAA,IAAAljK,MAAAhB,EAAAw9B,QAAA6S,KAAA,MACA,OAAArwC,EAAAkmJ,QAAAge,IAEAhV,GAAA8T,eAAA,SAAA//J,GACA,IAAAkhK,EAAA,IAAAnjK,MAAAiC,EAAAu6B,QAAA6S,KAAA,MACA,OAAAptC,EAAAijJ,QAAAie,IAEAjV,GAAAkV,6BAAA,SAAAnwI,EAAAowI,GAEA,OADAA,EAAAtgB,oBAAAme,YAAAjuI,GACAowI,EAAA1hB,aAAAiQ,YAAA3+H,IAEAi7H,GAAAnO,kBAAA,mBCtQA,MAAAujB,IAAA,8EAeA,SAAAC,GAAAC,GACApqK,KAAAoqK,mBAAA,IAAAtV,GAGAjsG,EAAAshH,GAAA5pK,WASAyxJ,KAAA7iG,GACA,IAAAltB,EAOA,MAAA30B,GALA20B,EADA,iBAAAktB,EACAuoE,KAAAl6H,MAAA2xD,GAEAA,GAGA7hD,KAEA,IAAA9P,GAAA8P,GACA,UAAAuuB,MAAA,yBAAAoG,EAAA30B,MAGA,WAAA48J,GAAAz2J,QAAAnG,GACA9P,GAAA8P,GAAAw6C,MAAA9nD,MAAAiiC,EAAAriC,cACK,uBAAA0N,EACL9P,GAAA8P,GAAAw6C,MAAA9nD,MAAAiiC,EAAAgvC,aAIAzzE,GAAA8P,GAAAw6C,MAAA9nD,MAAAiiC,KAWA+vH,MAAAj5I,GACA,MAAAzL,EAAAyL,EAAA++I,kBAEA,IAAA5H,GAAA5iJ,GACA,UAAAuuB,MAAA,6BAGA,OAAAq0H,GAAA5iJ,GAAAw6C,MAAA9nD,MAAA+Y,OAIA,MAAAvb,IASAkpC,QAAA,SAAAzE,GACA,MAAAxpB,KAGA,QAAAgB,KAAAwoB,EACAxpB,EAAAgB,GAAAwoB,EAAAxoB,GAIA,GAAAwoB,EAAAlpB,SAAA,CACA,MAAAzL,EAAA20B,EAAAlpB,SAAAzL,KACA,IAAA9P,GAAA8P,GACA,UAAAuuB,MAAA,yBAAAoG,EAAA30B,MAEAmL,EAAAM,SAAA/Y,KAAA0sB,KAAAuV,EAAAlpB,UAQA,OAJAkpB,EAAA0B,OACAlrB,EAAAkrB,KAAAnmC,GAAAmmC,KAAAmkB,MAAA9nD,MAAAiiC,EAAA0B,QAGAlrB,GAWA4xJ,kBAAA,SAAApoI,GACA,MAAAqoI,KAEA,GAAAroI,EAAAzqB,SAAA,CACA8yJ,EAAA9yJ,YAEA,QAAAjU,EAAA,EAAqBA,EAAA0+B,EAAAzqB,SAAAzW,SAAyBwC,EAC9C+mK,EAAA9yJ,SAAA1W,KAAAd,KAAA0sB,KAAAuV,EAAAzqB,SAAAjU,KAQA,OAJA0+B,EAAA0B,OACA2mI,EAAA3mI,KAAA3jC,KAAAxC,MAAAmmC,KAAAmkB,MAAA9nD,MAAAiiC,EAAA0B,QAGA2mI,GAWA1qK,YAAA,SAAAmN,GACA,MAAAnN,KACA,QAAA2D,EAAA,EAAmBA,EAAAwJ,EAAAhM,SAAkBwC,EAAA,CACrC,MAAAgnK,EAAAx9J,EAAAxJ,GACA3D,EAAAkB,KAAA,IAAAuiJ,EAAAknB,EAAA,GAAAA,EAAA,KAEA,OAAA3qK,GAWA+jC,KAAA,SAAA52B,GACA,OAAA/M,KAAAoqK,gBAAAvV,kBACA,IAAAxR,EAAAt2I,EAAA,GAAAA,EAAA,IACA,IAAAs2I,EAAAt2I,EAAA,GAAAA,EAAA,IACA,IAAAs2I,EAAAt2I,EAAA,GAAAA,EAAA,IACA,IAAAs2I,EAAAt2I,EAAA,GAAAA,EAAA,IACA,IAAAs2I,EAAAt2I,EAAA,GAAAA,EAAA,OAYAod,MAAA,SAAApd,GACA,MAAAy0B,EAAA,IAAA6hH,EAAAt2I,EAAA,GAAAA,EAAA,IACA,OAAA/M,KAAAoqK,gBAAA5R,YAAAh3H,IAWAv8B,WAAA,SAAA8H,GACA,MAAAnH,KACA,QAAArC,EAAA,EAAmBA,EAAAwJ,EAAAhM,SAAkBwC,EACrCqC,EAAA9E,KAAAtD,GAAA2sB,MAAA29B,MAAA9nD,MAAA+M,EAAAxJ,MAEA,OAAAvD,KAAAoqK,gBAAAxR,iBAAAhzJ,IAWAwkB,WAAA,SAAArd,GACA,MAAAnN,EAAApC,GAAAoC,YAAAkoD,MAAA9nD,MAAA+M,IACA,OAAA/M,KAAAoqK,gBAAA/O,iBAAAz7J,IAWAD,gBAAA,SAAAoN,GACA,MAAAzJ,KACA,QAAAC,EAAA,EAAmBA,EAAAwJ,EAAAhM,SAAkBwC,EACrCD,EAAAxC,KAAAtD,GAAA4sB,WAAA09B,MAAA9nD,MAAA+M,EAAAxJ,MAEA,OAAAvD,KAAAoqK,gBAAAlS,sBAAA50J,IAWA+mB,QAAA,SAAAtd,GACA,MAAAq2J,EAAA5lK,GAAAoC,YAAAkoD,MAAA9nD,MAAA+M,EAAA,KACA4nJ,EAAA30J,KAAAoqK,gBAAAvV,iBAAAuO,GACAxO,KACA,QAAArxJ,EAAA,EAAmBA,EAAAwJ,EAAAhM,SAAkBwC,EAAA,CACrC,IAAAiiK,EAAAz4J,EAAAxJ,GACA3D,EAAApC,GAAAoC,YAAAkoD,MAAA9nD,MAAAwlK,IACArsI,EAAAn5B,KAAAoqK,gBAAAvV,iBAAAj1J,GACAg1J,EAAA9zJ,KAAAq4B,GAEA,OAAAn5B,KAAAoqK,gBAAA7E,cAAA5Q,EAAAC,IAWA5uJ,aAAA,SAAA+G,GACA,MAAAlE,KACA,QAAAtF,EAAA,EAAmBA,EAAAwJ,EAAAhM,SAAkBwC,EAAA,CACrC,MAAAiD,EAAAuG,EAAAxJ,GACAsF,EAAA/H,KAAAtD,GAAA6sB,QAAAy9B,MAAA9nD,MAAAwG,KAEA,OAAAxG,KAAAoqK,gBAAA1F,mBAAA77J,IAWA8nE,mBAAA,SAAA5jE,GACA,MAAAkkE,KACA,QAAA1tE,EAAA,EAAmBA,EAAAwJ,EAAAhM,SAAkBwC,EAAA,CACrC,MAAAwV,EAAAhM,EAAAxJ,GACA0tE,EAAAnwE,KAAAd,KAAA0sB,KAAA3T,IAEA,OAAA/Y,KAAAoqK,gBAAAhT,yBAAAnmF,KAIAi/E,IASA1uH,WAAA,SAAAA,GACA,OAAAA,EAAAlgC,EAAAkgC,EAAAjgC,IAWA4oB,MAAA,SAAAhlB,GAEA,OACAmI,KAAA,QACA1N,YAHAswJ,GAAA1uH,WAAAsmB,MAAA9nD,MAAAmF,EAAA88I,oBAeAh9I,WAAA,SAAAulK,GACA,MAAAz9J,KACA,QAAAxJ,EAAA,EAAmBA,EAAAinK,EAAAzX,YAAAhyJ,SAAmCwC,EAAA,CACtD,MAAA4B,EAAAqlK,EAAAzX,YAAAxvJ,GACAknK,EAAAva,GAAA/lI,MAAA29B,MAAA9nD,MAAAmF,IACA4H,EAAAjM,KAAA2pK,EAAA7qK,aAEA,OACA0N,KAAA,aACA1N,YAAAmN,IAYAqd,WAAA,SAAAsgJ,GACA,MAAA39J,KACAnN,EAAA8qK,EAAA7nK,iBACA,QAAAU,EAAA,EAAmBA,EAAA3D,EAAAmB,SAAwBwC,EAAA,CAC3C,MAAAi+B,EAAA5hC,EAAA2D,GACAwJ,EAAAjM,KAAAovJ,GAAA1uH,WAAAsmB,MAAA9nD,MAAAwhC,KAEA,OACAl0B,KAAA,aACA1N,YAAAmN,IAYApN,gBAAA,SAAAgrK,GACA,MAAA59J,KACA,QAAAxJ,EAAA,EAAmBA,EAAAonK,EAAA5X,YAAAhyJ,SAAwCwC,EAAA,CAC3D,MAAAmnK,EAAAC,EAAA5X,YAAAxvJ,GACAknK,EAAAva,GAAA9lI,WAAA09B,MAAA9nD,MAAA0qK,IACA39J,EAAAjM,KAAA2pK,EAAA7qK,aAEA,OACA0N,KAAA,kBACA1N,YAAAmN,IAYAsd,QAAA,SAAA7jB,GACA,MAAAuG,KACA69J,EAAA1a,GAAA9lI,WAAA09B,MAAA9nD,MAAAwG,EAAAiuJ,SACA1nJ,EAAAjM,KAAA8pK,EAAAhrK,aACA,QAAA2D,EAAA,EAAmBA,EAAAiD,EAAAkuJ,OAAA3zJ,SAA2BwC,EAAA,CAC9C,MAAAiiK,EAAAh/J,EAAAkuJ,OAAAnxJ,GACAsnK,EAAA3a,GAAA9lI,WAAA09B,MAAA9nD,MAAAwlK,IACAz4J,EAAAjM,KAAA+pK,EAAAjrK,aAEA,OACA0N,KAAA,UACA1N,YAAAmN,IAYA/G,aAAA,SAAAs6F,GACA,MAAAvzF,KACA,QAAAxJ,EAAA,EAAmBA,EAAA+8F,EAAAyyD,YAAAhyJ,SAAqCwC,EAAA,CACxD,MAAAiD,EAAA85F,EAAAyyD,YAAAxvJ,GACAknK,EAAAva,GAAA7lI,QAAAy9B,MAAA9nD,MAAAwG,IACAuG,EAAAjM,KAAA2pK,EAAA7qK,aAEA,OACA0N,KAAA,eACA1N,YAAAmN,IAYA4jE,mBAAA,SAAAxhE,GACA,MAAApC,KACA,QAAAxJ,EAAA,EAAmBA,EAAA4L,EAAA4jJ,YAAAhyJ,SAAmCwC,EAAA,CACtD,MAAAwV,EAAA5J,EAAA4jJ,YAAAxvJ,GACA+J,EAAAyL,EAAA++I,kBACA/qJ,EAAAjM,KAAAovJ,GAAA5iJ,GAAAw6C,MAAA9nD,MAAA+Y,KAEA,OACAzL,KAAA,qBACA2jE,WAAAlkE,KC/ZA,SAAA+9J,GAAAV,GACApqK,KAAAoqK,mBAAA,IAAAtV,GACA90J,KAAAunK,eAAAvnK,KAAAoqK,gBAAAzgB,oBACA3pJ,KAAAqsB,OAAA,IAAA89I,GAAAnqK,KAAAoqK,iBCJA,SAAAW,KACA/qK,KAAAqsB,OAAA,IAAA89I,GAAAnqK,KAAAoqK,iBDMAvhH,EAAAiiH,GAAAvqK,WAUAyxJ,KAAAyY,GACA,IAAA1xJ,EAAA/Y,KAAAqsB,OAAAK,KAAA+9I,GAMA,OAJAzqK,KAAAunK,eAAAljK,YAAAuiK,GAAAK,OACAjnK,KAAAgrK,gBAAAjyJ,GAGAA,GAIAi5I,gBAAAj5I,GACA,IAAAxV,EAAAmD,EAEA,GAAAqS,EAAAyoB,WACAxhC,KAAAunK,eAAAO,YAAA/uJ,EAAAyoB,iBACK,GAAAzoB,EAAAnT,OACL,IAAArC,EAAA,EAAAmD,EAAAqS,EAAAnT,OAAA7E,OAA+CwC,EAAAmD,EAASnD,IACxDvD,KAAAunK,eAAAO,YAAA/uJ,EAAAnT,OAAArC,SAEK,GAAAwV,EAAAk4D,WACL,IAAA1tE,EAAA,EAAAmD,EAAAqS,EAAAk4D,WAAAlwE,OAAmDwC,EAAAmD,EAASnD,IAC5DvD,KAAAgrK,gBAAAjyJ,EAAAk4D,WAAA1tE,OCnCAslD,EAAAkiH,GAAAxqK,WASAyxJ,MAAAj5I,GACA,OAAA/Y,KAAAqsB,OAAA0xH,MAAAhlI,MC/BA,MAAAkyJ,IACAC,QAAA,iCACAC,aAAA,wBACA/Q,OAAA,MACAgR,WAAA,cACAC,iBAAA,wBACAC,WAAA,uBAgBA,SAAAC,GAAAnB,GACApqK,KAAAoqK,mBAAA,IAAAtV,GAGAjsG,EAAA0iH,GAAAhrK,WAUAyxJ,KAAAprG,GACA,IAAA7tC,EAAAzL,EAAAm+H,EACA7kF,IAAAn7B,QAAA,eACA,IAAA+/I,EAAAP,GAAAC,QAAA/tK,KAAAypD,GAaA,IAZA,IAAAA,EAAA7U,OAAA,YACAy5H,EAAAP,GAAAE,aAAAhuK,KAAAypD,IACA,QAAAxpD,GAEAouK,IACAl+J,EAAAk+J,EAAA,GAAA5pH,cACA6pF,EAAA+/B,EAAA,GACAC,GAAAn+J,KACAyL,EAAA0yJ,GAAAn+J,GAAAw6C,MAAA9nD,MAAAyrI,WAIAruI,IAAA2b,EAAA,UAAA8iB,MAAA,uBAAA+qB,GAEA,OAAA7tC,GAUAi5I,MAAAj5I,GACA,OAAA/Y,KAAA0rK,gBAAA3yJ,IAUAi5I,gBAAAj5I,GACA,IAAAzL,EAAAyL,EAAA++I,kBAAAl2G,cACA,IAAA+pH,GAAAr+J,GACA,YAEA,IAAAs+J,EAAAt+J,EAAAsnD,cAOA,OALA77C,EAAA8T,UACA++I,EAAA,SAEAA,EAAA,IAAAD,GAAAr+J,GAAAw6C,MAAA9nD,MAAA+Y,IAAA,OAWA,MAAA4yJ,IACAnqI,cACAA,EAAAlgC,EAAA,IAAAkgC,EAAAjgC,EAUAywJ,MAAA7sJ,GACA,OAAAwmK,GAAAnqI,WAAAzhC,KAAAC,KAAAmF,EAAA2uJ,0BAAA,KAWA9B,WAAAwY,GACA,IAAAz9J,KACA,QAAAxJ,EAAA,EAAAmD,EAAA8jK,EAAAzX,YAAAhyJ,OAAwDwC,EAAAmD,IAASnD,EACjEwJ,EAAAjM,KAAA,IAAA6qK,GAAAxmK,MAAA2iD,MAAA9nD,MAAAwqK,EAAAzX,YAAAxvJ,KAAA,KAEA,OAAAwJ,EAAA0E,KAAA,MASAugJ,WAAA0Y,GACA,IAAA39J,KACA,QAAAxJ,EAAA,EAAAmD,EAAAgkK,EAAA9W,QAAAE,aAAA/yJ,OAAiEwC,EAAAmD,IAASnD,EAC1EwJ,EAAAjM,KAAA6qK,GAAAnqI,WAAAsmB,MAAA9nD,MAAA0qK,EAAA9W,QAAAE,aAAAvwJ,MAEA,OAAAwJ,EAAA0E,KAAA,MAGAugJ,WAAA6Z,GACA,IAAA9+J,KACA,QAAAxJ,EAAA,EAAAmD,EAAAmlK,EAAAjY,QAAAE,aAAA/yJ,OAAiEwC,EAAAmD,IAASnD,EAC1EwJ,EAAAjM,KAAA6qK,GAAAnqI,WAAAsmB,MAAA9nD,MAAA6rK,EAAAjY,QAAAE,aAAAvwJ,MAEA,OAAAwJ,EAAA0E,KAAA,MAUAugJ,gBAAA2Y,GACA,IAAA59J,KACA,QAAAxJ,EAAA,EAAAmD,EAAAikK,EAAA5X,YAAAhyJ,OAA6DwC,EAAAmD,IAASnD,EACtEwJ,EAAAjM,KAAA,IACA6qK,GAAAjB,WAAA5iH,MAAA9nD,MAAA2qK,EAAA5X,YAAAxvJ,KACA,KAEA,OAAAwJ,EAAA0E,KAAA,MASAugJ,QAAAxrJ,GACA,IAAAuG,KACAA,EAAAjM,KAAA,IAAA6qK,GAAAjB,WAAA5iH,MAAA9nD,MAAAwG,EAAAiuJ,SAAA,KACA,QAAAlxJ,EAAA,EAAAmD,EAAAF,EAAAkuJ,OAAA3zJ,OAAgDwC,EAAAmD,IAASnD,EACzDwJ,EAAAjM,KAAA,IAAA6qK,GAAAjB,WAAA5iH,MAAA9nD,MAAAwG,EAAAkuJ,OAAAnxJ,KAAA,KAEA,OAAAwJ,EAAA0E,KAAA,MASAugJ,aAAA1xD,GACA,IAAAvzF,KACA,QAAAxJ,EAAA,EAAAmD,EAAA45F,EAAAyyD,YAAAhyJ,OAA0DwC,EAAAmD,IAASnD,EACnEwJ,EAAAjM,KAAA,IAAA6qK,GAAAnlK,QAAAshD,MAAA9nD,MAAAsgG,EAAAyyD,YAAAxvJ,KAAA,KAEA,OAAAwJ,EAAA0E,KAAA,MAUAugJ,mBAAA7iJ,GACA,IAAApC,KACA,QAAAxJ,EAAA,EAAAmD,EAAAyI,EAAA4jJ,YAAAhyJ,OAAwDwC,EAAAmD,IAASnD,EACjEwJ,EAAAjM,KAAAd,KAAA0rK,gBAAAv8J,EAAA4jJ,YAAAxvJ,KAEA,OAAAwJ,EAAA0E,KAAA,OASAg6J,IAQAzZ,MAAAvmB,GACA,QAAAruI,IAAAquI,EACA,OAAAzrI,KAAAoqK,gBAAA5R,cAGA,IAAA1iI,EAAA21G,EAAAxtI,OAAAmoB,MAAA6kJ,GAAA7Q,QACA,OAAAp6J,KAAAoqK,gBAAA5R,YAAA,IAAAnV,EAAAnwF,OAAAt1D,WAAAk4B,EAAA,IACAo9B,OAAAt1D,WAAAk4B,EAAA,OAUAk8H,WAAAvmB,GACA,QAAAruI,IAAAquI,EACA,OAAAzrI,KAAAoqK,gBAAAxR,mBAGA,IAAAzzJ,EACAS,EAAA6lI,EAAAxtI,OAAAmoB,MAAA,KACA0lJ,KACA,QAAAvoK,EAAA,EAAAmD,EAAAd,EAAA7E,OAAwCwC,EAAAmD,IAASnD,EACjD4B,EAAAS,EAAArC,GAAAkoB,QAAAw/I,GAAAK,WAAA,MACAQ,EAAAhrK,KAAA2qK,GAAAtmK,MAAA2iD,MAAA9nD,MAAAmF,KAEA,OAAAnF,KAAAoqK,gBAAAxR,iBAAAkT,IAUA9Z,WAAAvmB,GACA,QAAAruI,IAAAquI,EACA,OAAAzrI,KAAAoqK,gBAAA/O,mBAGA,IAEAvlI,EAFAlwB,EAAA6lI,EAAAxtI,OAAAmoB,MAAA,KACA0lJ,KAEA,QAAAvoK,EAAA,EAAAmD,EAAAd,EAAA7E,OAAwCwC,EAAAmD,IAASnD,EACjDuyB,EAAAlwB,EAAArC,GAAAtF,OAAAmoB,MAAA6kJ,GAAA7Q,QACA0R,EAAAhrK,KAAA,IAAAuiJ,EAAAnwF,OAAAt1D,WAAAk4B,EAAA,IAAAo9B,OAAAt1D,WAAAk4B,EAAA,MAEA,OAAA91B,KAAAoqK,gBAAA/O,iBAAAyQ,IAUA9Z,WAAAvmB,GACA,QAAAruI,IAAAquI,EACA,OAAAzrI,KAAAoqK,gBAAAvV,mBAGA,IAEA/+H,EAFAlwB,EAAA6lI,EAAAxtI,OAAAmoB,MAAA,KACA0lJ,KAEA,QAAAvoK,EAAA,EAAAmD,EAAAd,EAAA7E,OAAwCwC,EAAAmD,IAASnD,EACjDuyB,EAAAlwB,EAAArC,GAAAtF,OAAAmoB,MAAA6kJ,GAAA7Q,QACA0R,EAAAhrK,KAAA,IAAAuiJ,EAAAnwF,OAAAt1D,WAAAk4B,EAAA,IAAAo9B,OAAAt1D,WAAAk4B,EAAA,MAEA,OAAA91B,KAAAoqK,gBAAAvV,iBAAAiX,IAUA9Z,gBAAAvmB,GACA,QAAAruI,IAAAquI,EACA,OAAAzrI,KAAAoqK,gBAAAlS,wBAGA,IAAA1/H,EACAiB,EAAAgyG,EAAAxtI,OAAAmoB,MAAA6kJ,GAAAG,YACAU,KACA,QAAAvoK,EAAA,EAAAmD,EAAA+yB,EAAA14B,OAAuCwC,EAAAmD,IAASnD,EAChDi1B,EAAAiB,EAAAl2B,GAAAkoB,QAAAw/I,GAAAK,WAAA,MACAQ,EAAAhrK,KAAA2qK,GAAAf,WAAA5iH,MAAA9nD,MAAAw4B,KAEA,OAAAx4B,KAAAoqK,gBAAAlS,sBAAA4T,IAUA9Z,QAAAvmB,GACA,QAAAruI,IAAAquI,EACA,OAAAzrI,KAAAoqK,gBAAA7E,gBAGA,IAAAn8I,EAAAshJ,EAAAmB,EAEAlX,EADAj8H,EAAA+yG,EAAAxtI,OAAAmoB,MAAA6kJ,GAAAG,YAEAxW,KACA,QAAArxJ,EAAA,EAAAmD,EAAAgyB,EAAA33B,OAAuCwC,EAAAmD,IAASnD,EAChD6lB,EAAAsP,EAAAn1B,GAAAkoB,QAAAw/I,GAAAK,WAAA,MACAZ,EAAAe,GAAAf,WAAA5iH,MAAA9nD,MAAAopB,IACAyiJ,EAAA7rK,KAAAoqK,gBAAAvV,iBAAA6V,EAAA9W,SACA,IAAArwJ,EACAoxJ,EAAAkX,EAEAjX,EAAA9zJ,KAAA+qK,GAGA,OAAA7rK,KAAAoqK,gBAAA7E,cAAA5Q,EAAAC,IAUA5C,aAAAvmB,GACA,QAAAruI,IAAAquI,EACA,OAAAzrI,KAAAoqK,gBAAA1F,qBAGA,IAAAl+J,EACAqC,EAAA4iI,EAAAxtI,OAAAmoB,MAAA6kJ,GAAAI,kBACAS,KACA,QAAAvoK,EAAA,EAAAmD,EAAAmC,EAAA9H,OAA0CwC,EAAAmD,IAASnD,EACnDiD,EAAAqC,EAAAtF,GAAAkoB,QAAAw/I,GAAAK,WAAA,MACAQ,EAAAhrK,KAAA2qK,GAAAjlK,QAAAshD,MAAA9nD,MAAAwG,KAEA,OAAAxG,KAAAoqK,gBAAA1F,mBAAAoH,IAUA9Z,mBAAAvmB,GACA,QAAAruI,IAAAquI,EACA,OAAAzrI,KAAAoqK,gBAAAhT,2BAKA,IAAA2U,GADAtgC,IAAAhgH,QAAA,0BACAxtB,OAAAmoB,MAAA,KACA0lJ,KACA,QAAAvoK,EAAA,EAAAmD,EAAAqlK,EAAAhrK,OAA0CwC,EAAAmD,IAASnD,EACnDuoK,EAAAhrK,KAAAd,KAAA0sB,KAAAq/I,EAAAxoK,KAEA,OAAAvD,KAAAoqK,gBAAAhT,yBAAA0U,KCnXA,SAAAE,GAAA5B,GACApqK,KAAAoqK,mBAAA,IAAAtV,GACA90J,KAAAunK,eAAAvnK,KAAAoqK,gBAAAzgB,oBACA3pJ,KAAAqsB,OAAA,IAAAk/I,GAAAvrK,KAAAoqK,iBCJA,SAAA6B,GAAA7B,GACApqK,KAAAqsB,OAAA,IAAAk/I,GAAAnB,GChBA,SAAA8B,GAAArlJ,GAAkB,OAAAA,EAAAvlB,EAAAulB,EAAAtlB,GAQlB,SAAAo4I,GAAAywB,EAAA+B,GACAnsK,KAAAoqK,mBAAA,IAAAtV,GACA90J,KAAAk/B,GAAAitI,GAAA,oBAAAjtI,OFYA2pB,EAAAmjH,GAAAzrK,WAWAyxJ,KAAAprG,GACA,IAAA7tC,EAAA/Y,KAAAqsB,OAAAK,KAAAk6B,GAOA,OAJA5mD,KAAAunK,eAAAljK,YAAAuiK,GAAAK,OACAjnK,KAAAgrK,gBAAAjyJ,GAGAA,GAGAi5I,gBAAAj5I,GACA,GAAAA,EAAAyoB,WACAxhC,KAAAunK,eAAAO,YAAA/uJ,EAAAyoB,iBACK,GAAAzoB,EAAA66I,QACL,QAAArwJ,EAAA,EAAAmD,EAAAqS,EAAA66I,QAAAE,aAAA/yJ,OAAiEwC,EAAAmD,EAASnD,IAC1EvD,KAAAunK,eAAAO,YAAA/uJ,EAAA66I,QAAAE,aAAAvwJ,SAEK,GAAAwV,EAAAg6I,YACL,QAAAxvJ,EAAA,EAAAmD,EAAAqS,EAAAg6I,YAAAhyJ,OAAwDwC,EAAAmD,EAASnD,IACjEvD,KAAAgrK,gBAAAjyJ,EAAAg6I,YAAAxvJ,OClCAslD,EAAAojH,GAAA1rK,WASAyxJ,MAAAj5I,GACA,OAAA/Y,KAAAqsB,OAAA0xH,MAAAhlI,MAIA8vC,EAAAojH,IAWAja,aAAA2J,EAAA7X,GACA,OAAAtiI,UAAAzgB,OACA,UAAA86B,MAAA,mBAGA,sBAAA8/H,EAAAr6J,EAAA,IAAAq6J,EAAAp6J,EAAA,KAAAuiJ,EAAAxiJ,EAAA,IAAAwiJ,EAAAviJ,EAAA,QCpCAsnD,EAAA8wF,GAAAp5I,WAMAyxJ,KAAAj5I,GACA,MAAAmmB,EAAAl/B,KAAAk/B,GACA,OAAAnmB,aAAAmmB,EAAA6d,KAAA5yB,MACAnqB,KAAAosK,iBAAArzJ,GACKA,aAAAmmB,EAAA6d,KAAA3yB,WACLpqB,KAAAqsK,sBAAAtzJ,GACKA,aAAAmmB,EAAA6d,KAAAxyB,WACLvqB,KAAAssK,sBAAAvzJ,GACKA,aAAAmmB,EAAA6d,KAAA1yB,QACLrqB,KAAAusK,mBAAAxzJ,GACKA,aAAAmmB,EAAA6d,KAAA93C,WACLjF,KAAAwsK,sBAAAzzJ,GACKA,aAAAmmB,EAAA6d,KAAAp9C,gBACLK,KAAAysK,2BAAA1zJ,GACKA,aAAAmmB,EAAA6d,KAAA/2C,aACLhG,KAAA0sK,wBAAA3zJ,GACKA,aAAAmmB,EAAA6d,KAAA4zB,mBACL3wE,KAAA2sK,sBAAA5zJ,QADK,GAKLi5I,iBAAA7sJ,GACA,MAAAvF,EAAAuF,EAAAtC,iBACA,OAAA7C,KAAAoqK,gBAAA5R,YAAA,IAAAnV,EAAAzjJ,EAAA,GAAAA,EAAA,MAGAoyJ,sBAAAvxJ,GACA,OAAAT,KAAAoqK,gBAAA/O,iBAAA56J,EAAAoC,iBAAAkM,IAAA,SAAAnP,GACA,WAAAyjJ,EAAAzjJ,EAAA,GAAAA,EAAA,QAIAoyJ,sBAAA74H,GACA,OAAAn5B,KAAAoqK,gBAAAvV,iBAAA17H,EAAAt2B,iBAAAkM,IAAA,SAAAnP,GACA,WAAAyjJ,EAAAzjJ,EAAA,GAAAA,EAAA,QAIAoyJ,mBAAAxrJ,GACA,MAAA4uH,EAAA5uH,EAAAmyB,iBACA,IAAAg8H,EAAA,KACAC,KACA,QAAArxJ,EAAA,EAAmBA,EAAA6xH,EAAAr0H,OAAwBwC,IAAA,CAC3C,MAAA41B,EAAAn5B,KAAAssK,sBAAAl3C,EAAA7xH,IACA,IAAAA,EACAoxJ,EAAAx7H,EAEAy7H,EAAA9zJ,KAAAq4B,GAGA,OAAAn5B,KAAAoqK,gBAAA7E,cAAA5Q,EAAAC,IAGA5C,sBAAA5sJ,GACA,MAAAQ,EAAAR,EAAAO,YAAAoJ,IAAA,SAAA5J,GACA,OAAAnF,KAAAosK,iBAAAjnK,IACKnF,MACL,OAAAA,KAAAoqK,gBAAAxR,iBAAAhzJ,IAGAosJ,2BAAA9wJ,GACA,MAAAoC,EAAApC,EAAAkC,iBAAA2L,IAAA,SAAAtO,GACA,OAAAT,KAAAqsK,sBAAA5rK,IACKT,MACL,OAAAA,KAAAoqK,gBAAAlS,sBAAA50J,IAGA0uJ,wBAAAvrJ,GACA,MAAAoC,EAAApC,EAAAkC,cAAAoG,IAAA,SAAAvI,GACA,OAAAxG,KAAAusK,mBAAA/lK,IACKxG,MACL,OAAAA,KAAAoqK,gBAAA1F,mBAAA77J,IAGAmpJ,sBAAA7iJ,GACA,MAAA8hE,EAAA9hE,EAAAuiE,gBAAA3iE,IAAA,SAAAgK,GACA,OAAA/Y,KAAA0sB,KAAA3T,IACK/Y,MACL,OAAAA,KAAAoqK,gBAAAhT,yBAAAnmF,IASA+gF,MAAAj5I,GACA,gBAAAA,EAAA++I,kBACA93J,KAAA4sK,eAAA7zJ,EAAAkpI,iBACK,eAAAlpI,EAAA++I,kBACL93J,KAAA6sK,oBAAA9zJ,GACK,eAAAA,EAAA++I,kBACL93J,KAAA8sK,oBAAA/zJ,GACK,YAAAA,EAAA++I,kBACL93J,KAAA+sK,iBAAAh0J,GACK,eAAAA,EAAA++I,kBACL93J,KAAAgtK,oBAAAj0J,GACK,oBAAAA,EAAA++I,kBACL93J,KAAAitK,yBAAAl0J,GACK,iBAAAA,EAAA++I,kBACL93J,KAAAktK,sBAAAn0J,GACK,uBAAAA,EAAA++I,kBACL93J,KAAAmtK,oBAAAp0J,QADK,GAKLi5I,eAAAxwH,GACA,WAAAxhC,KAAAk/B,GAAA6d,KAAA5yB,OAAAqX,EAAAlgC,EAAAkgC,EAAAjgC,KAGAywJ,oBAAAvxJ,GACA,IAAAmF,EAAAnF,EAAAmzJ,QAAAE,aAAA/kJ,IAAAm9J,IACA,WAAAlsK,KAAAk/B,GAAA6d,KAAA3yB,WAAAxkB,IAGAosJ,oBAAA74H,GACA,IAAAvzB,EAAAuzB,EAAAy6H,QAAAE,aAAA/kJ,IAAAm9J,IACA,WAAAlsK,KAAAk/B,GAAA6d,KAAAxyB,WAAA3kB,IAGAosJ,iBAAAxrJ,GACA,IAAAkyB,GAAAlyB,EAAAiuJ,OAAAb,QAAAE,aAAA/kJ,IAAAm9J,KACA,QAAA3oK,EAAA,EAAmBA,EAAAiD,EAAAkuJ,OAAA3zJ,OAA2BwC,IAC9Cm1B,EAAA53B,KAAA0F,EAAAkuJ,OAAAnxJ,GAAAqwJ,QAAAE,aAAA/kJ,IAAAm9J,KAEA,WAAAlsK,KAAAk/B,GAAA6d,KAAA1yB,QAAAqO,IAGAs5H,oBAAA5sJ,GACA,WAAApF,KAAAk/B,GAAA6d,KAAA93C,WAAAG,EAAAvC,iBAAAkM,IAAAm9J,MAGAla,yBAAA9wJ,GACA,IAAAoC,KACA,QAAAC,EAAA,EAAmBA,EAAArC,EAAA6xJ,YAAAhyJ,OAAwCwC,IAC3DD,EAAAxC,KAAAd,KAAA6sK,oBAAA3rK,EAAA6xJ,YAAAxvJ,IAAAV,kBAEA,WAAA7C,KAAAk/B,GAAA6d,KAAAp9C,gBAAA2D,IAGA0uJ,sBAAAvrJ,GACA,IAAAoC,KACA,QAAAtF,EAAA,EAAmBA,EAAAkD,EAAAssJ,YAAAhyJ,OAAqCwC,IACxDsF,EAAA/H,KAAAd,KAAA+sK,iBAAAtmK,EAAAssJ,YAAAxvJ,IAAAV,kBAEA,WAAA7C,KAAAk/B,GAAA6d,KAAA/2C,aAAA6C,IAGAmpJ,oBAAAzgF,GACA,IAAAN,KACA,QAAA1tE,EAAA,EAAmBA,EAAAguE,EAAAwhF,YAAAhyJ,OAA2CwC,IAAA,CAC9D,IAAAwV,EAAAw4D,EAAAwhF,YAAAxvJ,GACA0tE,EAAAnwE,KAAAd,KAAA+9I,MAAAhlI,IAEA,WAAA/Y,KAAAk/B,GAAA6d,KAAA4zB,mBAAAM","file":"objectediting.0ea4e496a8e3d71f0c4b.js","sourcesContent":["/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 46\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/WMSTime.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  const length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 147\n// module chunks = 0 1 2 3 4 5 6 7 8 11 13 14","/**\n * @module ngeo.misc.filters\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 165\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 166\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/File.js","/**\n * @module ngeo.message.popupComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/message/popupcomponent.html`;\n  });\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intented to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/popupComponent.js","/**\n * @module ngeo.misc.Time\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/JSONFeature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nconst GeoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection(\n    options.defaultDataProjection ?\n      options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ transformWithOptions(\n      geometryReader(object), false, opt_options)\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  let geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  let features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    const geoJSONFeatures = geoJSONFeatureCollection.features;\n    let i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n        opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  const crs = geoJSONObject.crs;\n  let projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  const object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  const id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  let i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GeoJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.download.service\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/SyncLayertreeMap.js","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/file-saver/FileSaver.js\n// module id = 199\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-define.js\n// module id = 200\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 201\n// module chunks = 0 1 2 3 4 5 6 7 8 11 14","/**\n * @module ngeo.interaction.MeasureBaseOptions\n */\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Popup.js","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      });\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        googAsserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","require('./angular-sanitize');\nmodule.exports = 'ngSanitize';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-sanitize/index.js\n// module id = 209\n// module chunks = 0 1 2 3 4 6 7 9 12","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\nimport gmfBase from 'gmf/index.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","/**\n * @module ngeo.layertree.component\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/layertree/component.html`;\n  });\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function($compile, ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/component.js","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessagePopup.module.name,\n  ngeoMessagePopupComponent.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template.\n     */\n  ($element, $attrs) => {\n    const subTemplateUrl = `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`;\n    return `${'<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          'ngeo-layertree-templateurl=\"'}${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nngeoLayertreeComponent.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`);\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overrided by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup.\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow'\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.$http} $http Angular http service.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $http, $sce, $scope,\n  ngeoCreatePopup, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager,\n  gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @private\n   * @type {!angular.$http}\n   */\n  this.$http_ = $http;\n\n  /**\n   * @private\n   * @type {!angular.$sce}\n   */\n  this.$sce_ = $sce;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @private\n   * @type {!ngeo.message.Popup}\n   */\n  this.infoPopup_ = ngeoCreatePopup();\n\n  /**\n   * @type {!Object.<string, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Mutliple urls for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Display a ngeo.infoPopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const treeUid = treeCtrl.uid.toString();\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    if (!(treeUid in this.promises_)) {\n      this.promises_[treeUid] = this.$http_.get(metadataURL).then(\n        (resp) => {\n          const html = this.$sce_.trustAsHtml(resp.data);\n          return html;\n        });\n    }\n    const infoPopup = this.infoPopup_;\n    this.promises_[treeUid].then((html) => {\n      infoPopup.setTitle(node.name);\n      infoPopup.setContent(html);\n      infoPopup.setOpen(true);\n    });\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  }, this);\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach(function(child) {\n    this.layers.push(child.layer);\n  }, this);\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/component.js","/**\n * @module ngeo.misc.File\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/File.js","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/FileGroup.js","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module(\n  'gmfLayertreeDatasourceGroupTreeComponent', [\n    ngeoDatasourceDataSources.module.name,\n  ]);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/layertree/datasourceGroupTreeComponent.html`\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","/**\n * @license AngularJS v1.6.8\n * (c) 2010-2017 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nvar $sanitizeMinErr = angular.$$minErr('$sanitize');\nvar bind;\nvar extend;\nvar forEach;\nvar isDefined;\nvar lowercase;\nvar noop;\nvar nodeContains;\nvar htmlParser;\nvar htmlSanitizeWriter;\n\n/**\n * @ngdoc module\n * @name ngSanitize\n * @description\n *\n * The `ngSanitize` module provides functionality to sanitize HTML.\n *\n * See {@link ngSanitize.$sanitize `$sanitize`} for usage.\n */\n\n/**\n * @ngdoc service\n * @name $sanitize\n * @kind function\n *\n * @description\n *   Sanitizes an html string by stripping all potentially dangerous tokens.\n *\n *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string.\n *\n *   The whitelist for URL sanitization of attribute values is configured using the functions\n *   `aHrefSanitizationWhitelist` and `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider\n *   `$compileProvider`}.\n *\n *   The input may also contain SVG markup if this is enabled via {@link $sanitizeProvider}.\n *\n * @param {string} html HTML input.\n * @returns {string} Sanitized HTML.\n *\n * @example\n   <example module=\"sanitizeExample\" deps=\"angular-sanitize.js\" name=\"sanitize-service\">\n   <file name=\"index.html\">\n     <script>\n         angular.module('sanitizeExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {\n             $scope.snippet =\n               '<p style=\"color:blue\">an html\\n' +\n               '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n               'snippet</p>';\n             $scope.deliberatelyTrustDangerousSnippet = function() {\n               return $sce.trustAsHtml($scope.snippet);\n             };\n           }]);\n     </script>\n     <div ng-controller=\"ExampleController\">\n        Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Directive</td>\n           <td>How</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"bind-html-with-sanitize\">\n           <td>ng-bind-html</td>\n           <td>Automatically uses $sanitize</td>\n           <td><pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind-html=\"snippet\"></div></td>\n         </tr>\n         <tr id=\"bind-html-with-trust\">\n           <td>ng-bind-html</td>\n           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>\n           <td>\n           <pre>&lt;div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"&gt;\n&lt;/div&gt;</pre>\n           </td>\n           <td><div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"></div></td>\n         </tr>\n         <tr id=\"bind-default\">\n           <td>ng-bind</td>\n           <td>Automatically escapes</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n       </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should sanitize the html snippet by default', function() {\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n     });\n\n     it('should inline raw snippet if bound to a trusted value', function() {\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).\n         toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n              \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n              \"snippet</p>\");\n     });\n\n     it('should escape snippet without any filter', function() {\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).\n         toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n              \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n              \"snippet&lt;/p&gt;\");\n     });\n\n     it('should update', function() {\n       element(by.model('snippet')).clear();\n       element(by.model('snippet')).sendKeys('new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('new <b>text</b>');\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).toBe(\n         'new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).toBe(\n         \"new &lt;b onclick=\\\"alert(1)\\\"&gt;text&lt;/b&gt;\");\n     });\n   </file>\n   </example>\n */\n\n\n/**\n * @ngdoc provider\n * @name $sanitizeProvider\n * @this\n *\n * @description\n * Creates and configures {@link $sanitize} instance.\n */\nfunction $SanitizeProvider() {\n  var svgEnabled = false;\n\n  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {\n    if (svgEnabled) {\n      extend(validElements, svgElements);\n    }\n    return function(html) {\n      var buf = [];\n      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {\n        return !/^unsafe:/.test($$sanitizeUri(uri, isImage));\n      }));\n      return buf.join('');\n    };\n  }];\n\n\n  /**\n   * @ngdoc method\n   * @name $sanitizeProvider#enableSvg\n   * @kind function\n   *\n   * @description\n   * Enables a subset of svg to be supported by the sanitizer.\n   *\n   * <div class=\"alert alert-warning\">\n   *   <p>By enabling this setting without taking other precautions, you might expose your\n   *   application to click-hijacking attacks. In these attacks, sanitized svg elements could be positioned\n   *   outside of the containing element and be rendered over other elements on the page (e.g. a login\n   *   link). Such behavior can then result in phishing incidents.</p>\n   *\n   *   <p>To protect against these, explicitly setup `overflow: hidden` css rule for all potential svg\n   *   tags within the sanitized content:</p>\n   *\n   *   <br>\n   *\n   *   <pre><code>\n   *   .rootOfTheIncludedContent svg {\n   *     overflow: hidden !important;\n   *   }\n   *   </code></pre>\n   * </div>\n   *\n   * @param {boolean=} flag Enable or disable SVG support in the sanitizer.\n   * @returns {boolean|ng.$sanitizeProvider} Returns the currently configured value if called\n   *    without an argument or self for chaining otherwise.\n   */\n  this.enableSvg = function(enableSvg) {\n    if (isDefined(enableSvg)) {\n      svgEnabled = enableSvg;\n      return this;\n    } else {\n      return svgEnabled;\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // Private stuff\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n  bind = angular.bind;\n  extend = angular.extend;\n  forEach = angular.forEach;\n  isDefined = angular.isDefined;\n  lowercase = angular.lowercase;\n  noop = angular.noop;\n\n  htmlParser = htmlParserImpl;\n  htmlSanitizeWriter = htmlSanitizeWriterImpl;\n\n  nodeContains = window.Node.prototype.contains || /** @this */ function(arg) {\n    // eslint-disable-next-line no-bitwise\n    return !!(this.compareDocumentPosition(arg) & 16);\n  };\n\n  // Regular Expressions for parsing tags and attributes\n  var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n    // Match everything outside of normal chars and \" (quote character)\n    NON_ALPHANUMERIC_REGEXP = /([^#-~ |!])/g;\n\n\n  // Good source of info about elements and attributes\n  // http://dev.w3.org/html5/spec/Overview.html#semantics\n  // http://simon.html5.org/html-elements\n\n  // Safe Void Elements - HTML5\n  // http://dev.w3.org/html5/spec/Overview.html#void-elements\n  var voidElements = toMap('area,br,col,hr,img,wbr');\n\n  // Elements that you can, intentionally, leave open (and which close themselves)\n  // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n  var optionalEndTagBlockElements = toMap('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),\n      optionalEndTagInlineElements = toMap('rp,rt'),\n      optionalEndTagElements = extend({},\n                                              optionalEndTagInlineElements,\n                                              optionalEndTagBlockElements);\n\n  // Safe Block Elements - HTML5\n  var blockElements = extend({}, optionalEndTagBlockElements, toMap('address,article,' +\n          'aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n          'h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul'));\n\n  // Inline Elements - HTML5\n  var inlineElements = extend({}, optionalEndTagInlineElements, toMap('a,abbr,acronym,b,' +\n          'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,' +\n          'samp,small,span,strike,strong,sub,sup,time,tt,u,var'));\n\n  // SVG Elements\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements\n  // Note: the elements animate,animateColor,animateMotion,animateTransform,set are intentionally omitted.\n  // They can potentially allow for arbitrary javascript to be executed. See #11290\n  var svgElements = toMap('circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,' +\n          'hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,' +\n          'radialGradient,rect,stop,svg,switch,text,title,tspan');\n\n  // Blocked Elements (will be stripped)\n  var blockedElements = toMap('script,style');\n\n  var validElements = extend({},\n                                     voidElements,\n                                     blockElements,\n                                     inlineElements,\n                                     optionalEndTagElements);\n\n  //Attributes that have href and hence need to be sanitized\n  var uriAttrs = toMap('background,cite,href,longdesc,src,xlink:href');\n\n  var htmlAttrs = toMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +\n      'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +\n      'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +\n      'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,' +\n      'valign,value,vspace,width');\n\n  // SVG attributes (without \"id\" and \"name\" attributes)\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes\n  var svgAttrs = toMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +\n      'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,' +\n      'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,' +\n      'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,' +\n      'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,' +\n      'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,' +\n      'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,' +\n      'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,' +\n      'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,' +\n      'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,' +\n      'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,' +\n      'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,' +\n      'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,' +\n      'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,' +\n      'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan', true);\n\n  var validAttrs = extend({},\n                                  uriAttrs,\n                                  svgAttrs,\n                                  htmlAttrs);\n\n  function toMap(str, lowercaseKeys) {\n    var obj = {}, items = str.split(','), i;\n    for (i = 0; i < items.length; i++) {\n      obj[lowercaseKeys ? lowercase(items[i]) : items[i]] = true;\n    }\n    return obj;\n  }\n\n  /**\n   * Create an inert document that contains the dirty HTML that needs sanitizing\n   * Depending upon browser support we use one of three strategies for doing this.\n   * Support: Safari 10.x -> XHR strategy\n   * Support: Firefox -> DomParser strategy\n   */\n  var getInertBodyElement /* function(html: string): HTMLBodyElement */ = (function(window, document) {\n    var inertDocument;\n    if (document && document.implementation) {\n      inertDocument = document.implementation.createHTMLDocument('inert');\n    } else {\n      throw $sanitizeMinErr('noinert', 'Can\\'t create an inert html document');\n    }\n    var inertBodyElement = (inertDocument.documentElement || inertDocument.getDocumentElement()).querySelector('body');\n\n    // Check for the Safari 10.1 bug - which allows JS to run inside the SVG G element\n    inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n    if (!inertBodyElement.querySelector('svg')) {\n      return getInertBodyElement_XHR;\n    } else {\n      // Check for the Firefox bug - which prevents the inner img JS from being sanitized\n      inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n      if (inertBodyElement.querySelector('svg img')) {\n        return getInertBodyElement_DOMParser;\n      } else {\n        return getInertBodyElement_InertDocument;\n      }\n    }\n\n    function getInertBodyElement_XHR(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        html = encodeURI(html);\n      } catch (e) {\n        return undefined;\n      }\n      var xhr = new window.XMLHttpRequest();\n      xhr.responseType = 'document';\n      xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n      xhr.send(null);\n      var body = xhr.response.body;\n      body.firstChild.remove();\n      return body;\n    }\n\n    function getInertBodyElement_DOMParser(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        var body = new window.DOMParser().parseFromString(html, 'text/html').body;\n        body.firstChild.remove();\n        return body;\n      } catch (e) {\n        return undefined;\n      }\n    }\n\n    function getInertBodyElement_InertDocument(html) {\n      inertBodyElement.innerHTML = html;\n\n      // Support: IE 9-11 only\n      // strip custom-namespaced attributes on IE<=11\n      if (document.documentMode) {\n        stripCustomNsAttrs(inertBodyElement);\n      }\n\n      return inertBodyElement;\n    }\n  })(window, window.document);\n\n  /**\n   * @example\n   * htmlParser(htmlString, {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * });\n   *\n   * @param {string} html string\n   * @param {object} handler\n   */\n  function htmlParserImpl(html, handler) {\n    if (html === null || html === undefined) {\n      html = '';\n    } else if (typeof html !== 'string') {\n      html = '' + html;\n    }\n\n    var inertBodyElement = getInertBodyElement(html);\n    if (!inertBodyElement) return '';\n\n    //mXSS protection\n    var mXSSAttempts = 5;\n    do {\n      if (mXSSAttempts === 0) {\n        throw $sanitizeMinErr('uinput', 'Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      // trigger mXSS if it is going to happen by reading and writing the innerHTML\n      html = inertBodyElement.innerHTML;\n      inertBodyElement = getInertBodyElement(html);\n    } while (html !== inertBodyElement.innerHTML);\n\n    var node = inertBodyElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case 1: // ELEMENT_NODE\n          handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));\n          break;\n        case 3: // TEXT NODE\n          handler.chars(node.textContent);\n          break;\n      }\n\n      var nextNode;\n      if (!(nextNode = node.firstChild)) {\n        if (node.nodeType === 1) {\n          handler.end(node.nodeName.toLowerCase());\n        }\n        nextNode = getNonDescendant('nextSibling', node);\n        if (!nextNode) {\n          while (nextNode == null) {\n            node = getNonDescendant('parentNode', node);\n            if (node === inertBodyElement) break;\n            nextNode = getNonDescendant('nextSibling', node);\n            if (node.nodeType === 1) {\n              handler.end(node.nodeName.toLowerCase());\n            }\n          }\n        }\n      }\n      node = nextNode;\n    }\n\n    while ((node = inertBodyElement.firstChild)) {\n      inertBodyElement.removeChild(node);\n    }\n  }\n\n  function attrToMap(attrs) {\n    var map = {};\n    for (var i = 0, ii = attrs.length; i < ii; i++) {\n      var attr = attrs[i];\n      map[attr.name] = attr.value;\n    }\n    return map;\n  }\n\n\n  /**\n   * Escapes all potentially dangerous characters, so that the\n   * resulting string can be safely inserted into attribute or\n   * element text.\n   * @param value\n   * @returns {string} escaped text\n   */\n  function encodeEntities(value) {\n    return value.\n      replace(/&/g, '&amp;').\n      replace(SURROGATE_PAIR_REGEXP, function(value) {\n        var hi = value.charCodeAt(0);\n        var low = value.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n      }).\n      replace(NON_ALPHANUMERIC_REGEXP, function(value) {\n        return '&#' + value.charCodeAt(0) + ';';\n      }).\n      replace(/</g, '&lt;').\n      replace(/>/g, '&gt;');\n  }\n\n  /**\n   * create an HTML/XML writer which writes to buffer\n   * @param {Array} buf use buf.join('') to get out sanitized html string\n   * @returns {object} in the form of {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * }\n   */\n  function htmlSanitizeWriterImpl(buf, uriValidator) {\n    var ignoreCurrentElement = false;\n    var out = bind(buf, buf.push);\n    return {\n      start: function(tag, attrs) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && blockedElements[tag]) {\n          ignoreCurrentElement = tag;\n        }\n        if (!ignoreCurrentElement && validElements[tag] === true) {\n          out('<');\n          out(tag);\n          forEach(attrs, function(value, key) {\n            var lkey = lowercase(key);\n            var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');\n            if (validAttrs[lkey] === true &&\n              (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {\n              out(' ');\n              out(key);\n              out('=\"');\n              out(encodeEntities(value));\n              out('\"');\n            }\n          });\n          out('>');\n        }\n      },\n      end: function(tag) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && validElements[tag] === true && voidElements[tag] !== true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        // eslint-disable-next-line eqeqeq\n        if (tag == ignoreCurrentElement) {\n          ignoreCurrentElement = false;\n        }\n      },\n      chars: function(chars) {\n        if (!ignoreCurrentElement) {\n          out(encodeEntities(chars));\n        }\n      }\n    };\n  }\n\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1' attribute to declare\n   * ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo'). This is undesirable since we don't want\n   * to allow any of these custom attributes. This method strips them all.\n   *\n   * @param node Root element to process\n   */\n  function stripCustomNsAttrs(node) {\n    while (node) {\n      if (node.nodeType === window.Node.ELEMENT_NODE) {\n        var attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          var attrNode = attrs[i];\n          var attrName = attrNode.name.toLowerCase();\n          if (attrName === 'xmlns:ns1' || attrName.lastIndexOf('ns1:', 0) === 0) {\n            node.removeAttributeNode(attrNode);\n            i--;\n            l--;\n          }\n        }\n      }\n\n      var nextNode = node.firstChild;\n      if (nextNode) {\n        stripCustomNsAttrs(nextNode);\n      }\n\n      node = getNonDescendant('nextSibling', node);\n    }\n  }\n\n  function getNonDescendant(propName, node) {\n    // An element is clobbered if its `propName` property points to one of its descendants\n    var nextNode = node[propName];\n    if (nextNode && nodeContains.call(node, nextNode)) {\n      throw $sanitizeMinErr('elclob', 'Failed to sanitize html because the element is clobbered: {0}', node.outerHTML || node.outerText);\n    }\n    return nextNode;\n  }\n}\n\nfunction sanitizeText(chars) {\n  var buf = [];\n  var writer = htmlSanitizeWriter(buf, noop);\n  writer.chars(chars);\n  return buf.join('');\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', [])\n  .provider('$sanitize', $SanitizeProvider)\n  .info({ angularVersion: '1.6.8' });\n\n/**\n * @ngdoc filter\n * @name linky\n * @kind function\n *\n * @description\n * Finds links in text input and turns them into html links. Supports `http/https/ftp/sftp/mailto` and\n * plain email address links.\n *\n * Requires the {@link ngSanitize `ngSanitize`} module to be installed.\n *\n * @param {string} text Input text.\n * @param {string} [target] Window (`_blank|_self|_parent|_top`) or named frame to open links in.\n * @param {object|function(url)} [attributes] Add custom attributes to the link element.\n *\n *    Can be one of:\n *\n *    - `object`: A map of attributes\n *    - `function`: Takes the url as a parameter and returns a map of attributes\n *\n *    If the map of attributes contains a value for `target`, it overrides the value of\n *    the target parameter.\n *\n *\n * @returns {string} Html-linkified and {@link $sanitize sanitized} text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <example module=\"linkyExample\" deps=\"angular-sanitize.js\" name=\"linky-filter\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <th>Filter</th>\n           <th>Source</th>\n           <th>Rendered</th>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"linky-target\">\n          <td>linky target</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"></div>\n          </td>\n         </tr>\n         <tr id=\"linky-custom-attributes\">\n          <td>linky custom attributes</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"></div>\n          </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"script.js\">\n       angular.module('linkyExample', ['ngSanitize'])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.snippet =\n             'Pretty text with some links:\\n' +\n             'http://angularjs.org/,\\n' +\n             'mailto:us@somewhere.org,\\n' +\n             'another@somewhere.org,\\n' +\n             'and one more: ftp://127.0.0.1/.';\n           $scope.snippetWithSingleURL = 'http://angularjs.org/';\n         }]);\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should linkify the snippet with urls', function() {\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);\n       });\n\n       it('should not linkify snippet without the linky filter', function() {\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);\n       });\n\n       it('should update', function() {\n         element(by.model('snippet')).clear();\n         element(by.model('snippet')).sendKeys('new http://link.');\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('new http://link.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())\n             .toBe('new http://link.');\n       });\n\n       it('should work with the target property', function() {\n        expect(element(by.id('linky-target')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_blank'\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');\n       });\n\n       it('should optionally add custom attributes', function() {\n        expect(element(by.id('linky-custom-attributes')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-custom-attributes a')).getAttribute('rel')).toEqual('nofollow');\n       });\n     </file>\n   </example>\n */\nangular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {\n  var LINKY_URL_REGEXP =\n        /((s?ftp|https?):\\/\\/|(www\\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s.;,(){}<>\"\\u201d\\u2019]/i,\n      MAILTO_REGEXP = /^mailto:/i;\n\n  var linkyMinErr = angular.$$minErr('linky');\n  var isDefined = angular.isDefined;\n  var isFunction = angular.isFunction;\n  var isObject = angular.isObject;\n  var isString = angular.isString;\n\n  return function(text, target, attributes) {\n    if (text == null || text === '') return text;\n    if (!isString(text)) throw linkyMinErr('notstring', 'Expected string but received: {0}', text);\n\n    var attributesFn =\n      isFunction(attributes) ? attributes :\n      isObject(attributes) ? function getAttributesObject() {return attributes;} :\n      function getEmptyAttributesObject() {return {};};\n\n    var match;\n    var raw = text;\n    var html = [];\n    var url;\n    var i;\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/www/mailto then assume mailto\n      if (!match[2] && !match[4]) {\n        url = (match[3] ? 'http://' : 'mailto:') + url;\n      }\n      i = match.index;\n      addText(raw.substr(0, i));\n      addLink(url, match[0].replace(MAILTO_REGEXP, ''));\n      raw = raw.substring(i + match[0].length);\n    }\n    addText(raw);\n    return $sanitize(html.join(''));\n\n    function addText(text) {\n      if (!text) {\n        return;\n      }\n      html.push(sanitizeText(text));\n    }\n\n    function addLink(url, text) {\n      var key, linkAttributes = attributesFn(url);\n      html.push('<a ');\n\n      for (key in linkAttributes) {\n        html.push(key + '=\"' + linkAttributes[key] + '\" ');\n      }\n\n      if (isDefined(target) && !('target' in linkAttributes)) {\n        html.push('target=\"',\n                  target,\n                  '\" ');\n      }\n      html.push('href=\"',\n                url.replace(/\"/g, '&quot;'),\n                '\">');\n      addText(text);\n      html.push('</a>');\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-sanitize/angular-sanitize.js\n// module id = 229\n// module chunks = 0 1 2 3 4 6 7 9 12","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/syncArrays.js","/**\n * @module ngeo.misc.ToolActivate\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @module ngeo.misc.btnComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ol/interaction/ModifyEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature modification start\n   * @event ol.interaction.Modify.Event#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ol.interaction.Modify.Event#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/ModifyEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport ModifyEventType from '../interaction/ModifyEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ol.interaction.Modify.Event\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Modify.handleDownEvent_,\n    handleDragEvent: Modify.handleDragEvent_,\n    handleEvent: Modify.handleEvent,\n    handleUpEvent: Modify.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.primaryAction;\n\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.altKeyOnly(mapBrowserEvent) &&\n      _ol_events_condition_.singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : _ol_events_condition_.always;\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      Modify.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  _ol_events_.listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {ol.MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * @define {number} The segment index assigned to a circle's center when\n * breaking up a cicrle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX = 0;\n\n/**\n * @define {number} The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  _ol_events_.listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_events_.unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {ol.Feature} */ (evt.element));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {ol.Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  let coordinates, i, ii, segmentData;\n  for (i = 0, ii = points.length; i < ii; ++i) {\n    coordinates = points[i];\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  let i, ii, segment, segmentData;\n  for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    segment = coordinates.slice(i, i + 2);\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = lines.length; j < jj; ++j) {\n    coordinates = lines[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, k, kk, rings, segment, segmentData;\n  for (k = 0, kk = polygons.length; k < kk; ++k) {\n    rings = polygons[k];\n    for (j = 0, jj = rings.length; j < jj; ++j) {\n      coordinates = rings[j];\n      for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segment = coordinates.slice(i, i + 2);\n        segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(\n      this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nModify.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDownEvent_ = function(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(Modify.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = Modify.closestOnSegmentData_(pixelCoordinate, segmentDataMatch);\n        if (_ol_coordinate_.equals(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (_ol_coordinate_.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (_ol_coordinate_.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDragEvent_ = function(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(_ol_coordinate_.distance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleUpEvent_ = function(evt) {\n  let segmentData;\n  let geometry;\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    segmentData = this.dragSegments_[i][0];\n    geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment),\n        segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Modify}\n * @api\n */\nModify.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, a) -\n        Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = Modify.closestOnSegmentData_(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = _ol_coordinate_.distance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n        const squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((_ol_coordinate_.equals(closestSegment[0], segment[0]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[1]) ||\n              (_ol_coordinate_.equals(closestSegment[0], segment[1]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nModify.pointDistanceToSegmentDataSquared_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {ol.geom.Circle} */ (geometry);\n\n    if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            _ol_coordinate_.squaredDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return _ol_coordinate_.squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n};\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {ol.Coordinate} The point closest to the specified line segment.\n */\nModify.closestOnSegmentData_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return _ol_coordinate_.closestOnSegment(pointCoordinates, segmentData.segment);\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} segmentData Segment data.\n * @param {ol.Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment),\n    newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nModify.getDefaultStyleFunction = function() {\n  const style = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Modify} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.ModifyEvent}\n * @param {ol.interaction.ModifyEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features modified.\n * @param {ol.MapBrowserPointerEvent} mapBrowserPointerEvent Associated\n *     {@link ol.MapBrowserPointerEvent}.\n */\nModify.Event = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link ol.MapBrowserEvent}.\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\ninherits(Modify.Event, Event);\nexport default Modify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module gmf.editing.EditFeature\n */\nimport gmfBase from 'gmf/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/EditFeature.js","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the polygon.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click starting point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureArea.js","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/createfeatureComponent.js","/**\n * @module gmf.objectediting.Manager\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * A service that looks for certain parameters in the url and use them to fetch\n * a feature using the GMF protocol.\n *\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($q, gmfEditFeature, ngeoLocation) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.getFeatureDefered_ = null;\n\n};\n\n\n/**\n * Use the EditFeature service to fetch a single feature using parameters in\n * the url. The method returns a promise that has the feature as argument in\n * the callback method. If any parameter in the url is missing, `null` is\n * returned, otherwise the query is made. If the query returns a feature, it\n * is returned, otherwise one is created with empty geometry and with the\n * property set.\n *\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeature = function() {\n\n  if (!this.getFeatureDefered_) {\n    this.getFeatureDefered_ = this.q_.defer();\n\n    const geomType = this.ngeoLocation_.getParam(\n      exports.Param.GEOM_TYPE);\n    const id = this.ngeoLocation_.getParam(\n      exports.Param.ID);\n    const layer = this.ngeoLocation_.getParam(\n      exports.Param.LAYER);\n    const property = this.ngeoLocation_.getParam(\n      exports.Param.PROPERTY);\n    const theme = this.ngeoLocation_.getParam(\n      exports.Param.THEME);\n\n    if (geomType && id && layer && property && theme) {\n      this.gmfEditFeature_.getFeaturesWithComparisonFilters(\n        [layer],\n        [{\n          operator: 'eq',\n          property: property,\n          value: id\n        }]\n      ).then(this.handleGetFeatures_.bind(this, property, id));\n    } else {\n      this.getFeatureDefered_.resolve(null);\n    }\n  }\n\n  return this.getFeatureDefered_.promise;\n\n};\n\n\n/**\n * @return {string|undefined} The geometry type.\n * @export\n */\nexports.prototype.getGeomType = function() {\n  return this.ngeoLocation_.getParam(\n    exports.Param.GEOM_TYPE);\n};\n\n\n/**\n * @return {number|undefined} The gmf layer node id.\n * @export\n */\nexports.prototype.getLayerNodeId = function() {\n  return this.ngeoLocation_.getParamAsInt(\n    exports.Param.LAYER);\n};\n\n\n/**\n * Called after getting features with comparison filters. Resolve the defered\n * promise with the first returned feature (if any), otherwise resolve it\n * with a feature created with an empty geometry and the property key + value\n * that was used in the attempt to fetch it.\n *\n * @param {string} key Property key.\n * @param {string} value Property value.\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(key, value, features) {\n  let feature;\n\n  if (features.length) {\n    feature = features[0];\n  } else {\n    const featureProperties = {};\n    featureProperties[key] = value;\n    featureProperties['geometry'] = null;\n    feature = new olFeature(featureProperties);\n  }\n\n  this.getFeatureDefered_.resolve(feature);\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Param = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GEOM_TYPE: 'objectediting_geomtype',\n  /**\n   * @type {string}\n   * @export\n   */\n  ID: 'objectediting_id',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAYER: 'objectediting_layer',\n  /**\n   * @type {string}\n   * @export\n   */\n  PROPERTY: 'objectediting_property',\n  /**\n   * @type {string}\n   * @export\n   */\n  THEME: 'objectediting_theme'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingManager', [\n  gmfEditingEditFeature.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\nexports.module.service('gmfObjectEditingManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/objectediting/Manager.js","/**\n * @module gmf.objectediting.Query\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\n/**\n * A service that collects all queryable layer nodes from all themes, stores\n * them and use them to make WMS GetFeatureInfo queries. Queries can be made\n * regardless of the associated layer visibility. The layer nodes are also\n * loaded only once.\n *\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q Angular $q service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @constructor\n * @struct\n * @ngInject\n */\nconst exports = function($http, $q, gmfThemes) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {?angular.$q.Deferred}\n   * @private\n   */\n  this.getQueryableLayerNodesDefered_ = null;\n\n};\n\n\n/**\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getQueryableLayersInfo = function() {\n\n  if (!this.getQueryableLayerNodesDefered_) {\n    this.getQueryableLayerNodesDefered_ = this.q_.defer();\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      this.gmfThemes_.getThemesObject().then((themes) => {\n        if (!themes) {\n          return;\n        }\n\n        // Get all queryable nodes\n        const allQueryableLayersInfo =\n            exports.getQueryableLayersInfoFromThemes(\n              themes,\n              ogcServers\n            );\n\n        // Narrow down to only those that have the 'copyable' metadata set\n        const queryableLayersInfo = [];\n        for (let i = 0, ii = allQueryableLayersInfo.length; i < ii; i++) {\n          if (allQueryableLayersInfo[i].layerNode.metadata.copyable) {\n            queryableLayersInfo.push(allQueryableLayersInfo[i]);\n          }\n        }\n\n        this.getQueryableLayerNodesDefered_.resolve(queryableLayersInfo);\n      });\n    });\n  }\n\n  return this.getQueryableLayerNodesDefered_.promise;\n\n};\n\n\n/**\n * From a list of theme nodes, collect all WMS layer nodes that are queryable.\n * A list of OGC servers is given in order to bind each queryable layer node\n * to its associated server and be able to build requests.\n *\n * @param {Array.<gmfThemes.GmfTheme>} themes List of theme nodes.\n * @param {gmfThemes.GmfOgcServers} ogcServers List of ogc servers\n * @return {Array.<gmfx.ObjectEditingQueryableLayerInfo>} List of\n *     queryable layers information.\n * @export\n */\nexports.getQueryableLayersInfoFromThemes = function(\n  themes, ogcServers\n) {\n  const queryableLayersInfo = [];\n  let theme;\n  let group;\n  let nodes;\n  let node;\n\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    theme = /** @type {gmfThemes.GmfTheme} */ (themes[i]);\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      group = /** @type {gmfThemes.GmfGroup} */ (theme.children[j]);\n\n      // Skip groups that don't have an ogcServer set\n      if (!group.ogcServer) {\n        continue;\n      }\n\n      nodes = [];\n      gmfThemeThemes.getFlatNodes(group, nodes);\n\n      for (let k = 0, kk = nodes.length; k < kk; k++) {\n        node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayerWMS} */ (\n          nodes[k]);\n\n        // Skip groups within groups\n        if (node.children && node.children.length) {\n          continue;\n        }\n\n        if (node.childLayers &&\n          node.childLayers[0] &&\n          node.childLayers[0].queryable\n        ) {\n          queryableLayersInfo.push({\n            layerNode: node,\n            ogcServer: ogcServers[group.ogcServer]\n          });\n        }\n      }\n    }\n  }\n\n  return queryableLayersInfo;\n};\n\n\n/**\n * From a queryable layer (WMS layer node), use its associated OGC server\n * to issue a single WMS GetFeatureInfo request at a specific location on a\n * specific map to fetch a single feature. If no feature is found, a `null`\n * value is returned.\n *\n * @param {gmfx.ObjectEditingQueryableLayerInfo} layerInfo Queryable layer\n *     information.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {ol.Map} map Map.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeatureInfo = function(layerInfo, coordinate, map) {\n  const view = map.getView();\n  const projCode = view.getProjection().getCode();\n  const resolution = /** @type {number} */(view.getResolution());\n  const infoFormat = ngeoDatasourceOGC.WMSInfoFormat.GML;\n  const layerNode = layerInfo.layerNode;\n  const layersParam = layerNode.layers.split(',');\n  const ogcServer = layerInfo.ogcServer;\n\n  const format = new olFormatWMSGetFeatureInfo({\n    layers: layersParam\n  });\n\n  const wmsSource = new olSourceImageWMS({\n    url: ogcServer.url,\n    params: {\n      layers: layersParam\n    }\n  });\n\n  const url = /** @type {string} */ (\n    wmsSource.getGetFeatureInfoUrl(coordinate, resolution, projCode, {\n      'INFO_FORMAT': infoFormat,\n      'FEATURE_COUNT': 1,\n      'QUERY_LAYERS': layersParam\n    })\n  );\n\n  return this.http_.get(url).then(\n    (response) => {\n      const features = format.readFeatures(response.data);\n      return (features && features[0]) ? features[0] : null;\n    }\n  );\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfObjectEditingQuery', [\n  gmfThemeThemes.module.name,\n]);\nexports.module.service('gmfObjectEditingQuery', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/objectediting/Query.js","/**\n * @module gmfapp.objectediting\n */\nconst exports = {};\n\nimport './objectediting.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingComponent from 'gmf/objectediting/component.js';\n\nimport gmfObjecteditingManager from 'gmf/objectediting/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport * as olProj from 'ol/proj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfLayertreeComponent.name,\n  gmfMapComponent.name,\n  gmfObjecteditingComponent.name,\n  gmfObjecteditingManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\nexports.constant('defaultTheme', 'ObjectEditing');\nexports.constant('gmfLayersUrl', 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/layers/');\nexports.constant('gmfTreeUrl', 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background');\nexports.constant('gmfObjectEditingToolsOptions', {\n  regularPolygonRadius: 150\n});\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {gmf.objectediting.Manager} gmfObjectEditingManager The gmf\n *     ObjectEditing manager service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @ngInject\n */\nexports.MainController = function(gmfObjectEditingManager, gmfThemes,\n  gmfTreeManager, ngeoToolActivateMgr) {\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  gmfThemes.loadThemes();\n\n  const projection = olProj.get('EPSG:21781');\n  projection.setExtent([485869.5728, 76443.1884, 837076.5648, 299941.7864]);\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    wrapX: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_\n  });\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures = new olCollection();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      features: this.sketchFeatures,\n      wrapX: false\n    })\n  });\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 2\n    })\n  });\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      // Add layer vector after\n      this.map.addLayer(this.vectorLayer_);\n      this.map.addLayer(this.sketchLayer_);\n    }\n  });\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.objectEditingGeomType = gmfObjectEditingManager.getGeomType();\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.objectEditingLayerNodeId = gmfObjectEditingManager.getLayerNodeId();\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.objectEditingActive = true;\n\n  const objectEditingToolActivate = new ngeoMiscToolActivate(\n    this, 'objectEditingActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', objectEditingToolActivate, true);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dummyActive = false;\n\n  const dummyToolActivate = new ngeoMiscToolActivate(\n    this, 'dummyActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', dummyToolActivate, false);\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.objectEditingFeature = null;\n\n  gmfObjectEditingManager.getFeature().then((feature) => {\n    this.objectEditingFeature = feature;\n    if (feature) {\n      this.vectorSource_.addFeature(feature);\n    }\n  });\n\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/objectediting.js","/**\n * @module gmf.objectediting.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfObjecteditingGeom from 'gmf/objectediting/geom.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingToolsComponent from 'gmf/objectediting/toolsComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\n\n\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olEvents from 'ol/events.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olObject from 'ol/Object.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport {OL3Parser} from 'jsts/io';\nconst jsts = {\n  io: {\n    OL3Parser,\n  },\n};\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjectEditingComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfObjecteditingQuery.module.name,\n  gmfObjecteditingToolsComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.value('gmfObjecteditingTemplateUrl',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template URL.\n     */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfObjecteditingTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${gmfBase.baseModuleTemplateUrl}/objectediting/component.html`;\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfObjecteditingTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfObjecteditingTemplateUrl($element, $attrs, gmfObjecteditingTemplateUrl) {\n  return gmfObjecteditingTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Component used to edit the geometry of a single feature using advanced\n * tools. The geometry must be Multi.\n *\n * Example:\n *\n *     <gmf-objectediting\n *         gmf-objectediting-active=\"ctrl.objectEditingActive\"\n *         gmf-objectediting-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objectediting-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objectediting-layernodeid=\"ctrl.objectEditingLayerNodeId\"\n *         gmf-objectediting-map=\"::ctrl.map\"\n *         gmf-objectediting-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objectediting>\n *\n * @htmlAttribute {boolean} gmf-objectediting-active Whether the component is\n *     active or not.\n * @htmlAttribute {ol.Feature} gmf-objectediting-feature The feature to edit.\n * @htmlAttribute {string} gmf-objectediting-geomtype The geometry type.\n * @htmlAttribute {number} gmf-objectediting-layernodeid The GMF layer node id.\n * @htmlAttribute {ol.Map} gmf-objectediting-map The map.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @ngdoc component\n * @ngname gmfObjectediting\n */\nexports.component_ = {\n  controller: 'GmfObjecteditingController as oeCtrl',\n  bindings: {\n    'active': '=gmfObjecteditingActive',\n    'feature': '<gmfObjecteditingFeature',\n    'geomType': '<gmfObjecteditingGeomtype',\n    'layerNodeId': '<gmfObjecteditingLayernodeid',\n    'map': '<gmfObjecteditingMap',\n    'sketchFeatures': '<gmfObjecteditingSketchfeatures'\n  },\n  templateUrl: gmfObjecteditingTemplateUrl\n};\n\nexports.component('gmfObjectediting', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {!gmf.objectediting.Query} gmfObjectEditingQuery Gmf ObjectEditing\n *     query service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\ngoog.require('ngeo.map.LayerHelper');\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingController\n */\nexports.Controller = function($scope, $timeout, gettextCatalog,\n  gmfEditFeature, gmfObjectEditingQuery, gmfTreeManager,\n  ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.layerNodeId;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {!gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n  /**\n   * @type {Array.<!gmfx.ObjectEditingQueryableLayerInfo>}\n   * @export\n   */\n  this.queryableLayersInfo;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.selectedQueryableLayerInfo;\n\n  /**\n   * Whether to show or hide the queryable list of layers. It is shown only\n   * when a tool requires it, which is managed in the `gmf-objecteditingtools`\n   * component.\n   * @type {boolean}\n   * @export\n   */\n  this.queryableLayerListShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.featureHasGeom;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.skipGeometryChange_ = false;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process = gmfObjecteditingToolsComponent.ProcessType.ADD;\n\n  /**\n   * @type {?ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_ = null;\n\n  /**\n   * @type {!jsts.io.OL3Parser}\n   * @private\n   */\n  this.jstsOL3Parser_ = new jsts.io.OL3Parser();\n\n  /**\n   * The state of the feature determines whether the next 'save' request\n   * should be an 'insert' or 'update' one.\n   * @type {string|undefined}\n   * @private\n   */\n  this.state_;\n\n  /**\n   * @type {!Array.<?ol.geom.Geometry>}\n   * @private\n   */\n  this.geometryChanges_ = [];\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.defaultStylesWoVertice_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStyles_ = {};\n\n  /**\n   * @type {!gmfx.StylesObject}\n   * @private\n   */\n  this.dirtyStylesWoVertice_ = {};\n\n  /**\n   * Flag that is toggled while a request is pending.\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ol.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features_,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.modifyToolActivate_ = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @private\n   */\n  this.toolsToolActivate_ = new ngeoMiscToolActivate(this, 'toolsActive');\n};\n\n/**\n * Init the controller\n */\nexports.Controller.prototype.$onInit = function() {\n  this.gmfObjectEditingQuery_.getQueryableLayersInfo().then(\n    this.handleGetQueryableLayersInfo_.bind(this)\n  );\n\n  this.scope_.$watchCollection(\n    () => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    },\n    (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(\n            this.registerTreeCtrl_.bind(this)\n          );\n        }\n      });\n    }\n  );\n\n  const geometry = this.feature.getGeometry();\n  this.state_ = geometry ? exports.Controller.State.UPDATE :\n    exports.Controller.State.INSERT;\n\n  this.scope_.$watchCollection(\n    () => this.geometryChanges_,\n    (newVal, oldVal) => {\n      if (newVal.length) {\n        if (newVal.length === 1) {\n          this.dirty = false;\n        } else {\n          this.dirty = true;\n        }\n      }\n    }\n  );\n\n  const defaultColor = [39, 155, 145];\n  const dirtyColor = [153, 51, 51];\n  this.initializeStyles_(this.defaultStyles_, defaultColor);\n  this.initializeStyles_(this.defaultStylesWoVertice_, defaultColor, false);\n  this.initializeStyles_(this.dirtyStyles_, dirtyColor);\n  this.initializeStyles_(this.dirtyStylesWoVertice_, dirtyColor, false);\n\n  this.scope_.$watch(\n    () => this.dirty,\n    this.setFeatureStyle_.bind(this)\n  );\n\n  this.features_.push(this.feature);\n\n  this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geometry);\n\n  // Toggle on\n  this.initializeInteractions_();\n  this.registerInteractions_();\n  this.toggle_(true);\n  this.resetGeometryChanges_();\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n// == API methods ==\n\n\n/**\n * Delete the feature after asking for a confirmation.\n * @export\n */\nexports.Controller.prototype.delete = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.dirty = false;\n    this.pending = true;\n\n    this.gmfEditFeature_.deleteFeature(\n      this.layerNodeId,\n      this.feature\n    ).then(\n      this.handleDeleteFeature_.bind(this)\n    );\n  }\n\n};\n\n\n/**\n * Save the current modifications.\n * @export\n */\nexports.Controller.prototype.save = function() {\n\n  this.pending = true;\n\n  // The geometry of the feature may contain Z in its coordinates, which\n  // GMF doesn't support.  This section ensures that the geometry gets purged\n  // of all Z from the coordinates before saving.\n  //\n  // Also, this is only done before saving on a clone of the feature. Doing\n  // it directly on the feature makes JSTS complain.\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    gmfObjecteditingGeom.toXY(geometry);\n  }\n\n  if (this.state_ === exports.Controller.State.INSERT) {\n    this.gmfEditFeature_.insertFeatures(\n      this.layerNodeId,\n      [feature]\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  } else if (this.state_ === exports.Controller.State.UPDATE) {\n    this.gmfEditFeature_.updateFeature(\n      this.layerNodeId,\n      feature\n    ).then(\n      this.handleEditFeature_.bind(this)\n    );\n  }\n};\n\n\n/**\n * Undo the latest modifications.\n * @export\n */\nexports.Controller.prototype.undo = function() {\n\n  if (this.geometryChanges_.length <= 1) {\n    return;\n  }\n\n  this.skipGeometryChange_ = true;\n\n  this.geometryChanges_.pop();\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[this.geometryChanges_.length - 1]);\n\n  this.feature.setGeometry(clone);\n\n  this.skipGeometryChange_ = false;\n};\n\n\n/**\n * Undo the latest modifications.\n * @return {boolean} Whether the state is INSERT or not.\n * @export\n */\nexports.Controller.prototype.isStateInsert = function() {\n  return this.state_ === exports.Controller.State.INSERT;\n};\n\n\n// == Private methods ==\n\n\n/**\n * Called after a delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleDeleteFeature_ = function(resp) {\n  this.feature.setGeometry(null);\n  this.resetGeometryChanges_();\n  this.state_ = exports.Controller.State.INSERT;\n  this.pending = false;\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Called after an 'insert' or 'update' request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller.prototype.handleEditFeature_ = function(resp) {\n  // (1) Update the id\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n  }\n  // (2) Reset geometry changes\n  this.resetGeometryChanges_();\n  // (3) Update state\n  if (this.feature.getGeometry()) {\n    this.state_ = exports.Controller.State.UPDATE;\n  } else {\n    this.state_ = exports.Controller.State.INSERT;\n  }\n  // (4) No longer pending\n  this.pending = false;\n  // (5) Refresh WMS layer\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. remove them from the map\n * @private\n */\nexports.Controller.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Activate or deactivate this component.\n * @param {boolean} active Whether to activate this component or not.\n * @private\n */\nexports.Controller.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const uid = `${exports.Controller.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    keys.push(\n      olEvents.listen(\n        this.feature,\n        olObject.getChangeEventType(this.feature.getGeometryName()),\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'change:active',\n        this.setFeatureStyle_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.modify_,\n        'modifyend',\n        this.handleModifyInteractionModifyEnd_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        window,\n        'beforeunload',\n        this.handleWindowBeforeUnload_,\n        this\n      )\n    );\n\n    keys.push(\n      olEvents.listen(\n        this.sketchFeatures,\n        'add',\n        this.handleSketchFeaturesAdd_,\n        this\n      )\n    );\n\n    toolMgr.registerTool(uid, this.modifyToolActivate_, true);\n    toolMgr.registerTool(uid, this.toolsToolActivate_, false);\n\n  } else {\n\n    this.undoAllChanges_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(uid, this.modifyToolActivate_);\n    toolMgr.unregisterTool(uid, this.toolsToolActivate_);\n\n  }\n\n  this.modify_.setActive(active);\n};\n\n\n/**\n * Undo all current changes.\n * @private\n */\nexports.Controller.prototype.undoAllChanges_ = function() {\n  const clone = exports.Controller.cloneGeometry_(\n    this.geometryChanges_[0]);\n  this.feature.setGeometry(clone);\n\n  this.resetGeometryChanges_();\n  this.dirty = false;\n  this.setFeatureStyle_();\n};\n\n\n/**\n * Reset the array of geometry changes.  If there are more than one changes,\n * reset them entirely. Then, if there's no changes, clone the current geometry\n * as the first entry. One entry means that there's no changes.\n * @private\n */\nexports.Controller.prototype.resetGeometryChanges_ = function() {\n  if (this.geometryChanges_.length > 1) {\n    this.geometryChanges_.length = 0;\n  }\n  if (this.geometryChanges_.length === 0) {\n    const geometry = this.feature.getGeometry();\n    const clone = exports.Controller.cloneGeometry_(geometry);\n    this.geometryChanges_.push(clone);\n  }\n};\n\n\n/**\n * Called after the modification interaction has completed modifying the\n * existing geometry. The new geometry is pushed in the changes array.\n * If the geometry type is `MultiPolygon`, we check if any of the inner\n * geometries intersects with one an other first. Those that does are merged\n * before being pushed to the changes.\n *\n * @param {ol.interaction.Modify.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleModifyInteractionModifyEnd_ = function(\n  evt\n) {\n  let geometry = this.feature.getGeometry();\n\n  if (geometry instanceof olGeomMultiPolygon) {\n    const jstsGeom = this.jstsOL3Parser_.read(geometry);\n    const jstsBuffered = jstsGeom.buffer(0);\n    geometry = ngeoUtils.toMulti(this.jstsOL3Parser_.write(jstsBuffered));\n    this.skipGeometryChange_ = true;\n    this.feature.setGeometry(geometry.clone());\n    this.skipGeometryChange_ = false;\n  }\n\n  const clone = exports.Controller.cloneGeometry_(geometry);\n  googAsserts.assert(clone);\n  this.geometryChanges_.push(clone);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {gmfx.StylesObject} styles Hash of style.\n * @param {ol.Color} color Color.\n * @param {boolean=} opt_incVertice Whether to include vertice or not. Defaults\n *     to `true`.\n * @private\n */\nexports.Controller.prototype.initializeStyles_ = function(\n  styles, color, opt_incVertice\n) {\n\n  const incVertice = opt_incVertice !== false;\n  const rgbaColor = color.slice();\n  rgbaColor.push(0.3);\n\n  const image = new olStyleCircle({\n    radius: 8,\n    stroke: new olStyleStroke({\n      color: color,\n      width: 1\n    }),\n    fill: new olStyleFill({color: rgbaColor})\n  });\n\n  styles['Point'] = new olStyleStyle({\n    image\n  });\n  styles['MultiPoint'] = new olStyleStyle({\n    image\n  });\n\n  styles['LineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['LineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiLineString'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 3\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiLineString'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n  styles['Polygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['Polygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n  styles['MultiPolygon'] = [\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: color,\n        width: 2\n      }),\n      fill: new olStyleFill({\n        color: rgbaColor\n      })\n    })\n  ];\n  if (incVertice) {\n    styles['MultiPolygon'].push(\n      this.ngeoFeatureHelper_.getVertexStyle(true)\n    );\n  }\n\n};\n\n\n/**\n * Set the style of the feature depending on:\n *  - the geometry type\n *  - the dirty state of the component\n *  - whether the modify control is active or not\n *\n * @private\n */\nexports.Controller.prototype.setFeatureStyle_ = function() {\n  const geometry = this.feature.getGeometry();\n  if (geometry) {\n    const geomType = geometry.getType();\n    const modifyActive = this.modify_.getActive();\n    let style;\n    if (this.dirty) {\n      if (modifyActive) {\n        style = this.dirtyStyles_[geomType];\n      } else {\n        style = this.dirtyStylesWoVertice_[geomType];\n      }\n    } else {\n      if (modifyActive) {\n        style = this.defaultStyles_[geomType];\n      } else {\n        style = this.defaultStylesWoVertice_[geomType];\n      }\n    }\n    this.feature.setStyle(style);\n  }\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf', i.e. groups are\n * excluded.\n *\n * If the Layertree controller node id is equal to the `layerNodeId` configured\n * with this component, then find the WMS layer associated with it for\n * for refresh purpose.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.Controller.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (\n    treeCtrl.node);\n  if (node.children && node.children.length) {\n    return;\n  }\n\n  // Set editable WMS layer for refresh purpose\n  if (node.id === this.layerNodeId) {\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage || layer instanceof olLayerTile);\n    this.editableWMSLayer_ = layer;\n  }\n\n};\n\n\n/**\n * Unregisters all currently registered Layertree controllers.\n *\n * Unset the WMS layer associated with the `layerNodeId` configured with\n * this component.\n *\n * @private\n */\nexports.Controller.prototype.unregisterAllTreeCtrl_ = function() {\n  this.editableWMSLayer_ = null;\n};\n\n\n/**\n * Refresh the WMS layer, if set.\n * @private\n */\nexports.Controller.prototype.refreshWMSLayer_ = function() {\n  if (this.editableWMSLayer_) {\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n};\n\n\n/**\n * Called before the window unloads. Show a confirmation message if there are\n * unsaved modifications.\n * @param {Event} e Event.\n * @return {string} Message\n * @private\n */\nexports.Controller.prototype.handleWindowBeforeUnload_ = function(e) {\n  const gettextCatalog = this.gettextCatalog_;\n  if (this.dirty) {\n    const msg = gettextCatalog.getString('There are unsaved changes.');\n    (e || window.event).returnValue = msg;\n    return msg;\n  }\n  return '';\n};\n\n\n/**\n * Called when a feature is added to the collection of sketch features.\n * Depending on the current behaviour, use the added sketch feature to process\n * the existing geometry.\n *\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller.prototype.handleSketchFeaturesAdd_ = function(evt) {\n  const sketchFeature = /** @type {ol.Feature} */ (evt.element);\n  const sketchGeom = /** @type {ol.geom.Geometry} */ (\n    sketchFeature.getGeometry());\n\n  const geom = this.feature.getGeometry();\n\n  if (geom) {\n    const jstsGeom = this.jstsOL3Parser_.read(geom);\n    const jstsSketchGeom = this.jstsOL3Parser_.read(sketchGeom);\n    let jstsProcessedGeom;\n\n    if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n      jstsProcessedGeom = jstsGeom.union(jstsSketchGeom);\n    } else {\n      if (jstsGeom.intersects(jstsSketchGeom)) {\n        jstsProcessedGeom = jstsGeom.difference(jstsSketchGeom);\n      }\n    }\n\n    if (jstsProcessedGeom) {\n      const processedGeom = this.jstsOL3Parser_.write(jstsProcessedGeom);\n      const multiGeom = ngeoUtils.toMulti(processedGeom);\n      this.feature.setGeometry(multiGeom.clone());\n    }\n\n  } else if (this.process === gmfObjecteditingToolsComponent.ProcessType.ADD) {\n    this.feature.setGeometry(ngeoUtils.toMulti(sketchGeom.clone()));\n  }\n\n  this.sketchFeatures.clear();\n};\n\n\n/**\n * Called when the geometry property of the feature changes, i.e. not when the\n * geometry itself changes but when a new geometry is set to the feature.\n *\n * This happens either when resetting the geometry to null, in which case\n * there's nothing to do here. Otherwise, it happens after the combinaison\n * of a sketch geometry with the existing feature geometry. This new geom\n * is pushed in the `geometryChanges_` array.\n *\n * @private\n */\nexports.Controller.prototype.handleFeatureGeometryChange_ = function() {\n  const geom = this.feature.getGeometry();\n  this.timeout_(() => {\n    this.featureHasGeom = !gmfObjecteditingGeom.isEmpty(geom);\n  });\n\n  if (this.skipGeometryChange_) {\n    return;\n  }\n\n  if (geom) {\n    // Use a timeout here, because there can be a scope digest already in\n    // progress. For example, with tools that requires the user to draw\n    // features on the map, we would need to manually call:\n    // this.scope_.$apply();\n    // For tools that use promises instead, such as the \"copy/delete\" from,\n    // a scope is already in progress so we must not invoke it again.\n    this.timeout_(() => {\n      this.geometryChanges_.push(geom.clone());\n    });\n  }\n};\n\n\n/**\n * @param {Array.<gmfx.ObjectEditingQueryableLayerInfo>} layersInfo List\n *     of queryable layers information, which contains the node and ogcServer.\n * @private\n */\nexports.Controller.prototype.handleGetQueryableLayersInfo_ = function(layersInfo) {\n  this.queryableLayersInfo = layersInfo;\n  if (this.queryableLayersInfo.length) {\n    this.selectedQueryableLayerInfo = this.queryableLayersInfo[0];\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller.prototype.handleDestroy_ = function() {\n  this.features_.clear();\n  this.toggle_(false);\n  this.unregisterInteractions_();\n};\n\n\n// == Static methods and type definitions ==\n\n\n/**\n * Utility method that gets the clone of a geometry, which can be null or\n * undefined. In the latter case, a null value is returned instead of a\n * geometry.\n * @param {?ol.geom.Geometry|undefined} geometry A geometry, undefined or\n *     null value.\n * @return {?ol.geom.Geometry} A geometry clone or null value.\n * @private\n */\nexports.Controller.cloneGeometry_ = function(geometry) {\n  let clone = null;\n  if (geometry) {\n    clone = geometry.clone();\n  }\n  return clone;\n};\n\n\n/**\n * @const\n * @private\n */\nexports.Controller.NAMESPACE_ = 'oe';\n\n\n/**\n * @enum {string}\n */\nexports.Controller.State = {\n  INSERT: 'insert',\n  UPDATE: 'update'\n};\n\n\nexports.controller('GmfObjecteditingController',\n  exports.Controller);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/objectediting/component.js","/**\n * @module gmf.objectediting.geom\n */\nconst exports = {};\nimport gmfObjecteditingCoordinate from 'gmf/objectediting/coordinate.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\n\n\n/**\n * Determines whether a given geometry is empty or not. A null or undefined\n * value can be given for convenience, i.e. when using methods than can\n * return a geometry or not, for example:\n * `gmf.objectediting.geom.isEmpty(feature.getGeometry())`.\n *\n * @param {?ol.geom.Geometry|undefined} geom Geometry.\n * @return {boolean} Whether the given geometry is empty or not. A null or\n *     undefined geometry is considered empty.\n */\nexports.isEmpty = function(geom) {\n  let isEmpty = true;\n  if (geom && geom instanceof olGeomSimpleGeometry) {\n    isEmpty = geom.getFlatCoordinates().length === 0;\n  }\n  return isEmpty;\n};\n\n\n/**\n * Convert all coordinates within a geometry object to XY, i.e. remove any\n * extra dimension other than X and Y to the coordinates of a geometry.\n *\n * @param {ol.geom.Geometry} geom Geometry\n */\nexports.toXY = function(geom) {\n  if (geom instanceof olGeomPoint) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 0)\n    );\n  } else if (geom instanceof olGeomMultiPoint ||\n             geom instanceof olGeomLineString\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 1)\n    );\n  } else if (geom instanceof olGeomMultiLineString ||\n             geom instanceof olGeomPolygon\n  ) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 2)\n    );\n  } else if (geom instanceof olGeomMultiPolygon) {\n    geom.setCoordinates(\n      gmfObjecteditingCoordinate.toXY(geom.getCoordinates(), 3)\n    );\n  } else {\n    throw 'gmf.objectediting.geom.toXY - unsupported geometry type';\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/objectediting/geom.js","/**\n * @module gmf.objectediting.coordinate\n */\nconst exports = {};\n\n\n/**\n * Convert a given coordinate or list of coordinates of any 'nesting' level\n * to XY, i.e. remove any extra dimensions to the coordinates and keep only 2.\n *\n * @param {Array.<ol.Coordinate>|ol.Coordinate} coordinates Coordinates\n * @param {number} nesting Nesting level.\n * @return {Array.<ol.Coordinate>|ol.Coordinate} Converted coordinates.\n */\nexports.toXY = function(coordinates, nesting) {\n  if (nesting === 0) {\n    if (coordinates.length > 2) {\n      coordinates = [coordinates[0], coordinates[1]];\n    }\n  } else {\n    for (let i = 0, ii = coordinates.length; i < ii; i++) {\n      coordinates[i] = exports.toXY(coordinates[i], nesting - 1);\n    }\n  }\n  return coordinates;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/objectediting/coordinate.js","/**\n * @module gmf.objectediting.toolsComponent\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfObjecteditingGetWMSFeatureComponent from 'gmf/objectediting/getWMSFeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreateregularpolygonfromclickComponent from 'ngeo/editing/createregularpolygonfromclickComponent.js';\n\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingToolsComponent', [\n  gmfObjecteditingGetWMSFeatureComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoEditingCreateregularpolygonfromclickComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\n/**\n * A list of additional options for this directive that are not defined as\n * html attributes. All keys of this hash are optional. For the complete list\n * of keys and their possible values, see in gmfx.js, under:\n * `gmfx.ObjectEditingToolsOptions`.\n */\nexports.value('gmfObjectEditingToolsOptions', {});\n\n\n/**\n * Directive used to edit the geometry of a single feature using advanced\n * tools.\n *\n * Example:\n *\n *     <gmf-objecteditingtools\n *         gmf-objecteditingtools-active=\"ctrl.objectEditingActive\"\n *         gmf-objecteditingtools-copyfromactive=\"ctrl.objectEditingCopyFromActive\"\n *         gmf-objecteditingtools-deletefromactive=\"ctrl.objectEditingDeleteFromActive\"\n *         gmf-objecteditingtools-feature=\"ctrl.objectEditingFeature\"\n *         gmf-objecteditingtools-geomtype=\"ctrl.objectEditingGeomType\"\n *         gmf-objecteditingtools-map=\"::ctrl.map\"\n *         gmf-objecteditingtools-process=\"::ctrl.process\"\n *         gmf-objecteditingtools-queryablelayerinfo=\"::ctrl.queryableLayerInfo\"\n *         gmf-objecteditingtools-requireslayer=\"ctrl.requiresLayer\"\n *         gmf-objecteditingtools-sketchfeatures=\"::ctrl.sketchFeatures\">\n *     </gmf-objecteditingtools>\n *\n * @htmlAttribute {boolean} gmf-objecteditingtools-active Whether the\n *     directive is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-copyfromactive Whether the\n *     'Copy from' tool is active or not.\n * @htmlAttribute {boolean} gmf-objecteditingtools-deletefromactive Whether the\n *     'Delete from' tool is active or not.\n * @htmlAttribute {ol.Feature} gmf-objecteditingtools-feature The feature to\n *     edit.\n * @htmlAttribute {string} gmf-objecteditingtools-geomtype The geometry type.\n * @htmlAttribute {ol.Map} gmf-objecteditingtools-map The map.\n * @htmlAttribute {string} gmf-objectediting-process Determines the\n *     behavior to adopt when sketch features are added.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objectediting-queryablelayerinfo\n *     Queryable layer information.\n * @htmlAttribute {boolean} gmf-objectediting-requireslayer Flag that determines\n *     if the currently active tool requires a queryable layer or not.\n * @htmlAttribute {ol.Collection.<ol.Feature>} gmf-objectediting-sketchfeatures\n *     Collection of temporary features being drawn by the tools.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditingtools\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfObjecteditingtoolsController as oetCtrl',\n    scope: {\n      'active': '=gmfObjecteditingtoolsActive',\n      'copyFromActive': '=gmfObjecteditingtoolsCopyfromactive',\n      'deleteFromActive': '=gmfObjecteditingtoolsDeletefromactive',\n      'feature': '<gmfObjecteditingtoolsFeature',\n      'geomType': '<gmfObjecteditingtoolsGeomtype',\n      'map': '<gmfObjecteditingtoolsMap',\n      'process': '=gmfObjecteditingtoolsProcess',\n      'queryableLayerInfo': '=gmfObjecteditingtoolsQueryablelayerinfo',\n      'requiresLayer': '=gmfObjecteditingtoolsRequireslayer',\n      'sketchFeatures': '<gmfObjecteditingtoolsSketchfeatures'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/objectediting/toolsComponent.html`\n  };\n};\n\nexports.directive('gmfObjecteditingtools',\n  exports.directive_);\n\n\n/**\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditingtoolsController\n */\nexports.Controller_ = function($injector, $scope, ngeoToolActivateMgr) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.copyFromActive;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.deleteFromActive;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.queryableLayerInfo;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.process;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.requiresLayer;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.sketchFeatures;\n\n\n  // == Injected properties ==\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  // == Other properties ==\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomTypePolygon = ngeoGeometryType.POLYGON;\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.toolActiveNames_ = [];\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  this.registerTool_('drawActive',\n    exports.ProcessType.ADD);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.eraseActive = false;\n\n  this.registerTool_('eraseActive',\n    exports.ProcessType.DELETE);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawTriangleActive = false;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleAngle = Math.PI / 180 * 90; // 90 degrees\n\n  const oeToolsOptions = /** @type {gmfx.ObjectEditingToolsOptions} */ (\n    $injector.get('gmfObjectEditingToolsOptions'));\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.triangleRadius = oeToolsOptions.regularPolygonRadius !== undefined ?\n    oeToolsOptions.regularPolygonRadius : 100;\n\n  this.registerTool_('drawTriangleActive',\n    exports.ProcessType.ADD);\n\n  this.registerTool_('copyFromActive',\n    exports.ProcessType.ADD, true);\n\n  this.registerTool_('deleteFromActive',\n    exports.ProcessType.DELETE, true);\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Register a tool using its `active` property name and what behavior it should\n * have when it is active and a sketch feature is added\n *\n * This method:\n *  - registers a watcher on the tool active property to manage this directive\n *    main active property, i.e the directive is considered active when one\n *    of the tools is active,  otherwise it's not active.\n *\n *  - creates a `ngeo.misc.ToolActivate` object and registers it in a group so\n *    that only one tool can be active at a time\n *\n * @param {string} toolActiveName The name of the active property for the tool.\n * @param {string} process The behavior the tool should use when active\n *     and when sketch features are added.\n * @param {boolean=} opt_requiresLayer Whether the tool requires the queryable\n *     layer or not. Defaults to `false`.\n * @private\n */\nexports.Controller_.prototype.registerTool_ = function(\n  toolActiveName, process, opt_requiresLayer\n) {\n\n  const requiresLayer = opt_requiresLayer === true;\n\n  this.scope_.$watch(\n    () => this[toolActiveName],\n    this.handleToolActiveChange_.bind(this, process, requiresLayer)\n  );\n\n  const group = `${exports.Controller_.NAMESPACE_}-${olBase.getUid(this)}`;\n  const toolActivate = new ngeoMiscToolActivate(this, toolActiveName);\n  this.ngeoToolActivateMgr_.registerTool(group, toolActivate, false);\n\n  this.toolActiveNames_.push(toolActiveName);\n\n};\n\n\n/**\n * Called when any of the tool 'active' property changes.\n * @param {string} process The behavior the tool should use when active.\n * @param {boolean} requiresLayer Whether the tool requires the queryable\n *     layer or not.\n * @param {boolean|undefined} newVal New value.\n * @private\n */\nexports.Controller_.prototype.handleToolActiveChange_ = function(\n  process, requiresLayer, newVal\n) {\n\n  // Update process if a tool was activated.\n  if (newVal) {\n    this.process = process;\n    this.requiresLayer = requiresLayer;\n  }\n\n  // Update active property\n  let active = false;\n  for (let i = 0, ii = this.toolActiveNames_.length; i < ii; i++) {\n    active = active || this[this.toolActiveNames_[i]];\n    if (active) {\n      break;\n    }\n  }\n  this.active = active;\n\n  if (!this.active) {\n    this.requiresLayer = false;\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {};\n\n\nexports.controller('GmfObjecteditingtoolsController',\n  exports.Controller_);\n\n\n/**\n * @const\n * @private\n */\nexports.Controller_.NAMESPACE_ = 'oet';\n\n\n/**\n * @enum {string}\n */\nexports.ProcessType = {\n  ADD: 'add',\n  DELETE: 'delete'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/objectediting/toolsComponent.js","/**\n * @module gmf.objectediting.getWMSFeatureComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfObjecteditingQuery from 'gmf/objectediting/Query.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfObjecteditingGetWMSFeatureComponent', [\n  gmfObjecteditingQuery.module.name,\n]);\n\n\n/**\n * When activated, this directive registers clicks on an OL3 map and use the\n * clicked coordinate to fetch a feature using the ObjectEditing query service.\n * A feature returned is pushed to a collection.\n *\n * Example:\n *\n *     <gmf-objecteditinggetwmsfeature\n *         gmf-objecteditinggetwmsfeature-active=\"ctrl.active\"\n *         gmf-objecteditinggetwmsfeature-features=\"ctrl.features\"\n *         gmf-objecteditinggetwmsfeature-layerinfo=\"ctrl.layerInfo\"\n *         gmf-objecteditinggetwmsfeature-map=\"::ctrl.map\">\n *     </gmf-objecteditinggetwmsfeature>\n *\n * @htmlAttribute {boolean} gmf-objecteditinggetwmsfeature-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Collection} gmf-objecteditinggetwmsfeature-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {gmfx.ObjectEditingQueryableLayerInfo} gmf-objecteditinggetwmsfeature-layerinfo Queryable layer info.\n * @htmlAttribute {ol.Map} gmf-objecteditinggetwmsfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfObjecteditinggetwmsfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'gmfObjecteditinggetwmsfeatureController',\n    scope: {\n      'active': '=gmfObjecteditinggetwmsfeatureActive',\n      'features': '<gmfObjecteditinggetwmsfeatureFeatures',\n      'layerInfo': '=gmfObjecteditinggetwmsfeatureLayerinfo',\n      'map': '<gmfObjecteditinggetwmsfeatureMap'\n    },\n    bindToController: true\n  };\n};\n\nexports.directive('gmfObjecteditinggetwmsfeature',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.objectediting.Query} gmfObjectEditingQuery GMF ObjectEditing\n *     query service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfObjecteditinggetwmsfeatureController\n */\nexports.Controller_ = function($scope,\n  gmfObjectEditingQuery) {\n\n  // Scope properties\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {gmfx.ObjectEditingQueryableLayerInfo}\n   * @export\n   */\n  this.layerInfo;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n\n  // Injected properties\n\n  /**\n   * @type {gmf.objectediting.Query}\n   * @private\n   */\n  this.gmfObjectEditingQuery_ = gmfObjectEditingQuery;\n\n};\n\n\n/**\n * @param {boolean} active Active.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (active) {\n    olEvents.listen(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  } else {\n    olEvents.unlisten(\n      this.map,\n      'click',\n      this.handleMapClick_,\n      this\n    );\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  this.gmfObjectEditingQuery_.getFeatureInfo(\n    this.layerInfo,\n    evt.coordinate,\n    this.map\n  ).then((feature) => {\n    if (feature) {\n      this.features.push(feature);\n    }\n  });\n};\n\nexports.controller('gmfObjecteditinggetwmsfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/objectediting/getWMSFeatureComponent.js","/**\n * @module ngeo.editing.createregularpolygonfromclickComponent\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoInteractionDrawRegularPolygonFromClick from 'ngeo/interaction/DrawRegularPolygonFromClick.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\n\nconst exports = angular.module('ngeoCreateregularpolygonfromclick', [\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createregularpolygonfromclick\n *       ngeo-createregularpolygonfromclick-active=\"ctrl.active\"\n *       ngeo-createregularpolygonfromclick-angle=\"::ctrl.angle\"\n *       ngeo-createregularpolygonfromclick-features=\"ctrl.features\"\n *       ngeo-createregularpolygonfromclick-map=\"::ctrl.map\"\n *       ngeo-createregularpolygonfromclick-radius=\"::ctrl.radius\"\n *       ngeo-createregularpolygonfromclick-sides=\"::ctrl.sides\"\n *       class=\"btn btn-default ngeo-createregularpolygonfromclick\"\n *       ng-class=\"{active: ctrl.active}\"\n *       ng-model=\"ctrl.active\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createregularpolygonfromclick-active Whether\n *     the directive is active or not.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-angle\n *     Angle in radians. A value of 0 will have one of the shape's point\n *     facing up. Default value is 0.\n * @htmlAttribute {ol.Collection} ngeo-createregularpolygonfromclick-features\n *     The collection of features where to add those created by this directive.\n * @htmlAttribute {ol.Map} ngeo-createregularpolygonfromclick-map The map.\n * @htmlAttribute {number} ngeo-createregularpolygonfromclick-radius Radius\n *     size in map units.\n * @htmlAttribute {number|undefined} ngeo-createregularpolygonfromclick-sides\n *     The number of sides for the regular polygon. Default value is 3.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreateregularpolygonfromclick\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreateregularpolygonfromclickController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreateregularpolygonfromclickActive',\n      'angle': '<?ngeoCreateregularpolygonfromclickAngle',\n      'features': '=ngeoCreateregularpolygonfromclickFeatures',\n      'map': '=ngeoCreateregularpolygonfromclickMap',\n      'radius': '<ngeoCreateregularpolygonfromclickRadius',\n      'sides': '<?ngeoCreateregularpolygonfromclickSides'\n    }\n  };\n};\n\nexports.directive(\n  'ngeoCreateregularpolygonfromclick',\n  exports.directive_\n);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreateregularpolygonfromclickController\n */\nexports.Controller_ = function($scope) {\n\n  // == Scope properties ==\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.angle;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.radius;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.sides;\n\n\n  // == Other properties ==\n\n  /**\n   * @type {ngeo.interaction.DrawRegularPolygonFromClick}\n   * @private\n   */\n  this.interaction_;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.interactionListenerKey_;\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n\n  this.interaction_ = new ngeoInteractionDrawRegularPolygonFromClick({\n    angle: this.angle,\n    radius: this.radius,\n    sides: this.sides\n  });\n  this.interaction_.setActive(this.active);\n\n  this.interactionListenerKey_ = olEvents.listen(\n    this.interaction_,\n    'drawend',\n    this.handleDrawEnd_,\n    this\n  );\n\n  this.map.addInteraction(this.interaction_);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(evt) {\n  const feature = new olFeature(evt.feature.getGeometry());\n  this.features.push(feature);\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  olEvents.unlistenByKey(this.interactionListenerKey_);\n  this.interaction_.setActive(false);\n  this.map.removeInteraction(this.interaction_);\n};\n\n\nexports.controller(\n  'ngeoCreateregularpolygonfromclickController',\n  exports.Controller_\n);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/createregularpolygonfromclickComponent.js","/**\n * @module ngeo.interaction.DrawRegularPolygonFromClick\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\n\n/**\n * @classdesc\n * This interactions allows drawing regular polygons of a pre-determined number\n * of sides and size a a clicked location on the map.\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.DrawRegularPolygonFromClickOptions} options Options\n */\nconst exports = function(options) {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.radius_ = options.radius;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.sides_ = options.sides !== undefined ? options.sides : 3;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(\n  exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n\n  if (this.getMap()) {\n    if (active) {\n      this.enable_();\n    } else {\n      this.disable_();\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const active = this.getActive();\n\n  const currentMap = this.getMap();\n  if (currentMap && active) {\n    this.disable_();\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map && active) {\n    this.enable_();\n  }\n\n};\n\n\n/**\n * Enable the interaction. Called when added to a map AND active.\n * @private\n */\nexports.prototype.enable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.push(\n    olEvents.listen(map, 'click', this.handleMapClick_, this)\n  );\n};\n\n\n/**\n * Disable the interaction. Called when removed from a map or deactivated.\n * @private\n */\nexports.prototype.disable_ = function() {\n  const map = this.getMap();\n  googAsserts.assert(map, 'Map should be set.');\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\n/**\n * Called the the map is clicked. Create a regular polygon at the clicked\n * location using the configuration\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @private\n */\nexports.prototype.handleMapClick_ = function(evt) {\n  const center = evt.coordinate;\n  const geometry = olGeomPolygon.fromCircle(\n    new olGeomCircle(center), this.sides_\n  );\n\n  olGeomPolygon.makeRegular(geometry, center, this.radius_, this.angle_);\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), new olFeature(geometry)));\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawRegularPolygonFromClick.js","export default function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/hasInterface.js\n// module id = null\n// module chunks = ","export default function (target, source) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) target[key] = source[key]\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/extend.js\n// module id = null\n// module chunks = ","export default function Clonable () {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/lang/Cloneable.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nimport Cloneable from '../../../../java/lang/Cloneable';\nexport default function CoordinateSequence() {}\nextend(CoordinateSequence.prototype, {\n\tsetOrdinate: function (index, ordinateIndex, value) {},\n\tsize: function () {},\n\tgetOrdinate: function (index, ordinateIndex) {},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], coord = arguments[1];\n\t\t}\n\t},\n\tgetCoordinateCopy: function (i) {},\n\tgetDimension: function () {},\n\tgetX: function (index) {},\n\texpandEnvelope: function (env) {},\n\tcopy: function () {},\n\tgetY: function (index) {},\n\ttoCoordinateArray: function () {},\n\tinterfaces_: function () {\n\t\treturn [Cloneable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequence;\n\t}\n});\nCoordinateSequence.X = 0;\nCoordinateSequence.Y = 1;\nCoordinateSequence.Z = 2;\nCoordinateSequence.M = 3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequence.js\n// module id = null\n// module chunks = ","import hasInterface from '../../../../hasInterface';\nimport extend from '../../../../extend';\nimport CoordinateSequence from './CoordinateSequence';\nexport default function CoordinateSequenceFactory() {}\nextend(CoordinateSequenceFactory.prototype, {\n\tcreate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordSeq = arguments[0];\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceFactory;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequenceFactory.js\n// module id = null\n// module chunks = ","export default function IllegalArgumentException () {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/lang/IllegalArgumentException.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nexport default function GeometryComponentFilter() {}\nextend(GeometryComponentFilter.prototype, {\n\tfilter: function (geom) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryComponentFilter;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/GeometryComponentFilter.js\n// module id = null\n// module chunks = ","export default function Comparable () {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/lang/Comparable.js\n// module id = null\n// module chunks = ","export default function Serializable () {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/io/Serializable.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nexport default function NumberUtil() {}\nextend(NumberUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NumberUtil;\n\t}\n});\nNumberUtil.equalsWithTolerance = function (x1, x2, tolerance) {\n\treturn Math.abs(x1 - x2) <= tolerance;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/util/NumberUtil.js\n// module id = null\n// module chunks = ","export default function Double () {}\nDouble.isNaN = n => Number.isNaN(n)\nDouble.doubleToLongBits = n => n\nDouble.longBitsToDouble = n => n\nDouble.isInfinite = n => !Number.isFinite(n)\nDouble.MAX_VALUE = Number.MAX_VALUE\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/lang/Double.js\n// module id = null\n// module chunks = ","export default function Comparator () {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/Comparator.js\n// module id = null\n// module chunks = ","export default function RuntimeException (message) {\n  this.name = 'RuntimeException'\n  this.message = message\n  this.stack = (new Error()).stack\n  Error.call(this, message)\n}\n\nRuntimeException.prototype = Object.create(Error.prototype)\nRuntimeException.prototype.constructor = Error\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/lang/RuntimeException.js\n// module id = null\n// module chunks = ","export default function (c, p) {\n  c.prototype = Object.create(p.prototype)\n  c.prototype.constructor = c\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/inherits.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nimport inherits from '../../../../inherits';\nexport default function AssertionFailedException() {\n\tif (arguments.length === 0) {\n\t\tRuntimeException.call(this);\n\t} else if (arguments.length === 1) {\n\t\tlet message = arguments[0];\n\t\tRuntimeException.call(this, message);\n\t}\n}\ninherits(AssertionFailedException, RuntimeException);\nextend(AssertionFailedException.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn AssertionFailedException;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/util/AssertionFailedException.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nimport AssertionFailedException from './AssertionFailedException';\nexport default function Assert() {}\nextend(Assert.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Assert;\n\t}\n});\nAssert.shouldNeverReachHere = function () {\n\tif (arguments.length === 0) {\n\t\tAssert.shouldNeverReachHere(null);\n\t} else if (arguments.length === 1) {\n\t\tlet message = arguments[0];\n\t\tthrow new AssertionFailedException(\"Should never reach here\" + (message !== null ? \": \" + message : \"\"));\n\t}\n};\nAssert.isTrue = function () {\n\tif (arguments.length === 1) {\n\t\tlet assertion = arguments[0];\n\t\tAssert.isTrue(assertion, null);\n\t} else if (arguments.length === 2) {\n\t\tlet assertion = arguments[0], message = arguments[1];\n\t\tif (!assertion) {\n\t\t\tif (message === null) {\n\t\t\t\tthrow new AssertionFailedException();\n\t\t\t} else {\n\t\t\t\tthrow new AssertionFailedException(message);\n\t\t\t}\n\t\t}\n\t}\n};\nAssert.equals = function () {\n\tif (arguments.length === 2) {\n\t\tlet expectedValue = arguments[0], actualValue = arguments[1];\n\t\tAssert.equals(expectedValue, actualValue, null);\n\t} else if (arguments.length === 3) {\n\t\tlet expectedValue = arguments[0], actualValue = arguments[1], message = arguments[2];\n\t\tif (!actualValue.equals(expectedValue)) {\n\t\t\tthrow new AssertionFailedException(\"Expected \" + expectedValue + \" but encountered \" + actualValue + (message !== null ? \": \" + message : \"\"));\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/util/Assert.js\n// module id = null\n// module chunks = ","import NumberUtil from '../util/NumberUtil';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Comparator from '../../../../java/util/Comparator';\nimport Serializable from '../../../../java/io/Serializable';\nimport Assert from '../util/Assert';\nexport default function Coordinate() {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.z = null;\n\tif (arguments.length === 0) {\n\t\tCoordinate.call(this, 0.0, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tlet c = arguments[0];\n\t\tCoordinate.call(this, c.x, c.y, c.z);\n\t} else if (arguments.length === 2) {\n\t\tlet x = arguments[0], y = arguments[1];\n\t\tCoordinate.call(this, x, y, Coordinate.NULL_ORDINATE);\n\t} else if (arguments.length === 3) {\n\t\tlet x = arguments[0], y = arguments[1], z = arguments[2];\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n}\nextend(Coordinate.prototype, {\n\tsetOrdinate: function (ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\tthis.x = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Y:\n\t\t\t\tthis.y = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Z:\n\t\t\t\tthis.z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t\t}\n\t},\n\tequals2D: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\tif (this.x !== other.x) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.y !== other.y) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet c = arguments[0], tolerance = arguments[1];\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetOrdinate: function (ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\treturn this.x;\n\t\t\tcase Coordinate.Y:\n\t\t\t\treturn this.y;\n\t\t\tcase Coordinate.Z:\n\t\t\t\treturn this.z;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t},\n\tequals3D: function (other) {\n\t\treturn this.x === other.x && this.y === other.y && (this.z === other.z || Double.isNaN(this.z) && Double.isNaN(other.z));\n\t},\n\tequals: function (other) {\n\t\tif (!(other instanceof Coordinate)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.equals2D(other);\n\t},\n\tequalInZ: function (c, tolerance) {\n\t\treturn NumberUtil.equalsWithTolerance(this.z, c.z, tolerance);\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tif (this.x < other.x) return -1;\n\t\tif (this.x > other.x) return 1;\n\t\tif (this.y < other.y) return -1;\n\t\tif (this.y > other.y) return 1;\n\t\treturn 0;\n\t},\n\tclone: function () {\n\t\ttry {\n\t\t\tvar coord = null;\n\t\t\treturn coord;\n\t\t} catch (e) {\n\t\t\tif (e instanceof CloneNotSupportedException) {\n\t\t\t\tAssert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\");\n\t\t\t\treturn null;\n\t\t\t} else throw e;\n\t\t} finally {}\n\t},\n\tcopy: function () {\n\t\treturn new Coordinate(this);\n\t},\n\ttoString: function () {\n\t\treturn \"(\" + this.x + \", \" + this.y + \", \" + this.z + \")\";\n\t},\n\tdistance3D: function (c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\tvar dz = this.z - c.z;\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\n\t},\n\tdistance: function (c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function () {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this.x);\n\t\tresult = 37 * result + Coordinate.hashCode(this.y);\n\t\treturn result;\n\t},\n\tsetCoordinate: function (other) {\n\t\tthis.x = other.x;\n\t\tthis.y = other.y;\n\t\tthis.z = other.z;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable, Cloneable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Coordinate;\n\t}\n});\nCoordinate.hashCode = function () {\n\tif (arguments.length === 1 && typeof arguments[0] === \"number\") {\n\t\tlet x = arguments[0];\n\t\tvar f = Double.doubleToLongBits(x);\n\t\treturn Math.trunc(f ^ f >>> 32);\n\t}\n};\nfunction DimensionalComparator() {\n\tthis._dimensionsToTest = 2;\n\tif (arguments.length === 0) {\n\t\tDimensionalComparator.call(this, 2);\n\t} else if (arguments.length === 1) {\n\t\tlet dimensionsToTest = arguments[0];\n\t\tif (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException(\"only 2 or 3 dimensions may be specified\");\n\t\tthis._dimensionsToTest = dimensionsToTest;\n\t}\n}\nextend(DimensionalComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar c1 = o1;\n\t\tvar c2 = o2;\n\t\tvar compX = DimensionalComparator.compare(c1.x, c2.x);\n\t\tif (compX !== 0) return compX;\n\t\tvar compY = DimensionalComparator.compare(c1.y, c2.y);\n\t\tif (compY !== 0) return compY;\n\t\tif (this._dimensionsToTest <= 2) return 0;\n\t\tvar compZ = DimensionalComparator.compare(c1.z, c2.z);\n\t\treturn compZ;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn DimensionalComparator;\n\t}\n});\nDimensionalComparator.compare = function (a, b) {\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\tif (Double.isNaN(a)) {\n\t\tif (Double.isNaN(b)) return 0;\n\t\treturn -1;\n\t}\n\tif (Double.isNaN(b)) return 1;\n\treturn 0;\n};\nCoordinate.DimensionalComparator = DimensionalComparator;\nCoordinate.serialVersionUID = 6683108902428366910;\nCoordinate.NULL_ORDINATE = Double.NaN;\nCoordinate.X = 0;\nCoordinate.Y = 1;\nCoordinate.Z = 2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/Coordinate.js\n// module id = null\n// module chunks = ","import Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function Envelope() {\n\tthis._minx = null;\n\tthis._maxx = null;\n\tthis._miny = null;\n\tthis._maxy = null;\n\tif (arguments.length === 0) {\n\t\tthis.init();\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\tlet env = arguments[0];\n\t\t\tthis.init(env);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t} else if (arguments.length === 4) {\n\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\n\t\tthis.init(x1, x2, y1, y2);\n\t}\n}\nextend(Envelope.prototype, {\n\tgetArea: function () {\n\t\treturn this.getWidth() * this.getHeight();\n\t},\n\tequals: function (other) {\n\t\tif (!(other instanceof Envelope)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherEnvelope = other;\n\t\tif (this.isNull()) {\n\t\t\treturn otherEnvelope.isNull();\n\t\t}\n\t\treturn this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY();\n\t},\n\tintersection: function (env) {\n\t\tif (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope();\n\t\tvar intMinX = this._minx > env._minx ? this._minx : env._minx;\n\t\tvar intMinY = this._miny > env._miny ? this._miny : env._miny;\n\t\tvar intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n\t\tvar intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n\t\treturn new Envelope(intMinX, intMaxX, intMinY, intMaxY);\n\t},\n\tisNull: function () {\n\t\treturn this._maxx < this._minx;\n\t},\n\tgetMaxX: function () {\n\t\treturn this._maxx;\n\t},\n\tcovers: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.covers(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (this.isNull()) return false;\n\t\t\treturn x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy;\n\t\t}\n\t},\n\tintersects: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.intersects(p.x, p.y);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\t\tlet a = arguments[0], b = arguments[1];\n\t\t\t\tif (this.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tvar envminx = a.x < b.x ? a.x : b.x;\n\t\t\t\tif (envminx > this._maxx) return false;\n\t\t\t\tvar envmaxx = a.x > b.x ? a.x : b.x;\n\t\t\t\tif (envmaxx < this._minx) return false;\n\t\t\t\tvar envminy = a.y < b.y ? a.y : b.y;\n\t\t\t\tif (envminy > this._maxy) return false;\n\t\t\t\tvar envmaxy = a.y > b.y ? a.y : b.y;\n\t\t\t\tif (envmaxy < this._miny) return false;\n\t\t\t\treturn true;\n\t\t\t} else if (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\t\tif (this.isNull()) return false;\n\t\t\t\treturn !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny);\n\t\t\t}\n\t\t}\n\t},\n\tgetMinY: function () {\n\t\treturn this._miny;\n\t},\n\tgetMinX: function () {\n\t\treturn this._minx;\n\t},\n\texpandToInclude: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\tthis.expandToInclude(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (other.isNull()) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (this.isNull()) {\n\t\t\t\t\tthis._minx = other.getMinX();\n\t\t\t\t\tthis._maxx = other.getMaxX();\n\t\t\t\t\tthis._miny = other.getMinY();\n\t\t\t\t\tthis._maxy = other.getMaxY();\n\t\t\t\t} else {\n\t\t\t\t\tif (other._minx < this._minx) {\n\t\t\t\t\t\tthis._minx = other._minx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._maxx > this._maxx) {\n\t\t\t\t\t\tthis._maxx = other._maxx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._miny < this._miny) {\n\t\t\t\t\t\tthis._miny = other._miny;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._maxy > this._maxy) {\n\t\t\t\t\t\tthis._maxy = other._maxy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (this.isNull()) {\n\t\t\t\tthis._minx = x;\n\t\t\t\tthis._maxx = x;\n\t\t\t\tthis._miny = y;\n\t\t\t\tthis._maxy = y;\n\t\t\t} else {\n\t\t\t\tif (x < this._minx) {\n\t\t\t\t\tthis._minx = x;\n\t\t\t\t}\n\t\t\t\tif (x > this._maxx) {\n\t\t\t\t\tthis._maxx = x;\n\t\t\t\t}\n\t\t\t\tif (y < this._miny) {\n\t\t\t\t\tthis._miny = y;\n\t\t\t\t}\n\t\t\t\tif (y > this._maxy) {\n\t\t\t\t\tthis._maxy = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tminExtent: function () {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w < h) return w;\n\t\treturn h;\n\t},\n\tgetWidth: function () {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._maxx - this._minx;\n\t},\n\tcompareTo: function (o) {\n\t\tvar env = o;\n\t\tif (this.isNull()) {\n\t\t\tif (env.isNull()) return 0;\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (env.isNull()) return 1;\n\t\t}\n\t\tif (this._minx < env._minx) return -1;\n\t\tif (this._minx > env._minx) return 1;\n\t\tif (this._miny < env._miny) return -1;\n\t\tif (this._miny > env._miny) return 1;\n\t\tif (this._maxx < env._maxx) return -1;\n\t\tif (this._maxx > env._maxx) return 1;\n\t\tif (this._maxy < env._maxy) return -1;\n\t\tif (this._maxy > env._maxy) return 1;\n\t\treturn 0;\n\t},\n\ttranslate: function (transX, transY) {\n\t\tif (this.isNull()) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n\t},\n\ttoString: function () {\n\t\treturn \"Env[\" + this._minx + \" : \" + this._maxx + \", \" + this._miny + \" : \" + this._maxy + \"]\";\n\t},\n\tsetToNull: function () {\n\t\tthis._minx = 0;\n\t\tthis._maxx = -1;\n\t\tthis._miny = 0;\n\t\tthis._maxy = -1;\n\t},\n\tgetHeight: function () {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._maxy - this._miny;\n\t},\n\tmaxExtent: function () {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w > h) return w;\n\t\treturn h;\n\t},\n\texpandBy: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet distance = arguments[0];\n\t\t\tthis.expandBy(distance, distance);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet deltaX = arguments[0], deltaY = arguments[1];\n\t\t\tif (this.isNull()) return null;\n\t\t\tthis._minx -= deltaX;\n\t\t\tthis._maxx += deltaX;\n\t\t\tthis._miny -= deltaY;\n\t\t\tthis._maxy += deltaY;\n\t\t\tif (this._minx > this._maxx || this._miny > this._maxy) this.setToNull();\n\t\t}\n\t},\n\tcontains: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\treturn this.covers(other);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.covers(p);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\treturn this.covers(x, y);\n\t\t}\n\t},\n\tcentre: function () {\n\t\tif (this.isNull()) return null;\n\t\treturn new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0);\n\t},\n\tinit: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.setToNull();\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet env = arguments[0];\n\t\t\t\tthis._minx = env._minx;\n\t\t\t\tthis._maxx = env._maxx;\n\t\t\t\tthis._miny = env._miny;\n\t\t\t\tthis._maxy = env._maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\n\t\t\tif (x1 < x2) {\n\t\t\t\tthis._minx = x1;\n\t\t\t\tthis._maxx = x2;\n\t\t\t} else {\n\t\t\t\tthis._minx = x2;\n\t\t\t\tthis._maxx = x1;\n\t\t\t}\n\t\t\tif (y1 < y2) {\n\t\t\t\tthis._miny = y1;\n\t\t\t\tthis._maxy = y2;\n\t\t\t} else {\n\t\t\t\tthis._miny = y2;\n\t\t\t\tthis._maxy = y1;\n\t\t\t}\n\t\t}\n\t},\n\tgetMaxY: function () {\n\t\treturn this._maxy;\n\t},\n\tdistance: function (env) {\n\t\tif (this.intersects(env)) return 0;\n\t\tvar dx = 0.0;\n\t\tif (this._maxx < env._minx) dx = env._minx - this._maxx; else if (this._minx > env._maxx) dx = this._minx - env._maxx;\n\t\tvar dy = 0.0;\n\t\tif (this._maxy < env._miny) dy = env._miny - this._maxy; else if (this._miny > env._maxy) dy = this._miny - env._maxy;\n\t\tif (dx === 0.0) return dy;\n\t\tif (dy === 0.0) return dx;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function () {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this._minx);\n\t\tresult = 37 * result + Coordinate.hashCode(this._maxx);\n\t\tresult = 37 * result + Coordinate.hashCode(this._miny);\n\t\tresult = 37 * result + Coordinate.hashCode(this._maxy);\n\t\treturn result;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Envelope;\n\t}\n});\nEnvelope.intersects = function () {\n\tif (arguments.length === 3) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q = arguments[2];\n\t\tif (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else if (arguments.length === 4) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3];\n\t\tvar minq = Math.min(q1.x, q2.x);\n\t\tvar maxq = Math.max(q1.x, q2.x);\n\t\tvar minp = Math.min(p1.x, p2.x);\n\t\tvar maxp = Math.max(p1.x, p2.x);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\tminq = Math.min(q1.y, q2.y);\n\t\tmaxq = Math.max(q1.y, q2.y);\n\t\tminp = Math.min(p1.y, p2.y);\n\t\tmaxp = Math.max(p1.y, p2.y);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\treturn true;\n\t}\n};\nEnvelope.serialVersionUID = 5873921885273102420;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/Envelope.js\n// module id = null\n// module chunks = ","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Serializable from '../../../../java/io/Serializable';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nexport default function Geometry() {\n\tthis._envelope = null;\n\tthis._factory = null;\n\tthis._SRID = null;\n\tthis._userData = null;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n\tthis._SRID = factory.getSRID();\n}\nextend(Geometry.prototype, {\n\tisGeometryCollection: function () {\n\t\treturn this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION;\n\t},\n\tgetFactory: function () {\n\t\treturn this._factory;\n\t},\n\tgetGeometryN: function (n) {\n\t\treturn this;\n\t},\n\tgetArea: function () {\n\t\treturn 0.0;\n\t},\n\tisRectangle: function () {\n\t\treturn false;\n\t},\n\tequals: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tif (g === null) return false;\n\t\t\treturn this.equalsTopo(g);\n\t\t} else if (arguments[0] instanceof Object) {\n\t\t\tlet o = arguments[0];\n\t\t\tif (!(o instanceof Geometry)) return false;\n\t\t\tvar g = o;\n\t\t\treturn this.equalsExact(g);\n\t\t}\n\t},\n\tequalsExact: function (other) {\n\t\treturn this === other || this.equalsExact(other, 0);\n\t},\n\tgeometryChanged: function () {\n\t\tthis.apply(Geometry.geometryChangedFilter);\n\t},\n\tgeometryChangedAction: function () {\n\t\tthis._envelope = null;\n\t},\n\tequalsNorm: function (g) {\n\t\tif (g === null) return false;\n\t\treturn this.norm().equalsExact(g.norm());\n\t},\n\tgetLength: function () {\n\t\treturn 0.0;\n\t},\n\tgetNumGeometries: function () {\n\t\treturn 1;\n\t},\n\tcompareTo: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar other = o;\n\t\t\tif (this.getTypeCode() !== other.getTypeCode()) {\n\t\t\t\treturn this.getTypeCode() - other.getTypeCode();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar other = o;\n\t\t\tif (this.getTypeCode() !== other.getTypeCode()) {\n\t\t\t\treturn this.getTypeCode() - other.getTypeCode();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o, comp);\n\t\t}\n\t},\n\tgetUserData: function () {\n\t\treturn this._userData;\n\t},\n\tgetSRID: function () {\n\t\treturn this._SRID;\n\t},\n\tgetEnvelope: function () {\n\t\treturn this.getFactory().toGeometry(this.getEnvelopeInternal());\n\t},\n\tcheckNotGeometryCollection: function (g) {\n\t\tif (g.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION) {\n\t\t\tthrow new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\t\t}\n\t},\n\tequal: function (a, b, tolerance) {\n\t\tif (tolerance === 0) {\n\t\t\treturn a.equals(b);\n\t\t}\n\t\treturn a.distance(b) <= tolerance;\n\t},\n\tnorm: function () {\n\t\tvar copy = this.copy();\n\t\tcopy.normalize();\n\t\treturn copy;\n\t},\n\tgetPrecisionModel: function () {\n\t\treturn this._factory.getPrecisionModel();\n\t},\n\tgetEnvelopeInternal: function () {\n\t\tif (this._envelope === null) {\n\t\t\tthis._envelope = this.computeEnvelopeInternal();\n\t\t}\n\t\treturn new Envelope(this._envelope);\n\t},\n\tsetSRID: function (SRID) {\n\t\tthis._SRID = SRID;\n\t},\n\tsetUserData: function (userData) {\n\t\tthis._userData = userData;\n\t},\n\tcompare: function (a, b) {\n\t\tvar i = a.iterator();\n\t\tvar j = b.iterator();\n\t\twhile (i.hasNext() && j.hasNext()) {\n\t\t\tvar aElement = i.next();\n\t\t\tvar bElement = j.next();\n\t\t\tvar comparison = aElement.compareTo(bElement);\n\t\t\tif (comparison !== 0) {\n\t\t\t\treturn comparison;\n\t\t\t}\n\t\t}\n\t\tif (i.hasNext()) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (j.hasNext()) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t},\n\thashCode: function () {\n\t\treturn this.getEnvelopeInternal().hashCode();\n\t},\n\tisGeometryCollectionOrDerived: function () {\n\t\tif (this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION || this.getTypeCode() === Geometry.TYPECODE_MULTIPOINT || this.getTypeCode() === Geometry.TYPECODE_MULTILINESTRING || this.getTypeCode() === Geometry.TYPECODE_MULTIPOLYGON) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Cloneable, Comparable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Geometry;\n\t}\n});\nGeometry.hasNonEmptyElements = function (geometries) {\n\tfor (var i = 0; i < geometries.length; i++) {\n\t\tif (!geometries[i].isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.hasNullElements = function (array) {\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i] === null) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.serialVersionUID = 8763622679187376702;\nGeometry.TYPECODE_POINT = 0;\nGeometry.TYPECODE_MULTIPOINT = 1;\nGeometry.TYPECODE_LINESTRING = 2;\nGeometry.TYPECODE_LINEARRING = 3;\nGeometry.TYPECODE_MULTILINESTRING = 4;\nGeometry.TYPECODE_POLYGON = 5;\nGeometry.TYPECODE_MULTIPOLYGON = 6;\nGeometry.TYPECODE_GEOMETRYCOLLECTION = 7;\nGeometry.TYPENAME_POINT = \"Point\";\nGeometry.TYPENAME_MULTIPOINT = \"MultiPoint\";\nGeometry.TYPENAME_LINESTRING = \"LineString\";\nGeometry.TYPENAME_LINEARRING = \"LinearRing\";\nGeometry.TYPENAME_MULTILINESTRING = \"MultiLineString\";\nGeometry.TYPENAME_POLYGON = \"Polygon\";\nGeometry.TYPENAME_MULTIPOLYGON = \"MultiPolygon\";\nGeometry.TYPENAME_GEOMETRYCOLLECTION = \"GeometryCollection\";\nGeometry.geometryChangedFilter = {\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tfilter: function (geom) {\n\t\tgeom.geometryChangedAction();\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/Geometry.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nexport default function CoordinateFilter() {}\nextend(CoordinateFilter.prototype, {\n\tfilter: function (coord) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateFilter;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/CoordinateFilter.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nexport default function BoundaryNodeRule() {}\nextend(BoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BoundaryNodeRule;\n\t}\n});\nfunction Mod2BoundaryNodeRule() {}\nextend(Mod2BoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount % 2 === 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn Mod2BoundaryNodeRule;\n\t}\n});\nfunction EndPointBoundaryNodeRule() {}\nextend(EndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount > 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn EndPointBoundaryNodeRule;\n\t}\n});\nfunction MultiValentEndPointBoundaryNodeRule() {}\nextend(MultiValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount > 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn MultiValentEndPointBoundaryNodeRule;\n\t}\n});\nfunction MonoValentEndPointBoundaryNodeRule() {}\nextend(MonoValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount === 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn MonoValentEndPointBoundaryNodeRule;\n\t}\n});\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule;\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule;\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule();\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule();\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/algorithm/BoundaryNodeRule.js\n// module id = null\n// module chunks = ","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nexport default function Iterator() {};\n\n/**\n * Returns true if the iteration has more elements.\n * @return {boolean}\n */\nIterator.prototype.hasNext = function() {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function() {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function() {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/Iterator.js\n// module id = null\n// module chunks = ","import Iterator from './Iterator'\n\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nexport default function Collection() {};\n\n/**\n * Ensures that this collection contains the specified element (optional\n * operation).\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.add = function() {};\n\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function() {};\n\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function() {};\n\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function() {};\n\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function() {};\n\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function() {};\n\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function() {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/Collection.js\n// module id = null\n// module chunks = ","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function IndexOutOfBoundsException(message) {\n  this.message = message || '';\n};\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/IndexOutOfBoundsException.js\n// module id = null\n// module chunks = ","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nexport default function List() { };\nList.prototype = Object.create(Collection.prototype);\nList.prototype.constructor = List\n\n/**\n * Returns the element at the specified position in this list.\n * @param {number} index\n * @return {Object}\n */\nList.prototype.get = function() { };\n\n\n/**\n * Replaces the element at the specified position in this list with the\n * specified element (optional operation).\n * @param {number} index\n * @param {Object} e\n * @return {Object}\n */\nList.prototype.set = function() { };\n\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nList.prototype.isEmpty = function() { };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/List.js\n// module id = null\n// module chunks = ","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function NoSuchElementException(message) {\n  this.message = message || '';\n};\nNoSuchElementException.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/NoSuchElementException.js\n// module id = null\n// module chunks = ","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function OperationNotSupported(message) {\n  this.message = message || '';\n};\nOperationNotSupported.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/OperationNotSupported.js\n// module id = null\n// module chunks = ","import Collection from './Collection'\nimport IndexOutOfBoundsException from './IndexOutOfBoundsException'\nimport Iterator from './Iterator'\nimport List from './List'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nexport default function ArrayList () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nArrayList.prototype = Object.create(List.prototype)\nArrayList.prototype.constructor = ArrayList;\n\nArrayList.prototype.ensureCapacity = function () {}\nArrayList.prototype.interfaces_ = function () { return [List, Collection] }\n\n/**\n * @override\n */\nArrayList.prototype.add = function(e) {\n  if (arguments.length === 1) {\n    this.array_.push(e)\n  } else {\n    this.array_.splice(arguments[0], arguments[1])\n  }\n  return true\n};\n\nArrayList.prototype.clear = function() {\n  this.array_ = []\n}\n\n/**\n * @override\n */\nArrayList.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.set = function(index, element) {\n  var oldElement = this.array_[index];\n  this.array_[index] = element;\n  return oldElement;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.get = function(index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException();\n  }\n\n  return this.array_[index];\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.remove = function(o) {\n  var found = false;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    if (this.array_[i] === o) {\n      this.array_.splice(i, 1);\n      found = true;\n      break;\n    }\n  }\n\n  return found;\n};\n\n\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = function(arrayList) {\n  /**\n   * @type {ArrayList}\n   * @private\n  */\n  this.arrayList_ = arrayList;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.arrayList_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.arrayList_.get(this.position_++);\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.arrayList_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * TODO: should be in ListIterator\n * @override\n */\nIterator_.prototype.set = function(element) {\n  return this.arrayList_.set(this.position_ - 1, element);\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  this.arrayList_.remove(this.arrayList_.get(this.position_));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/ArrayList.js\n// module id = null\n// module chunks = ","import hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport inherits from '../../../../inherits';\nexport default function CoordinateList() {\n\tArrayList.apply(this);\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet coord = arguments[0];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, true);\n\t} else if (arguments.length === 2) {\n\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, allowRepeated);\n\t}\n}\ninherits(CoordinateList, ArrayList);\nextend(CoordinateList.prototype, {\n\tgetCoordinate: function (i) {\n\t\treturn this.get(i);\n\t},\n\taddAll: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"boolean\" && hasInterface(arguments[0], Collection))) {\n\t\t\tlet coll = arguments[0], allowRepeated = arguments[1];\n\t\t\tvar isChanged = false;\n\t\t\tfor (var i = coll.iterator(); i.hasNext(); ) {\n\t\t\t\tthis.add(i.next(), allowRepeated);\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\treturn isChanged;\n\t\t} else return ArrayList.prototype.addAll.apply(this, arguments);\n\t},\n\tclone: function () {\n\t\tvar clone = ArrayList.prototype.clone.call(this);\n\t\tfor (var i = 0; i < this.size(); i++) {\n\t\t\tclone.add(i, this.get(i).clone());\n\t\t}\n\t\treturn clone;\n\t},\n\ttoCoordinateArray: function () {\n\t\treturn this.toArray(CoordinateList.coordArrayType);\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet coord = arguments[0];\n\t\t\tArrayList.prototype.add.call(this, coord);\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tthis.add(coord, allowRepeated, true);\n\t\t\t\treturn true;\n\t\t\t} else if (arguments[0] instanceof Coordinate && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tif (this.size() >= 1) {\n\t\t\t\t\t\tvar last = this.get(this.size() - 1);\n\t\t\t\t\t\tif (last.equals2D(coord)) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, coord);\n\t\t\t} else if (arguments[0] instanceof Object && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet obj = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tthis.add(obj, allowRepeated);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (typeof arguments[2] === \"boolean\" && (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\")) {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], direction = arguments[2];\n\t\t\t\tif (direction) {\n\t\t\t\t\tfor (var i = 0; i < coord.length; i++) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = coord.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n\t\t\t\tlet i = arguments[0], coord = arguments[1], allowRepeated = arguments[2];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tvar size = this.size();\n\t\t\t\t\tif (size > 0) {\n\t\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t\tvar prev = this.get(i - 1);\n\t\t\t\t\t\t\tif (prev.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i < size) {\n\t\t\t\t\t\t\tvar next = this.get(i);\n\t\t\t\t\t\t\tif (next.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, i, coord);\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], start = arguments[2], end = arguments[3];\n\t\t\tvar inc = 1;\n\t\t\tif (start > end) inc = -1;\n\t\t\tfor (var i = start; i !== end; i += inc) {\n\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tcloseRing: function () {\n\t\tif (this.size() > 0) this.add(new Coordinate(this.get(0)), false);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateList;\n\t}\n});\nCoordinateList.coordArrayType = new Array(0).fill(null);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/CoordinateList.js\n// module id = null\n// module chunks = ","import Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nexport default function MathUtil() {}\nextend(MathUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MathUtil;\n\t}\n});\nMathUtil.log10 = function (x) {\n\tvar ln = Math.log(x);\n\tif (Double.isInfinite(ln)) return ln;\n\tif (Double.isNaN(ln)) return ln;\n\treturn ln / MathUtil.LOG_10;\n};\nMathUtil.min = function (v1, v2, v3, v4) {\n\tvar min = v1;\n\tif (v2 < min) min = v2;\n\tif (v3 < min) min = v3;\n\tif (v4 < min) min = v4;\n\treturn min;\n};\nMathUtil.clamp = function () {\n\tif (typeof arguments[2] === \"number\" && (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\")) {\n\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\n\t\tif (x < min) return min;\n\t\tif (x > max) return max;\n\t\treturn x;\n\t} else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\n\t\tif (x < min) return min;\n\t\tif (x > max) return max;\n\t\treturn x;\n\t}\n};\nMathUtil.wrap = function (index, max) {\n\tif (index < 0) {\n\t\treturn max - -index % max;\n\t}\n\treturn index % max;\n};\nMathUtil.max = function () {\n\tif (arguments.length === 3) {\n\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2];\n\t\tvar max = v1;\n\t\tif (v2 > max) max = v2;\n\t\tif (v3 > max) max = v3;\n\t\treturn max;\n\t} else if (arguments.length === 4) {\n\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2], v4 = arguments[3];\n\t\tvar max = v1;\n\t\tif (v2 > max) max = v2;\n\t\tif (v3 > max) max = v3;\n\t\tif (v4 > max) max = v4;\n\t\treturn max;\n\t}\n};\nMathUtil.average = function (x1, x2) {\n\treturn (x1 + x2) / 2.0;\n};\nMathUtil.LOG_10 = Math.log(10);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/math/MathUtil.js\n// module id = null\n// module chunks = ","export default function System () { }\n\nSystem.arraycopy = (src, srcPos, dest, destPos, len) => {\n  let c = 0\n  for (let i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i]\n    c++\n  }\n}\n\nSystem.getProperty = (name) => {\n  return {\n    'line.separator': '\\n'\n  }[name]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/lang/System.js\n// module id = null\n// module chunks = ","import CoordinateList from './CoordinateList';\nimport Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport MathUtil from '../math/MathUtil';\nimport System from '../../../../java/lang/System';\nimport Comparator from '../../../../java/util/Comparator';\nimport Envelope from './Envelope';\nexport default function CoordinateArrays() {}\nextend(CoordinateArrays.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArrays;\n\t}\n});\nCoordinateArrays.isRing = function (pts) {\n\tif (pts.length < 4) return false;\n\tif (!pts[0].equals2D(pts[pts.length - 1])) return false;\n\treturn true;\n};\nCoordinateArrays.ptNotInList = function (testPts, pts) {\n\tfor (var i = 0; i < testPts.length; i++) {\n\t\tvar testPt = testPts[i];\n\t\tif (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt;\n\t}\n\treturn null;\n};\nCoordinateArrays.scroll = function (coordinates, firstCoordinate) {\n\tvar i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n\tif (i < 0) return null;\n\tvar newCoordinates = new Array(coordinates.length).fill(null);\n\tSystem.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n\tSystem.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n\tSystem.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function () {\n\tif (arguments.length === 2) {\n\t\tlet coord1 = arguments[0], coord2 = arguments[1];\n\t\tif (coord1 === coord2) return true;\n\t\tif (coord1 === null || coord2 === null) return false;\n\t\tif (coord1.length !== coord2.length) return false;\n\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\tif (!coord1[i].equals(coord2[i])) return false;\n\t\t}\n\t\treturn true;\n\t} else if (arguments.length === 3) {\n\t\tlet coord1 = arguments[0], coord2 = arguments[1], coordinateComparator = arguments[2];\n\t\tif (coord1 === coord2) return true;\n\t\tif (coord1 === null || coord2 === null) return false;\n\t\tif (coord1.length !== coord2.length) return false;\n\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\tif (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false;\n\t\t}\n\t\treturn true;\n\t}\n};\nCoordinateArrays.intersection = function (coordinates, env) {\n\tvar coordList = new CoordinateList();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (env.intersects(coordinates[i])) coordList.add(coordinates[i], true);\n\t}\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.hasRepeatedPoints = function (coord) {\n\tfor (var i = 1; i < coord.length; i++) {\n\t\tif (coord[i - 1].equals(coord[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nCoordinateArrays.removeRepeatedPoints = function (coord) {\n\tif (!CoordinateArrays.hasRepeatedPoints(coord)) return coord;\n\tvar coordList = new CoordinateList(coord, false);\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.reverse = function (coord) {\n\tvar last = coord.length - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tvar tmp = coord[i];\n\t\tcoord[i] = coord[last - i];\n\t\tcoord[last - i] = tmp;\n\t}\n};\nCoordinateArrays.removeNull = function (coord) {\n\tvar nonNull = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) nonNull++;\n\t}\n\tvar newCoord = new Array(nonNull).fill(null);\n\tif (nonNull === 0) return newCoord;\n\tvar j = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) newCoord[j++] = coord[i];\n\t}\n\treturn newCoord;\n};\nCoordinateArrays.copyDeep = function () {\n\tif (arguments.length === 1) {\n\t\tlet coordinates = arguments[0];\n\t\tvar copy = new Array(coordinates.length).fill(null);\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tcopy[i] = new Coordinate(coordinates[i]);\n\t\t}\n\t\treturn copy;\n\t} else if (arguments.length === 5) {\n\t\tlet src = arguments[0], srcStart = arguments[1], dest = arguments[2], destStart = arguments[3], length = arguments[4];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tdest[destStart + i] = new Coordinate(src[srcStart + i]);\n\t\t}\n\t}\n};\nCoordinateArrays.isEqualReversed = function (pts1, pts2) {\n\tfor (var i = 0; i < pts1.length; i++) {\n\t\tvar p1 = pts1[i];\n\t\tvar p2 = pts2[pts1.length - i - 1];\n\t\tif (p1.compareTo(p2) !== 0) return false;\n\t}\n\treturn true;\n};\nCoordinateArrays.envelope = function (coordinates) {\n\tvar env = new Envelope();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tenv.expandToInclude(coordinates[i]);\n\t}\n\treturn env;\n};\nCoordinateArrays.toCoordinateArray = function (coordList) {\n\treturn coordList.toArray(CoordinateArrays.coordArrayType);\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function (n, c) {\n\treturn c.length >= n ? c : [];\n};\nCoordinateArrays.indexOf = function (coordinate, coordinates) {\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (coordinate.equals(coordinates[i])) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nCoordinateArrays.increasingDirection = function (pts) {\n\tfor (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n\t\tvar j = pts.length - 1 - i;\n\t\tvar comp = pts[i].compareTo(pts[j]);\n\t\tif (comp !== 0) return comp;\n\t}\n\treturn 1;\n};\nCoordinateArrays.compare = function (pts1, pts2) {\n\tvar i = 0;\n\twhile (i < pts1.length && i < pts2.length) {\n\t\tvar compare = pts1[i].compareTo(pts2[i]);\n\t\tif (compare !== 0) return compare;\n\t\ti++;\n\t}\n\tif (i < pts2.length) return -1;\n\tif (i < pts1.length) return 1;\n\treturn 0;\n};\nCoordinateArrays.minCoordinate = function (coordinates) {\n\tvar minCoord = null;\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n\t\t\tminCoord = coordinates[i];\n\t\t}\n\t}\n\treturn minCoord;\n};\nCoordinateArrays.extract = function (pts, start, end) {\n\tstart = MathUtil.clamp(start, 0, pts.length);\n\tend = MathUtil.clamp(end, -1, pts.length);\n\tvar npts = end - start + 1;\n\tif (end < 0) npts = 0;\n\tif (start >= pts.length) npts = 0;\n\tif (end < start) npts = 0;\n\tvar extractPts = new Array(npts).fill(null);\n\tif (npts === 0) return extractPts;\n\tvar iPts = 0;\n\tfor (var i = start; i <= end; i++) {\n\t\textractPts[iPts++] = pts[i];\n\t}\n\treturn extractPts;\n};\nfunction ForwardComparator() {}\nextend(ForwardComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\treturn CoordinateArrays.compare(pts1, pts2);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn ForwardComparator;\n\t}\n});\nfunction BidirectionalComparator() {}\nextend(BidirectionalComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar forwardComp = CoordinateArrays.compare(pts1, pts2);\n\t\tvar isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n\t\tif (isEqualRev) return 0;\n\t\treturn forwardComp;\n\t},\n\tOLDcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar dir1 = CoordinateArrays.increasingDirection(pts1);\n\t\tvar dir2 = CoordinateArrays.increasingDirection(pts2);\n\t\tvar i1 = dir1 > 0 ? 0 : pts1.length - 1;\n\t\tvar i2 = dir2 > 0 ? 0 : pts1.length - 1;\n\t\tfor (var i = 0; i < pts1.length; i++) {\n\t\t\tvar comparePt = pts1[i1].compareTo(pts2[i2]);\n\t\t\tif (comparePt !== 0) return comparePt;\n\t\t\ti1 += dir1;\n\t\t\ti2 += dir2;\n\t\t}\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn BidirectionalComparator;\n\t}\n});\nCoordinateArrays.ForwardComparator = ForwardComparator;\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator;\nCoordinateArrays.coordArrayType = new Array(0).fill(null);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/CoordinateArrays.js\n// module id = null\n// module chunks = ","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nexport default function Map() {};\n\n\n/**\n * Returns the value to which the specified key is mapped, or null if this map\n * contains no mapping for the key.\n * @param {Object} key\n * @return {Object}\n */\nMap.prototype.get = function() {};\n\n\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap.prototype.put = function() {};\n\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap.prototype.size = function() {};\n\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap.prototype.values = function() {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.  If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.  The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.  It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap.prototype.entrySet = function() {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/Map.js\n// module id = null\n// module chunks = ","import Map from './Map'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nexport default function SortedMap() {};\nSortedMap.prototype = new Map();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/SortedMap.js\n// module id = null\n// module chunks = ","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nexport default function Set() {};\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/Set.js\n// module id = null\n// module chunks = ","import Collection from './Collection'\nimport Iterator from './Iterator'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\nimport Set from './Set'\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nexport default function HashSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nHashSet.prototype = new Set();\n\n\n/**\n * @override\n */\nHashSet.prototype.contains = function(o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e === o) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.add = function(o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.remove = function(o) {\n  throw new javascript.util.OperationNotSupported();\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n\n/**\n * @extends {Iterator}\n * @param {HashSet} hashSet\n * @constructor\n * @private\n */\nvar Iterator_ = function(hashSet) {\n  /**\n   * @type {HashSet}\n   * @private\n   */\n  this.hashSet_ = hashSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.hashSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.hashSet_.array_[this.position_++];\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.hashSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  throw new OperationNotSupported();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/HashSet.js\n// module id = null\n// module chunks = ","import ArrayList from './ArrayList'\nimport SortedMap from './SortedMap'\nimport HashSet from './HashSet'\n\nconst BLACK = 0\nconst RED = 1\nfunction colorOf (p) { return (p == null ? BLACK : p.color) }\nfunction parentOf (p) { return (p == null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) p.color = c }\nfunction leftOf (p) { return (p == null ? null : p.left) }\nfunction rightOf (p) { return (p == null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nexport default function TreeMap() {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n};\nTreeMap.prototype = new SortedMap();\n\n\n/**\n * @override\n */\nTreeMap.prototype.get = function(key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) {\n      p = p.left;\n    } else if (cmp > 0) {\n      p = p.right;\n    } else {\n      return p.value;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.put = function(key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue() { return this.value },\n      getKey() { return this.key }\n    };\n    this.size_ = 1;\n    return null;\n  }\n  var t = this.root_, parent, cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue;\n    }\n  } while (t !== null);\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue() { return this.value },\n    getKey() { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null;\n};\n\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function(x) {\n  x.color = RED;\n  while (x != null && x != this.root_ && x.parent.color == RED) {\n    if (parentOf(x) == leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.values = function() {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function() {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet;\n};\n\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function(p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null)\n      r.left.parent = p;\n    r.parent = p.parent;\n    if (p.parent == null)\n      this.root_ = r;\n    else if (p.parent.left == p)\n      p.parent.left = r;\n    else\n      p.parent.right = r;\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function(p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) l.right.parent = p;\n    l.parent = p.parent;\n    if (p.parent == null)\n      this.root_ = l;\n    else if (p.parent.right == p)\n      p.parent.right = l;\n    else p.parent.left = l;\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function() {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p;\n};\n\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function(t) {\n  if (t === null)\n    return null;\n  else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p;\n  } else {\n    var p = t.parent;\n    var ch = t;\n    while (p !== null && ch === p.right) {\n      ch = p;\n      p = p.parent;\n    }\n    return p;\n  }\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.size = function() {\n  return this.size_;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/TreeMap.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nexport default function Lineal() {}\nextend(Lineal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Lineal;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/Lineal.js\n// module id = null\n// module chunks = ","import Set from './Set'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nexport default function SortedSet() {};\nSortedSet.prototype = new Set();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/SortedSet.js\n// module id = null\n// module chunks = ","import Collection from './Collection'\nimport Iterator from './Iterator'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\nimport SortedSet from './SortedSet'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nexport default function TreeSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nTreeSet.prototype = new SortedSet();\n\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function(o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.add = function(o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this.array_.splice(i, 0, o);\n      return true;\n    }\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function(e) {\n  throw new OperationNotSupported();\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_ = function(treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.treeSet_.array_[this.position_++];\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.treeSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  throw new OperationNotSupported();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/TreeSet.js\n// module id = null\n// module chunks = ","// shared pointer\nvar i\n// shortcuts\nvar defineProperty = Object.defineProperty\nfunction is (a, b) { return (a === b) || (a !== a && b !== b) } // eslint-disable-line\n\nexport default createCollection({\n  // WeakMap#delete(key:void*):boolean\n  'delete': sharedDelete,\n  // :was Map#get(key:void*[, d3fault:void*]):void*\n  // Map#has(key:void*):boolean\n  has: mapHas,\n  // Map#get(key:void*):boolean\n  get: sharedGet,\n  // Map#set(key:void*, value:void*):void\n  set: sharedSet,\n  // Map#keys(void):Iterator\n  keys: sharedKeys,\n  // Map#values(void):Iterator\n  values: sharedValues,\n  // Map#entries(void):Iterator\n  entries: mapEntries,\n  // Map#forEach(callback:Function, context:void*):void ==> callback.call(context, key, value, mapObject) === not in specs`\n  forEach: sharedForEach,\n  // Map#clear():\n  clear: sharedClear\n})\n\nfunction createCollection (proto, objectOnly) {\n  function Collection (a) {\n    if (!this || this.constructor !== Collection) return new Collection(a)\n    this._keys = []\n    this._values = []\n    this._itp = [] // iteration pointers\n    this.objectOnly = objectOnly\n\n    // parse initial iterable argument passed\n    if (a) init.call(this, a)\n  }\n\n  // define size for non object-only collections\n  if (!objectOnly) {\n    defineProperty(proto, 'size', {\n      get: sharedSize\n    })\n  }\n\n  // set prototype\n  proto.constructor = Collection\n  Collection.prototype = proto\n\n  return Collection\n}\n\nfunction init (a) {\n  // init Set argument, like `[1,2,3,{}]`\n  if (this.add) a.forEach(this.add, this)\n  // init Map argument like `[[1,2], [{}, 4]]`\n  else a.forEach(function (a) { this.set(a[0], a[1]) }, this)\n}\n\nfunction sharedDelete (key) {\n  if (this.has(key)) {\n    this._keys.splice(i, 1)\n    this._values.splice(i, 1)\n    // update iteration pointers\n    this._itp.forEach(function (p) { if (i < p[0]) p[0]-- })\n  }\n  // Aurora here does it while Canary doesn't\n  return i > -1\n}\n\nfunction sharedGet (key) {\n  return this.has(key) ? this._values[i] : undefined\n}\n\nfunction has (list, key) {\n  if (this.objectOnly && key !== Object(key)) throw new TypeError('Invalid value used as weak collection key')\n  // NaN or 0 passed\n  if (key !== key || key === 0) for (i = list.length; i-- && !is(list[i], key);) {} // eslint-disable-line\n  else i = list.indexOf(key)\n  return i > -1\n}\n\nfunction mapHas (value) {\n  return has.call(this, this._keys, value)\n}\n\nfunction sharedSet (key, value) {\n  this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value\n  return this\n}\n\nfunction sharedClear () {\n  (this._keys || 0).length =\n    this._values.length = 0\n}\n\nfunction sharedKeys () {\n  return sharedIterator(this._itp, this._keys)\n}\n\nfunction sharedValues () {\n  return sharedIterator(this._itp, this._values)\n}\n\nfunction mapEntries () {\n  return sharedIterator(this._itp, this._keys, this._values)\n}\n\nfunction sharedIterator (itp, array, array2) {\n  var p = [0]\n  var done = false\n  itp.push(p)\n  return {\n    next: function () {\n      var v\n      var k = p[0]\n      if (!done && k < array.length) {\n        v = array2 ? [array[k], array2[k]] : array[k]\n        p[0]++\n      } else {\n        done = true\n        itp.splice(itp.indexOf(p), 1)\n      }\n      return { done: done, value: v }\n    }\n  }\n}\n\nfunction sharedSize () {\n  return this._values.length\n}\n\nfunction sharedForEach (callback, context) {\n  var it = this.entries()\n  for (;;) {\n    var r = it.next()\n    if (r.done) break\n    callback.call(context, r.value[1], r.value[0], this)\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/Map.js\n// module id = null\n// module chunks = ","import ArrayList from './ArrayList'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nexport default function Arrays() {};\n\n/**\n */\nArrays.sort = function() {\n  var a = arguments[0], i, t, comparator, compare;\n  if (arguments.length === 1) {\n    compare = function(a, b) {\n      return a.compareTo(b);\n    }\n    a.sort(compare);\n    return;\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function(a, b) {\n      return comparator['compare'](a, b);\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function(a, b) {\n      return comparator['compare'](a, b);\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  }\n};\n\n\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function(array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/Arrays.js\n// module id = null\n// module chunks = ","export default function Character () {}\nCharacter.isWhitespace = c => ((c <= 32 && c >= 0) || c == 127)\nCharacter.toUpperCase = c => c.toUpperCase()\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/lang/Character.js\n// module id = null\n// module chunks = ","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Character from '../../../../java/lang/Character';\nexport default function Dimension() {}\nextend(Dimension.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Dimension;\n\t}\n});\nDimension.toDimensionSymbol = function (dimensionValue) {\n\tswitch (dimensionValue) {\n\t\tcase Dimension.FALSE:\n\t\t\treturn Dimension.SYM_FALSE;\n\t\tcase Dimension.TRUE:\n\t\t\treturn Dimension.SYM_TRUE;\n\t\tcase Dimension.DONTCARE:\n\t\t\treturn Dimension.SYM_DONTCARE;\n\t\tcase Dimension.P:\n\t\t\treturn Dimension.SYM_P;\n\t\tcase Dimension.L:\n\t\t\treturn Dimension.SYM_L;\n\t\tcase Dimension.A:\n\t\t\treturn Dimension.SYM_A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension value: \" + dimensionValue);\n};\nDimension.toDimensionValue = function (dimensionSymbol) {\n\tswitch (Character.toUpperCase(dimensionSymbol)) {\n\t\tcase Dimension.SYM_FALSE:\n\t\t\treturn Dimension.FALSE;\n\t\tcase Dimension.SYM_TRUE:\n\t\t\treturn Dimension.TRUE;\n\t\tcase Dimension.SYM_DONTCARE:\n\t\t\treturn Dimension.DONTCARE;\n\t\tcase Dimension.SYM_P:\n\t\t\treturn Dimension.P;\n\t\tcase Dimension.SYM_L:\n\t\t\treturn Dimension.L;\n\t\tcase Dimension.SYM_A:\n\t\t\treturn Dimension.A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension symbol: \" + dimensionSymbol);\n};\nDimension.P = 0;\nDimension.L = 1;\nDimension.A = 2;\nDimension.FALSE = -1;\nDimension.TRUE = -2;\nDimension.DONTCARE = -3;\nDimension.SYM_FALSE = 'F';\nDimension.SYM_TRUE = 'T';\nDimension.SYM_DONTCARE = '*';\nDimension.SYM_P = '0';\nDimension.SYM_L = '1';\nDimension.SYM_A = '2';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/Dimension.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nexport default function GeometryFilter() {}\nextend(GeometryFilter.prototype, {\n\tfilter: function (geom) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryFilter;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/GeometryFilter.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nexport default function CoordinateSequenceFilter() {}\nextend(CoordinateSequenceFilter.prototype, {\n\tfilter: function (seq, i) {},\n\tisDone: function () {},\n\tisGeometryChanged: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceFilter;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequenceFilter.js\n// module id = null\n// module chunks = ","import TreeSet from '../../../../java/util/TreeSet';\nimport Geometry from './Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nimport inherits from '../../../../inherits';\nexport default function GeometryCollection() {\n\tthis._geometries = null;\n\tlet geometries = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tif (geometries === null) {\n\t\tgeometries = [];\n\t}\n\tif (Geometry.hasNullElements(geometries)) {\n\t\tthrow new IllegalArgumentException(\"geometries must not contain null elements\");\n\t}\n\tthis._geometries = geometries;\n}\ninherits(GeometryCollection, Geometry);\nextend(GeometryCollection.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tvar envelope = new Envelope();\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tenvelope.expandToInclude(this._geometries[i].getEnvelopeInternal());\n\t\t}\n\t\treturn envelope;\n\t},\n\tgetGeometryN: function (n) {\n\t\treturn this._geometries[n];\n\t},\n\tgetCoordinates: function () {\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tvar childCoordinates = this._geometries[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function () {\n\t\tvar area = 0.0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tarea += this._geometries[i].getArea();\n\t\t}\n\t\treturn area;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherCollection = other;\n\t\t\tif (this._geometries.length !== otherCollection._geometries.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tif (!this._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tthis._geometries[i].normalize();\n\t\t}\n\t\tArrays.sort(this._geometries);\n\t},\n\tgetCoordinate: function () {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this._geometries[0].getCoordinate();\n\t},\n\tgetBoundaryDimension: function () {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this._geometries[i].getBoundaryDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_GEOMETRYCOLLECTION;\n\t},\n\tgetDimension: function () {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this._geometries[i].getDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetLength: function () {\n\t\tvar sum = 0.0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tsum += this._geometries[i].getLength();\n\t\t}\n\t\treturn sum;\n\t},\n\tgetNumPoints: function () {\n\t\tvar numPoints = 0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tnumPoints += this._geometries[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\tgetNumGeometries: function () {\n\t\treturn this._geometries.length;\n\t},\n\treverse: function () {\n\t\tvar n = this._geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevGeoms[i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createGeometryCollection(revGeoms);\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar theseElements = new TreeSet(Arrays.asList(this._geometries));\n\t\t\tvar otherElements = new TreeSet(Arrays.asList(o._geometries));\n\t\t\treturn this.compare(theseElements, otherElements);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar gc = o;\n\t\t\tvar n1 = this.getNumGeometries();\n\t\t\tvar n2 = gc.getNumGeometries();\n\t\t\tvar i = 0;\n\t\t\twhile (i < n1 && i < n2) {\n\t\t\t\tvar thisGeom = this.getGeometryN(i);\n\t\t\t\tvar otherGeom = gc.getGeometryN(i);\n\t\t\t\tvar holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < n1) return 1;\n\t\t\tif (i < n2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this._geometries.length === 0) return null;\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t\tif (filter.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\tthis.checkNotGeometryCollection(this);\n\t\tAssert.shouldNeverReachHere();\n\t\treturn null;\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_GEOMETRYCOLLECTION;\n\t},\n\tcopy: function () {\n\t\tvar geometries = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < geometries.length; i++) {\n\t\t\tgeometries[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new GeometryCollection(geometries, this._factory);\n\t},\n\tisEmpty: function () {\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tif (!this._geometries[i].isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCollection;\n\t}\n});\nGeometryCollection.serialVersionUID = -5694727726395021467;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/GeometryCollection.js\n// module id = null\n// module chunks = ","import Geometry from './Geometry';\nimport BoundaryOp from '../operation/BoundaryOp';\nimport extend from '../../../../extend';\nimport Lineal from './Lineal';\nimport GeometryCollection from './GeometryCollection';\nimport Dimension from './Dimension';\nimport inherits from '../../../../inherits';\nexport default function MultiLineString() {\n\tlet lineStrings = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, lineStrings, factory);\n}\ninherits(MultiLineString, GeometryCollection);\nextend(MultiLineString.prototype, {\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tif (!this._geometries[i].isClosed()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_MULTILINESTRING;\n\t},\n\tgetDimension: function () {\n\t\treturn 1;\n\t},\n\treverse: function () {\n\t\tvar nLines = this._geometries.length;\n\t\tvar revLines = new Array(nLines).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevLines[nLines - 1 - i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiLineString(revLines);\n\t},\n\tgetBoundary: function () {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_MULTILINESTRING;\n\t},\n\tcopy: function () {\n\t\tvar lineStrings = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < lineStrings.length; i++) {\n\t\t\tlineStrings[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiLineString(lineStrings, this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiLineString;\n\t}\n});\nMultiLineString.serialVersionUID = 8166665132445433741;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/MultiLineString.js\n// module id = null\n// module chunks = ","import LineString from '../geom/LineString';\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function BoundaryOp() {\n\tthis._geom = null;\n\tthis._geomFact = null;\n\tthis._bnRule = null;\n\tthis._endpointMap = null;\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tBoundaryOp.call(this, geom, BoundaryNodeRule.MOD2_BOUNDARY_RULE);\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], bnRule = arguments[1];\n\t\tthis._geom = geom;\n\t\tthis._geomFact = geom.getFactory();\n\t\tthis._bnRule = bnRule;\n\t}\n}\nextend(BoundaryOp.prototype, {\n\tboundaryMultiLineString: function (mLine) {\n\t\tif (this._geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tvar bdyPts = this.computeBoundaryCoordinates(mLine);\n\t\tif (bdyPts.length === 1) {\n\t\t\treturn this._geomFact.createPoint(bdyPts[0]);\n\t\t}\n\t\treturn this._geomFact.createMultiPointFromCoords(bdyPts);\n\t},\n\tgetBoundary: function () {\n\t\tif (this._geom instanceof LineString) return this.boundaryLineString(this._geom);\n\t\tif (this._geom instanceof MultiLineString) return this.boundaryMultiLineString(this._geom);\n\t\treturn this._geom.getBoundary();\n\t},\n\tboundaryLineString: function (line) {\n\t\tif (this._geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tif (line.isClosed()) {\n\t\t\tvar closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n\t\t\tif (closedEndpointOnBoundary) {\n\t\t\t\treturn line.getStartPoint();\n\t\t\t} else {\n\t\t\t\treturn this._geomFact.createMultiPoint();\n\t\t\t}\n\t\t}\n\t\treturn this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()]);\n\t},\n\tgetEmptyMultiPoint: function () {\n\t\treturn this._geomFact.createMultiPoint();\n\t},\n\tcomputeBoundaryCoordinates: function (mLine) {\n\t\tvar bdyPts = new ArrayList();\n\t\tthis._endpointMap = new TreeMap();\n\t\tfor (var i = 0; i < mLine.getNumGeometries(); i++) {\n\t\t\tvar line = mLine.getGeometryN(i);\n\t\t\tif (line.getNumPoints() === 0) continue;\n\t\t\tthis.addEndpoint(line.getCoordinateN(0));\n\t\t\tthis.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n\t\t}\n\t\tfor (var it = this._endpointMap.entrySet().iterator(); it.hasNext(); ) {\n\t\t\tvar entry = it.next();\n\t\t\tvar counter = entry.getValue();\n\t\t\tvar valence = counter.count;\n\t\t\tif (this._bnRule.isInBoundary(valence)) {\n\t\t\t\tbdyPts.add(entry.getKey());\n\t\t\t}\n\t\t}\n\t\treturn CoordinateArrays.toCoordinateArray(bdyPts);\n\t},\n\taddEndpoint: function (pt) {\n\t\tvar counter = this._endpointMap.get(pt);\n\t\tif (counter === null) {\n\t\t\tcounter = new Counter();\n\t\t\tthis._endpointMap.put(pt, counter);\n\t\t}\n\t\tcounter.count++;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BoundaryOp;\n\t}\n});\nBoundaryOp.getBoundary = function () {\n\tif (arguments.length === 1) {\n\t\tlet g = arguments[0];\n\t\tvar bop = new BoundaryOp(g);\n\t\treturn bop.getBoundary();\n\t} else if (arguments.length === 2) {\n\t\tlet g = arguments[0], bnRule = arguments[1];\n\t\tvar bop = new BoundaryOp(g, bnRule);\n\t\treturn bop.getBoundary();\n\t}\n};\nfunction Counter() {\n\tthis.count = null;\n}\nextend(Counter.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Counter;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/operation/BoundaryOp.js\n// module id = null\n// module chunks = ","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nexport default function Length() {}\nextend(Length.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Length;\n\t}\n});\nLength.ofLine = function (pts) {\n\tvar n = pts.size();\n\tif (n <= 1) return 0.0;\n\tvar len = 0.0;\n\tvar p = new Coordinate();\n\tpts.getCoordinate(0, p);\n\tvar x0 = p.x;\n\tvar y0 = p.y;\n\tfor (var i = 1; i < n; i++) {\n\t\tpts.getCoordinate(i, p);\n\t\tvar x1 = p.x;\n\t\tvar y1 = p.y;\n\t\tvar dx = x1 - x0;\n\t\tvar dy = y1 - y0;\n\t\tlen += Math.sqrt(dx * dx + dy * dy);\n\t\tx0 = x1;\n\t\ty0 = y1;\n\t}\n\treturn len;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/algorithm/Length.js\n// module id = null\n// module chunks = ","export default function IOException () {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/io/IOException.js\n// module id = null\n// module chunks = ","import PrintStream from '../../../../java/io/PrintStream';\nimport StringReader from '../../../../java/io/StringReader';\nimport DecimalFormat from '../../../../java/text/DecimalFormat';\nimport extend from '../../../../extend';\nimport System from '../../../../java/lang/System';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport ByteArrayOutputStream from '../../../../java/io/ByteArrayOutputStream';\nimport Assert from './Assert';\nimport IOException from '../../../../java/io/IOException';\nimport LineNumberReader from '../../../../java/io/LineNumberReader';\nexport default function StringUtil() {}\nextend(StringUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn StringUtil;\n\t}\n});\nStringUtil.chars = function (c, n) {\n\tvar ch = new Array(n).fill(null);\n\tfor (var i = 0; i < n; i++) {\n\t\tch[i] = c;\n\t}\n\treturn new String(ch);\n};\nStringUtil.getStackTrace = function () {\n\tif (arguments.length === 1) {\n\t\tlet t = arguments[0];\n\t\tvar os = new ByteArrayOutputStream();\n\t\tvar ps = new PrintStream(os);\n\t\tt.printStackTrace(ps);\n\t\treturn os.toString();\n\t} else if (arguments.length === 2) {\n\t\tlet t = arguments[0], depth = arguments[1];\n\t\tvar stackTrace = \"\";\n\t\tvar stringReader = new StringReader(StringUtil.getStackTrace(t));\n\t\tvar lineNumberReader = new LineNumberReader(stringReader);\n\t\tfor (var i = 0; i < depth; i++) {\n\t\t\ttry {\n\t\t\t\tstackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof IOException) {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t} else throw e;\n\t\t\t} finally {}\n\t\t}\n\t\treturn stackTrace;\n\t}\n};\nStringUtil.split = function (s, separator) {\n\tvar separatorlen = separator.length;\n\tvar tokenList = new ArrayList();\n\tvar tmpString = \"\" + s;\n\tvar pos = tmpString.indexOf(separator);\n\twhile (pos >= 0) {\n\t\tvar token = tmpString.substring(0, pos);\n\t\ttokenList.add(token);\n\t\ttmpString = tmpString.substring(pos + separatorlen);\n\t\tpos = tmpString.indexOf(separator);\n\t}\n\tif (tmpString.length > 0) tokenList.add(tmpString);\n\tvar res = new Array(tokenList.size()).fill(null);\n\tfor (var i = 0; i < res.length; i++) {\n\t\tres[i] = tokenList.get(i);\n\t}\n\treturn res;\n};\nStringUtil.toString = function () {\n\tif (arguments.length === 1 && typeof arguments[0] === \"number\") {\n\t\tlet d = arguments[0];\n\t\treturn StringUtil.SIMPLE_ORDINATE_FORMAT.format(d);\n\t}\n};\nStringUtil.spaces = function (n) {\n\treturn StringUtil.chars(' ', n);\n};\nStringUtil.NEWLINE = System.getProperty(\"line.separator\");\nStringUtil.SIMPLE_ORDINATE_FORMAT = new DecimalFormat(\"0.#\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/util/StringUtil.js\n// module id = null\n// module chunks = ","export default function StringBuilder (str) {\n    this.str = str\n  }\n  \n  StringBuilder.prototype.append = function (e) {\n    this.str += e\n  }\n  \n  StringBuilder.prototype.setCharAt = function (i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  \n  StringBuilder.prototype.toString = function (e) {\n    return this.str\n  }\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/lang/StringBuilder.js\n// module id = null\n// module chunks = ","import hasInterface from '../../../../hasInterface';\nimport StringUtil from '../util/StringUtil';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport CoordinateSequence from './CoordinateSequence';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nexport default function CoordinateSequences() {}\nextend(CoordinateSequences.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequences;\n\t}\n});\nCoordinateSequences.copyCoord = function (src, srcPos, dest, destPos) {\n\tvar minDim = Math.min(src.getDimension(), dest.getDimension());\n\tfor (var dim = 0; dim < minDim; dim++) {\n\t\tdest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n\t}\n};\nCoordinateSequences.isRing = function (seq) {\n\tvar n = seq.size();\n\tif (n === 0) return true;\n\tif (n <= 3) return false;\n\treturn seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n};\nCoordinateSequences.isEqual = function (cs1, cs2) {\n\tvar cs1Size = cs1.size();\n\tvar cs2Size = cs2.size();\n\tif (cs1Size !== cs2Size) return false;\n\tvar dim = Math.min(cs1.getDimension(), cs2.getDimension());\n\tfor (var i = 0; i < cs1Size; i++) {\n\t\tfor (var d = 0; d < dim; d++) {\n\t\t\tvar v1 = cs1.getOrdinate(i, d);\n\t\t\tvar v2 = cs2.getOrdinate(i, d);\n\t\t\tif (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue;\n\t\t\tif (Double.isNaN(v1) && Double.isNaN(v2)) continue;\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\nCoordinateSequences.extend = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tif (n > 0) {\n\t\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1);\n\t}\n\treturn newseq;\n};\nCoordinateSequences.reverse = function (seq) {\n\tvar last = seq.size() - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tCoordinateSequences.swap(seq, i, last - i);\n\t}\n};\nCoordinateSequences.swap = function (seq, i, j) {\n\tif (i === j) return null;\n\tfor (var dim = 0; dim < seq.getDimension(); dim++) {\n\t\tvar tmp = seq.getOrdinate(i, dim);\n\t\tseq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n\t\tseq.setOrdinate(j, dim, tmp);\n\t}\n};\nCoordinateSequences.copy = function (src, srcPos, dest, destPos, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tCoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n\t}\n};\nCoordinateSequences.toString = function () {\n\tif (arguments.length === 1 && hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet cs = arguments[0];\n\t\tvar size = cs.size();\n\t\tif (size === 0) return \"()\";\n\t\tvar dim = cs.getDimension();\n\t\tvar builder = new StringBuilder();\n\t\tbuilder.append('(');\n\t\tfor (var i = 0; i < size; i++) {\n\t\t\tif (i > 0) builder.append(\" \");\n\t\t\tfor (var d = 0; d < dim; d++) {\n\t\t\t\tif (d > 0) builder.append(\",\");\n\t\t\t\tbuilder.append(StringUtil.toString(cs.getOrdinate(i, d)));\n\t\t\t}\n\t\t}\n\t\tbuilder.append(')');\n\t\treturn builder.toString();\n\t}\n};\nCoordinateSequences.ensureValidRing = function (fact, seq) {\n\tvar n = seq.size();\n\tif (n === 0) return seq;\n\tif (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4);\n\tvar isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n\tif (isClosed) return seq;\n\treturn CoordinateSequences.createClosedRing(fact, seq, n + 1);\n};\nCoordinateSequences.createClosedRing = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1);\n\treturn newseq;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/CoordinateSequences.js\n// module id = null\n// module chunks = ","import Geometry from './Geometry';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport BoundaryOp from '../operation/BoundaryOp';\nimport Length from '../algorithm/Length';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Lineal from './Lineal';\nimport CoordinateSequences from './CoordinateSequences';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Envelope from './Envelope';\nimport inherits from '../../../../inherits';\nexport default function LineString() {\n\tthis._points = null;\n\tlet points = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(points);\n}\ninherits(LineString, Geometry);\nextend(LineString.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\treturn this._points.expandEnvelope(new Envelope());\n\t},\n\tisRing: function () {\n\t\treturn this.isClosed() && this.isSimple();\n\t},\n\tgetCoordinates: function () {\n\t\treturn this._points.toCoordinateArray();\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherLineString = other;\n\t\t\tif (this._points.size() !== otherLineString._points.size()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tif (!this.equal(this._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tfor (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n\t\t\tvar j = this._points.size() - 1 - i;\n\t\t\tif (!this._points.getCoordinate(i).equals(this._points.getCoordinate(j))) {\n\t\t\t\tif (this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j)) > 0) {\n\t\t\t\t\tvar copy = this._points.copy();\n\t\t\t\t\tCoordinateSequences.reverse(copy);\n\t\t\t\t\tthis._points = copy;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this._points.getCoordinate(0);\n\t},\n\tgetBoundaryDimension: function () {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1));\n\t},\n\tgetEndPoint: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(this.getNumPoints() - 1);\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_LINESTRING;\n\t},\n\tgetDimension: function () {\n\t\treturn 1;\n\t},\n\tgetLength: function () {\n\t\treturn Length.ofLine(this._points);\n\t},\n\tgetNumPoints: function () {\n\t\treturn this._points.size();\n\t},\n\treverse: function () {\n\t\tvar seq = this._points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar revLine = this.getFactory().createLineString(seq);\n\t\treturn revLine;\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar line = o;\n\t\t\tvar i = 0;\n\t\t\tvar j = 0;\n\t\t\twhile (i < this._points.size() && j < line._points.size()) {\n\t\t\t\tvar comparison = this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n\t\t\t\tif (comparison !== 0) {\n\t\t\t\t\treturn comparison;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif (i < this._points.size()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (j < line._points.size()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar line = o;\n\t\t\treturn comp.compare(this._points, line._points);\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tfilter.filter(this._points.getCoordinate(i));\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this._points.size() === 0) return null;\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tfilter.filter(this._points, i);\n\t\t\t\tif (filter.isDone()) break;\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tisEquivalentClass: function (other) {\n\t\treturn other instanceof LineString;\n\t},\n\tgetCoordinateN: function (n) {\n\t\treturn this._points.getCoordinate(n);\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_LINESTRING;\n\t},\n\tcopy: function () {\n\t\treturn new LineString(this._points.copy(), this._factory);\n\t},\n\tgetCoordinateSequence: function () {\n\t\treturn this._points;\n\t},\n\tisEmpty: function () {\n\t\treturn this._points.size() === 0;\n\t},\n\tinit: function (points) {\n\t\tif (points === null) {\n\t\t\tpoints = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tif (points.size() === 1) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LineString (found \" + points.size() + \" - must be 0 or >= 2)\");\n\t\t}\n\t\tthis._points = points;\n\t},\n\tisCoordinate: function (pt) {\n\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\tif (this._points.getCoordinate(i).equals(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetStartPoint: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(0);\n\t},\n\tgetPointN: function (n) {\n\t\treturn this.getFactory().createPoint(this._points.getCoordinate(n));\n\t},\n\tinterfaces_: function () {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function () {\n\t\treturn LineString;\n\t}\n});\nLineString.serialVersionUID = 3110669828065365560;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/LineString.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nexport default function Puntal() {}\nextend(Puntal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Puntal;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/Puntal.js\n// module id = null\n// module chunks = ","import Geometry from './Geometry';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Puntal from './Puntal';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nimport inherits from '../../../../inherits';\nexport default function Point() {\n\tthis._coordinates = null;\n\tlet coordinates = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(coordinates);\n}\ninherits(Point, Geometry);\nextend(Point.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\tvar env = new Envelope();\n\t\tenv.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n\t\treturn env;\n\t},\n\tgetCoordinates: function () {\n\t\treturn this.isEmpty() ? [] : [this.getCoordinate()];\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.isEmpty() !== other.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn this.equal(other.getCoordinate(), this.getCoordinate(), tolerance);\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {},\n\tgetCoordinate: function () {\n\t\treturn this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null;\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_POINT;\n\t},\n\tgetDimension: function () {\n\t\treturn 0;\n\t},\n\tgetNumPoints: function () {\n\t\treturn this.isEmpty() ? 0 : 1;\n\t},\n\treverse: function () {\n\t\treturn this.copy();\n\t},\n\tgetX: function () {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getX called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().x;\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\tvar point = other;\n\t\t\treturn this.getCoordinate().compareTo(point.getCoordinate());\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet other = arguments[0], comp = arguments[1];\n\t\t\tvar point = other;\n\t\t\treturn comp.compare(this._coordinates, point._coordinates);\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfilter.filter(this.getCoordinate());\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.isEmpty()) return null;\n\t\t\tfilter.filter(this._coordinates, 0);\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\treturn this.getFactory().createGeometryCollection();\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_POINT;\n\t},\n\tcopy: function () {\n\t\treturn new Point(this._coordinates.copy(), this._factory);\n\t},\n\tgetCoordinateSequence: function () {\n\t\treturn this._coordinates;\n\t},\n\tgetY: function () {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getY called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().y;\n\t},\n\tisEmpty: function () {\n\t\treturn this._coordinates.size() === 0;\n\t},\n\tinit: function (coordinates) {\n\t\tif (coordinates === null) {\n\t\t\tcoordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tAssert.isTrue(coordinates.size() <= 1);\n\t\tthis._coordinates = coordinates;\n\t},\n\tisSimple: function () {\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function () {\n\t\treturn Point;\n\t}\n});\nPoint.serialVersionUID = 4902022702746614570;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/Point.js\n// module id = null\n// module chunks = ","import hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nexport default function Area() {}\nextend(Area.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Area;\n\t}\n});\nArea.ofRing = function () {\n\tif (arguments[0] instanceof Array) {\n\t\tlet ring = arguments[0];\n\t\treturn Math.abs(Area.ofRingSigned(ring));\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet ring = arguments[0];\n\t\treturn Math.abs(Area.ofRingSigned(ring));\n\t}\n};\nArea.ofRingSigned = function () {\n\tif (arguments[0] instanceof Array) {\n\t\tlet ring = arguments[0];\n\t\tif (ring.length < 3) return 0.0;\n\t\tvar sum = 0.0;\n\t\tvar x0 = ring[0].x;\n\t\tfor (var i = 1; i < ring.length - 1; i++) {\n\t\t\tvar x = ring[i].x - x0;\n\t\t\tvar y1 = ring[i + 1].y;\n\t\t\tvar y2 = ring[i - 1].y;\n\t\t\tsum += x * (y2 - y1);\n\t\t}\n\t\treturn sum / 2.0;\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet ring = arguments[0];\n\t\tvar n = ring.size();\n\t\tif (n < 3) return 0.0;\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tring.getCoordinate(0, p1);\n\t\tring.getCoordinate(1, p2);\n\t\tvar x0 = p1.x;\n\t\tp2.x -= x0;\n\t\tvar sum = 0.0;\n\t\tfor (var i = 1; i < n - 1; i++) {\n\t\t\tp0.y = p1.y;\n\t\t\tp1.x = p2.x;\n\t\t\tp1.y = p2.y;\n\t\t\tring.getCoordinate(i + 1, p2);\n\t\t\tp2.x -= x0;\n\t\t\tsum += p1.x * (p0.y - p2.y);\n\t\t}\n\t\treturn sum / 2.0;\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/algorithm/Area.js\n// module id = null\n// module chunks = ","export default function StringBuffer (str) {\n  this.str = str\n}\n\nStringBuffer.prototype.append = function (e) {\n  this.str += e\n}\n\nStringBuffer.prototype.setCharAt = function (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n}\n\nStringBuffer.prototype.toString = function (e) {\n  return this.str\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/lang/StringBuffer.js\n// module id = null\n// module chunks = ","export default function Integer (value) {\n  this.value = value\n}\n\nInteger.prototype.intValue = function () {\n  return this.value\n}\nInteger.prototype.compareTo = function (o) {\n  if (this.value < o) return -1\n  if (this.value > o) return 1\n  return 0\n}\n\nInteger.isNaN = n => Number.isNaN(n)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/lang/Integer.js\n// module id = null\n// module chunks = ","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Integer from '../../../../java/lang/Integer';\nimport Character from '../../../../java/lang/Character';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function DD() {\n\tthis._hi = 0.0;\n\tthis._lo = 0.0;\n\tif (arguments.length === 0) {\n\t\tthis.init(0.0);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tlet x = arguments[0];\n\t\t\tthis.init(x);\n\t\t} else if (arguments[0] instanceof DD) {\n\t\t\tlet dd = arguments[0];\n\t\t\tthis.init(dd);\n\t\t} else if (typeof arguments[0] === \"string\") {\n\t\t\tlet str = arguments[0];\n\t\t\tDD.call(this, DD.parse(str));\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet hi = arguments[0], lo = arguments[1];\n\t\tthis.init(hi, lo);\n\t}\n}\nextend(DD.prototype, {\n\tle: function (y) {\n\t\treturn this._hi < y._hi || this._hi === y._hi && this._lo <= y._lo;\n\t},\n\textractSignificantDigits: function (insertDecimalPoint, magnitude) {\n\t\tvar y = this.abs();\n\t\tvar mag = DD.magnitude(y._hi);\n\t\tvar scale = DD.TEN.pow(mag);\n\t\ty = y.divide(scale);\n\t\tif (y.gt(DD.TEN)) {\n\t\t\ty = y.divide(DD.TEN);\n\t\t\tmag += 1;\n\t\t} else if (y.lt(DD.ONE)) {\n\t\t\ty = y.multiply(DD.TEN);\n\t\t\tmag -= 1;\n\t\t}\n\t\tvar decimalPointPos = mag + 1;\n\t\tvar buf = new StringBuffer();\n\t\tvar numDigits = DD.MAX_PRINT_DIGITS - 1;\n\t\tfor (var i = 0; i <= numDigits; i++) {\n\t\t\tif (insertDecimalPoint && i === decimalPointPos) {\n\t\t\t\tbuf.append('.');\n\t\t\t}\n\t\t\tvar digit = Math.trunc(y._hi);\n\t\t\tif (digit < 0 || digit > 9) {}\n\t\t\tif (digit < 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar rebiasBy10 = false;\n\t\t\tvar digitChar = 0;\n\t\t\tif (digit > 9) {\n\t\t\t\trebiasBy10 = true;\n\t\t\t\tdigitChar = '9';\n\t\t\t} else {\n\t\t\t\tdigitChar = '0' + digit;\n\t\t\t}\n\t\t\tbuf.append(digitChar);\n\t\t\ty = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n\t\t\tif (rebiasBy10) y.selfAdd(DD.TEN);\n\t\t\tvar continueExtractingDigits = true;\n\t\t\tvar remMag = DD.magnitude(y._hi);\n\t\t\tif (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false;\n\t\t\tif (!continueExtractingDigits) break;\n\t\t}\n\t\tmagnitude[0] = mag;\n\t\treturn buf.toString();\n\t},\n\tsqr: function () {\n\t\treturn this.multiply(this);\n\t},\n\tdoubleValue: function () {\n\t\treturn this._hi + this._lo;\n\t},\n\tsubtract: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this.add(y.negate());\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this.add(-y);\n\t\t}\n\t},\n\tequals: function () {\n\t\tif (arguments.length === 1 && arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this._hi === y._hi && this._lo === y._lo;\n\t\t}\n\t},\n\tisZero: function () {\n\t\treturn this._hi === 0.0 && this._lo === 0.0;\n\t},\n\tselfSubtract: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y._hi, -y._lo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y, 0.0);\n\t\t}\n\t},\n\tgetSpecialNumberString: function () {\n\t\tif (this.isZero()) return \"0.0\";\n\t\tif (this.isNaN()) return \"NaN \";\n\t\treturn null;\n\t},\n\tmin: function (x) {\n\t\tif (this.le(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tselfDivide: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfDivide(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfDivide(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\t\tC = this._hi / yhi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * yhi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - yhi;\n\t\t\tU = C * yhi;\n\t\t\thy = u - hy;\n\t\t\tty = yhi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this._hi - U - u + this._lo - C * ylo) / yhi;\n\t\t\tu = C + c;\n\t\t\tthis._hi = u;\n\t\t\tthis._lo = C - u + c;\n\t\t\treturn this;\n\t\t}\n\t},\n\tdump: function () {\n\t\treturn \"DD<\" + this._hi + \", \" + this._lo + \">\";\n\t},\n\tdivide: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\t\tC = this._hi / y._hi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * y._hi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - y._hi;\n\t\t\tU = C * y._hi;\n\t\t\thy = u - hy;\n\t\t\tty = y._hi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n\t\t\tu = C + c;\n\t\t\tvar zhi = u;\n\t\t\tvar zlo = C - u + c;\n\t\t\treturn new DD(zhi, zlo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfDivide(y, 0.0);\n\t\t}\n\t},\n\tge: function (y) {\n\t\treturn this._hi > y._hi || this._hi === y._hi && this._lo >= y._lo;\n\t},\n\tpow: function (exp) {\n\t\tif (exp === 0.0) return DD.valueOf(1.0);\n\t\tvar r = new DD(this);\n\t\tvar s = DD.valueOf(1.0);\n\t\tvar n = Math.abs(exp);\n\t\tif (n > 1) {\n\t\t\twhile (n > 0) {\n\t\t\t\tif (n % 2 === 1) {\n\t\t\t\t\ts.selfMultiply(r);\n\t\t\t\t}\n\t\t\t\tn /= 2;\n\t\t\t\tif (n > 0) r = r.sqr();\n\t\t\t}\n\t\t} else {\n\t\t\ts = r;\n\t\t}\n\t\tif (exp < 0) return s.reciprocal();\n\t\treturn s;\n\t},\n\tceil: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.ceil(this._hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this._hi) {\n\t\t\tflo = Math.ceil(this._lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tif (this._hi < other._hi) return -1;\n\t\tif (this._hi > other._hi) return 1;\n\t\tif (this._lo < other._lo) return -1;\n\t\tif (this._lo > other._lo) return 1;\n\t\treturn 0;\n\t},\n\trint: function () {\n\t\tif (this.isNaN()) return this;\n\t\tvar plus5 = this.add(0.5);\n\t\treturn plus5.floor();\n\t},\n\tsetValue: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t}\n\t},\n\tmax: function (x) {\n\t\tif (this.ge(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tsqrt: function () {\n\t\tif (this.isZero()) return DD.valueOf(0.0);\n\t\tif (this.isNegative()) {\n\t\t\treturn DD.NaN;\n\t\t}\n\t\tvar x = 1.0 / Math.sqrt(this._hi);\n\t\tvar ax = this._hi * x;\n\t\tvar axdd = DD.valueOf(ax);\n\t\tvar diffSq = this.subtract(axdd.sqr());\n\t\tvar d2 = diffSq._hi * (x * 0.5);\n\t\treturn axdd.add(d2);\n\t},\n\tselfAdd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfAdd(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\tvar H = null, h = null, S = null, s = null, e = null, f = null;\n\t\t\t\tS = this._hi + y;\n\t\t\t\te = S - this._hi;\n\t\t\t\ts = S - e;\n\t\t\t\ts = y - e + (this._hi - s);\n\t\t\t\tf = s + this._lo;\n\t\t\t\tH = S + f;\n\t\t\t\th = f + (S - H);\n\t\t\t\tthis._hi = H + h;\n\t\t\t\tthis._lo = h + (H - this._hi);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar H = null, h = null, T = null, t = null, S = null, s = null, e = null, f = null;\n\t\t\tS = this._hi + yhi;\n\t\t\tT = this._lo + ylo;\n\t\t\te = S - this._hi;\n\t\t\tf = T - this._lo;\n\t\t\ts = S - e;\n\t\t\tt = T - f;\n\t\t\ts = yhi - e + (this._hi - s);\n\t\t\tt = ylo - f + (this._lo - t);\n\t\t\te = s + T;\n\t\t\tH = S + e;\n\t\t\th = e + (S - H);\n\t\t\te = t + h;\n\t\t\tvar zhi = H + e;\n\t\t\tvar zlo = e + (H - zhi);\n\t\t\tthis._hi = zhi;\n\t\t\tthis._lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfMultiply: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar hx = null, tx = null, hy = null, ty = null, C = null, c = null;\n\t\t\tC = DD.SPLIT * this._hi;\n\t\t\thx = C - this._hi;\n\t\t\tc = DD.SPLIT * yhi;\n\t\t\thx = C - hx;\n\t\t\ttx = this._hi - hx;\n\t\t\thy = c - yhi;\n\t\t\tC = this._hi * yhi;\n\t\t\thy = c - hy;\n\t\t\tty = yhi - hy;\n\t\t\tc = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n\t\t\tvar zhi = C + c;\n\t\t\thx = C - zhi;\n\t\t\tvar zlo = c + hx;\n\t\t\tthis._hi = zhi;\n\t\t\tthis._lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfSqr: function () {\n\t\treturn this.selfMultiply(this);\n\t},\n\tfloor: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.floor(this._hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this._hi) {\n\t\t\tflo = Math.floor(this._lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tnegate: function () {\n\t\tif (this.isNaN()) return this;\n\t\treturn new DD(-this._hi, -this._lo);\n\t},\n\tclone: function () {\n\t\ttry {\n\t\t\treturn null;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof CloneNotSupportedException) {\n\t\t\t\treturn null;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tmultiply: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tif (y.isNaN()) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y, 0.0);\n\t\t}\n\t},\n\tisNaN: function () {\n\t\treturn Double.isNaN(this._hi);\n\t},\n\tintValue: function () {\n\t\treturn Math.trunc(this._hi);\n\t},\n\ttoString: function () {\n\t\tvar mag = DD.magnitude(this._hi);\n\t\tif (mag >= -3 && mag <= 20) return this.toStandardNotation();\n\t\treturn this.toSciNotation();\n\t},\n\ttoStandardNotation: function () {\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar sigDigits = this.extractSignificantDigits(true, magnitude);\n\t\tvar decimalPointPos = magnitude[0] + 1;\n\t\tvar num = sigDigits;\n\t\tif (sigDigits.charAt(0) === '.') {\n\t\t\tnum = \"0\" + sigDigits;\n\t\t} else if (decimalPointPos < 0) {\n\t\t\tnum = \"0.\" + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n\t\t} else if (sigDigits.indexOf('.') === -1) {\n\t\t\tvar numZeroes = decimalPointPos - sigDigits.length;\n\t\t\tvar zeroes = DD.stringOfChar('0', numZeroes);\n\t\t\tnum = sigDigits + zeroes + \".0\";\n\t\t}\n\t\tif (this.isNegative()) return \"-\" + num;\n\t\treturn num;\n\t},\n\treciprocal: function () {\n\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\tC = 1.0 / this._hi;\n\t\tc = DD.SPLIT * C;\n\t\thc = c - C;\n\t\tu = DD.SPLIT * this._hi;\n\t\thc = c - hc;\n\t\ttc = C - hc;\n\t\thy = u - this._hi;\n\t\tU = C * this._hi;\n\t\thy = u - hy;\n\t\tty = this._hi - hy;\n\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\tc = (1.0 - U - u - C * this._lo) / this._hi;\n\t\tvar zhi = C + c;\n\t\tvar zlo = C - zhi + c;\n\t\treturn new DD(zhi, zlo);\n\t},\n\ttoSciNotation: function () {\n\t\tif (this.isZero()) return DD.SCI_NOT_ZERO;\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar digits = this.extractSignificantDigits(false, magnitude);\n\t\tvar expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n\t\tif (digits.charAt(0) === '0') {\n\t\t\tthrow new IllegalStateException(\"Found leading zero: \" + digits);\n\t\t}\n\t\tvar trailingDigits = \"\";\n\t\tif (digits.length > 1) trailingDigits = digits.substring(1);\n\t\tvar digitsWithDecimal = digits.charAt(0) + \".\" + trailingDigits;\n\t\tif (this.isNegative()) return \"-\" + digitsWithDecimal + expStr;\n\t\treturn digitsWithDecimal + expStr;\n\t},\n\tabs: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isNegative()) return this.negate();\n\t\treturn new DD(this);\n\t},\n\tisPositive: function () {\n\t\treturn this._hi > 0.0 || this._hi === 0.0 && this._lo > 0.0;\n\t},\n\tlt: function (y) {\n\t\treturn this._hi < y._hi || this._hi === y._hi && this._lo < y._lo;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t}\n\t},\n\tinit: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tlet x = arguments[0];\n\t\t\t\tthis._hi = x;\n\t\t\t\tthis._lo = 0.0;\n\t\t\t} else if (arguments[0] instanceof DD) {\n\t\t\t\tlet dd = arguments[0];\n\t\t\t\tthis._hi = dd._hi;\n\t\t\t\tthis._lo = dd._lo;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet hi = arguments[0], lo = arguments[1];\n\t\t\tthis._hi = hi;\n\t\t\tthis._lo = lo;\n\t\t}\n\t},\n\tgt: function (y) {\n\t\treturn this._hi > y._hi || this._hi === y._hi && this._lo > y._lo;\n\t},\n\tisNegative: function () {\n\t\treturn this._hi < 0.0 || this._hi === 0.0 && this._lo < 0.0;\n\t},\n\ttrunc: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isPositive()) return this.floor(); else return this.ceil();\n\t},\n\tsignum: function () {\n\t\tif (this._hi > 0) return 1;\n\t\tif (this._hi < 0) return -1;\n\t\tif (this._lo > 0) return 1;\n\t\tif (this._lo < 0) return -1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable, Comparable, Cloneable];\n\t},\n\tgetClass: function () {\n\t\treturn DD;\n\t}\n});\nDD.sqr = function (x) {\n\treturn DD.valueOf(x).selfMultiply(x);\n};\nDD.valueOf = function () {\n\tif (typeof arguments[0] === \"string\") {\n\t\tlet str = arguments[0];\n\t\treturn DD.parse(str);\n\t} else if (typeof arguments[0] === \"number\") {\n\t\tlet x = arguments[0];\n\t\treturn new DD(x);\n\t}\n};\nDD.sqrt = function (x) {\n\treturn DD.valueOf(x).sqrt();\n};\nDD.parse = function (str) {\n\tvar i = 0;\n\tvar strlen = str.length;\n\twhile (Character.isWhitespace(str.charAt(i))) i++;\n\tvar isNegative = false;\n\tif (i < strlen) {\n\t\tvar signCh = str.charAt(i);\n\t\tif (signCh === '-' || signCh === '+') {\n\t\t\ti++;\n\t\t\tif (signCh === '-') isNegative = true;\n\t\t}\n\t}\n\tvar val = new DD();\n\tvar numDigits = 0;\n\tvar numBeforeDec = 0;\n\tvar exp = 0;\n\twhile (true) {\n\t\tif (i >= strlen) break;\n\t\tvar ch = str.charAt(i);\n\t\ti++;\n\t\tif (Character.isDigit(ch)) {\n\t\t\tvar d = ch - '0';\n\t\t\tval.selfMultiply(DD.TEN);\n\t\t\tval.selfAdd(d);\n\t\t\tnumDigits++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === '.') {\n\t\t\tnumBeforeDec = numDigits;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === 'e' || ch === 'E') {\n\t\t\tvar expStr = str.substring(i);\n\t\t\ttry {\n\t\t\t\texp = Integer.parseInt(expStr);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof NumberFormatException) {\n\t\t\t\t\tthrow new NumberFormatException(\"Invalid exponent \" + expStr + \" in string \" + str);\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t\tbreak;\n\t\t}\n\t\tthrow new NumberFormatException(\"Unexpected character '\" + ch + \"' at position \" + i + \" in string \" + str);\n\t}\n\tvar val2 = val;\n\tvar numDecPlaces = numDigits - numBeforeDec - exp;\n\tif (numDecPlaces === 0) {\n\t\tval2 = val;\n\t} else if (numDecPlaces > 0) {\n\t\tvar scale = DD.TEN.pow(numDecPlaces);\n\t\tval2 = val.divide(scale);\n\t} else if (numDecPlaces < 0) {\n\t\tvar scale = DD.TEN.pow(-numDecPlaces);\n\t\tval2 = val.multiply(scale);\n\t}\n\tif (isNegative) {\n\t\treturn val2.negate();\n\t}\n\treturn val2;\n};\nDD.createNaN = function () {\n\treturn new DD(Double.NaN, Double.NaN);\n};\nDD.copy = function (dd) {\n\treturn new DD(dd);\n};\nDD.magnitude = function (x) {\n\tvar xAbs = Math.abs(x);\n\tvar xLog10 = Math.log(xAbs) / Math.log(10);\n\tvar xMag = Math.trunc(Math.floor(xLog10));\n\tvar xApprox = Math.pow(10, xMag);\n\tif (xApprox * 10 <= xAbs) xMag += 1;\n\treturn xMag;\n};\nDD.stringOfChar = function (ch, len) {\n\tvar buf = new StringBuffer();\n\tfor (var i = 0; i < len; i++) {\n\t\tbuf.append(ch);\n\t}\n\treturn buf.toString();\n};\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16);\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16);\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17);\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16);\nDD.NaN = new DD(Double.NaN, Double.NaN);\nDD.EPS = 1.23259516440783e-32;\nDD.SPLIT = 134217729.0;\nDD.MAX_PRINT_DIGITS = 32;\nDD.TEN = DD.valueOf(10.0);\nDD.ONE = DD.valueOf(1.0);\nDD.SCI_NOT_EXPONENT_CHAR = \"E\";\nDD.SCI_NOT_ZERO = \"0.0E0\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/math/DD.js\n// module id = null\n// module chunks = ","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport DD from '../math/DD';\nexport default function CGAlgorithmsDD() {}\nextend(CGAlgorithmsDD.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CGAlgorithmsDD;\n\t}\n});\nCGAlgorithmsDD.orientationIndex = function (p1, p2, q) {\n\tvar index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n\tif (index <= 1) return index;\n\tvar dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n\tvar dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n\tvar dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n\tvar dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n\treturn dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum();\n};\nCGAlgorithmsDD.signOfDet2x2 = function () {\n\tif (arguments[0] instanceof DD) {\n\t\tlet x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3];\n\t\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n\t\treturn det.signum();\n\t} else if (typeof arguments[0] === \"number\") {\n\t\tlet dx1 = arguments[0], dy1 = arguments[1], dx2 = arguments[2], dy2 = arguments[3];\n\t\tvar x1 = DD.valueOf(dx1);\n\t\tvar y1 = DD.valueOf(dy1);\n\t\tvar x2 = DD.valueOf(dx2);\n\t\tvar y2 = DD.valueOf(dy2);\n\t\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n\t\treturn det.signum();\n\t}\n};\nCGAlgorithmsDD.intersection = function (p1, p2, q1, q2) {\n\tvar denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n\tvar denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n\tvar denom = denom1.subtract(denom2);\n\tvar numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numx = numx1.subtract(numx2);\n\tvar fracP = numx.selfDivide(denom).doubleValue();\n\tvar x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n\tvar numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numy = numy1.subtract(numy2);\n\tvar fracQ = numy.selfDivide(denom).doubleValue();\n\tvar y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n\treturn new Coordinate(x, y);\n};\nCGAlgorithmsDD.orientationIndexFilter = function (pa, pb, pc) {\n\tvar detsum = null;\n\tvar detleft = (pa.x - pc.x) * (pb.y - pc.y);\n\tvar detright = (pa.y - pc.y) * (pb.x - pc.x);\n\tvar det = detleft - detright;\n\tif (detleft > 0.0) {\n\t\tif (detright <= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = detleft + detright;\n\t\t}\n\t} else if (detleft < 0.0) {\n\t\tif (detright >= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = -detleft - detright;\n\t\t}\n\t} else {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\tvar errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n\tif (det >= errbound || -det >= errbound) {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\treturn 2;\n};\nCGAlgorithmsDD.signum = function (x) {\n\tif (x > 0) return 1;\n\tif (x < 0) return -1;\n\treturn 0;\n};\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/algorithm/CGAlgorithmsDD.js\n// module id = null\n// module chunks = ","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\nexport default function Orientation() {}\nextend(Orientation.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Orientation;\n\t}\n});\nOrientation.index = function (p1, p2, q) {\n\treturn CGAlgorithmsDD.orientationIndex(p1, p2, q);\n};\nOrientation.isCCW = function (ring) {\n\tvar nPts = ring.length - 1;\n\tif (nPts < 3) throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n\tvar hiPt = ring[0];\n\tvar hiIndex = 0;\n\tfor (var i = 1; i <= nPts; i++) {\n\t\tvar p = ring[i];\n\t\tif (p.y > hiPt.y) {\n\t\t\thiPt = p;\n\t\t\thiIndex = i;\n\t\t}\n\t}\n\tvar iPrev = hiIndex;\n\tdo {\n\t\tiPrev = iPrev - 1;\n\t\tif (iPrev < 0) iPrev = nPts;\n\t} while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex);\n\tvar iNext = hiIndex;\n\tdo {\n\t\tiNext = (iNext + 1) % nPts;\n\t} while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex);\n\tvar prev = ring[iPrev];\n\tvar next = ring[iNext];\n\tif (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false;\n\tvar disc = Orientation.index(prev, hiPt, next);\n\tvar isCCW = null;\n\tif (disc === 0) {\n\t\tisCCW = prev.x > next.x;\n\t} else {\n\t\tisCCW = disc > 0;\n\t}\n\treturn isCCW;\n};\nOrientation.CLOCKWISE = -1;\nOrientation.RIGHT = Orientation.CLOCKWISE;\nOrientation.COUNTERCLOCKWISE = 1;\nOrientation.LEFT = Orientation.COUNTERCLOCKWISE;\nOrientation.COLLINEAR = 0;\nOrientation.STRAIGHT = Orientation.COLLINEAR;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/algorithm/Orientation.js\n// module id = null\n// module chunks = ","import extend from '../../../../extend';\nexport default function Polygonal() {}\nextend(Polygonal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Polygonal;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/Polygonal.js\n// module id = null\n// module chunks = ","import Area from '../algorithm/Area';\nimport Geometry from './Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport System from '../../../../java/lang/System';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport CoordinateArrays from './CoordinateArrays';\nimport Polygonal from './Polygonal';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport inherits from '../../../../inherits';\nexport default function Polygon() {\n\tthis._shell = null;\n\tthis._holes = null;\n\tlet shell = arguments[0], holes = arguments[1], factory = arguments[2];\n\tGeometry.call(this, factory);\n\tif (shell === null) {\n\t\tshell = this.getFactory().createLinearRing();\n\t}\n\tif (holes === null) {\n\t\tholes = [];\n\t}\n\tif (Geometry.hasNullElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"holes must not contain null elements\");\n\t}\n\tif (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"shell is empty but holes are not\");\n\t}\n\tthis._shell = shell;\n\tthis._holes = holes;\n}\ninherits(Polygon, Geometry);\nextend(Polygon.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\treturn this._shell.getEnvelopeInternal();\n\t},\n\tgetCoordinates: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn [];\n\t\t}\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tvar shellCoordinates = this._shell.getCoordinates();\n\t\tfor (var x = 0; x < shellCoordinates.length; x++) {\n\t\t\tk++;\n\t\t\tcoordinates[k] = shellCoordinates[x];\n\t\t}\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tvar childCoordinates = this._holes[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function () {\n\t\tvar area = 0.0;\n\t\tarea += Area.ofRing(this._shell.getCoordinateSequence());\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tarea -= Area.ofRing(this._holes[i].getCoordinateSequence());\n\t\t}\n\t\treturn area;\n\t},\n\tisRectangle: function () {\n\t\tif (this.getNumInteriorRing() !== 0) return false;\n\t\tif (this._shell === null) return false;\n\t\tif (this._shell.getNumPoints() !== 5) return false;\n\t\tvar seq = this._shell.getCoordinateSequence();\n\t\tvar env = this.getEnvelopeInternal();\n\t\tfor (var i = 0; i < 5; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tif (!(x === env.getMinX() || x === env.getMaxX())) return false;\n\t\t\tvar y = seq.getY(i);\n\t\t\tif (!(y === env.getMinY() || y === env.getMaxY())) return false;\n\t\t}\n\t\tvar prevX = seq.getX(0);\n\t\tvar prevY = seq.getY(0);\n\t\tfor (var i = 1; i <= 4; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tvar y = seq.getY(i);\n\t\t\tvar xChanged = x !== prevX;\n\t\t\tvar yChanged = y !== prevY;\n\t\t\tif (xChanged === yChanged) return false;\n\t\t\tprevX = x;\n\t\t\tprevY = y;\n\t\t}\n\t\treturn true;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherPolygon = other;\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherPolygonShell = otherPolygon._shell;\n\t\t\tif (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this._holes.length !== otherPolygon._holes.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tif (!this._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.normalize(this._shell, true);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis.normalize(this._holes[i], false);\n\t\t\t}\n\t\t\tArrays.sort(this._holes);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet ring = arguments[0], clockwise = arguments[1];\n\t\t\tif (ring.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n\t\t\tSystem.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n\t\t\tvar minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n\t\t\tCoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n\t\t\tSystem.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n\t\t\tring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n\t\t\tif (Orientation.isCCW(ring.getCoordinates()) === clockwise) {\n\t\t\t\tCoordinateArrays.reverse(ring.getCoordinates());\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._shell.getCoordinate();\n\t},\n\tgetNumInteriorRing: function () {\n\t\treturn this._holes.length;\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn 1;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_POLYGON;\n\t},\n\tgetDimension: function () {\n\t\treturn 2;\n\t},\n\tgetLength: function () {\n\t\tvar len = 0.0;\n\t\tlen += this._shell.getLength();\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tlen += this._holes[i].getLength();\n\t\t}\n\t\treturn len;\n\t},\n\tgetNumPoints: function () {\n\t\tvar numPoints = this._shell.getNumPoints();\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tnumPoints += this._holes[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\treverse: function () {\n\t\tvar poly = this.copy();\n\t\tpoly._shell = this._shell.copy().reverse();\n\t\tpoly._holes = new Array(this._holes.length).fill(null);\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tpoly._holes[i] = this._holes[i].copy().reverse();\n\t\t}\n\t\treturn poly;\n\t},\n\tconvexHull: function () {\n\t\treturn this.getExteriorRing().convexHull();\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherShell = o._shell;\n\t\t\treturn thisShell.compareToSameClass(otherShell);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar poly = o;\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherShell = poly._shell;\n\t\t\tvar shellComp = thisShell.compareToSameClass(otherShell, comp);\n\t\t\tif (shellComp !== 0) return shellComp;\n\t\t\tvar nHole1 = this.getNumInteriorRing();\n\t\t\tvar nHole2 = poly.getNumInteriorRing();\n\t\t\tvar i = 0;\n\t\t\twhile (i < nHole1 && i < nHole2) {\n\t\t\t\tvar thisHole = this.getInteriorRingN(i);\n\t\t\t\tvar otherHole = poly.getInteriorRingN(i);\n\t\t\t\tvar holeComp = thisHole.compareToSameClass(otherHole, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < nHole1) return 1;\n\t\t\tif (i < nHole2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tthis._shell.apply(filter);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tthis._shell.apply(filter);\n\t\t\tif (!filter.isDone()) {\n\t\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t\t\tif (filter.isDone()) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tthis._shell.apply(filter);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar rings = new Array(this._holes.length + 1).fill(null);\n\t\trings[0] = this._shell;\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\trings[i + 1] = this._holes[i];\n\t\t}\n\t\tif (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence());\n\t\treturn this.getFactory().createMultiLineString(rings);\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_POLYGON;\n\t},\n\tcopy: function () {\n\t\tvar shellCopy = this._shell.copy();\n\t\tvar holeCopies = new Array(this._holes.length).fill(null);\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tholeCopies[i] = this._holes[i].copy();\n\t\t}\n\t\treturn new Polygon(shellCopy, holeCopies, this._factory);\n\t},\n\tgetExteriorRing: function () {\n\t\treturn this._shell;\n\t},\n\tisEmpty: function () {\n\t\treturn this._shell.isEmpty();\n\t},\n\tgetInteriorRingN: function (n) {\n\t\treturn this._holes[n];\n\t},\n\tinterfaces_: function () {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function () {\n\t\treturn Polygon;\n\t}\n});\nPolygon.serialVersionUID = -3494792200821764533;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/Polygon.js\n// module id = null\n// module chunks = ","import Geometry from './Geometry';\nimport extend from '../../../../extend';\nimport GeometryCollection from './GeometryCollection';\nimport Dimension from './Dimension';\nimport Puntal from './Puntal';\nimport inherits from '../../../../inherits';\nexport default function MultiPoint() {\n\tlet points = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, points, factory);\n}\ninherits(MultiPoint, GeometryCollection);\nextend(MultiPoint.prototype, {\n\tisValid: function () {\n\t\treturn true;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1 && Number.isInteger(arguments[0])) {\n\t\t\tlet n = arguments[0];\n\t\t\treturn this._geometries[n].getCoordinate();\n\t\t} else return GeometryCollection.prototype.getCoordinate.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_MULTIPOINT;\n\t},\n\tgetDimension: function () {\n\t\treturn 0;\n\t},\n\tgetBoundary: function () {\n\t\treturn this.getFactory().createGeometryCollection();\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_MULTIPOINT;\n\t},\n\tcopy: function () {\n\t\tvar points = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoints[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiPoint(points, this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiPoint;\n\t}\n});\nMultiPoint.serialVersionUID = -8048474874175355449;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/MultiPoint.js\n// module id = null\n// module chunks = ","import LineString from './LineString';\nimport Geometry from './Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport GeometryFactory from './GeometryFactory';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport CoordinateSequences from './CoordinateSequences';\nimport CoordinateSequence from './CoordinateSequence';\nimport Dimension from './Dimension';\nimport inherits from '../../../../inherits';\nexport default function LinearRing() {\n\tif (arguments[0] instanceof Array && arguments[1] instanceof GeometryFactory) {\n\t\tlet points = arguments[0], factory = arguments[1];\n\t\tLinearRing.call(this, factory.getCoordinateSequenceFactory().create(points), factory);\n\t} else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof GeometryFactory) {\n\t\tlet points = arguments[0], factory = arguments[1];\n\t\tLineString.call(this, points, factory);\n\t\tthis.validateConstruction();\n\t}\n}\ninherits(LinearRing, LineString);\nextend(LinearRing.prototype, {\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn LineString.prototype.isClosed.call(this);\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_LINEARRING;\n\t},\n\treverse: function () {\n\t\tvar seq = this._points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar rev = this.getFactory().createLinearRing(seq);\n\t\treturn rev;\n\t},\n\tvalidateConstruction: function () {\n\t\tif (!this.isEmpty() && !LineString.prototype.isClosed.call(this)) {\n\t\t\tthrow new IllegalArgumentException(\"Points of LinearRing do not form a closed linestring\");\n\t\t}\n\t\tif (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LinearRing (found \" + this.getCoordinateSequence().size() + \" - must be 0 or >= 4)\");\n\t\t}\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_LINEARRING;\n\t},\n\tcopy: function () {\n\t\treturn new LinearRing(this._points.copy(), this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LinearRing;\n\t}\n});\nLinearRing.MINIMUM_VALID_SIZE = 4;\nLinearRing.serialVersionUID = -4261142084085851829;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/LinearRing.js\n// module id = null\n// module chunks = ","import Geometry from './Geometry';\nimport extend from '../../../../extend';\nimport GeometryCollection from './GeometryCollection';\nimport Polygonal from './Polygonal';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport inherits from '../../../../inherits';\nexport default function MultiPolygon() {\n\tlet polygons = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, polygons, factory);\n}\ninherits(MultiPolygon, GeometryCollection);\nextend(MultiPolygon.prototype, {\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn 1;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_MULTIPOLYGON;\n\t},\n\tgetDimension: function () {\n\t\treturn 2;\n\t},\n\treverse: function () {\n\t\tvar n = this._geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevGeoms[i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiPolygon(revGeoms);\n\t},\n\tgetBoundary: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar allRings = new ArrayList();\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tvar polygon = this._geometries[i];\n\t\t\tvar rings = polygon.getBoundary();\n\t\t\tfor (var j = 0; j < rings.getNumGeometries(); j++) {\n\t\t\t\tallRings.add(rings.getGeometryN(j));\n\t\t\t}\n\t\t}\n\t\tvar allRingsArray = new Array(allRings.size()).fill(null);\n\t\treturn this.getFactory().createMultiLineString(allRings.toArray(allRingsArray));\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_MULTIPOLYGON;\n\t},\n\tcopy: function () {\n\t\tvar polygons = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < polygons.length; i++) {\n\t\t\tpolygons[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiPolygon(polygons, this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiPolygon;\n\t}\n});\nMultiPolygon.serialVersionUID = -551033529766975875;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/MultiPolygon.js\n// module id = null\n// module chunks = ","import LineString from '../LineString';\nimport Point from '../Point';\nimport Polygon from '../Polygon';\nimport MultiPoint from '../MultiPoint';\nimport LinearRing from '../LinearRing';\nimport extend from '../../../../../extend';\nimport MultiPolygon from '../MultiPolygon';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport MultiLineString from '../MultiLineString';\nexport default function GeometryEditor() {\n\tthis._factory = null;\n\tthis._isUserDataCopied = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet factory = arguments[0];\n\t\tthis._factory = factory;\n\t}\n}\nextend(GeometryEditor.prototype, {\n\tsetCopyUserData: function (isUserDataCopied) {\n\t\tthis._isUserDataCopied = isUserDataCopied;\n\t},\n\tedit: function (geometry, operation) {\n\t\tif (geometry === null) return null;\n\t\tvar result = this.editInternal(geometry, operation);\n\t\tif (this._isUserDataCopied) {\n\t\t\tresult.setUserData(geometry.getUserData());\n\t\t}\n\t\treturn result;\n\t},\n\teditInternal: function (geometry, operation) {\n\t\tif (this._factory === null) this._factory = geometry.getFactory();\n\t\tif (geometry instanceof GeometryCollection) {\n\t\t\treturn this.editGeometryCollection(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Polygon) {\n\t\t\treturn this.editPolygon(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn operation.edit(geometry, this._factory);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn operation.edit(geometry, this._factory);\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Unsupported Geometry class: \" + geometry.getClass().getName());\n\t\treturn null;\n\t},\n\teditGeometryCollection: function (collection, operation) {\n\t\tvar collectionForType = operation.edit(collection, this._factory);\n\t\tvar geometries = new ArrayList();\n\t\tfor (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n\t\t\tvar geometry = this.edit(collectionForType.getGeometryN(i), operation);\n\t\t\tif (geometry === null || geometry.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgeometries.add(geometry);\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPoint) {\n\t\t\treturn this._factory.createMultiPoint(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiLineString) {\n\t\t\treturn this._factory.createMultiLineString(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPolygon) {\n\t\t\treturn this._factory.createMultiPolygon(geometries.toArray([]));\n\t\t}\n\t\treturn this._factory.createGeometryCollection(geometries.toArray([]));\n\t},\n\teditPolygon: function (polygon, operation) {\n\t\tvar newPolygon = operation.edit(polygon, this._factory);\n\t\tif (newPolygon === null) newPolygon = this._factory.createPolygon();\n\t\tif (newPolygon.isEmpty()) {\n\t\t\treturn newPolygon;\n\t\t}\n\t\tvar shell = this.edit(newPolygon.getExteriorRing(), operation);\n\t\tif (shell === null || shell.isEmpty()) {\n\t\t\treturn this._factory.createPolygon();\n\t\t}\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.edit(newPolygon.getInteriorRingN(i), operation);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tholes.add(hole);\n\t\t}\n\t\treturn this._factory.createPolygon(shell, holes.toArray([]));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryEditor;\n\t}\n});\nfunction GeometryEditorOperation() {}\nGeometryEditor.GeometryEditorOperation = GeometryEditorOperation;\nfunction NoOpGeometryOperation() {}\nextend(NoOpGeometryOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn NoOpGeometryOperation;\n\t}\n});\nfunction CoordinateOperation() {}\nextend(CoordinateOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\tvar coordinates = this.edit(geometry.getCoordinates(), geometry);\n\t\tif (geometry instanceof LinearRing) {\n\t\t\tif (coordinates === null) return factory.createLinearRing(); else return factory.createLinearRing(coordinates);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\tif (coordinates === null) return factory.createLineString(); else return factory.createLineString(coordinates);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\tif (coordinates === null || coordinates.length === 0) return factory.createPoint(); else return factory.createPoint(coordinates[0]);\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateOperation;\n\t}\n});\nfunction CoordinateSequenceOperation() {}\nextend(CoordinateSequenceOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\tif (geometry instanceof LinearRing) {\n\t\t\treturn factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceOperation;\n\t}\n});\nGeometryEditor.NoOpGeometryOperation = NoOpGeometryOperation;\nGeometryEditor.CoordinateOperation = CoordinateOperation;\nGeometryEditor.CoordinateSequenceOperation = CoordinateSequenceOperation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/util/GeometryEditor.js\n// module id = null\n// module chunks = ","import hasInterface from '../../../../../hasInterface';\nimport Coordinate from '../Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport CoordinateSequence from '../CoordinateSequence';\nimport Serializable from '../../../../../java/io/Serializable';\nimport StringBuilder from '../../../../../java/lang/StringBuilder';\nexport default function CoordinateArraySequence() {\n\tthis._dimension = 3;\n\tthis._coordinates = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet coordinates = arguments[0];\n\t\t\tCoordinateArraySequence.call(this, coordinates, 3);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet size = arguments[0];\n\t\t\tthis._coordinates = new Array(size).fill(null);\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis._coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\tlet coordSeq = arguments[0];\n\t\t\tif (coordSeq === null) {\n\t\t\t\tthis._coordinates = new Array(0).fill(null);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._dimension = coordSeq.getDimension();\n\t\t\tthis._coordinates = new Array(coordSeq.size()).fill(null);\n\t\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\t\tthis._coordinates[i] = coordSeq.getCoordinateCopy(i);\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tif (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n\t\t\tlet coordinates = arguments[0], dimension = arguments[1];\n\t\t\tthis._coordinates = coordinates;\n\t\t\tthis._dimension = dimension;\n\t\t\tif (coordinates === null) this._coordinates = new Array(0).fill(null);\n\t\t} else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t\tthis._coordinates = new Array(size).fill(null);\n\t\t\tthis._dimension = dimension;\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis._coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t}\n\t}\n}\nextend(CoordinateArraySequence.prototype, {\n\tsetOrdinate: function (index, ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\tthis._coordinates[index].x = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\tthis._coordinates[index].y = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\tthis._coordinates[index].z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"invalid ordinateIndex\");\n\t\t}\n\t},\n\tsize: function () {\n\t\treturn this._coordinates.length;\n\t},\n\tgetOrdinate: function (index, ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\treturn this._coordinates[index].x;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\treturn this._coordinates[index].y;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\treturn this._coordinates[index].z;\n\t\t}\n\t\treturn Double.NaN;\n\t},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this._coordinates[i];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], coord = arguments[1];\n\t\t\tcoord.x = this._coordinates[index].x;\n\t\t\tcoord.y = this._coordinates[index].y;\n\t\t\tcoord.z = this._coordinates[index].z;\n\t\t}\n\t},\n\tgetCoordinateCopy: function (i) {\n\t\treturn new Coordinate(this._coordinates[i]);\n\t},\n\tgetDimension: function () {\n\t\treturn this._dimension;\n\t},\n\tgetX: function (index) {\n\t\treturn this._coordinates[index].x;\n\t},\n\texpandEnvelope: function (env) {\n\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\tenv.expandToInclude(this._coordinates[i]);\n\t\t}\n\t\treturn env;\n\t},\n\tcopy: function () {\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\n\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\tcloneCoordinates[i] = this._coordinates[i].copy();\n\t\t}\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this._dimension);\n\t},\n\ttoString: function () {\n\t\tif (this._coordinates.length > 0) {\n\t\t\tvar strBuilder = new StringBuilder(17 * this._coordinates.length);\n\t\t\tstrBuilder.append('(');\n\t\t\tstrBuilder.append(this._coordinates[0]);\n\t\t\tfor (var i = 1; i < this._coordinates.length; i++) {\n\t\t\t\tstrBuilder.append(\", \");\n\t\t\t\tstrBuilder.append(this._coordinates[i]);\n\t\t\t}\n\t\t\tstrBuilder.append(')');\n\t\t\treturn strBuilder.toString();\n\t\t} else {\n\t\t\treturn \"()\";\n\t\t}\n\t},\n\tgetY: function (index) {\n\t\treturn this._coordinates[index].y;\n\t},\n\ttoCoordinateArray: function () {\n\t\treturn this._coordinates;\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequence, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArraySequence;\n\t}\n});\nCoordinateArraySequence.serialVersionUID = -915438501601840650;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/impl/CoordinateArraySequence.js\n// module id = null\n// module chunks = ","import CoordinateSequenceFactory from '../CoordinateSequenceFactory';\nimport hasInterface from '../../../../../hasInterface';\nimport CoordinateArraySequence from './CoordinateArraySequence';\nimport extend from '../../../../../extend';\nimport CoordinateSequence from '../CoordinateSequence';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function CoordinateArraySequenceFactory() {}\nextend(CoordinateArraySequenceFactory.prototype, {\n\treadResolve: function () {\n\t\treturn CoordinateArraySequenceFactory.instance();\n\t},\n\tcreate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordinates);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordSeq = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordSeq);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t\tif (dimension > 3) dimension = 3;\n\t\t\tif (dimension < 2) return new CoordinateArraySequence(size);\n\t\t\treturn new CoordinateArraySequence(size, dimension);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequenceFactory, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArraySequenceFactory;\n\t}\n});\nCoordinateArraySequenceFactory.instance = function () {\n\treturn CoordinateArraySequenceFactory.instanceObject;\n};\nCoordinateArraySequenceFactory.serialVersionUID = -4099577099607551657;\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js\n// module id = null\n// module chunks = ","export default function ByteArrayOutputStream () {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/io/ByteArrayOutputStream.js\n// module id = null\n// module chunks = ","export default function PrintStream () {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/io/PrintStream.js\n// module id = null\n// module chunks = ","export default function LineNumberReader () {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/io/LineNumberReader.js\n// module id = null\n// module chunks = ","export default function StringReader () {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/io/StringReader.js\n// module id = null\n// module chunks = ","export default function DecimalFormat () {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/text/DecimalFormat.js\n// module id = null\n// module chunks = ","import ArrayList from './ArrayList'\nimport MapInterface from './Map'\nimport HashSet from './HashSet'\nimport MapPolyfill from '../../Map'\n\nlet MapImpl = typeof Map === 'undefined' || !Map.prototype.values ? MapPolyfill : Map\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nexport default function HashMap () {\n  /**\n   * @type {Object}\n   * @private\n  */\n  this.map_ = new MapImpl()\n}\nHashMap.prototype = new MapInterface()\n\n/**\n * @override\n */\nHashMap.prototype.get = function (key) {\n  return this.map_.get(key) || null\n}\n\n/**\n * @override\n */\nHashMap.prototype.put = function (key, value) {\n  this.map_.set(key, value)\n  return value\n}\n\n/**\n * @override\n */\nHashMap.prototype.values = function () {\n  const arrayList = new ArrayList()\n  const it = this.map_.values()\n  let o = it.next()\n  while (!o.done) {\n    arrayList.add(o.value)\n    o = it.next()\n  }\n  return arrayList\n}\n\n/**\n * @override\n */\nHashMap.prototype.entrySet = function () {\n  const hashSet = new HashSet()\n  this.map_.entries().forEach(entry => hashSet.add(entry))\n  return hashSet\n}\n\n/**\n * @override\n */\nHashMap.prototype.size = function () {\n  return this.map_.size()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/java/util/HashMap.js\n// module id = null\n// module chunks = ","import HashMap from '../../../../java/util/HashMap';\nimport Coordinate from './Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Integer from '../../../../java/lang/Integer';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function PrecisionModel() {\n\tthis._modelType = null;\n\tthis._scale = null;\n\tif (arguments.length === 0) {\n\t\tthis._modelType = PrecisionModel.FLOATING;\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Type) {\n\t\t\tlet modelType = arguments[0];\n\t\t\tthis._modelType = modelType;\n\t\t\tif (modelType === PrecisionModel.FIXED) {\n\t\t\t\tthis.setScale(1.0);\n\t\t\t}\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet scale = arguments[0];\n\t\t\tthis._modelType = PrecisionModel.FIXED;\n\t\t\tthis.setScale(scale);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tlet pm = arguments[0];\n\t\t\tthis._modelType = pm._modelType;\n\t\t\tthis._scale = pm._scale;\n\t\t}\n\t}\n}\nextend(PrecisionModel.prototype, {\n\tequals: function (other) {\n\t\tif (!(other instanceof PrecisionModel)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherPrecisionModel = other;\n\t\treturn this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale;\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tvar sigDigits = this.getMaximumSignificantDigits();\n\t\tvar otherSigDigits = other.getMaximumSignificantDigits();\n\t\treturn new Integer(sigDigits).compareTo(new Integer(otherSigDigits));\n\t},\n\tgetScale: function () {\n\t\treturn this._scale;\n\t},\n\tisFloating: function () {\n\t\treturn this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE;\n\t},\n\tgetType: function () {\n\t\treturn this._modelType;\n\t},\n\ttoString: function () {\n\t\tvar description = \"UNKNOWN\";\n\t\tif (this._modelType === PrecisionModel.FLOATING) {\n\t\t\tdescription = \"Floating\";\n\t\t} else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tdescription = \"Floating-Single\";\n\t\t} else if (this._modelType === PrecisionModel.FIXED) {\n\t\t\tdescription = \"Fixed (Scale=\" + this.getScale() + \")\";\n\t\t}\n\t\treturn description;\n\t},\n\tmakePrecise: function () {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tlet val = arguments[0];\n\t\t\tif (Double.isNaN(val)) return val;\n\t\t\tif (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\t\tvar floatSingleVal = val;\n\t\t\t\treturn floatSingleVal;\n\t\t\t}\n\t\t\tif (this._modelType === PrecisionModel.FIXED) {\n\t\t\t\treturn Math.round(val * this._scale) / this._scale;\n\t\t\t}\n\t\t\treturn val;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\tif (this._modelType === PrecisionModel.FLOATING) return null;\n\t\t\tcoord.x = this.makePrecise(coord.x);\n\t\t\tcoord.y = this.makePrecise(coord.y);\n\t\t}\n\t},\n\tgetMaximumSignificantDigits: function () {\n\t\tvar maxSigDigits = 16;\n\t\tif (this._modelType === PrecisionModel.FLOATING) {\n\t\t\tmaxSigDigits = 16;\n\t\t} else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tmaxSigDigits = 6;\n\t\t} else if (this._modelType === PrecisionModel.FIXED) {\n\t\t\tmaxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n\t\t}\n\t\treturn maxSigDigits;\n\t},\n\tsetScale: function (scale) {\n\t\tthis._scale = Math.abs(scale);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable, Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn PrecisionModel;\n\t}\n});\nPrecisionModel.mostPrecise = function (pm1, pm2) {\n\tif (pm1.compareTo(pm2) >= 0) return pm1;\n\treturn pm2;\n};\nfunction Type() {\n\tthis._name = null;\n\tlet name = arguments[0];\n\tthis._name = name;\n\tType.nameToTypeMap.put(name, this);\n}\nextend(Type.prototype, {\n\treadResolve: function () {\n\t\treturn Type.nameToTypeMap.get(this._name);\n\t},\n\ttoString: function () {\n\t\treturn this._name;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Type;\n\t}\n});\nType.serialVersionUID = -5528602631731589822;\nType.nameToTypeMap = new HashMap();\nPrecisionModel.Type = Type;\nPrecisionModel.serialVersionUID = 7777263578777803835;\nPrecisionModel.FIXED = new Type(\"FIXED\");\nPrecisionModel.FLOATING = new Type(\"FLOATING\");\nPrecisionModel.FLOATING_SINGLE = new Type(\"FLOATING SINGLE\");\nPrecisionModel.maximumPreciseValue = 9007199254740992.0;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/PrecisionModel.js\n// module id = null\n// module chunks = ","import CoordinateSequenceFactory from './CoordinateSequenceFactory';\nimport LineString from './LineString';\nimport Geometry from './Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from './Coordinate';\nimport Point from './Point';\nimport Polygon from './Polygon';\nimport MultiPoint from './MultiPoint';\nimport GeometryEditor from './util/GeometryEditor';\nimport LinearRing from './LinearRing';\nimport extend from '../../../../extend';\nimport CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory';\nimport MultiPolygon from './MultiPolygon';\nimport CoordinateSequences from './CoordinateSequences';\nimport CoordinateSequence from './CoordinateSequence';\nimport GeometryCollection from './GeometryCollection';\nimport PrecisionModel from './PrecisionModel';\nimport Serializable from '../../../../java/io/Serializable';\nimport Assert from '../util/Assert';\nimport MultiLineString from './MultiLineString';\nexport default function GeometryFactory() {\n\tthis._precisionModel = null;\n\tthis._coordinateSequenceFactory = null;\n\tthis._SRID = null;\n\tif (arguments.length === 0) {\n\t\tGeometryFactory.call(this, new PrecisionModel(), 0);\n\t} else if (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n\t\t\tlet coordinateSequenceFactory = arguments[0];\n\t\t\tGeometryFactory.call(this, new PrecisionModel(), 0, coordinateSequenceFactory);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tlet precisionModel = arguments[0];\n\t\t\tGeometryFactory.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet precisionModel = arguments[0], SRID = arguments[1];\n\t\tGeometryFactory.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t} else if (arguments.length === 3) {\n\t\tlet precisionModel = arguments[0], SRID = arguments[1], coordinateSequenceFactory = arguments[2];\n\t\tthis._precisionModel = precisionModel;\n\t\tthis._coordinateSequenceFactory = coordinateSequenceFactory;\n\t\tthis._SRID = SRID;\n\t}\n}\nextend(GeometryFactory.prototype, {\n\ttoGeometry: function (envelope) {\n\t\tif (envelope.isNull()) {\n\t\t\treturn this.createPoint();\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()));\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())]);\n\t\t}\n\t\treturn this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null);\n\t},\n\tcreateLineString: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLineString(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new LineString(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiLineString: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiLineString(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet lineStrings = arguments[0];\n\t\t\treturn new MultiLineString(lineStrings, this);\n\t\t}\n\t},\n\tbuildGeometry: function (geomList) {\n\t\tvar geomClass = null;\n\t\tvar isHeterogeneous = false;\n\t\tvar hasGeometryCollection = false;\n\t\tfor (var i = geomList.iterator(); i.hasNext(); ) {\n\t\t\tvar geom = i.next();\n\t\t\tvar partClass = geom.getClass();\n\t\t\tif (geomClass === null) {\n\t\t\t\tgeomClass = partClass;\n\t\t\t}\n\t\t\tif (partClass !== geomClass) {\n\t\t\t\tisHeterogeneous = true;\n\t\t\t}\n\t\t\tif (geom instanceof GeometryCollection) hasGeometryCollection = true;\n\t\t}\n\t\tif (geomClass === null) {\n\t\t\treturn this.createGeometryCollection();\n\t\t}\n\t\tif (isHeterogeneous || hasGeometryCollection) {\n\t\t\treturn this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList));\n\t\t}\n\t\tvar geom0 = geomList.iterator().next();\n\t\tvar isCollection = geomList.size() > 1;\n\t\tif (isCollection) {\n\t\t\tif (geom0 instanceof Polygon) {\n\t\t\t\treturn this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList));\n\t\t\t} else if (geom0 instanceof LineString) {\n\t\t\t\treturn this.createMultiLineString(GeometryFactory.toLineStringArray(geomList));\n\t\t\t} else if (geom0 instanceof Point) {\n\t\t\t\treturn this.createMultiPoint(GeometryFactory.toPointArray(geomList));\n\t\t\t}\n\t\t\tAssert.shouldNeverReachHere(\"Unhandled class: \" + geom0.getClass().getName());\n\t\t}\n\t\treturn geom0;\n\t},\n\tcreateMultiPointFromCoords: function (coordinates) {\n\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t},\n\tcreatePoint: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createPoint(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet coordinate = arguments[0];\n\t\t\t\treturn this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new Point(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinateSequenceFactory: function () {\n\t\treturn this._coordinateSequenceFactory;\n\t},\n\tcreatePolygon: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createPolygon(null, null);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(shell));\n\t\t\t} else if (arguments[0] instanceof Array) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(shell));\n\t\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(shell, null);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet shell = arguments[0], holes = arguments[1];\n\t\t\treturn new Polygon(shell, holes, this);\n\t\t}\n\t},\n\tgetSRID: function () {\n\t\treturn this._SRID;\n\t},\n\tcreateGeometryCollection: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new GeometryCollection(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geometries = arguments[0];\n\t\t\treturn new GeometryCollection(geometries, this);\n\t\t}\n\t},\n\tcreateGeometry: function (g) {\n\t\tvar editor = new GeometryEditor(this);\n\t\treturn editor.edit(g, {\n\t\t\tedit: function () {\n\t\t\t\tif (arguments.length === 2 && (arguments[1] instanceof Geometry && hasInterface(arguments[0], CoordinateSequence))) {\n\t\t\t\t\tlet coordSeq = arguments[0], geometry = arguments[1];\n\t\t\t\t\treturn this._coordinateSequenceFactory.create(coordSeq);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tgetPrecisionModel: function () {\n\t\treturn this._precisionModel;\n\t},\n\tcreateLinearRing: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLinearRing(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new LinearRing(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiPolygon: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPolygon(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet polygons = arguments[0];\n\t\t\treturn new MultiPolygon(polygons, this);\n\t\t}\n\t},\n\tcreateMultiPoint: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPoint(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet point = arguments[0];\n\t\t\t\treturn new MultiPoint(point, this);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\tif (coordinates === null) {\n\t\t\t\t\treturn this.createMultiPoint(new Array(0).fill(null));\n\t\t\t\t}\n\t\t\t\tvar points = new Array(coordinates.size()).fill(null);\n\t\t\t\tfor (var i = 0; i < coordinates.size(); i++) {\n\t\t\t\t\tvar ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension());\n\t\t\t\t\tCoordinateSequences.copy(coordinates, i, ptSeq, 0, 1);\n\t\t\t\t\tpoints[i] = this.createPoint(ptSeq);\n\t\t\t\t}\n\t\t\t\treturn this.createMultiPoint(points);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryFactory;\n\t}\n});\nGeometryFactory.toMultiPolygonArray = function (multiPolygons) {\n\tvar multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n\treturn multiPolygons.toArray(multiPolygonArray);\n};\nGeometryFactory.toGeometryArray = function (geometries) {\n\tif (geometries === null) return null;\n\tvar geometryArray = new Array(geometries.size()).fill(null);\n\treturn geometries.toArray(geometryArray);\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function () {\n\treturn CoordinateArraySequenceFactory.instance();\n};\nGeometryFactory.toMultiLineStringArray = function (multiLineStrings) {\n\tvar multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n\treturn multiLineStrings.toArray(multiLineStringArray);\n};\nGeometryFactory.toLineStringArray = function (lineStrings) {\n\tvar lineStringArray = new Array(lineStrings.size()).fill(null);\n\treturn lineStrings.toArray(lineStringArray);\n};\nGeometryFactory.toMultiPointArray = function (multiPoints) {\n\tvar multiPointArray = new Array(multiPoints.size()).fill(null);\n\treturn multiPoints.toArray(multiPointArray);\n};\nGeometryFactory.toLinearRingArray = function (linearRings) {\n\tvar linearRingArray = new Array(linearRings.size()).fill(null);\n\treturn linearRings.toArray(linearRingArray);\n};\nGeometryFactory.toPointArray = function (points) {\n\tvar pointArray = new Array(points.size()).fill(null);\n\treturn points.toArray(pointArray);\n};\nGeometryFactory.toPolygonArray = function (polygons) {\n\tvar polygonArray = new Array(polygons.size()).fill(null);\n\treturn polygons.toArray(polygonArray);\n};\nGeometryFactory.createPointFromInternalCoord = function (coord, exemplar) {\n\texemplar.getPrecisionModel().makePrecise(coord);\n\treturn exemplar.getFactory().createPoint(coord);\n};\nGeometryFactory.serialVersionUID = -6820524753094095635;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/geom/GeometryFactory.js\n// module id = null\n// module chunks = ","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nconst geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon']\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nexport default function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n}\n\nextend(GeoJSONParser.prototype, {\n  /**\n   * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n   *\n   * @param {}\n   *          A GeoJSON object.\n   * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n   * @private\n   */\n  read (json) {\n    let obj\n    if (typeof json === 'string') {\n      obj = JSON.parse(json)\n    } else {\n      obj = json\n    }\n\n    const type = obj.type\n\n    if (!parse[type]) {\n      throw new Error('Unknown GeoJSON type: ' + obj.type)\n    }\n\n    if (geometryTypes.indexOf(type) !== -1) {\n      return parse[type].apply(this, [obj.coordinates])\n    } else if (type === 'GeometryCollection') {\n      return parse[type].apply(this, [obj.geometries])\n    }\n\n    // feature or feature collection\n    return parse[type].apply(this, [obj])\n  },\n\n  /**\n   * Serialize a Geometry object into GeoJSON\n   *\n   * @param {Geometry}\n   *          geometry A Geometry or array of Geometries.\n   * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n   * @private\n   */\n  write (geometry) {\n    const type = geometry.getGeometryType()\n\n    if (!extract[type]) {\n      throw new Error('Geometry is not supported')\n    }\n\n    return extract[type].apply(this, [geometry])\n  }\n})\n\nconst parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    const feature = {}\n\n    // copy features\n    for (let key in obj) {\n      feature[key] = obj[key]\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      const type = obj.geometry.type\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry)\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox])\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    const featureCollection = {}\n\n    if (obj.features) {\n      featureCollection.features = []\n\n      for (let i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this.read(obj.features[i]))\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox])\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    const coordinates = []\n    for (let i = 0; i < array.length; ++i) {\n      const sub = array[i]\n      coordinates.push(new Coordinate(sub[0], sub[1]))\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    const coordinate = new Coordinate(array[0], array[1])\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    const points = []\n    for (let i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this, [array[i]]))\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    const coordinates = parse.coordinates.apply(this, [array])\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    const lineStrings = []\n    for (let i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this, [array[i]]))\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    const shellCoordinates = parse.coordinates.apply(this, [array[0]])\n    const shell = this.geometryFactory.createLinearRing(shellCoordinates)\n    const holes = []\n    for (let i = 1; i < array.length; ++i) {\n      var hole = array[i]\n      var coordinates = parse.coordinates.apply(this, [hole])\n      var linearRing = this.geometryFactory.createLinearRing(coordinates)\n      holes.push(linearRing)\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    const polygons = []\n    for (let i = 0; i < array.length; ++i) {\n      const polygon = array[i]\n      polygons.push(parse.Polygon.apply(this, [polygon]))\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    const geometries = []\n    for (let i = 0; i < array.length; ++i) {\n      const geometry = array[i]\n      geometries.push(this.read(geometry))\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n}\n\nconst extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    const array = extract.coordinate.apply(this, [point.getCoordinate()])\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    const array = []\n    for (let i = 0; i < multipoint._geometries.length; ++i) {\n      const point = multipoint._geometries[i]\n      const geoJson = extract.Point.apply(this, [point])\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    const array = []\n    const coordinates = linestring.getCoordinates()\n    for (let i = 0; i < coordinates.length; ++i) {\n      const coordinate = coordinates[i]\n      array.push(extract.coordinate.apply(this, [coordinate]))\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    const array = []\n    for (let i = 0; i < multilinestring._geometries.length; ++i) {\n      const linestring = multilinestring._geometries[i]\n      const geoJson = extract.LineString.apply(this, [linestring])\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    const array = []\n    const shellGeoJson = extract.LineString.apply(this, [polygon._shell])\n    array.push(shellGeoJson.coordinates)\n    for (let i = 0; i < polygon._holes.length; ++i) {\n      const hole = polygon._holes[i]\n      const holeGeoJson = extract.LineString.apply(this, [hole])\n      array.push(holeGeoJson.coordinates)\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    const array = []\n    for (let i = 0; i < multipolygon._geometries.length; ++i) {\n      const polygon = multipolygon._geometries[i]\n      const geoJson = extract.Polygon.apply(this, [polygon])\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    const array = []\n    for (let i = 0; i < collection._geometries.length; ++i) {\n      const geometry = collection._geometries[i]\n      const type = geometry.getGeometryType()\n      array.push(extract[type].apply(this, [geometry]))\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/io/GeoJSONParser.js\n// module id = null\n// module chunks = ","/**\n * @module org/locationtech/jts/io/GeoJSONReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory'\nimport PrecisionModel from '../geom/PrecisionModel'\nimport GeoJSONParser from './GeoJSONParser'\nimport extend from '../../../../extend'\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n  this.precisionModel = this.geometryFactory.getPrecisionModel()\n  this.parser = new GeoJSONParser(this.geometryFactory)\n}\n\nextend(GeoJSONReader.prototype, {\n  /**\n   * Reads a GeoJSON representation of a {@link Geometry}\n   *\n   * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n   *\n   * @param {Object|String} geoJson a GeoJSON Object or String.\n   * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n   * @memberof module:org/locationtech/jts/io/GeoJSONReader#\n   */\n  read (geoJson) {\n    var geometry = this.parser.read(geoJson)\n\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n      this.reducePrecision(geometry)\n    }\n\n    return geometry\n  },\n\n  // NOTE: this is a hack\n  reducePrecision (geometry) {\n    var i, len\n\n    if (geometry.coordinate) {\n      this.precisionModel.makePrecise(geometry.coordinate)\n    } else if (geometry.points) {\n      for (i = 0, len = geometry.points.length; i < len; i++) {\n        this.precisionModel.makePrecise(geometry.points[i])\n      }\n    } else if (geometry.geometries) {\n      for (i = 0, len = geometry.geometries.length; i < len; i++) {\n        this.reducePrecision(geometry.geometries[i])\n      }\n    }\n  }\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/io/GeoJSONReader.js\n// module id = null\n// module chunks = ","/**\n * @module org/locationtech/jts/io/GeoJSONWriter\n */\n\nimport GeoJSONParser from './GeoJSONParser'\nimport extend from '../../../../extend'\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory)\n}\n\nextend(GeoJSONWriter.prototype, {\n  /**\n   * Converts a <code>Geometry</code> to its GeoJSON representation.\n   *\n   * @param {Geometry}\n   *          geometry a <code>Geometry</code> to process.\n   * @return {Object} The GeoJSON representation of the Geometry.\n   * @memberof module:org/locationtech/jts/io/GeoJSONWriter#\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/io/GeoJSONWriter.js\n// module id = null\n// module chunks = ","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nconst regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n}\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nexport default function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n}\n\nextend(WKTParser.prototype, {\n  /**\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n   * and GEOMETRYCOLLECTION.\n   *\n   * @param {String} wkt A WKT string.\n   * @return {Geometry} A geometry instance.\n   * @private\n   */\n  read (wkt) {\n    var geometry, type, str\n    wkt = wkt.replace(/[\\n\\r]/g, ' ')\n    var matches = regExes.typeStr.exec(wkt)\n    if (wkt.search('EMPTY') !== -1) {\n      matches = regExes.emptyTypeStr.exec(wkt)\n      matches[2] = undefined\n    }\n    if (matches) {\n      type = matches[1].toLowerCase()\n      str = matches[2]\n      if (parse[type]) {\n        geometry = parse[type].apply(this, [str])\n      }\n    }\n\n    if (geometry === undefined) throw new Error('Could not parse WKT ' + wkt)\n\n    return geometry\n  },\n\n  /**\n   * Serialize a geometry into a WKT string.\n   *\n   * @param {Geometry} geometry A feature or array of features.\n   * @return {String} The WKT string representation of the input geometries.\n   * @private\n   */\n  write (geometry) {\n    return this.extractGeometry(geometry)\n  },\n\n  /**\n   * Entry point to construct the WKT for a single Geometry object.\n   *\n   * @param {Geometry} geometry\n   * @return {String} A WKT string of representing the geometry.\n   * @private\n   */\n  extractGeometry (geometry) {\n    var type = geometry.getGeometryType().toLowerCase()\n    if (!extract[type]) {\n      return null\n    }\n    var wktType = type.toUpperCase()\n    var data\n    if (geometry.isEmpty()) {\n      data = wktType + ' EMPTY'\n    } else {\n      data = wktType + '(' + extract[type].apply(this, [geometry]) + ')'\n    }\n    return data\n  }\n})\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nconst extract = {\n  coordinate (coordinate) {\n    return coordinate.x + ' ' + coordinate.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point (point) {\n    return extract.coordinate.call(this, point._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint (multipoint) {\n    var array = []\n    for (let i = 0, len = multipoint._geometries.length; i < len; ++i) {\n      array.push('(' + extract.point.apply(this, [multipoint._geometries[i]]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring (linestring) {\n    var array = []\n    for (let i = 0, len = linestring._points._coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.apply(this, [linestring._points._coordinates[i]]))\n    }\n    return array.join(',')\n  },\n\n  linearring (linearring) {\n    var array = []\n    for (let i = 0, len = linearring._points._coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.apply(this, [linearring._points._coordinates[i]]))\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring (multilinestring) {\n    var array = []\n    for (let i = 0, len = multilinestring._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract.linestring.apply(this, [multilinestring._geometries[i]]) +\n        ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon (polygon) {\n    var array = []\n    array.push('(' + extract.linestring.apply(this, [polygon._shell]) + ')')\n    for (let i = 0, len = polygon._holes.length; i < len; ++i) {\n      array.push('(' + extract.linestring.apply(this, [polygon._holes[i]]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon (multipolygon) {\n    var array = []\n    for (let i = 0, len = multipolygon._geometries.length; i < len; ++i) {\n      array.push('(' + extract.polygon.apply(this, [multipolygon._geometries[i]]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection (collection) {\n    var array = []\n    for (let i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this.extractGeometry(collection._geometries[i]))\n    }\n    return array.join(',')\n  }\n}\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nconst parse = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces)\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point\n    var points = str.trim().split(',')\n    var components = []\n    for (let i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1')\n      components.push(parse.point.apply(this, [point]))\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces)\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])))\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces)\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])))\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line\n    var lines = str.trim().split(regExes.parenComma)\n    var components = []\n    for (let i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1')\n      components.push(parse.linestring.apply(this, [line]))\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring\n    var rings = str.trim().split(regExes.parenComma)\n    var shell\n    var holes = []\n    for (let i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1')\n      linestring = parse.linestring.apply(this, [ring])\n      linearring = this.geometryFactory.createLinearRing(linestring._points)\n      if (i === 0) {\n        shell = linearring\n      } else {\n        holes.push(linearring)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon\n    var polygons = str.trim().split(regExes.doubleParenComma)\n    var components = []\n    for (let i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1')\n      components.push(parse.polygon.apply(this, [polygon]))\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1')\n    var wktArray = str.trim().split('|')\n    var components = []\n    for (let i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this.read(wktArray[i]))\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/io/WKTParser.js\n// module id = null\n// module chunks = ","/**\n * @module org/locationtech/jts/io/WKTReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory'\nimport PrecisionModel from '../geom/PrecisionModel'\nimport WKTParser from './WKTParser'\nimport extend from '../../../../extend'\n\n/**\n * Converts a geometry in Well-Known Text format to a {@link Geometry}.\n * <p>\n * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\n * from either {@link Reader}s or {@link String}s. This allows it to function\n * as a parser to read <code>Geometry</code> objects from text blocks embedded\n * in other data formats (e.g. XML).\n */\n\n/**\n * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function WKTReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n  this.precisionModel = this.geometryFactory.getPrecisionModel()\n  this.parser = new WKTParser(this.geometryFactory)\n}\n\nextend(WKTReader.prototype, {\n  /**\n   * Reads a Well-Known Text representation of a {@link Geometry}\n   *\n   * @param {string}\n   *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\n   *          Specification).\n   * @return {Geometry} a <code>Geometry</code> read from\n   *         <code>string.</code>\n   * @memberof module:org/locationtech/jts/io/WKTReader#\n   */\n  read (wkt) {\n    var geometry = this.parser.read(wkt)\n\n    // TODO: port and use GeometryPrecisionReducer, this is a hack\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n      this.reducePrecision(geometry)\n    }\n\n    return geometry\n  },\n\n  reducePrecision (geometry) {\n    if (geometry.coordinate) {\n      this.precisionModel.makePrecise(geometry.coordinate)\n    } else if (geometry._points) {\n      for (let i = 0, len = geometry._points._coordinates.length; i < len; i++) {\n        this.precisionModel.makePrecise(geometry._points._coordinates[i])\n      }\n    } else if (geometry._geometries) {\n      for (let i = 0, len = geometry._geometries.length; i < len; i++) {\n        this.reducePrecision(geometry._geometries[i])\n      }\n    }\n  }\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/io/WKTReader.js\n// module id = null\n// module chunks = ","/**\n * @module org/locationtech/jts/io/WKTWriter\n */\n\nimport WKTParser from './WKTParser'\nimport extend from '../../../../extend'\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory)\n}\n\nextend(WKTWriter.prototype, {\n  /**\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\n   *\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n   *         Features Specification).\n   * @memberof module:org/locationtech/jts/io/WKTWriter#\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n})\n\nextend(WKTWriter, {\n  /**\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n   * {@link Coordinate}s.\n   *\n   * @param p0 the first coordinate.\n   * @param p1 the second coordinate.\n   *\n   * @return the WKT.\n   * @private\n   */\n  toLineString (p0, p1) {\n    if (arguments.length !== 2) {\n      throw new Error('Not implemented')\n    }\n\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n  }\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/io/WKTWriter.js\n// module id = null\n// module chunks = ","/*eslint-disable no-undef */\n\n/**\n * @module org/locationtech/jts/io/OL3Parser\n */\n\nimport Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nfunction p2c (p) { return [p.x, p.y] }\n\n/**\n * OpenLayers 3 Geometry parser and writer\n * @param {GeometryFactory} geometryFactory\n * @param {ol} olReference\n * @constructor\n */\nexport default function OL3Parser (geometryFactory, olReference) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n  this.ol = olReference || (typeof ol !== 'undefined' && ol)\n}\n\nextend(OL3Parser.prototype, {\n  /**\n   * @param geometry {ol.geom.Geometry}\n   * @return {Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  read (geometry) {\n    const ol = this.ol\n    if (geometry instanceof ol.geom.Point) {\n      return this.convertFromPoint(geometry)\n    } else if (geometry instanceof ol.geom.LineString) {\n      return this.convertFromLineString(geometry)\n    } else if (geometry instanceof ol.geom.LinearRing) {\n      return this.convertFromLinearRing(geometry)\n    } else if (geometry instanceof ol.geom.Polygon) {\n      return this.convertFromPolygon(geometry)\n    } else if (geometry instanceof ol.geom.MultiPoint) {\n      return this.convertFromMultiPoint(geometry)\n    } else if (geometry instanceof ol.geom.MultiLineString) {\n      return this.convertFromMultiLineString(geometry)\n    } else if (geometry instanceof ol.geom.MultiPolygon) {\n      return this.convertFromMultiPolygon(geometry)\n    } else if (geometry instanceof ol.geom.GeometryCollection) {\n      return this.convertFromCollection(geometry)\n    }\n  },\n\n  convertFromPoint (point) {\n    const coordinates = point.getCoordinates()\n    return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]))\n  },\n\n  convertFromLineString (lineString) {\n    return this.geometryFactory.createLineString(lineString.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  },\n\n  convertFromLinearRing (linearRing) {\n    return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  },\n\n  convertFromPolygon (polygon) {\n    const linearRings = polygon.getLinearRings()\n    var shell = null\n    var holes = []\n    for (let i = 0; i < linearRings.length; i++) {\n      const linearRing = this.convertFromLinearRing(linearRings[i])\n      if (i === 0) {\n        shell = linearRing\n      } else {\n        holes.push(linearRing)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  convertFromMultiPoint (multiPoint) {\n    const points = multiPoint.getPoints().map(function (point) {\n      return this.convertFromPoint(point)\n    }, this)\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  convertFromMultiLineString (multiLineString) {\n    const lineStrings = multiLineString.getLineStrings().map(function (lineString) {\n      return this.convertFromLineString(lineString)\n    }, this)\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  convertFromMultiPolygon (multiPolygon) {\n    const polygons = multiPolygon.getPolygons().map(function (polygon) {\n      return this.convertFromPolygon(polygon)\n    }, this)\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  convertFromCollection (collection) {\n    const geometries = collection.getGeometries().map(function (geometry) {\n      return this.read(geometry)\n    }, this)\n    return this.geometryFactory.createGeometryCollection(geometries)\n  },\n\n  /**\n   * @param geometry\n   *          {Geometry}\n   * @return {ol.geom.Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  write (geometry) {\n    if (geometry.getGeometryType() === 'Point') {\n      return this.convertToPoint(geometry.getCoordinate())\n    } else if (geometry.getGeometryType() === 'LineString') {\n      return this.convertToLineString(geometry)\n    } else if (geometry.getGeometryType() === 'LinearRing') {\n      return this.convertToLinearRing(geometry)\n    } else if (geometry.getGeometryType() === 'Polygon') {\n      return this.convertToPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPoint') {\n      return this.convertToMultiPoint(geometry)\n    } else if (geometry.getGeometryType() === 'MultiLineString') {\n      return this.convertToMultiLineString(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPolygon') {\n      return this.convertToMultiPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'GeometryCollection') {\n      return this.convertToCollection(geometry)\n    }\n  },\n\n  convertToPoint (coordinate) {\n    return new this.ol.geom.Point([coordinate.x, coordinate.y])\n  },\n\n  convertToLineString (lineString) {\n    var points = lineString._points._coordinates.map(p2c)\n    return new this.ol.geom.LineString(points)\n  },\n\n  convertToLinearRing (linearRing) {\n    var points = linearRing._points._coordinates.map(p2c)\n    return new this.ol.geom.LinearRing(points)\n  },\n\n  convertToPolygon (polygon) {\n    var rings = [polygon._shell._points._coordinates.map(p2c)]\n    for (let i = 0; i < polygon._holes.length; i++) {\n      rings.push(polygon._holes[i]._points._coordinates.map(p2c))\n    }\n    return new this.ol.geom.Polygon(rings)\n  },\n\n  convertToMultiPoint (multiPoint) {\n    return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c))\n  },\n\n  convertToMultiLineString (multiLineString) {\n    var lineStrings = []\n    for (let i = 0; i < multiLineString._geometries.length; i++) {\n      lineStrings.push(this.convertToLineString(multiLineString._geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiLineString(lineStrings)\n  },\n\n  convertToMultiPolygon (multiPolygon) {\n    var polygons = []\n    for (let i = 0; i < multiPolygon._geometries.length; i++) {\n      polygons.push(this.convertToPolygon(multiPolygon._geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiPolygon(polygons)\n  },\n\n  convertToCollection (geometryCollection) {\n    var geometries = []\n    for (let i = 0; i < geometryCollection._geometries.length; i++) {\n      var geometry = geometryCollection._geometries[i]\n      geometries.push(this.write(geometry))\n    }\n    return new this.ol.geom.GeometryCollection(geometries)\n  }\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsts/org/locationtech/jts/io/OL3Parser.js\n// module id = null\n// module chunks = "],"sourceRoot":""}