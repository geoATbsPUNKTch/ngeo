{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/datasource/DataSources.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./src/datasource/File.js","webpack:///./src/message/popupComponent.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./src/misc/Time.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./src/message/Popup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./node_modules/angular-sanitize/index.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/layertree/component.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./src/misc/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./node_modules/angular-sanitize/angular-sanitize.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/statemanager/Service.js","webpack:///./contribs/gmf/src/disclaimer/module.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./src/message/Disclaimer.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/layertreeadd.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","_events2","default","unlistenByKey","module","angular","service","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","_asserts2","assertInstanceof","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","name","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","_TreeManager2","_Service2","value","olBase","$filter","gettextCatalog","$filter_","gettextCatalog_","_Time2","inherits","formatTimeValue","time","resolution","opt_useISOFormat","opt_toUTC","date","utc","yearResolution","monthResolution","dayResolution","getString","toISOString","replace","formatWMSTimeParam","wmsTimeProperty","times","assert","mode","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","_Collection2","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","_classCallCheck","collection_","map_","handleDataSourcesAdd_","_createClass","view","getView","handleViewResolutionChange_","getResolution","assertNumber","syncDataSourcesToResolution_","_Observable2","unByKey","target","_View2","_this","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","maxResolution","minResolution","inRange","event","_DataSource2","set","unbindMap_","bindMap_","get","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","$http","$q","http_","q_","rootScope_","timeout_","cache_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","item","active","interaction","removeInteraction","addInteraction","setMap","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","_Themes2","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","_Controller2","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","_Snap2","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","_WFS2","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","_Permalink2","_Snapping2","_component2","_FeatureOverlayMgr2","manageResize","controller","bindToController","templateUrl","_index2","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","_Overlay2","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","_TextFeature2","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","_FeatureHashStyleType2","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","_utils2","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","_LineString2","setFlatCoordinates","_GeometryLayout2","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","_MultiLineString2","readPointGeometry_","point","_Point2","readMultiPointGeometry_","multiPoint","_MultiPoint2","readPolygonGeometry_","rings","polygon","_Polygon2","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","_MultiPolygon2","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","_Fill2","color","_Stroke2","width","_Circle2","fill","stroke","_Text2","_Style2","image","setStyleProperties_","getGeometry","_FeatureProperties2","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","_Feature2","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","_Feature4","transformWithOptions","_Location2","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","_proj4","defs","register","setExtent","Proj","projections","add","_somerc2","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_11__xml_js__","GPX","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","defaultDataProjection","__WEBPACK_IMPORTED_MODULE_10__proj_js__","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","readString","RTE_PARSERS","cmt","desc","src","parseLink","number","readNonNegativeInteger","extensions","parseExtensions","rtept","values","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","readDecimal","readDateTime","TRK_PARSERS","trkseg","parseNode","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","makeChildAppender","writeStringTextNode","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","getLayout","pushSerializeAndPop","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","makeSimpleNodeFactory","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDecimalTextNode","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","opt_nodeName","nodeName","parentNode","createElementNS","namespaceURI","GPX_SERIALIZERS","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","orderedKeys","makeSequence","OBJECT_PROPERTY_NODE_FACTORY","getLineStrings","getAttribute","hasZ","hasM","href","layout","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","setAttributeNS","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","XYZM","XYM","handleReadExtensions_","extensionsNode","readFeatureFromNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","readProjection","adaptOptions","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","KML","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchor","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","rotation","scale","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","zIndex","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","textAlign","imageSize","getImageSize","imageScale","getScale","foundText","setFont","setScale","setFill","setStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","s","getAllTextContent","m","exec","hexColor","parseInt","substr","readFlatCoordinates_","re","z","readURI_","trim","baseURI","location","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","object","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","readFlatLinearRing_","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","setLineStrings","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readFlatCoordinatesFromNode_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","setPolygons","GEOMETRY_COLLECTION","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","readStyle_","STYLE_PARSERS_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","Style","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","innerBoundaryIsParser_","flatLinearRing","INNER_BOUNDARY_IS_PARSERS_","outerBoundaryIsParser_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","parse","isNaN","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","makeReplacer","innerBoundaryIs","outerBoundaryIs","coord","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","id","setId","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","setGeometry","styleUri","n","firstElementChild","nextElementSibling","fs","readName","isDocument","readNameFromDocument","isNode","readNameFromNode","firstChild","nextSibling","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","hex","writeCoordinatesTextNode_","dimension","d","writeDataNode_","pair","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","getGeometries","GEOMETRY_NODE_FACTORY_","MULTI_POINT","getPoints","POINT_NODE_FACTORY_","MULTI_LINE_STRING","LINE_STRING_NODE_FACTORY_","MULTI_POLYGON","getPolygons","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","linearRing","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","getId","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","getLinearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","writeBooleanTextNode","kml","xmlnsUri","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","__WEBPACK_IMPORTED_MODULE_0__xml_js__","readBooleanString","string","dateTime","readDecimalString","readNonNegativeIntegerString","bool","appendChild","DOCUMENT","createCDATASection","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","decimal","toPrecision","nonNegativeInteger","_possibleConstructorReturn","__proto__","getPrototypeOf","featuresCollection_","_Vector4","layer_","_Vector2","_inherits","getArray","ngeoPopupTemplateUrl","addClass","close","stopPropagation","preventDefault","oldVal","css","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","getOptions","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getTime","localDate","ngeoLayerHelper","ngeoWMSTime","layerHelper_","ngeoWMSTime_","ogcServersObject_","ogcServersObject","$on","firstParent","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","depth","metadata","opacity","setOpacity","updateLayerState_","setVisible","_Image2","getSource","updateParams","LAYERS","reverse","groupNode","isRoot","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","getLayer","_this3","createBasicGroup","timeParam","getTimeParam_","imageType","createBasicWMSLayer","credential","hasActiveChildren","ctrl","updateLayerReferences_","isChecked","setState","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","refreshState","gmfLayerWMTS","newLayer","_Tile2","createWMTSLayerFromCapabilitites","dimensions","setSource","querySourceIds","disclaimer","disclaimers","wmsTime","VisitorDecision","STOP","timeValues","tree","isOneParentNotMix","_WMSTime2","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","$compile","$sce","$new","autoDestroy_","destroy","sce_","element_","document","body","getOpen","setOpen","$destroy","setTitle","title","trustedTitle","trustAsHtml","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","cls","fail","Factory","_popupComponent2","$injector","ngeoDataSources","ngeoFile","injector_","dataSources_","collection","ngeoFile_","ngeoLayerHelper_","extDataSources_","files_","fileGroup_","_FileGroup2","dataSources","injector","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","$inject","wmsGroup","wmsGroupsCollection","found","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","wmsGroups","Symbol","iterator","next","done","err","return","wmtsGroup","wmtsGroupsCollection","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","wmtsGroups","layerGroup","capabilities","req","formats","ogcImageType","wmsInfoFormat","_OGC2","WMSInfoFormat","GML","ogcLayers","ogcType","Type","visible","wmsUrl","getWMSGroup","addDataSource","_WMSGroup2","addLayer_","addWMSGroup_","wmtsUrl","assertString","wmtsLayer","WMTS","getWMTSGroup","_OGCGroup2","addWMTSGroup_","layerObj","createWMTSLayerFromCapabilititesObj","unregister","handleWMTSDataSourceVisibleChange_","file","getFileDataSource_","fileGroup","fit","rejections","read","readOptions","featureProjection","isKml","_KML2","isGpx","_GPX2","_File4","reject","oldValue","removeFileDataSource_","removeOGCDataSource_","removeLayer_","removeDataSource","removeWMSGroup_","removeWMTSGroup_","getGroupFromMap","EXTERNALLAYERGROUP_NAME","_File2","_DataSources2","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","ngeoLayertreeTemplateUrl","gmfThemesOptions","_EventTarget2","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","ids","getIds","array","child","layerLayerCreationFn","message","console","error","server","promiseSuccessFn","promises","background_layers","itemType","all","layerGroupCreationFn","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolutionHint","getNodeMinResolution","minResolutionHint","loadThemes","opt_roleId","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","MIXED_GROUP","NOT_MIXED_GROUP","_LayerHelper2","olObj","_DataSourceBeingFiltered2","_ExternalDataSourcesManager2","_datasourceGroupTreeComponent2","_SyncLayertreeMap2","_Popup2","gmfLayertreeTemplate","$element","$attrs","component_","bindings","openLinksInNewWindow","component","$scope","ngeoCreatePopup","gmfDataSourceBeingFiltered","gmfExternalDataSourcesManager","gmfSyncLayertreeMap","scope_","$sce_","root","gmfSyncLayertreeMap_","infoPopup_","promises_","groupNodeStates_","dataLayerGroup_","on","$apply","DATALAYERGROUP_NAME","_syncArrays2","render","updateDimensions_","_Layer2","updateLayerDimensions_","_this4","isEmpty","updateDimensions","once","numberOfGroupsToAddInThisDigestLoop","listeners","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getDataSource","timeRangeValue","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getOgcServer","getWMSLegendURL","getLegendsObject","_this5","legendsObject","gmfLayerDefaultName","legendImage","wmtsLegendURL","getWMTSLegendURL","layersNames","getScale_","ServerType","QGISSERVER","getNumberOfLegendsObject","getMetersPerUnit","displayMetadata","_this6","treeUid","metadataURL","resp","infoPopup","afterReorder","groupNodes","currentTreeCtrls","treeCtrls","refreshFirstLevelGroups","removeNode","removeGroup","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","setResolution","constrainResolution","toggleNodeLegend","legendNodeId","toggle","toggleFiltrableDataSource","ds","isNodeLegendVisible","is","supportsCustomization","supportsLegend","supportsOpacityChange","legend","gettext","fileReader","canceler","isValidFileSize","fileSize","isWmsGetCap","fileContent","isWmtsGetCap","readyState","FileReader","LOADING","abort","onload","onerror","code","reason","onprogress","notify","readAsText","load","opt_cancelP","unregister_","_Group2","_get","registerDataSource_","handleDataSourceVisibleChange_","unregisterDataSource_","_class","toggleVisibilityState","isDefined","lowercase","noop","nodeContains","htmlParser","htmlSanitizeWriter","$sanitizeMinErr","$$minErr","provider","svgEnabled","$get","$$sanitizeUri","validElements","svgElements","buf","uri","isImage","enableSvg","handler","inertBodyElement","getInertBodyElement","mXSSAttempts","innerHTML","toLowerCase","attrToMap","attributes","chars","textContent","nextNode","getNonDescendant","removeChild","uriValidator","ignoreCurrentElement","out","tag","blockedElements","lkey","validAttrs","uriAttrs","encodeEntities","voidElements","arg","compareDocumentPosition","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","toMap","optionalEndTagBlockElements","optionalEndTagInlineElements","optionalEndTagElements","blockElements","inlineElements","htmlAttrs","svgAttrs","str","lowercaseKeys","items","inertDocument","implementation","createHTMLDocument","documentElement","getDocumentElement","querySelector","DOMParser","parseFromString","e","documentMode","stripCustomNsAttrs","encodeURI","xhr","XMLHttpRequest","responseType","send","attr","charCodeAt","attrNode","attrName","lastIndexOf","removeAttributeNode","propName","outerHTML","outerText","info","angularVersion","$sanitize","LINKY_URL_REGEXP","MAILTO_REGEXP","linkyMinErr","isFunction","isObject","isString","match","attributesFn","addText","addLink","linkAttributes","arr1","arr2","dereg1","dereg2","nodeExpr","state_","mapExpr","$parent","splice","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","dataSource_","_decorate2","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","state","opt_broadcast","setStateInternal_","firstParents","newState","getCalculateState","childState","previousChildState","getSetActive","addLayer","removeLayer","setDataSource","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeatureFromDocument","readFeaturesFromDocument","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","deleteParam","RegExp","_component","ngeoDisclaimer","ngeoEventHelper","external","popup","msg","msgs_","createPopup_","disclaimer_","eventHelper_","_index3","registerLayer_","handleLayersAdd_","_Base2","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","$onDestroy","_Message2","WARNING","container","container_","messages_","show","getMessageObjects","closeMessage_","showMessage","getMessageUid_","classNames","ERROR","INFORMATION","SUCCESS","el","button","hasClass","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","_Condition2","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcLayers_","ogcServerType_","ogcServerType","MAPSERVER","ogcType_","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmtsLayer_","wmtsUrl_","ogcLayer","supportsWFS","format","_GML4","GML2","_GML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","_AttributeType2","GEOMETRY","share","myActive","activeDimensions","itsActive","range","lower","upper","config","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","_component4","_Manager2","_module2","constant","MainController","gmfThemeManager","_OSM2","resolutions","center","zoom","modal","groups","getSetTheme","getSetGroup","getSetLayers","addGroupByLayerName","getSetRemoveTree","flatNodes","getDistinctFlatNodes_","alreadyAdded","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","prefix","defaultPrefix","ft","pop","count","candidate","ns","readGeometryElement","GEOMETRY_PARSERS_","fid","getAttributeNS","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","readPoint","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","ring","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","olServerType","_ImageWMS2","serverType","createBasicWMSLayerFromDataSource","capabilitiesURL","opt_dimensions","parser","_WMTSCapabilities2","preload","Infinity","_WMTS2","optionsFromCapabilities","elt","layerCap","capabilitiesStyles","opt_layers","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","sublayers","legendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getParams","random","updateWMSLayerState","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","ngeoNotification_","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","groupID","rootChild","grp","unshift","addGroupByName","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","cloneGroupNode_","assign","toggleNodeCheck_","childNode","correspondingTreeCtrl","firstLevelGroupCtrl","gmfGroup","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","legendElement","_this8","_Notification2","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","coords","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","Box","multiSurface","surface","multiCurve","writeFeatureElement","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","dataProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","getCoords_","line","writeSurfaceOrPolygon_","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","rgb","r","g","Error","colorZeroPadding","queryData","pairs","indexOfEquals","queryItem","_condition2","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","success","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","LOADED","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","compareVersions","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","title_","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","geom","featureUidToGroupIndex_","groups_","useSpatialIndex","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getFeatureOverlay","defaultFunction","_FeatureOverlay2","createFunction","proj4","projCodes","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","projString","defData","paramName","paramVal","paramOutname","self","paramObj","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","f","temp","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","rotate","angle","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","_Interaction2","defineProperty","getActive","setActive","configurable","getOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","$applyAsync","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","_RegularShape2","radius2","mapTooltip_","featureHashFormat_","_FeatureHash2","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","_Popover2","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","_constants2","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_features2","_EventHelper2","OpenLayersLayerProperties","regexp","key1","key2","DEFAULT_DELAY_","clearMessageByCacheItem_","delay","wmsDataSourceUnregister_","init_","updateLayer_"],"mappings":"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","file":"layertreeadd.7cb34ba84b4f41f12cba.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/WMSTime.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 165\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 166\n// module chunks = 0 1 2 3 4 5 6 7 8 9 12 14","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/File.js","/**\n * @module ngeo.message.popupComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/message/popupcomponent.html`;\n  });\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intented to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/popupComponent.js","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.misc.Time\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/SyncLayertreeMap.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Popup.js","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      });\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        googAsserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","require('./angular-sanitize');\nmodule.exports = 'ngSanitize';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-sanitize/index.js\n// module id = 209\n// module chunks = 0 1 2 3 4 6 7 9 12","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\nimport gmfBase from 'gmf/index.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","/**\n * @module ngeo.layertree.component\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/layertree/component.html`;\n  });\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function($compile, ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/component.js","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessagePopup.module.name,\n  ngeoMessagePopupComponent.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template.\n     */\n  ($element, $attrs) => {\n    const subTemplateUrl = `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`;\n    return `${'<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          'ngeo-layertree-templateurl=\"'}${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nngeoLayertreeComponent.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`);\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overrided by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup.\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow'\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.$http} $http Angular http service.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $http, $sce, $scope,\n  ngeoCreatePopup, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager,\n  gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @private\n   * @type {!angular.$http}\n   */\n  this.$http_ = $http;\n\n  /**\n   * @private\n   * @type {!angular.$sce}\n   */\n  this.$sce_ = $sce;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @private\n   * @type {!ngeo.message.Popup}\n   */\n  this.infoPopup_ = ngeoCreatePopup();\n\n  /**\n   * @type {!Object.<string, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Mutliple urls for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Display a ngeo.infoPopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const treeUid = treeCtrl.uid.toString();\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    if (!(treeUid in this.promises_)) {\n      this.promises_[treeUid] = this.$http_.get(metadataURL).then(\n        (resp) => {\n          const html = this.$sce_.trustAsHtml(resp.data);\n          return html;\n        });\n    }\n    const infoPopup = this.infoPopup_;\n    this.promises_[treeUid].then((html) => {\n      infoPopup.setTitle(node.name);\n      infoPopup.setContent(html);\n      infoPopup.setOpen(true);\n    });\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  }, this);\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach(function(child) {\n    this.layers.push(child.layer);\n  }, this);\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/component.js","/**\n * @module ngeo.misc.File\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/File.js","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/FileGroup.js","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module(\n  'gmfLayertreeDatasourceGroupTreeComponent', [\n    ngeoDatasourceDataSources.module.name,\n  ]);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/layertree/datasourceGroupTreeComponent.html`\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","/**\n * @license AngularJS v1.6.8\n * (c) 2010-2017 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nvar $sanitizeMinErr = angular.$$minErr('$sanitize');\nvar bind;\nvar extend;\nvar forEach;\nvar isDefined;\nvar lowercase;\nvar noop;\nvar nodeContains;\nvar htmlParser;\nvar htmlSanitizeWriter;\n\n/**\n * @ngdoc module\n * @name ngSanitize\n * @description\n *\n * The `ngSanitize` module provides functionality to sanitize HTML.\n *\n * See {@link ngSanitize.$sanitize `$sanitize`} for usage.\n */\n\n/**\n * @ngdoc service\n * @name $sanitize\n * @kind function\n *\n * @description\n *   Sanitizes an html string by stripping all potentially dangerous tokens.\n *\n *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string.\n *\n *   The whitelist for URL sanitization of attribute values is configured using the functions\n *   `aHrefSanitizationWhitelist` and `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider\n *   `$compileProvider`}.\n *\n *   The input may also contain SVG markup if this is enabled via {@link $sanitizeProvider}.\n *\n * @param {string} html HTML input.\n * @returns {string} Sanitized HTML.\n *\n * @example\n   <example module=\"sanitizeExample\" deps=\"angular-sanitize.js\" name=\"sanitize-service\">\n   <file name=\"index.html\">\n     <script>\n         angular.module('sanitizeExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {\n             $scope.snippet =\n               '<p style=\"color:blue\">an html\\n' +\n               '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n               'snippet</p>';\n             $scope.deliberatelyTrustDangerousSnippet = function() {\n               return $sce.trustAsHtml($scope.snippet);\n             };\n           }]);\n     </script>\n     <div ng-controller=\"ExampleController\">\n        Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Directive</td>\n           <td>How</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"bind-html-with-sanitize\">\n           <td>ng-bind-html</td>\n           <td>Automatically uses $sanitize</td>\n           <td><pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind-html=\"snippet\"></div></td>\n         </tr>\n         <tr id=\"bind-html-with-trust\">\n           <td>ng-bind-html</td>\n           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>\n           <td>\n           <pre>&lt;div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"&gt;\n&lt;/div&gt;</pre>\n           </td>\n           <td><div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"></div></td>\n         </tr>\n         <tr id=\"bind-default\">\n           <td>ng-bind</td>\n           <td>Automatically escapes</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n       </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should sanitize the html snippet by default', function() {\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n     });\n\n     it('should inline raw snippet if bound to a trusted value', function() {\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).\n         toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n              \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n              \"snippet</p>\");\n     });\n\n     it('should escape snippet without any filter', function() {\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).\n         toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n              \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n              \"snippet&lt;/p&gt;\");\n     });\n\n     it('should update', function() {\n       element(by.model('snippet')).clear();\n       element(by.model('snippet')).sendKeys('new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('new <b>text</b>');\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).toBe(\n         'new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).toBe(\n         \"new &lt;b onclick=\\\"alert(1)\\\"&gt;text&lt;/b&gt;\");\n     });\n   </file>\n   </example>\n */\n\n\n/**\n * @ngdoc provider\n * @name $sanitizeProvider\n * @this\n *\n * @description\n * Creates and configures {@link $sanitize} instance.\n */\nfunction $SanitizeProvider() {\n  var svgEnabled = false;\n\n  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {\n    if (svgEnabled) {\n      extend(validElements, svgElements);\n    }\n    return function(html) {\n      var buf = [];\n      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {\n        return !/^unsafe:/.test($$sanitizeUri(uri, isImage));\n      }));\n      return buf.join('');\n    };\n  }];\n\n\n  /**\n   * @ngdoc method\n   * @name $sanitizeProvider#enableSvg\n   * @kind function\n   *\n   * @description\n   * Enables a subset of svg to be supported by the sanitizer.\n   *\n   * <div class=\"alert alert-warning\">\n   *   <p>By enabling this setting without taking other precautions, you might expose your\n   *   application to click-hijacking attacks. In these attacks, sanitized svg elements could be positioned\n   *   outside of the containing element and be rendered over other elements on the page (e.g. a login\n   *   link). Such behavior can then result in phishing incidents.</p>\n   *\n   *   <p>To protect against these, explicitly setup `overflow: hidden` css rule for all potential svg\n   *   tags within the sanitized content:</p>\n   *\n   *   <br>\n   *\n   *   <pre><code>\n   *   .rootOfTheIncludedContent svg {\n   *     overflow: hidden !important;\n   *   }\n   *   </code></pre>\n   * </div>\n   *\n   * @param {boolean=} flag Enable or disable SVG support in the sanitizer.\n   * @returns {boolean|ng.$sanitizeProvider} Returns the currently configured value if called\n   *    without an argument or self for chaining otherwise.\n   */\n  this.enableSvg = function(enableSvg) {\n    if (isDefined(enableSvg)) {\n      svgEnabled = enableSvg;\n      return this;\n    } else {\n      return svgEnabled;\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // Private stuff\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n  bind = angular.bind;\n  extend = angular.extend;\n  forEach = angular.forEach;\n  isDefined = angular.isDefined;\n  lowercase = angular.lowercase;\n  noop = angular.noop;\n\n  htmlParser = htmlParserImpl;\n  htmlSanitizeWriter = htmlSanitizeWriterImpl;\n\n  nodeContains = window.Node.prototype.contains || /** @this */ function(arg) {\n    // eslint-disable-next-line no-bitwise\n    return !!(this.compareDocumentPosition(arg) & 16);\n  };\n\n  // Regular Expressions for parsing tags and attributes\n  var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n    // Match everything outside of normal chars and \" (quote character)\n    NON_ALPHANUMERIC_REGEXP = /([^#-~ |!])/g;\n\n\n  // Good source of info about elements and attributes\n  // http://dev.w3.org/html5/spec/Overview.html#semantics\n  // http://simon.html5.org/html-elements\n\n  // Safe Void Elements - HTML5\n  // http://dev.w3.org/html5/spec/Overview.html#void-elements\n  var voidElements = toMap('area,br,col,hr,img,wbr');\n\n  // Elements that you can, intentionally, leave open (and which close themselves)\n  // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n  var optionalEndTagBlockElements = toMap('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),\n      optionalEndTagInlineElements = toMap('rp,rt'),\n      optionalEndTagElements = extend({},\n                                              optionalEndTagInlineElements,\n                                              optionalEndTagBlockElements);\n\n  // Safe Block Elements - HTML5\n  var blockElements = extend({}, optionalEndTagBlockElements, toMap('address,article,' +\n          'aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n          'h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul'));\n\n  // Inline Elements - HTML5\n  var inlineElements = extend({}, optionalEndTagInlineElements, toMap('a,abbr,acronym,b,' +\n          'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,' +\n          'samp,small,span,strike,strong,sub,sup,time,tt,u,var'));\n\n  // SVG Elements\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements\n  // Note: the elements animate,animateColor,animateMotion,animateTransform,set are intentionally omitted.\n  // They can potentially allow for arbitrary javascript to be executed. See #11290\n  var svgElements = toMap('circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,' +\n          'hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,' +\n          'radialGradient,rect,stop,svg,switch,text,title,tspan');\n\n  // Blocked Elements (will be stripped)\n  var blockedElements = toMap('script,style');\n\n  var validElements = extend({},\n                                     voidElements,\n                                     blockElements,\n                                     inlineElements,\n                                     optionalEndTagElements);\n\n  //Attributes that have href and hence need to be sanitized\n  var uriAttrs = toMap('background,cite,href,longdesc,src,xlink:href');\n\n  var htmlAttrs = toMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +\n      'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +\n      'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +\n      'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,' +\n      'valign,value,vspace,width');\n\n  // SVG attributes (without \"id\" and \"name\" attributes)\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes\n  var svgAttrs = toMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +\n      'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,' +\n      'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,' +\n      'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,' +\n      'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,' +\n      'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,' +\n      'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,' +\n      'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,' +\n      'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,' +\n      'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,' +\n      'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,' +\n      'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,' +\n      'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,' +\n      'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,' +\n      'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan', true);\n\n  var validAttrs = extend({},\n                                  uriAttrs,\n                                  svgAttrs,\n                                  htmlAttrs);\n\n  function toMap(str, lowercaseKeys) {\n    var obj = {}, items = str.split(','), i;\n    for (i = 0; i < items.length; i++) {\n      obj[lowercaseKeys ? lowercase(items[i]) : items[i]] = true;\n    }\n    return obj;\n  }\n\n  /**\n   * Create an inert document that contains the dirty HTML that needs sanitizing\n   * Depending upon browser support we use one of three strategies for doing this.\n   * Support: Safari 10.x -> XHR strategy\n   * Support: Firefox -> DomParser strategy\n   */\n  var getInertBodyElement /* function(html: string): HTMLBodyElement */ = (function(window, document) {\n    var inertDocument;\n    if (document && document.implementation) {\n      inertDocument = document.implementation.createHTMLDocument('inert');\n    } else {\n      throw $sanitizeMinErr('noinert', 'Can\\'t create an inert html document');\n    }\n    var inertBodyElement = (inertDocument.documentElement || inertDocument.getDocumentElement()).querySelector('body');\n\n    // Check for the Safari 10.1 bug - which allows JS to run inside the SVG G element\n    inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n    if (!inertBodyElement.querySelector('svg')) {\n      return getInertBodyElement_XHR;\n    } else {\n      // Check for the Firefox bug - which prevents the inner img JS from being sanitized\n      inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n      if (inertBodyElement.querySelector('svg img')) {\n        return getInertBodyElement_DOMParser;\n      } else {\n        return getInertBodyElement_InertDocument;\n      }\n    }\n\n    function getInertBodyElement_XHR(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        html = encodeURI(html);\n      } catch (e) {\n        return undefined;\n      }\n      var xhr = new window.XMLHttpRequest();\n      xhr.responseType = 'document';\n      xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n      xhr.send(null);\n      var body = xhr.response.body;\n      body.firstChild.remove();\n      return body;\n    }\n\n    function getInertBodyElement_DOMParser(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        var body = new window.DOMParser().parseFromString(html, 'text/html').body;\n        body.firstChild.remove();\n        return body;\n      } catch (e) {\n        return undefined;\n      }\n    }\n\n    function getInertBodyElement_InertDocument(html) {\n      inertBodyElement.innerHTML = html;\n\n      // Support: IE 9-11 only\n      // strip custom-namespaced attributes on IE<=11\n      if (document.documentMode) {\n        stripCustomNsAttrs(inertBodyElement);\n      }\n\n      return inertBodyElement;\n    }\n  })(window, window.document);\n\n  /**\n   * @example\n   * htmlParser(htmlString, {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * });\n   *\n   * @param {string} html string\n   * @param {object} handler\n   */\n  function htmlParserImpl(html, handler) {\n    if (html === null || html === undefined) {\n      html = '';\n    } else if (typeof html !== 'string') {\n      html = '' + html;\n    }\n\n    var inertBodyElement = getInertBodyElement(html);\n    if (!inertBodyElement) return '';\n\n    //mXSS protection\n    var mXSSAttempts = 5;\n    do {\n      if (mXSSAttempts === 0) {\n        throw $sanitizeMinErr('uinput', 'Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      // trigger mXSS if it is going to happen by reading and writing the innerHTML\n      html = inertBodyElement.innerHTML;\n      inertBodyElement = getInertBodyElement(html);\n    } while (html !== inertBodyElement.innerHTML);\n\n    var node = inertBodyElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case 1: // ELEMENT_NODE\n          handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));\n          break;\n        case 3: // TEXT NODE\n          handler.chars(node.textContent);\n          break;\n      }\n\n      var nextNode;\n      if (!(nextNode = node.firstChild)) {\n        if (node.nodeType === 1) {\n          handler.end(node.nodeName.toLowerCase());\n        }\n        nextNode = getNonDescendant('nextSibling', node);\n        if (!nextNode) {\n          while (nextNode == null) {\n            node = getNonDescendant('parentNode', node);\n            if (node === inertBodyElement) break;\n            nextNode = getNonDescendant('nextSibling', node);\n            if (node.nodeType === 1) {\n              handler.end(node.nodeName.toLowerCase());\n            }\n          }\n        }\n      }\n      node = nextNode;\n    }\n\n    while ((node = inertBodyElement.firstChild)) {\n      inertBodyElement.removeChild(node);\n    }\n  }\n\n  function attrToMap(attrs) {\n    var map = {};\n    for (var i = 0, ii = attrs.length; i < ii; i++) {\n      var attr = attrs[i];\n      map[attr.name] = attr.value;\n    }\n    return map;\n  }\n\n\n  /**\n   * Escapes all potentially dangerous characters, so that the\n   * resulting string can be safely inserted into attribute or\n   * element text.\n   * @param value\n   * @returns {string} escaped text\n   */\n  function encodeEntities(value) {\n    return value.\n      replace(/&/g, '&amp;').\n      replace(SURROGATE_PAIR_REGEXP, function(value) {\n        var hi = value.charCodeAt(0);\n        var low = value.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n      }).\n      replace(NON_ALPHANUMERIC_REGEXP, function(value) {\n        return '&#' + value.charCodeAt(0) + ';';\n      }).\n      replace(/</g, '&lt;').\n      replace(/>/g, '&gt;');\n  }\n\n  /**\n   * create an HTML/XML writer which writes to buffer\n   * @param {Array} buf use buf.join('') to get out sanitized html string\n   * @returns {object} in the form of {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * }\n   */\n  function htmlSanitizeWriterImpl(buf, uriValidator) {\n    var ignoreCurrentElement = false;\n    var out = bind(buf, buf.push);\n    return {\n      start: function(tag, attrs) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && blockedElements[tag]) {\n          ignoreCurrentElement = tag;\n        }\n        if (!ignoreCurrentElement && validElements[tag] === true) {\n          out('<');\n          out(tag);\n          forEach(attrs, function(value, key) {\n            var lkey = lowercase(key);\n            var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');\n            if (validAttrs[lkey] === true &&\n              (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {\n              out(' ');\n              out(key);\n              out('=\"');\n              out(encodeEntities(value));\n              out('\"');\n            }\n          });\n          out('>');\n        }\n      },\n      end: function(tag) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && validElements[tag] === true && voidElements[tag] !== true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        // eslint-disable-next-line eqeqeq\n        if (tag == ignoreCurrentElement) {\n          ignoreCurrentElement = false;\n        }\n      },\n      chars: function(chars) {\n        if (!ignoreCurrentElement) {\n          out(encodeEntities(chars));\n        }\n      }\n    };\n  }\n\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1' attribute to declare\n   * ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo'). This is undesirable since we don't want\n   * to allow any of these custom attributes. This method strips them all.\n   *\n   * @param node Root element to process\n   */\n  function stripCustomNsAttrs(node) {\n    while (node) {\n      if (node.nodeType === window.Node.ELEMENT_NODE) {\n        var attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          var attrNode = attrs[i];\n          var attrName = attrNode.name.toLowerCase();\n          if (attrName === 'xmlns:ns1' || attrName.lastIndexOf('ns1:', 0) === 0) {\n            node.removeAttributeNode(attrNode);\n            i--;\n            l--;\n          }\n        }\n      }\n\n      var nextNode = node.firstChild;\n      if (nextNode) {\n        stripCustomNsAttrs(nextNode);\n      }\n\n      node = getNonDescendant('nextSibling', node);\n    }\n  }\n\n  function getNonDescendant(propName, node) {\n    // An element is clobbered if its `propName` property points to one of its descendants\n    var nextNode = node[propName];\n    if (nextNode && nodeContains.call(node, nextNode)) {\n      throw $sanitizeMinErr('elclob', 'Failed to sanitize html because the element is clobbered: {0}', node.outerHTML || node.outerText);\n    }\n    return nextNode;\n  }\n}\n\nfunction sanitizeText(chars) {\n  var buf = [];\n  var writer = htmlSanitizeWriter(buf, noop);\n  writer.chars(chars);\n  return buf.join('');\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', [])\n  .provider('$sanitize', $SanitizeProvider)\n  .info({ angularVersion: '1.6.8' });\n\n/**\n * @ngdoc filter\n * @name linky\n * @kind function\n *\n * @description\n * Finds links in text input and turns them into html links. Supports `http/https/ftp/sftp/mailto` and\n * plain email address links.\n *\n * Requires the {@link ngSanitize `ngSanitize`} module to be installed.\n *\n * @param {string} text Input text.\n * @param {string} [target] Window (`_blank|_self|_parent|_top`) or named frame to open links in.\n * @param {object|function(url)} [attributes] Add custom attributes to the link element.\n *\n *    Can be one of:\n *\n *    - `object`: A map of attributes\n *    - `function`: Takes the url as a parameter and returns a map of attributes\n *\n *    If the map of attributes contains a value for `target`, it overrides the value of\n *    the target parameter.\n *\n *\n * @returns {string} Html-linkified and {@link $sanitize sanitized} text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <example module=\"linkyExample\" deps=\"angular-sanitize.js\" name=\"linky-filter\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <th>Filter</th>\n           <th>Source</th>\n           <th>Rendered</th>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"linky-target\">\n          <td>linky target</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"></div>\n          </td>\n         </tr>\n         <tr id=\"linky-custom-attributes\">\n          <td>linky custom attributes</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"></div>\n          </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"script.js\">\n       angular.module('linkyExample', ['ngSanitize'])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.snippet =\n             'Pretty text with some links:\\n' +\n             'http://angularjs.org/,\\n' +\n             'mailto:us@somewhere.org,\\n' +\n             'another@somewhere.org,\\n' +\n             'and one more: ftp://127.0.0.1/.';\n           $scope.snippetWithSingleURL = 'http://angularjs.org/';\n         }]);\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should linkify the snippet with urls', function() {\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);\n       });\n\n       it('should not linkify snippet without the linky filter', function() {\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);\n       });\n\n       it('should update', function() {\n         element(by.model('snippet')).clear();\n         element(by.model('snippet')).sendKeys('new http://link.');\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('new http://link.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())\n             .toBe('new http://link.');\n       });\n\n       it('should work with the target property', function() {\n        expect(element(by.id('linky-target')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_blank'\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');\n       });\n\n       it('should optionally add custom attributes', function() {\n        expect(element(by.id('linky-custom-attributes')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-custom-attributes a')).getAttribute('rel')).toEqual('nofollow');\n       });\n     </file>\n   </example>\n */\nangular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {\n  var LINKY_URL_REGEXP =\n        /((s?ftp|https?):\\/\\/|(www\\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s.;,(){}<>\"\\u201d\\u2019]/i,\n      MAILTO_REGEXP = /^mailto:/i;\n\n  var linkyMinErr = angular.$$minErr('linky');\n  var isDefined = angular.isDefined;\n  var isFunction = angular.isFunction;\n  var isObject = angular.isObject;\n  var isString = angular.isString;\n\n  return function(text, target, attributes) {\n    if (text == null || text === '') return text;\n    if (!isString(text)) throw linkyMinErr('notstring', 'Expected string but received: {0}', text);\n\n    var attributesFn =\n      isFunction(attributes) ? attributes :\n      isObject(attributes) ? function getAttributesObject() {return attributes;} :\n      function getEmptyAttributesObject() {return {};};\n\n    var match;\n    var raw = text;\n    var html = [];\n    var url;\n    var i;\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/www/mailto then assume mailto\n      if (!match[2] && !match[4]) {\n        url = (match[3] ? 'http://' : 'mailto:') + url;\n      }\n      i = match.index;\n      addText(raw.substr(0, i));\n      addLink(url, match[0].replace(MAILTO_REGEXP, ''));\n      raw = raw.substring(i + match[0].length);\n    }\n    addText(raw);\n    return $sanitize(html.join(''));\n\n    function addText(text) {\n      if (!text) {\n        return;\n      }\n      html.push(sanitizeText(text));\n    }\n\n    function addLink(url, text) {\n      var key, linkAttributes = attributesFn(url);\n      html.push('<a ');\n\n      for (key in linkAttributes) {\n        html.push(key + '=\"' + linkAttributes[key] + '\" ');\n      }\n\n      if (isDefined(target) && !('target' in linkAttributes)) {\n        html.push('target=\"',\n                  target,\n                  '\" ');\n      }\n      html.push('href=\"',\n                url.replace(/\"/g, '&quot;'),\n                '\">');\n      addText(text);\n      html.push('</a>');\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-sanitize/angular-sanitize.js\n// module id = 229\n// module chunks = 0 1 2 3 4 6 7 9 12","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/syncArrays.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module gmf.disclaimer.module\n */\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDisclaimerModule', [\n  gmfDisclaimerComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/disclaimer/module.js","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize'\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach(function(layer) {\n      this.registerLayer_(layer);\n    }, this);\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach(function(disclaimer) {\n        this.showDisclaimerMessage_(disclaimer);\n      }, this);\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(this.unregisterLayer_, this);\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach(function(disclaimer) {\n        this.closeDisclaimerMessage_(disclaimer);\n      }, this);\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/disclaimer/component.js","/**\n * @module ngeo.message.Disclaimer\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Disclaimer.js","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.layertreeadd\n */\nconst exports = {};\n\nimport './layertreeadd.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfDisclaimerModule from 'gmf/disclaimer/module.js';\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfLayertreeComponent.name,\n  gmfMapComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerLocation.module.name,\n  gmfDisclaimerModule.name,\n]);\n\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background&interface=desktop');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('gmfTreeManagerModeFlush', false);\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @param {gmf.theme.Manager} gmfThemeManager gmf Tree Manager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n */\nexports.MainController = function(gmfTreeManager, gmfThemes, gmfThemeManager, ngeoLocation) {\n\n  gmfThemes.loadThemes();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  // How should disclaimer message be displayed: in modals or alerts\n  const modal = ngeoLocation.getParam('modal');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modal = modal === 'true';\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @export\n   */\n  this.gmfTreeManager = gmfTreeManager;\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {Array.<gmfThemes.GmfTheme>}\n   * @export\n   */\n  this.themes = [];\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @export\n   */\n  this.groups = [];\n\n  /**\n   * @type {Array.<gmfThemes.GmfLayer>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @param {gmfThemes.GmfTheme|undefined} value A theme or undefined to get Themes.\n   * @return {Array.<gmfThemes.GmfTheme>} All themes.\n   * @export\n   */\n  this.getSetTheme = function(value) {\n    if (value) {\n      this.gmfThemeManager.addTheme(value);\n    }\n    return this.themes;\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|undefined} value A group or undefined to get groups.\n   * @return {Array.<gmfThemes.GmfGroup>} All groups in all themes.\n   * @export\n   */\n  this.getSetGroup = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.addFirstLevelGroups([value]);\n    }\n    return this.groups;\n  };\n\n  /**\n   * @param {gmfThemes.GmfLayer|undefined} value A group or undefined to get groups.\n   * @return {Array.<gmfThemes.GmfLayer>} All groups in all themes.\n   * @export\n   */\n  this.getSetLayers = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.addGroupByLayerName(value.name);\n    }\n    return this.layers;\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|undefined} value A GeoMapFish group node, or undefined\n   *     to get the groups of the tree manager.\n   * @return {Array.<gmfThemes.GmfGroup>} All groups in the tree manager.\n   * @export\n   */\n  this.getSetRemoveTree = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.removeGroup(value);\n    }\n    return this.gmfTreeManager.root.children;\n  };\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      this.themes = themes;\n\n      // Get an array with all nodes entities existing in \"themes\".\n      const flatNodes = [];\n      this.themes.forEach((theme) => {\n        theme.children.forEach((group) => {\n          this.groups.push(group); // get a list of all groups\n          this.getDistinctFlatNodes_(group, flatNodes);\n        });\n      });\n      flatNodes.forEach((node) => {\n        // Get an array of all layers\n        if (node.children === undefined) {\n          this.layers.push(node);\n        }\n      });\n    }\n  });\n\n  /**\n   * Just for this example\n   * @param {gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer} node A theme, group or layer node.\n   * @param {Array.<gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An Array of nodes.\n   * @export\n   */\n  this.getDistinctFlatNodes_ = function(node, nodes) {\n    let i;\n    const children = node.children;\n    if (children !== undefined) {\n      for (i = 0; i < children.length; i++) {\n        this.getDistinctFlatNodes_(children[i], nodes);\n      }\n    }\n    let alreadyAdded = false;\n    nodes.some((n) => {\n      if (n.id === node.id) {\n        return alreadyAdded = true;\n      }\n    });\n    if (!alreadyAdded) {\n      nodes.push(node);\n    }\n  };\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/layertreeadd.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 46\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}