{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/format/JSONFeature.js","webpack:///./node_modules/openlayers/src/ol/format/GeoJSON.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/message/modalComponent.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/layertree/Controller.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/statemanager/Service.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/editfeature.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","_events2","default","unlistenByKey","module","angular","service","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","_asserts2","assertInstanceof","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","name","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","_TreeManager2","_Service2","value","olBase","_Event","type","detail","_Event2","inherits","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","_Collection2","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","_this","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","_Themes2","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","_Controller2","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","_Snap2","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","_WFS2","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","_Permalink2","_Snapping2","_component2","_FeatureOverlayMgr2","manageResize","controller","bindToController","templateUrl","_index2","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","_Overlay2","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatFeature","_TextFeature2","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","_FeatureHashStyleType2","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","_utils2","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","_LineString2","setFlatCoordinates","_GeometryLayout2","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","_MultiLineString2","readPointGeometry_","point","_Point2","readMultiPointGeometry_","multiPoint","_MultiPoint2","readPolygonGeometry_","rings","polygon","_Polygon2","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","_MultiPolygon2","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","_Fill2","color","_Stroke2","width","_Circle2","fill","stroke","_Text2","_Style2","image","setStyleProperties_","getGeometry","_FeatureProperties2","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","_Feature2","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","transformWithOptions","_Location2","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","_proj4","defs","register","get","setExtent","Proj","projections","add","_somerc2","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","JSONFeature","format_Feature","getObject","object","JSON","FormatType","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjection","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","format_JSONFeature","GeoJSON","defaultDataProjection","proj","featureProjection","defaultFeatureProjection","geometryName_","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","GEOMETRY_WRITERS","right","rightHanded","obj","geoJSONFeature","Feature","setGeometryName","geometry_name","setGeometry","id","setId","geoJSONFeatures","crs","adaptOptions","getId","objects","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","_EventTarget2","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objectName","find","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","_Tile2","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","_LayerHelper2","authenticationBaseUrl","gmfUser","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","baseUrl_","user_","load_","$inject","_inherits","_olEventsEventTarget","_createClass","RouteSuffix","IS_LOGGED_IN","handleLogin_","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","login","pwd","LOGIN","password","LOGOUT","resetUser_","RESET_PASSWORD","successFn","resp","functionalities","role_id","checkingLoginStatus","respData","setUser_","event","_CustomEvent2","user","emitEvent","username","is_password_changed","role_name","component_","require","ngModel","transclude","bindings","resizable","component","_class","$scope","$element","$element_","$scope_","modal_","dialog","draggable","$render","modal","$viewValue","on","e","$apply","$setViewValue","olUri","gmfLayersUrl","getFeaturesInExtent","layerIds","appendParams","handleGetFeatures_","getFeaturesWithComparisonFilters","filters","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","property","operator","err","return","_GeoJSON2","insertFeatures","layerId","geoJSON","updateFeature","put","deleteFeature","delete","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","dataSource_","_decorate2","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","_Notification2","_modalComponent2","gmfAuthenticationTemplateUrl","gmfAuthenticationTemplateUrl_","allowPasswordChange","forcePasswordChange","AuthenticationController_","gmfAuthenticationService","ngeoNotification","gmfAuthenticationService_","notification_","allowPasswordReset","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","onLoginReady_","setError_","changePassword","changePasswordReset","resetError_","logout","resetPasswordSuccessFn","resetPassword","msg","notify","_Message2","Type","WARNING","container","target","ERROR","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","updateParams","deleteParam","RegExp","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","_Condition2","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","ogcLayer","supportsWFS","format","_GML4","GML2","_GML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_DataSource2","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","_AttributeType2","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","olExtent","_module2","_EditFeature2","constant","MainController","gmfEditFeature","scope_","editFeature_","wmsSource_","_ImageWMS2","LAYERS","wmsLayer_","_Image2","pixelBuffer_","layerId_","pending","_OSM2","_View2","resolutions","center","zoom","handleMapSingleClick_","tooltip","trigger","buffer","getResolution","insertFeature","bottomLeft","getBottomLeft","topRight","getTopRight","left","bottom","deltaX","deltaY","random","handleEditFeature_","refreshWMSLayer_","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","olServerType","serverType","createBasicWMSLayerFromDataSource","setVisible","visible","capabilitiesURL","opt_dimensions","parser","_WMTSCapabilities2","preload","Infinity","read","_WMTS2","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","_Group2","getGroupFromMap","groupName","groups","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","isLayerVisible","getVisible","currentResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","getParams","updateWMSLayerState","names","getQuerySourceIds","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","_condition2","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","info","success","SUCCESS","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","geom","featureUidToGroupIndex_","groups_","_Vector4","useSpatialIndex","layer_","_Vector2","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","_FeatureOverlay2","createFunction","proj4","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","disposeInternal","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","_Interaction2","defineProperty","getActive","setActive","_Base2","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","_RegularShape2","radius2","mapTooltip_","featureHashFormat_","_FeatureHash2","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","_Manager2","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","_Popover2","position","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","_constants2","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","_OGC2","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_features2","_EventHelper2","OpenLayersLayerProperties","regexp","key1","key2","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","_OGCGroup2","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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","file":"editfeature.75a232968489da05a959.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/JSONFeature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nconst GeoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection(\n    options.defaultDataProjection ?\n      options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ transformWithOptions(\n      geometryReader(object), false, opt_options)\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  let geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  let features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    const geoJSONFeatures = geoJSONFeatureCollection.features;\n    let i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n        opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  const crs = geoJSONObject.crs;\n  let projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  const object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  const id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  let i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GeoJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport gmfBase from 'gmf/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(\n      this.resetUser_.bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetUser_() {\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    this.load_();\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/authentication/Service.js","/**\n * @module ngeo.message.modalComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.modal_ = this.$element_.children();\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.$scope_.$apply(() => {\n        this.ngModel.$setViewValue(type == 'shown');\n      });\n    });\n  }\n\n  $onDestroy() {\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/modalComponent.js","/**\n * @module gmf.editing.EditFeature\n */\nimport gmfBase from 'gmf/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/EditFeature.js","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/authentication/module.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module gmf.authentication.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    `${gmfBase.baseModuleTemplateUrl}/authentication/component.html`;\n};\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password.\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {angular.Scope} $scope The directive's scope.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor(gettextCatalog, $scope, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n\n    olEvents.listen(gmfAuthenticationService, 'ready', this.onLoginReady_.bind(this));\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // (1) validation - passwords are required\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // (2) validation - passwords must be new and must also match\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // (3) send request with current credentials, which may fail if\n        //     the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect username or password.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occured while reseting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n\n  /**\n   * @param {gmfx.AuthenticationEvent} e GMF Authentication event.\n   * @private\n   */\n  onLoginReady_(e) {\n    if (e.detail.user.is_password_changed === false && this.forcePasswordChange) {\n      const gettextCatalog = this.gettextCatalog;\n      const msg = gettextCatalog.getString('You must change your password.');\n      this.notification_.notify({\n        msg: msg,\n        type: ngeoMessageMessage.Type.WARNING\n      });\n    }\n  }\n\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = angular.element('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/authentication/component.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.editfeature\n */\nconst exports = {};\n\nimport './editfeature.css';\nimport './common_dependencies.js';\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport gmfBase from 'gmf/index.js';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport olFeature from 'ol/Feature.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfAuthenticationModule.name,\n  gmfEditingEditFeature.module.name,\n  gmfMapComponent.name,\n]);\n\n\nexports.module.value(\n  'authenticationBaseUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi');\n\n\nexports.module.value('gmfLayersUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/layers/');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmfx.User} gmfUser User.\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, gmfEditFeature, gmfUser) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @export\n   */\n  this.editFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = gmfUser;\n\n  /**\n   * @type {ol.source.ImageWMS}\n   * @private\n   */\n  this.wmsSource_ = new olSourceImageWMS({\n    url: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n    params: {'LAYERS': 'point'}\n  });\n\n  /**\n   * @type {ol.layer.Image}\n   * @private\n   */\n  this.wmsLayer_ = new olLayerImage({\n    source: this.wmsSource_\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelBuffer_ = 10;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.layerId_ = 113;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      this.wmsLayer_\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 2\n    })\n  });\n\n  this.map.on('singleclick', this.handleMapSingleClick_, this);\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapSingleClick_ = function(evt) {\n\n  // (1) Launch query to fetch new features\n  const coordinate = evt.coordinate;\n  const map = this.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const buffer = resolution * this.pixelBuffer_;\n  const extent = olExtent.buffer(\n    [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n    buffer\n  );\n\n  this.editFeature_.getFeaturesInExtent([this.layerId_], extent).then(\n    this.handleGetFeatures_.bind(this));\n\n  // (2) Clear any previously selected feature\n  this.feature = null;\n\n  // (3) Pending\n  this.pending = true;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.MainController.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  if (features.length) {\n    this.feature = features[0];\n  }\n};\n\n\n/**\n * Insert a new feature at a random location.\n * @export\n */\nexports.MainController.prototype.insertFeature = function() {\n\n  this.pending = true;\n\n  // (1) Create a randomly located feature\n  const map = this.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const buffer = resolution * -50; // 50 pixel buffer inside the extent\n  const size = /** @type {!Array.<number>} */ (map.getSize());\n  const extent = olExtent.buffer(\n    view.calculateExtent(size),\n    buffer\n  );\n  const bottomLeft = olExtent.getBottomLeft(extent);\n  const topRight = olExtent.getTopRight(extent);\n  const left = bottomLeft[0];\n  const bottom = bottomLeft[1];\n  const right = topRight[0];\n  const top = topRight[1];\n  const deltaX = right - left;\n  const deltaY = top - bottom;\n  const coordinate = [\n    left + Math.random() * deltaX,\n    right + Math.random() * deltaY\n  ];\n\n  const feature = new olFeature({\n    'geometry': new olGeomPoint(coordinate),\n    'name': 'New point'\n  });\n\n  // (2) Launch request\n  this.editFeature_.insertFeatures(\n    this.layerId_,\n    [feature]\n  ).then(\n    this.handleEditFeature_.bind(this)\n  );\n};\n\n\n/**\n * Update the currently selected feature with a new name.\n * @export\n */\nexports.MainController.prototype.updateFeature = function() {\n\n  console.assert(this.feature);\n\n  this.pending = true;\n\n  // (1) Update name\n  this.feature.set('name', 'Updated name');\n\n  // (2) Launch request\n  this.editFeature_.updateFeature(\n    this.layerId_,\n    this.feature\n  ).then(\n    this.handleEditFeature_.bind(this)\n  );\n\n  // (3) Reset selected feature\n  this.feature = null;\n};\n\n\n/**\n * Delete currently selected feature.\n * @export\n */\nexports.MainController.prototype.deleteFeature = function() {\n\n  console.assert(this.feature);\n\n  // (1) Launch request\n  this.editFeature_.deleteFeature(\n    this.layerId_,\n    this.feature\n  ).then(\n    this.handleEditFeature_.bind(this)\n  );\n\n  // (2) Reset selected feature\n  this.feature = null;\n};\n\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.MainController.prototype.handleEditFeature_ = function(resp) {\n  this.pending = false;\n  this.refreshWMSLayer_();\n};\n\n\n/**\n * @private\n */\nexports.MainController.prototype.refreshWMSLayer_ = function() {\n  this.wmsSource_.updateParams({\n    'random': Math.random()\n  });\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/editfeature.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 46\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 84\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 12 14 15 22","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}